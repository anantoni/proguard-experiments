-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

-dontoptimize
-dontpreverify

-dontnote
-ignorewarnings
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { java.lang.Object getObjectVolatile(java.lang.Object,long); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int[]); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class android.os.AsyncTask$4 { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.ListActivity$1 { void <init>(android.app.ListActivity); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.support.v7.widget.ActionMenuView$LayoutParams); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.net.url.FileURLConnection { void connect(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean canApplyTheme(); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean isClipPath(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,android.widget.HorizontalScrollView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$1 { void run(); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3,android.widget.EditText); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class android.preference.PreferenceActivity$HeaderAdapter { void <init>(android.content.Context,java.util.List,int,boolean); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.app.AlertController$3 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class java.lang.Runtime { java.lang.String[] initLibPaths(); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class java.lang.Long { java.lang.NumberFormatException invalidLong(java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentTypeForPlainFiles(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <clinit>(); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub { android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { int generateCacheKey(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getDirectoryListing(java.io.File); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { void <init>(int); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class java.lang.Long { double doubleValue(); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class android.view.animation.RotateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { int getKeyCode(); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel,android.app.SearchableInfo$1); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.view.animation.RotateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class java.lang.Long { int intValue(); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <clinit>(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$2 { void onClick(android.view.View); }
-keepclassmembers class android.webkit.CookieSyncManager { void setGetInstanceIsAllowed(); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op); }
-keepclassmembers class java.lang.Long { long parse(java.lang.String,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$WebInterface { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,android.content.Context); }
-keepclassmembers class android.util.MapCollections$KeySet { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class android.webkit.CookieSyncManager { void <clinit>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class java.util.zip.InflaterInputStream { void fill(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int available(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void addOp(android.support.v4.app.BackStackRecord$Op); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void checkClosed(); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean isFinished(java.lang.Object); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(java.lang.String); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class java.lang.Long { long highestOneBit(long); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onRelease(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class java.net.MalformedURLException { void <init>(); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void computeHash(int[]); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction disallowAddToBackStack(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void commitNowAllowingStateLoss(); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addCustomViewsWithGravity(java.util.List,int); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.app.FragmentActivity$1 { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void <init>(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addSystemView(android.view.View,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getScheme(); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureContentInsets(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedSchemeSpecificPart(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void updateHash(int[],byte[],int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureLogoView(); }
-keepclassmembers class android.net.Uri$OpaqueUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureNavButtonView(); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$200(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildHorizontalGravity(int); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String toString(); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$100(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildTop(android.view.View,int); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$400(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$500(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$800(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.net.Uri$OpaqueUri { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$600(android.view.InputDevice$MotionRange); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void executeOps(); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$700(android.view.InputDevice$MotionRange); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$6 { void <init>(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getVerticalMargins(android.view.View); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildVerticalGravity(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getViewListMeasuredWidth(java.util.List,int[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getHorizontalMargins(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$102(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.app.ActionBar access$1000(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void executePopOps(); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$100(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean access$300(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean access$302(au.com.wallaceit.reddinator.activity.ViewRedditActivity,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isChildOrHidden(android.view.View); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.os.AsyncTask access$502(au.com.wallaceit.reddinator.activity.ViewRedditActivity,android.os.AsyncTask); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.content.SharedPreferences access$1100(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { com.sothree.slidinguppanel.SlidingUpPanelLayout access$200(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildLeft(android.view.View,int,int[],int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$600(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void access$800(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean archivedPostCheck(); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.widget.IconTextView access$400(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.Reddinator access$700(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void populateInfoPanel(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.content.res.Resources access$900(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildRight(android.view.View,int,int[],int); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void expandReplaceOps(java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void downVote(); }
-keepclassmembers class android.os.AsyncTask$Status { android.os.AsyncTask$Status[] values(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void measureChildConstrained(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.os.AsyncTask$Status { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void deleteRecursive(java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void <init>(); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class android.os.AsyncTask$Status { void <clinit>(); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void migrateFeedData(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean generateOps(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.security.Security$SecurityDoor { java.util.List getAliases(java.security.Provider$Service); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void renumProviders(); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.support.v7.widget.Toolbar { void postShowOverflowMenu(); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(java.security.Security$1); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean interactsWith(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldCollapse(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldLayout(android.view.View); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.os.RemoteException { void <init>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean interactsWith(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setInboxIcon(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void <clinit>(); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setVoteIcons(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class android.graphics.Path { void transform(android.graphics.Matrix,android.graphics.Path); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean isPostponed(); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetEnd(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.graphics.Path { long ni(); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setVoteUpdateRecord(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetStart(); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void showOpenDialog(); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetEnd(); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetLeft(); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void upVote(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetRight(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetStart(); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class android.graphics.Path { void native_transform(long,long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void updateTheme(); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getNavigationContentDescription(); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.graphics.drawable.Drawable getNavigationIcon(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getSubtitle(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearColorFilter(); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.DecorToolbar getWrapper(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void finish(); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { void <init>(java.util.TreeMap$EntrySet,java.util.TreeMap$Node); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onBackPressed(); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { void <init>(java.util.Enumeration,java.util.Enumeration); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isAutoMirrored(); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { boolean hasMoreElements(); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.net.URL nextElement(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.lang.Object nextElement(); }
-keepclassmembers class java.net.URLEncoder$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class java.net.URLEncoder$1 { boolean isRetained(char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void showWithActionPopup(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void access$2100(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.Drawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.String access$2200(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void access$2300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] addAll(int[],int[]); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void performAdd(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class android.widget.HorizontalScrollView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class android.widget.HorizontalScrollView { float getRightFadingEdgeStrength(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void <init>(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void run(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.widget.HorizontalScrollView { void addView(android.view.View); }
-keepclassmembers class android.widget.HorizontalScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void performRemove(java.lang.String); }
-keepclassmembers class java.io.OptionalDataException { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class android.widget.HorizontalScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] clone(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] clone(java.lang.Object[]); }
-keepclassmembers class android.widget.HorizontalScrollView { void onMeasure(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { java.lang.String getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.String getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { long getItemId(int); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getItemViewType(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class android.view.animation.Animation$3 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { java.util.List getExtendedKeyUsage(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { byte[] getEncoded(); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean inChild(int,int); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class android.widget.HorizontalScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.HorizontalScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.HorizontalScrollView { void recycleVelocityTracker(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.widget.HorizontalScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$Node { void <init>(java.util.TreeMap$Node,java.lang.Object); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class java.io.EOFException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getKey(); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getValue(); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setOptional(int); }
-keepclassmembers class java.util.TreeMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setDefault(java.lang.Object,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getViewTypeCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void refreshList(); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class java.util.TreeMap$Node { int hashCode(); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(int); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.String toString(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node next(); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onPause(); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onPostLoaded(org.json.JSONArray,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node first(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node prev(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node last(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onMeasure(int,int); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <init>(java.lang.Object); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void dispatchPresenterUpdate(boolean); }
-keepclassmembers class android.support.v4.content.ContextCompat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean dispatchSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder,com.android.internal.view.menu.MenuPresenter); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { int modulateColorAlpha(int,float); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.system.StructTimeval { void <init>(long,long); }
-keepclassmembers class android.system.StructTimeval { android.system.StructTimeval fromMillis(long); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onResume(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer getSerializerInstance(); }
-keepclassmembers class android.widget.HorizontalScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.ViewGroup$3 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup$3 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$3 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.support.v4.content.ContextCompat { java.io.File[] getExternalCacheDirs(android.content.Context); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.content.ContextCompat { java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onStart(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String,java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setCallback(com.android.internal.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.HorizontalScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.view.animation.Transformation { int getTransformationType(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.view.animation.Transformation { void set(android.view.animation.Transformation); }
-keepclassmembers class android.support.v4.content.ContextCompat { boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { void compose(android.view.animation.Transformation); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem add(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.widget.HorizontalScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(android.graphics.drawable.RippleBackground,int); }
-keepclassmembers class android.view.animation.Transformation { void setAlpha(float); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setTitleText(java.lang.String); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(int,int,int,int); }
-keepclassmembers class android.widget.HorizontalScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean voteInProgress(); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Rect getClipRect(); }
-keepclassmembers class android.view.animation.Transformation { float getAlpha(); }
-keepclassmembers class android.widget.HorizontalScrollView { int getScrollRange(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.beans.PropertyChangeEvent); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { void <init>(); }
-keepclassmembers class android.widget.HorizontalScrollView { android.view.View findFocusableViewInMyBounds(boolean,int,android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.HorizontalScrollView { android.view.View findFocusableViewInBounds(boolean,int,int); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setContentInsetsRelative(int,int); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$1 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$1 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setExclusiveItemChecked(android.view.MenuItem); }
-keepclassmembers class android.transition.Recolor { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.transition.Recolor { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem findItem(int); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canConstantState(); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean isWithinDeltaOfScreen(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setPopupTheme(int); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.HorizontalScrollView { void doScrollX(int); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.widget.HorizontalScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int size(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int getOrdering(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setShortcutsVisibleInner(boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitleTextAppearance(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.HorizontalScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase { void <init>(android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.content.Context getContext(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.widget.HorizontalScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int findInsertIndex(java.util.ArrayList,int); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.HorizontalScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void access$000(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateCount(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.HorizontalScrollView { void computeScroll(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextAppearance(android.content.Context,int); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable getStateDrawable(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateDrawableIndex(int[]); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.HorizontalScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor tagSocket(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.widget.HorizontalScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,com.android.internal.view.menu.MenuPresenter,int); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean access(java.lang.String,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,int); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class android.widget.HorizontalScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void close(boolean); }
-keepclassmembers class android.widget.HorizontalScrollView { void requestLayout(); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class android.widget.HorizontalScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void onItemsChanged(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void close(); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.HashMap); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void stopDispatchingItemsChanged(); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void startDispatchingItemsChanged(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void onItemVisibleChanged(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void onItemActionRequestChanged(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class libcore.io.BlockGuardOs { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.util.ArrayList getVisibleItems(); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class libcore.io.BlockGuardOs { void mkdir(java.lang.String,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void flagActionItems(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.widget.HorizontalScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class android.content.res.ColorStateList { java.lang.String toString(); }
-keepclassmembers class android.content.res.ColorStateList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.widget.HorizontalScrollView { void fling(int); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class android.app.SearchDialog$1 { void <init>(android.app.SearchDialog); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.util.ArrayList getNonActionItems(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition$FragmentContainerTransition { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { void <init>(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.HorizontalScrollView { void scrollTo(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.widget.HorizontalScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4,android.widget.EditText); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class libcore.io.BlockGuardOs { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class libcore.io.BlockGuardOs { void remove(java.lang.String); }
-keepclassmembers class android.widget.HorizontalScrollView { int clamp(int,int,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class android.widget.HorizontalScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,long); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class libcore.io.BlockGuardOs { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class android.widget.HorizontalScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class android.widget.ImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuItemImpl getExpandedItem(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void <clinit>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void <init>(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void elementType(java.lang.String,int,int,int); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class android.widget.ImageView { void setImageResource(int); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType rootElementType(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void attribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.text.format.Formatter { java.lang.String formatShortFileSize(android.content.Context,long); }
-keepclassmembers class android.text.format.Formatter { java.lang.String formatFileSize(android.content.Context,long,boolean); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void parent(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.StringReader { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class java.io.StringReader { void close(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.StringReader { boolean isClosed(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void entity(java.lang.String,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class android.widget.ImageView { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.io.StringReader { void checkNotClosed(); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { int getEntity(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getURI(); }
-keepclassmembers class java.io.StringReader { int read(); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getPrefix(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setURI(java.lang.String); }
-keepclassmembers class android.widget.ImageView { android.widget.ImageView$ScaleType getScaleType(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setPrefix(java.lang.String); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class java.io.StringReader { int read(char[],int,int); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix getImageMatrix(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.TimeZone); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLSchema { void <init>(); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class android.view.Choreographer { long getFrameDelay(); }
-keepclassmembers class okio.AsyncTimeout$2 { void <init>(okio.AsyncTimeout,okio.Source); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class java.util.Calendar { void setFirstDayOfWeek(int); }
-keepclassmembers class okio.AsyncTimeout$2 { void close(); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class java.util.Calendar { void setMinimalDaysInFirstWeek(int); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class okio.AsyncTimeout$2 { long read(okio.Buffer,long); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class okio.AsyncTimeout$2 { okio.Timeout timeout(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class java.net.InetSocketAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class android.support.v4.app.LoaderManager { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class java.net.InetSocketAddress { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$9 { void run(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatLollipop { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class android.widget.ImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageScrollStateChanged(int); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageSelected(int); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class android.content.IntentFilter { void <init>(); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.Address { void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector); }
-keepclassmembers class android.emoji.EmojiFactory { android.emoji.EmojiFactory newAvailableInstance(); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class okhttp3.CacheControl$Builder { void <init>(); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl build(); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class android.content.IntentFilter { void addAction(java.lang.String); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class okhttp3.Address { java.util.List connectionSpecs(); }
-keepclassmembers class okhttp3.Address { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class okhttp3.Address { okhttp3.Dns dns(); }
-keepclassmembers class okhttp3.Address { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder noCache(); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder onlyIfCached(); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class okhttp3.Address { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$2 { void onClick(android.view.View); }
-keepclassmembers class java.util.ResourceBundle$MissingBundle { void <init>(); }
-keepclassmembers class okhttp3.Address { java.util.List protocols(); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class okhttp3.Address { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.Address { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class okhttp3.Address { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class okhttp3.Address { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class okhttp3.Address { okhttp3.HttpUrl url(); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class java.text.BreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeTag(int); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void <init>(); }
-keepclassmembers class java.lang.Character { int unicodeBlockForCodePoint(int); }
-keepclassmembers class java.text.BreakIterator { void setText(java.lang.String); }
-keepclassmembers class java.text.BreakIterator { java.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class java.lang.Character { void checkValidCodePoint(int); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeANY(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBitString(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBoolean(); }
-keepclassmembers class java.lang.Character { boolean isSupplementaryCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { boolean isSurrogatePair(char,char); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { int charCount(int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeGeneralizedTime(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeUTCTime(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeInteger(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int,int); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOctetString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOID(); }
-keepclassmembers class java.lang.Character { int codePointBefore(char[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$11 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.widget.RemoteViews$3 { void <init>(); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeString(); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$11 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$1 { void <init>(android.animation.AnimatorSet,java.util.ArrayList); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { void <init>(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getMethod(java.lang.Class); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float,float,float); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float,float,float); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class android.graphics.Matrix { boolean preScale(float,float); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { boolean isSupported(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class java.lang.Character { byte getDirectionality(char); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class java.lang.Character { byte getIcuDirectionality(int); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class android.graphics.Matrix { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(char); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void <init>(); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[],int,float[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[]); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { boolean isEmpty(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumDrawingCacheSize(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$1 { void <init>(java.util.zip.ZipFile,java.util.Iterator); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.support.v4.app.Fragment { void <clinit>(); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.Fragment { void access$800(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.Fragment { void callStartTransitionListener(); }
-keepclassmembers class android.support.v4.app.Fragment { void <init>(); }
-keepclassmembers class java.util.zip.ZipFile$1 { boolean hasMoreElements(); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { void access$100(int); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.util.zip.ZipEntry nextElement(); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.lang.Object nextElement(); }
-keepclassmembers class java.lang.Character { int access$200(int); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo(); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Matrix { void native_preScale(long,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_postConcat(long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void <init>(); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter access$000(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$1100(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1000(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$1102(au.com.wallaceit.reddinator.activity.MainActivity,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1202(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { org.json.JSONArray access$1300(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.Fragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$200(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void access$300(au.com.wallaceit.reddinator.activity.MainActivity,android.os.Bundle,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { int access$400(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$500(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$600(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$602(au.com.wallaceit.reddinator.activity.MainActivity,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$800(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$802(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { android.widget.AbsListView access$700(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColors(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { android.view.MenuItem access$900(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColorStateList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void openPostView(android.os.Bundle,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void loadReddits(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.support.v4.widget.Space { void draw(android.graphics.Canvas); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void openSidebar(); }
-keepclassmembers class android.support.v4.widget.Space { int getDefaultSize2(int,int); }
-keepclassmembers class android.support.v4.widget.Space { void onMeasure(int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { void <clinit>(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class okhttp3.Request { void <init>(okhttp3.Request$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void refreshTheme(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$000(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.content.IntentFilter { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void setThemeColors(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int combineMeasuredStates(int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.Request { void <init>(okhttp3.Request$Builder,okhttp3.Request$1); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { long getFrameTime(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState[] values(); }
-keepclassmembers class okhttp3.Request { okhttp3.Headers access$1000(okhttp3.Request); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getLayerType(android.view.View); }
-keepclassmembers class okhttp3.Request { okhttp3.HttpUrl access$600(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { okhttp3.RequestBody access$800(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { java.lang.String access$700(okhttp3.Request); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredState(android.view.View); }
-keepclassmembers class okhttp3.Request { java.lang.Object access$900(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { okhttp3.RequestBody body(); }
-keepclassmembers class okhttp3.Request { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showFeedPrefsDialog(); }
-keepclassmembers class okhttp3.Request { java.lang.String header(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.Request { okhttp3.Headers headers(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.Request { java.lang.String method(); }
-keepclassmembers class okhttp3.Request { boolean isHttps(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getTranslationY(android.view.View); }
-keepclassmembers class okhttp3.Request { okhttp3.Request$Builder newBuilder(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentActivity getActivity(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowEnterTransitionOverlap(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showSortDialog(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowReturnTransitionOverlap(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void updateFeed(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View getAnimatingAway(); }
-keepclassmembers class okhttp3.Request { okhttp3.HttpUrl url(); }
-keepclassmembers class android.support.v4.app.Fragment { android.os.Bundle getArguments(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getChildFragmentManager(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void hideLoader(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void loadMore(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int resolveSizeAndState(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { boolean sameConnection(okhttp3.HttpUrl); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getEnterTransition(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.SharedElementCallback getEnterTransitionCallback(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getExitTransition(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.http.HttpStream httpStream(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.SharedElementCallback getExitTransitionCallback(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.GLES20Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { void <init>(okhttp3.internal.tls.TrustRootIndex); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextAnim(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixVectorDrawableTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextTransition(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReenterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextTransitionStyle(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.Fragment { android.content.res.Resources getResources(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReturnTransition(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementEnterTransition(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementReturnTransition(); }
-keepclassmembers class java.nio.charset.Charset { void checkCharsetName(java.lang.String); }
-keepclassmembers class android.app.Dialog$1 { void <init>(android.app.Dialog); }
-keepclassmembers class android.support.v4.app.Fragment { int getStateAfterAnimating(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNameStart(char); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Request request(); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNamePart(char); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.connection.StreamAllocation streamAllocation(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View getView(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v4.app.Fragment { void initState(); }
-keepclassmembers class android.support.v4.app.Fragment { int hashCode(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset cacheCharset(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.app.Fragment { void instantiateChildFragmentManager(); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isAdded(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isHideReplaced(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isInBackStack(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isHidden(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isPostponed(); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.app.FragmentManagerImpl$4 { void <init>(android.app.FragmentManagerImpl,int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.content.Context); }
-keepclassmembers class android.app.FragmentManagerImpl$4 { void run(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void <init>(android.support.v4.app.FragmentManager); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { java.lang.String makeFragmentName(int,long); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.animation.Animation onCreateAnimation(int,boolean,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void finishUpdate(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { long getItemId(int); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroy(); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void onDetach(); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void restoreState(android.os.Parcelable,java.lang.ClassLoader); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { android.os.Parcelable saveState(); }
-keepclassmembers class android.support.v4.app.Fragment { void onLowMemory(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset getDefaultCharset(); }
-keepclassmembers class android.support.v4.app.Fragment { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void onPause(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.Fragment { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter { void startUpdate(android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.Fragment { void onResume(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onStart(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onStop(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void performActivityCreated(android.os.Bundle); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void performCreate(android.os.Bundle); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onSubredditInfoLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onResume(); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroy(); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroyView(); }
-keepclassmembers class org.apache.harmony.security.x509.Time { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.support.v4.app.Fragment { void performDetach(); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap access$100(); }
-keepclassmembers class android.transition.TransitionManager { java.util.ArrayList access$000(); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void reloadFeedData(); }
-keepclassmembers class java.io.ObjectOutputStream { void checkWritePrimitiveTypes(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onThemeResult(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void reloadReddits(); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteObject(); }
-keepclassmembers class java.io.ObjectOutputStream { int dumpCycle(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void drain(); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showLoader(); }
-keepclassmembers class android.support.v4.app.Fragment { void performPause(); }
-keepclassmembers class java.io.ObjectOutputStream { void removeUnsharedReference(java.lang.Object,int); }
-keepclassmembers class libcore.io.DeleteOnExit { libcore.io.DeleteOnExit getInstance(); }
-keepclassmembers class java.io.ObjectOutputStream { int registerObjectWritten(java.lang.Object); }
-keepclassmembers class libcore.io.DeleteOnExit { void <init>(); }
-keepclassmembers class libcore.io.DeleteOnExit { void addFile(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { int nextHandle(); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void resetSeenObjects(); }
-keepclassmembers class java.io.ObjectOutputStream { void resetState(); }
-keepclassmembers class libcore.io.DeleteOnExit { void run(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void performResume(); }
-keepclassmembers class android.support.v4.app.Fragment { void performReallyStop(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseFormatToken(int); }
-keepclassmembers class java.io.ObjectOutputStream { int writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int peek(); }
-keepclassmembers class android.support.v4.app.Fragment { void performSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String getFormatSpecifierText(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseArgumentIndexAndFlags(java.util.Formatter$FormatToken); }
-keepclassmembers class android.support.v4.app.Fragment { void performStart(); }
-keepclassmembers class android.support.v4.app.Fragment { void performStop(); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.LinkedList$Link { void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link); }
-keepclassmembers class java.io.ObjectOutputStream { void writeCyclicReference(int); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void <init>(android.content.res.Resources); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseWidth(java.util.Formatter$FormatToken,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldDescriptors(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { boolean getBoolean(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreChildFragmentState(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getColor(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parsePrecision(java.util.Formatter$FormatToken); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseConversionType(java.util.Formatter$FormatToken); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreViewState(android.os.Bundle); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int nextInt(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getDimensionPixelSize(int); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int failNextInt(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int access$000(java.util.Formatter$FormatSpecifierParser); }
-keepclassmembers class android.support.v4.app.Fragment { void setAnimatingAway(android.view.View); }
-keepclassmembers class android.support.v4.app.Fragment { void setArguments(android.os.Bundle); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onClick(android.view.View); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void replaceCharacterAndClose(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getInteger(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setHideReplaced(boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setIndex(int,android.support.v4.app.Fragment); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getQuantityString(int,int,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$2 { void run(); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.preference.PreferenceActivity$1 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { void setMenuVisibility(boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceName(int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setNextTransition(int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setNextAnim(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String[] getStringArray(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence getText(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setStateAfterAnimating(int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.v4.app.Fragment { void setUserVisibleHint(boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.widget.Editor$TextDisplayList { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$3 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$3 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewArray(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,java.lang.Class,boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void startPostponedEnterTransition(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream$StreamFinishingSource { void close(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.http.Http2xStream$StreamFinishingSource { void <init>(okhttp3.internal.http.Http2xStream,okio.Source); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String toString(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect getContentRect(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { void <init>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$100(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$000(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$4 { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { void <init>(android.graphics.pdf.PdfDocument$1); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$002(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect access$202(android.graphics.pdf.PdfDocument$PageInfo,android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect access$200(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$102(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$602(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewClassDesc(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewClass(java.lang.Class,boolean); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2 { java.lang.Throwable doInBackground(java.lang.Void[]); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewException(java.lang.Exception); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewObject(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class android.widget.RemoteViewsService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViewsService { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManagerFactory getInstance(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewString(java.lang.String,boolean); }
-keepclassmembers class android.widget.RemoteViewsService { void <clinit>(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3,android.widget.EditText); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUnshared(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getObjectIdentifier(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object,boolean); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManager[] getTrustManagers(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void init(java.security.KeyStore); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void appendName(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.ObjectOutputStream { int writeObjectInternal(java.lang.Object,boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getType(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue getValue(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$3 { void <init>(android.view.View,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getOID(int[]); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { int hashIntArray(int[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void addOID(org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectStreamClass writeEnumDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue,org.apache.harmony.security.x501.AttributeTypeAndValue$1); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier access$100(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue access$200(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { boolean checkTag(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewEnum(java.lang.Object,java.lang.Class,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvEscaper { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvEscaper { void <init>(); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class libcore.util.CollectionUtils$1 { void <init>(java.lang.Iterable,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.graphics.NinePatch { void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(long,byte[]); }
-keepclassmembers class android.graphics.NinePatch { void nativeDraw(long,android.graphics.Rect,long,long,long,int,int); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { long getNativeAsset(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void close(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.util.ArrayMap { void <init>(boolean); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long,android.content.res.AssetManager$1); }
-keepclassmembers class android.transition.VisibilityPropagation { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.transition.VisibilityPropagation { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class android.transition.VisibilityPropagation { java.lang.String[] getPropagationProperties(); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class android.transition.VisibilityPropagation { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object setValueAt(int,java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String get(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class okhttp3.internal.http.RequestLine { boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String requestPath(okhttp3.HttpUrl); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$2 { void run(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$4 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$4 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlText(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlTextOrFormat(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$200(int); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class android.widget.CompoundButton { void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class android.widget.CompoundButton { void setButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$4 { void <init>(android.view.View,java.util.ArrayList,java.util.Map); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class android.widget.CompoundButton { void applyButtonTint(); }
-keepclassmembers class java.nio.FileChannelImpl$1 { void <init>(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void setFadeColor(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.nio.channels.FileLock,java.nio.channels.FileLock); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.widget.CompoundButton { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { boolean isAutoMirrored(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.widget.CompoundButton { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void setAutoMirrored(boolean); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class java.text.Normalizer$Form { java.text.Normalizer$Form[] values(); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(android.util.PathParser$1); }
-keepclassmembers class android.transition.ChangeBounds { void setResizeClip(boolean); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.content.ContentProvider { void <init>(); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class android.content.ContentProvider { android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.content.ContentProvider { void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[]); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.animation.LayoutTransition$6 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder permitAll(); }
-keepclassmembers class okhttp3.Authenticator { void <clinit>(); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder disable(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder penaltyLog(); }
-keepclassmembers class okhttp3.Dispatcher { void <init>(); }
-keepclassmembers class okhttp3.Dispatcher { void finished(java.util.Deque,java.lang.Object,boolean); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder enable(int); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getCallingPackage(); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsForHost(okhttp3.RealCall$AsyncCall); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class okhttp3.Dispatcher { void promoteCalls(); }
-keepclassmembers class android.content.ContentProvider { void setAuthorities(java.lang.String); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy build(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class android.content.ContentProvider { android.content.Context getContext(); }
-keepclassmembers class android.content.ContentProvider { void setReadPermission(java.lang.String); }
-keepclassmembers class okhttp3.Dispatcher { java.util.concurrent.ExecutorService executorService(); }
-keepclassmembers class okhttp3.Dispatcher { void executed(okhttp3.RealCall); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class android.content.ContentProvider { void setWritePermission(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { void setPathPermissions(android.content.pm.PathPermission[]); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getWritePermission(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getReadPermission(); }
-keepclassmembers class okhttp3.Dispatcher { void finished(okhttp3.RealCall); }
-keepclassmembers class android.content.ContentProvider { android.content.pm.PathPermission[] getPathPermissions(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class android.content.ContentProvider { android.app.AppOpsManager getAppOpsManager(); }
-keepclassmembers class android.content.ContentProvider { void setAppOps(int,int); }
-keepclassmembers class java.util.LinkedList { boolean addLastImpl(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.view.View$14 { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.content.ContentProvider { void onLowMemory(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void <init>(java.util.AbstractList); }
-keepclassmembers class android.content.ContentProvider { android.database.Cursor rejectQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { boolean hasNext(); }
-keepclassmembers class android.content.ContentProvider { void onTrimMemory(int); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsCount(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { java.lang.Object next(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void remove(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri rejectInsert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri canonicalize(android.net.Uri); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri uncanonicalize(android.net.Uri); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void updateAppWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { int bulkInsert(android.net.Uri,android.content.ContentValues[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class android.content.ContentProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void <init>(); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String nextText(); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class java.util.LinkedList { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class android.content.ContentProvider { java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class android.widget.Editor { void destroyDisplayListsData(); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class android.content.ContentProvider { void attachInfoForTesting(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class android.content.ContentProvider { android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class android.content.ContentProvider { void attachInfo(android.content.Context,android.content.pm.ProviderInfo,boolean); }
-keepclassmembers class android.content.ContentProvider { android.content.IContentProvider getIContentProvider(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$4 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$4 { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContentProvider { void attachInfo(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void <init>(android.content.Context,java.lang.Runnable,boolean,int); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirstImpl(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void run(); }
-keepclassmembers class java.util.TreeMap$Relation { java.util.TreeMap$Relation[] values(); }
-keepclassmembers class android.content.ContentProvider { android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContentProvider { void shutdown(); }
-keepclassmembers class android.content.ContentProvider { void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class android.content.ContentProvider { android.content.ContentProviderResult[] applyBatch(java.util.ArrayList); }
-keepclassmembers class java.util.TreeMap$Relation { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class java.util.TreeMap$Relation { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$2 { void onClick(android.view.View); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void <init>(boolean,byte[]); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromAuthority(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromAuthority(java.lang.String,int); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub { android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.transition.AutoTransition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromUri(android.net.Uri,int); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromUri(android.net.Uri); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri getUriWithoutUserId(android.net.Uri); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getAuthorityWithoutUserId(java.lang.String); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.view.animation.Animation$2 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.widget.Editor { void hideControllers(); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri maybeAddUserId(android.net.Uri,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onPreExecute(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class android.content.ContentProvider { boolean uriHasUserId(android.net.Uri); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void <init>(android.content.Context,com.joanzapata.android.iconify.BaseIconValue); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable actionBarSize(); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class android.widget.Editor { boolean canSelectText(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.Editor { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void clearColorFilter(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable color(int); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { boolean isStateful(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getOpacity(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.Editor { long getCharRange(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition$2 { void <init>(android.view.ViewGroup,java.lang.Object,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.GLES20Canvas { boolean nIsAvailable(); }
-keepclassmembers class android.view.GLES20Canvas { boolean isAvailable(); }
-keepclassmembers class android.view.GLES20Canvas { void <init>(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { boolean setState(int[]); }
-keepclassmembers class android.view.GLES20Canvas { void setupFinalizer(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable sizePx(int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable sizeDp(int); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask { boolean isCancelled(); }
-keepclassmembers class android.view.GLES20Canvas { long nCreateDisplayListRenderer(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void nSetViewport(long,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void setViewport(int,int); }
-keepclassmembers class okhttp3.CipherSuite { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.view.GLES20Canvas { void setHighContrastText(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nInsertReorderBarrier(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nSetHighContrastText(long,boolean); }
-keepclassmembers class okio.Okio$1 { void <init>(okio.Timeout,java.io.OutputStream); }
-keepclassmembers class android.view.GLES20Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.view.GLES20Canvas { int onPreDraw(android.graphics.Rect); }
-keepclassmembers class okio.Okio$1 { void flush(); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepareDirty(long,int,int,int,int,boolean); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepare(long,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okio.Okio$1 { void close(); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nFinish(long); }
-keepclassmembers class okio.Okio$1 { void write(okio.Buffer,long); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class android.view.GLES20Canvas { long nFinishRecording(long); }
-keepclassmembers class android.view.GLES20Canvas { int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.view.GLES20Canvas { void onPostDraw(); }
-keepclassmembers class android.view.GLES20Canvas { int nDrawRenderNode(long,long,android.graphics.Rect,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLayer(long,long,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipPath(long,long,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.view.GLES20Canvas { float[] getLineStorage(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,float,float,float,float,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$100(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,int,int,int,int,int); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1300(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1400(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { org.json.JSONObject access$1502(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,org.json.JSONObject); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { au.com.wallaceit.reddinator.Reddinator access$200(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.widget.TextView { android.text.Layout getHintLayout(); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { com.sothree.slidinguppanel.SlidingUpPanelLayout access$300(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { android.graphics.Canvas getCanvas(); }
-keepclassmembers class android.util.Base64$Coder { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { android.graphics.pdf.PdfDocument$PageInfo getInfo(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$800(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { boolean isFinished(); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void finish(); }
-keepclassmembers class android.view.GLES20Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { int access$900(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument$PageInfo,android.graphics.pdf.PdfDocument$1); }
-keepclassmembers class android.view.GLES20Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.view.GLES20Canvas { boolean nGetClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void access$400(android.graphics.pdf.PdfDocument$Page); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nQuickReject(long,float,float,float,float); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class android.view.GLES20Canvas { void translate(float,float); }
-keepclassmembers class android.net.Uri { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class okhttp3.CipherSuite { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class android.net.Uri { int hashCode(); }
-keepclassmembers class android.view.GLES20Canvas { void nTranslate(long,float,float); }
-keepclassmembers class android.net.Uri { int compareTo(android.net.Uri); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite forJavaName(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void rotate(float); }
-keepclassmembers class android.net.Uri { java.lang.String toSafeString(); }
-keepclassmembers class android.view.GLES20Canvas { void nRotate(long,float); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.view.GLES20Canvas { void scale(float,float); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite of(java.lang.String,int,int,int,int); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class android.view.GLES20Canvas { void nScale(long,float,float); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class okhttp3.CipherSuite { java.lang.String toString(); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class android.view.GLES20Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1600(android.view.View$TransformationInfo); }
-keepclassmembers class android.view.GLES20Canvas { void nGetMatrix(long,long); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.view.GLES20Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1700(android.view.View$TransformationInfo); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1702(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class android.view.GLES20Canvas { void nConcatMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { int save(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { int save(int); }
-keepclassmembers class android.view.GLES20Canvas { int nSave(long,int); }
-keepclassmembers class android.net.Uri { android.net.Uri fromFile(java.io.File); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$18 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class android.view.GLES20Canvas { void restore(); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nRestore(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$18 { void onClick(android.view.View); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class android.net.Uri$AbstractPart { void writeTo(android.os.Parcel); }
-keepclassmembers class android.view.GLES20Canvas { void restoreToCount(int); }
-keepclassmembers class android.view.GLES20Canvas { void nRestoreToCount(long,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$8 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,android.app.AlertDialog,android.widget.TextView); }
-keepclassmembers class android.view.GLES20Canvas { int getSaveCount(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class android.view.GLES20Canvas { int nGetSaveCount(long); }
-keepclassmembers class android.widget.Editor { void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void setTheme(); }
-keepclassmembers class android.view.GLES20Canvas { void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawArc(long,float,float,float,float,float,float,boolean,long); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void showErrorAndFinish(); }
-keepclassmembers class android.widget.Editor { void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.text.method.Touch { boolean isActivelySelecting(android.text.Spannable); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class android.text.method.Touch { boolean isSelectionStarted(android.text.Spannable); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPatch(long,long,long,float,float,float,float,long); }
-keepclassmembers class okio.Util { void <clinit>(); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class okio.Util { boolean arrayRangeEquals(byte[],int,byte[],int,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class okio.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class okio.Util { int reverseBytesInt(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okio.Util { short reverseBytesShort(short); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class okio.Util { void sneakyRethrow(java.lang.Throwable); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(char[]); }
-keepclassmembers class okio.Util { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(int,char[],int,boolean); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer asReadOnlyBuffer(); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharArrayBuffer copy(java.nio.CharArrayBuffer,int,boolean); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void run(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.net.Uri { void checkFileUriExposed(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor { int getAvailableDisplayListIndex(int[],int,int); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { void <init>(android.content.Context,boolean,java.lang.Runnable); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class android.widget.Editor { void drawCursor(android.graphics.Canvas,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,long,long,long,long); }
-keepclassmembers class android.widget.Editor { void updateCursorsPositions(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isVisibleToClassLoader(java.lang.ClassLoader,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <init>(org.apache.harmony.security.x509.GeneralName,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$11 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.view.GLES20Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor { float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <init>(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLines(long,float[],int,int,long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { org.apache.harmony.security.x509.GeneralName access$000(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class android.graphics.Canvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$4 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.view.GLES20Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$100(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$200(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawOval(long,float,float,float,float,long); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.graphics.Canvas { void <init>(long); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class android.text.format.DateFormat { boolean is24HourFormat(android.content.Context); }
-keepclassmembers class android.text.format.DateFormat { boolean is24HourFormat(android.content.Context,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRects(long,long,long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <init>(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPath(long,long,long); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class android.graphics.Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { void insertInorderBarrier(); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.TreeMap); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRect(long,float,float,float,float,long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void close(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.widget.Editor { void updateCursorPosition(int,int,int,float); }
-keepclassmembers class android.view.GLES20Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.TintInfo { void clear(); }
-keepclassmembers class android.support.v7.widget.TintInfo { void <init>(); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.ArtMethod[],java.lang.Class[][]); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.lang.String access$1100(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class android.graphics.Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <init>(okhttp3.internal.framed.FramedConnection$Builder,okhttp3.internal.framed.FramedConnection$1); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1200(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.ErrorCode,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { int getSaveCount(); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1300(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1400(okhttp3.internal.framed.FramedConnection,int,okio.BufferedSource,int,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1500(okhttp3.internal.framed.FramedConnection,int,java.util.List,boolean); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1600(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1602(okhttp3.internal.framed.FramedConnection,boolean); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1700(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawables(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1702(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1800(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.Map access$1900(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedConnection$Listener access$2000(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2200(okhttp3.internal.framed.FramedConnection,int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.concurrent.ExecutorService access$2100(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$2300(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$2302(okhttp3.internal.framed.FramedConnection,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.Ping access$2400(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class android.graphics.Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { android.view.View$OnClickListener access$302(android.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2600(okhttp3.internal.framed.FramedConnection,int,java.util.List); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.PushObserver access$2700(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2500(okhttp3.internal.framed.FramedConnection,boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class android.widget.TextView { void setPadding(int,int,int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.Set access$2800(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void tryCancel(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$900(okhttp3.internal.framed.FramedConnection,boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.RectF); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void close(okhttp3.internal.framed.ErrorCode,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int spread(int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Class comparableClassFor(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean casTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.ORAddress); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.TextView { void setTextSize(float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void setTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1400(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class android.view.GLES20Canvas { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2300(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(byte[]); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.graphics.Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream newStream(int,java.util.List,boolean,boolean); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class android.graphics.Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2800(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2802(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object getName(); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canConstantState(); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor { boolean access$3200(android.widget.Editor,float,float); }
-keepclassmembers class android.widget.TextView { int getCurrentTextColor(); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.transition.Slide { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.transition.Slide { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.transition.Slide { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(int); }
-keepclassmembers class android.transition.Slide { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.transition.Slide { void setSlideEdge(int); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.FragmentTransaction beginTransaction(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushDataLater(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(int); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(int,int); }
-keepclassmembers class android.graphics.Canvas { void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushHeadersLater(int,java.util.List,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class android.graphics.Canvas { void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushRequestLater(int,java.util.List); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class android.text.format.DateFormat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.TextView { int getGravity(); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class android.transition.Slide { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushResetLater(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean pushedStream(int); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.Ping removePing(int); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$RunQueue getRunQueue(); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writePing(boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writePingLater(boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void addBytesToWriteWindow(long); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.Protocol getProtocol(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void flush(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] getEncoded(); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream getStream(int); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class android.app.FragmentManagerImpl { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkDNS(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int maxConcurrentStreams(); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream newStream(java.util.List,boolean,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkURI(java.lang.String); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void <init>(android.support.v4.util.MapCollections,int); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream removeStream(int); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void shutdown(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int[] oidStrToInts(java.lang.String); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void start(); }
-keepclassmembers class android.transition.CircularPropagation { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void start(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeData(int,boolean,okio.Buffer,long); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void <init>(android.content.Context,android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] ipStrToBytes(java.lang.String); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getColor(int,int); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String ipBytesToStr(byte[]); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeSynReset(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeSynResetLater(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int access$100(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <clinit>(); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeWindowUpdateLater(int,long); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class android.net.Uri$Part { boolean isEmpty(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class android.net.Uri$Part { java.lang.String getEncoded(); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class android.graphics.Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getInt(int,int); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.support.v4.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getResourceId(int,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$12 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$12 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void recycle(); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setText(int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean hasValue(int); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class android.widget.TextView { void setHint(int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] initTable(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class android.widget.TextView { void setInputType(int); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.widget.TextView { boolean isPasswordInputType(int); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CRLDistributionPoints$1); }
-keepclassmembers class android.widget.TextView { boolean isVisiblePasswordInputType(int); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void addCount(long,int); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class android.widget.TextView { void setImeOptions(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.View onFindViewById(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.LayoutInflater onGetLayoutInflater(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] helpTransfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { int onGetWindowAnimations(); }
-keepclassmembers class android.widget.TextView { void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasView(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasWindowAnimations(); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onShouldSaveFragmentState(android.support.v4.app.Fragment); }
-keepclassmembers class android.graphics.Canvas { void release(); }
-keepclassmembers class android.graphics.Canvas { long initRaster(long); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,long,boolean); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int); }
-keepclassmembers class android.graphics.Canvas { int native_getSaveCount(long); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigToNative(int); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean native_getClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { void native_getCTM(long,long); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(); }
-keepclassmembers class android.graphics.Canvas { boolean native_quickReject(long,float,float,float,float); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class android.graphics.Canvas { void native_drawLines(long,float[],int,int,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onSupportInvalidateOptionsMenu(); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.graphics.Canvas { void native_drawArc(long,float,float,float,float,float,float,boolean,long); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,long,int,int,int); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Canvas { void nativeDrawBitmapMatrix(long,long,long,long); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeActive(android.app.Fragment); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.graphics.Canvas { void finalizer(long); }
-keepclassmembers class android.graphics.Canvas { void access$000(long); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class android.app.FragmentManagerImpl { void addFragment(android.app.Fragment,boolean); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void removeFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class libcore.icu.NativePluralRules { libcore.icu.NativePluralRules forLocale(java.util.Locale); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class libcore.icu.NativePluralRules { void <init>(long); }
-keepclassmembers class libcore.icu.NativePluralRules { int quantityForInt(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void hideFragment(android.app.Fragment,int,int); }
-keepclassmembers class libcore.icu.NativePluralRules { long forLocaleImpl(java.lang.String); }
-keepclassmembers class libcore.icu.NativePluralRules { int quantityForIntImpl(long,int); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void showFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void detachFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { void <init>(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class android.support.v4.app.FragmentController { void attachHost(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchActivityCreated(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchCreate(); }
-keepclassmembers class android.app.FragmentManagerImpl { void attachFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class android.widget.TextView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { int getLeftPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getTopPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getBottomPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getFudgedPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getRightPaddingOffset(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchPause(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchResume(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchStart(); }
-keepclassmembers class java.util.UUID { void <init>(long,long); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.util.UUID { void init(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class android.support.v4.app.FragmentController { void doLoaderStart(); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl); }
-keepclassmembers class android.support.v4.app.FragmentController { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean execPendingActions(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class java.util.UUID { java.util.UUID randomUUID(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void readChunkSize(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class java.util.UUID { java.util.UUID makeUuid(byte[],int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class android.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class android.support.v4.app.FragmentController { void noteStateNotSaved(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void enqueueAction(java.lang.Runnable,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$4 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentController { void reportLoaderStart(); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void close(); }
-keepclassmembers class android.widget.TextView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { long read(okio.Buffer,long); }
-keepclassmembers class android.app.FragmentManagerImpl { int allocBackStackIndex(android.app.BackStackRecord); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.support.v4.app.FragmentController { android.os.Parcelable saveAllState(); }
-keepclassmembers class android.widget.TextView { android.graphics.Path getUpdatedHighlightPath(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class java.util.UUID { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class android.widget.TextView { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.widget.TextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class okhttp3.RealCall { void <init>(okhttp3.OkHttpClient,okhttp3.Request); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class android.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response getResponseWithInterceptorChain(); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.app.FragmentManagerImpl { void addBackStackState(android.app.BackStackRecord); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { long sumCount(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void fullAddCount(long,java.util.concurrent.ConcurrentHashMap$CounterHashCode,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response execute(); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileReader { void <init>(java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchSpinnerAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchSpinnerAdapter { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,android.content.Context,int,int,java.lang.String[]); }
-keepclassmembers class java.util.Collections$2 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.app.Fragment); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[]); }
-keepclassmembers class android.app.IUiModeManager$Stub { android.app.IUiModeManager asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$3 { void <init>(java.lang.Runnable); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <clinit>(); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.TextView { int getFadeTop(boolean); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v4.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { int getFadeHeight(boolean); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class java.util.Formatter { libcore.icu.NativeDecimalFormat getDecimalFormat(java.lang.String); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int,int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int available(); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.IntegralToString { void appendInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { org.apache.harmony.security.x509.CertificatePolicies decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CertificatePolicies$1); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class java.util.Formatter { void checkNotClosed(); }
-keepclassmembers class java.util.Formatter { java.lang.Appendable out(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void attachActivity(android.app.Activity,android.app.FragmentContainer,android.app.Fragment); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long); }
-keepclassmembers class java.util.Formatter { void doFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.lang.IntegralToString { void appendLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class android.app.FragmentManagerImpl { void noteStateNotSaved(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchActivityCreated(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchStart(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { boolean isEmpty(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchResume(); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchPause(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchStop(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchDestroyView(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchDestroy(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void resetErrorChangedFlag(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class java.util.Formatter { void outputCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class java.lang.IntegralToString { int intIntoCharArray(char[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class java.util.Formatter { java.lang.Object getArgument(java.lang.Object[],int,java.util.Formatter$FormatSpecifierParser,java.lang.Object,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transform(java.util.Formatter$FormatToken,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToBinaryString(int); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String byteToHexString(byte,boolean); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void invalidateOptionsMenu(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class android.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2,boolean,com.larswerkman.holocolorpicker.ColorPicker,android.app.Dialog); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToHexString(int,boolean,int); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void <init>(java.util.AbstractList,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToHexString(long); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToOctalString(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$1 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class java.util.Formatter { java.util.IllegalFormatConversionException badArgumentType(); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToOctalString(long); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void set(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String stringOf(char[]); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence localizeDigits(java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class java.lang.IntegralToString { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence insertGrouping(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBoolean(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromHashCode(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { android.view.LayoutInflater$Factory2 getLayoutInflaterFactory(); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromCharacter(); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence padding(java.lang.CharSequence,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromPercent(); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class android.widget.TextView$Marquee { float getScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { float getGhostOffset(); }
-keepclassmembers class android.widget.TextView$Marquee { float getMaxFadeScroll(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawGhost(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawLeftFade(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isRunning(); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder toStringBuilder(java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder wrapParentheses(java.lang.StringBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromInteger(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void onSettings(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class org.json.JSONObject$1 { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class org.json.JSONObject$1 { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean isCompatTintEnabled(); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isTextFilterEnabled(); }
-keepclassmembers class okhttp3.Protocol { void <clinit>(); }
-keepclassmembers class org.json.JSONObject$1 { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class okhttp3.Protocol { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspot(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromNull(); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class okhttp3.Protocol { okhttp3.Protocol get(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBigInteger(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean setState(int[]); }
-keepclassmembers class okhttp3.Protocol { java.lang.String toString(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromDateTime(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class java.util.jar.ManifestReader { void <init>(byte[],java.util.jar.Attributes); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { boolean hasOverlappingRendering(); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class java.util.jar.ManifestReader { void readEntries(java.util.Map,java.util.Map); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Formatter { boolean appendT(java.lang.StringBuilder,char,java.util.Calendar); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.jar.ManifestReader { int getEndOfMainSection(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.jar.ManifestReader { boolean readHeader(); }
-keepclassmembers class java.util.jar.ManifestReader { void readName(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class java.util.jar.ManifestReader { void readValue(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class android.widget.ScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.ScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <clinit>(); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Collection); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class java.util.Formatter { int to12Hour(int); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class java.util.Formatter { void appendLocalized(java.lang.StringBuilder,long,int); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class java.util.TreeSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromSpecialNumber(double); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromFloat(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { float getTopFadingEdgeStrength(); }
-keepclassmembers class java.util.Formatter { boolean startsWithMinusSign(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Formatter { void transformE(java.lang.StringBuilder); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.Formatter { void transformG(java.lang.StringBuilder); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.ObjectAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class java.util.Formatter { void transformF(java.lang.StringBuilder); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.app.ListActivity { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class android.app.ListActivity { void onContentChanged(); }
-keepclassmembers class java.util.Formatter { void transformA(java.lang.StringBuilder); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class android.app.ListActivity { void setListAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.util.Formatter { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class android.transition.PatternPathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.ListActivity { void setSelection(int); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class android.app.ListActivity { int getSelectedItemPosition(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.app.ListActivity { long getSelectedItemId(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class android.app.ListActivity { android.widget.ListView getListView(); }
-keepclassmembers class android.app.ListActivity { android.widget.ListAdapter getListAdapter(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class android.app.ListActivity { void ensureList(); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class android.transition.PatternPathMotion { void setPatternPath(android.graphics.Path); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.transition.PatternPathMotion { float distance(float,float); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$3 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2,android.widget.EditText,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.lang.reflect.ArtMethod { java.lang.String getMethodName(java.lang.reflect.ArtMethod); }
-keepclassmembers class java.lang.ClassCastException { void <init>(); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalConstructorParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(byte[]); }
-keepclassmembers class android.widget.TextView { void computeScroll(); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalMethodParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputEncoding(java.io.IOException); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.widget.AbsListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void <init>(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void checkForValidRequestCode(int); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl { void <init>(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getCanonicalName(); }
-keepclassmembers class android.widget.AbsListView { int getLeftPaddingOffset(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { int getRightPaddingOffset(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void <init>(android.support.v4.util.ArrayMap); }
-keepclassmembers class android.widget.AbsListView { int getTopPaddingOffset(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.widget.AbsListView { int getBottomPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class java.util.Hashtable$Values { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colIndexOfKey(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setSingleLine(); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class android.widget.AbsListView { void drawSelector(android.graphics.Canvas); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Exception { void <init>(java.lang.String); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class android.widget.AbsListView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { int hashCode(); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.TextView { void addTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterHashCode { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { int getIndex(java.lang.Object); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float,int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void <init>(android.widget.SpinnerAdapter); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback21Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.widget.TextView { void handleTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class android.app.ActivityOptions { void <init>(); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class android.widget.TextView { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onStartTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry { void <init>(android.content.res.ColorStateList,android.content.res.Configuration); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class android.widget.TextView { void clearComposingText(); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class android.widget.TextView { float getRightFadingEdgeStrength(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int hashCode(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { void <init>(okhttp3.Request,okhttp3.Response); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { boolean isCacheable(okhttp3.Response,okhttp3.Request); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleLocked(); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { void <init>(); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$000(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$100(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$200(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { android.app.ActionBar access$800(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { java.lang.String access$900(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$300(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void setInboxIcon(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$400(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.webkit.MimeTypeMap { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String nextAT(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$500(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Boolean access$600(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Boolean access$700(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void lockRoot(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class android.webkit.MimeTypeMap { java.lang.String getMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void contendedLock(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void unlockRoot(); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(int); }
-keepclassmembers class android.webkit.MimeTypeMap { android.webkit.MimeTypeMap getSingleton(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String quotedAV(); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int); }
-keepclassmembers class android.webkit.MimeTypeMap { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.content.IntentFilter$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String hexAV(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setNinePatch(android.graphics.NinePatch); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void triggerRefreshUserInfo(); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void draw(android.graphics.Canvas); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void updateSubtitle(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String escapedAV(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void updateTheme(); }
-keepclassmembers class android.widget.TextView { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void finish(); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.widget.TextView { void paste(int,int); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getEscaped(); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int); }
-keepclassmembers class java.util.Formatter$1 { void <init>(); }
-keepclassmembers class java.util.Formatter$1 { java.util.Formatter$CachedDecimalFormat initialValue(); }
-keepclassmembers class java.util.Formatter$1 { java.lang.Object initialValue(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getUTF8(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class android.text.format.DateUtils { java.lang.String getRelativeDayString(android.content.res.Resources,long,long); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { int getByte(int); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class android.widget.AbsListView { android.widget.AbsListView$AbsPositionScroller createPositionScroller(); }
-keepclassmembers class android.widget.AbsListView { void smoothScrollToPosition(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.util.List parse(); }
-keepclassmembers class android.widget.AbsListView { void smoothScrollBy(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.AbsListView { void smoothScrollBy(int,int,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumWidth(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateLeft(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateRight(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceInsertion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String getBytesAsString(byte[]); }
-keepclassmembers class android.text.format.DateUtils { java.lang.String formatDateRange(android.content.Context,long,long,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class android.text.format.DateUtils { java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class android.text.format.DateUtils { java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onPause(); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void setTitleText(java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class android.widget.TextView { void access$200(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$800(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { android.content.Context access$900(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { boolean access$1000(int); }
-keepclassmembers class android.widget.TextView { boolean access$1100(android.widget.TextView); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { boolean access$1200(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { void access$1300(android.widget.TextView,java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { void <init>(com.android.internal.view.menu.MenuPopupHelper,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.widget.TextView { android.content.Context access$1400(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class android.text.format.DateUtils { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$1 { void run(); }
-keepclassmembers class android.webkit.WebView { void destroy(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { com.android.internal.view.menu.MenuItemImpl getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$2 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { long getItemId(int); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class android.webkit.WebView { void loadUrl(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$1 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { void invalidateViews(); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class android.webkit.WebView { void loadData(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateLanguage(java.lang.String,boolean); }
-keepclassmembers class android.webkit.WebView { void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.webkit.WebView { void evaluateJavascript(java.lang.String,android.webkit.ValueCallback); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { com.android.internal.view.menu.MenuBuilder access$000(com.android.internal.view.menu.MenuPopupHelper$MenuAdapter); }
-keepclassmembers class android.webkit.WebView { void stopLoading(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$MenuAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.webkit.WebView { void goBack(); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateRegion(java.lang.String,boolean); }
-keepclassmembers class android.webkit.WebView { boolean canGoBack(); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateVariant(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateScript(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { boolean isValidVariantSubtag(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebView$HitTestResult getHitTestResult(); }
-keepclassmembers class android.webkit.WebView { java.lang.String getUrl(); }
-keepclassmembers class java.util.Hashtable$HashIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$HashIterator { boolean hasNext(); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntry(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class android.webkit.WebView { void onPause(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntryNotFailFast(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(android.content.res.Resources); }
-keepclassmembers class android.webkit.WebView { void onResume(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void put(long,android.content.res.Resources$Theme,android.content.res.ConstantState); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class android.widget.AbsListView { void showPopup(); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void setWebViewClient(android.webkit.WebViewClient); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class android.webkit.WebView { void addJavascriptInterface(java.lang.Object,java.lang.String); }
-keepclassmembers class android.webkit.WebView { void setWebChromeClient(android.webkit.WebChromeClient); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebSettings getSettings(); }
-keepclassmembers class android.webkit.WebView { void setWebContentsDebuggingEnabled(boolean); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChangeInt(android.util.LongSparseArray,int); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onChildViewAdded(android.view.View,android.view.View); }
-keepclassmembers class android.webkit.WebView { void onChildViewRemoved(android.view.View,android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean checkInvariants(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.webkit.WebView { void onGlobalFocusChanged(android.view.View,android.view.View); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1000(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1100(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { boolean access$1300(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1200(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <clinit>(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1400(java.lang.String,boolean); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData { void <init>(android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getInstance(java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void ensureProviderCreated(); }
-keepclassmembers class android.webkit.WebView { void checkThread(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class android.webkit.WebView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class android.webkit.WebView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.webkit.WebView { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class javax.net.ssl.SSLContext { void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.webkit.WebView { void setOverScrollMode(int); }
-keepclassmembers class android.widget.AbsListView { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollRange(); }
-keepclassmembers class javax.net.ssl.SSLContext { void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollRange(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollExtent(); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class android.webkit.WebView { void computeScroll(); }
-keepclassmembers class android.widget.AbsListView { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.webkit.WebView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class android.webkit.WebView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.webkit.WebView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.webkit.WebView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.webkit.WebView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.webkit.WebView { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class javax.net.ssl.SSLContext { void <clinit>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(); }
-keepclassmembers class android.webkit.WebView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class android.widget.AbsListView { int getCacheColorHint(); }
-keepclassmembers class android.webkit.WebView { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void <init>(); }
-keepclassmembers class android.webkit.WebView { void onWindowVisibilityChanged(int); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[]); }
-keepclassmembers class android.webkit.WebView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class android.webkit.WebView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.net.SocketImpl { java.lang.String toString(); }
-keepclassmembers class android.webkit.WebView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.webkit.WebView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.webkit.WebView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.webkit.WebView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class android.webkit.WebView { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class android.webkit.WebView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.webkit.WebView { void setBackgroundColor(int); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class android.webkit.WebView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.webkit.WebView { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onDeleted(android.content.Context,int[]); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.webkit.WebView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class okio.Okio { void <clinit>(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.webkit.WebView { void onStartTemporaryDetach(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onDisabled(android.content.Context); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onEnabled(android.content.Context); }
-keepclassmembers class okio.Okio { okio.BufferedSink buffer(okio.Sink); }
-keepclassmembers class android.webkit.WebView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onRestored(android.content.Context,int[],int[]); }
-keepclassmembers class android.widget.AbsListView { int access$400(android.widget.AbsListView); }
-keepclassmembers class okio.Okio { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class okio.Okio { okio.BufferedSource buffer(okio.Source); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class android.widget.AbsListView { boolean access$1300(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1202(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.io.OutputStream,okio.Timeout); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1902(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1900(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$2000(android.widget.AbsListView); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.net.Socket); }
-keepclassmembers class android.widget.AbsListView { int access$2100(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void access$2600(android.widget.AbsListView); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.InputStream,okio.Timeout); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class okio.Okio { okio.Source source(java.net.Socket); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class android.support.graphics.drawable.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4100(android.widget.AbsListView); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class okio.Okio { okio.AsyncTimeout timeout(java.net.Socket); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { android.content.Context access$4300(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void access$4200(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.URLConnection { boolean getDoInput(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void access$200(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String getTimeZoneDisplayName(java.util.TimeZone,boolean,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$1 { void run(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class javax.net.DefaultSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { void <init>(); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String toASCII(java.lang.String,int); }
-keepclassmembers class javax.net.DefaultSocketFactory { void <init>(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String convertImpl(java.lang.String,int,boolean); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String convert(java.lang.String,int,boolean); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.net.URLConnection { void setConnectTimeout(int); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class java.net.URLConnection { int getConnectTimeout(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources); }
-keepclassmembers class java.net.URLConnection { void setReadTimeout(int); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$HashMapEntry nextEntry(); }
-keepclassmembers class java.net.URLConnection { int getReadTimeout(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.util.logging.Logger access$100(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.io.IOException access$200(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okio.ByteString access$000(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int access$400(int,byte,short); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.lang.IllegalArgumentException access$500(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int access$300(okio.BufferedSource); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void access$600(okio.BufferedSink,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int lengthWithoutPadding(int,byte,short); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int readMedium(okio.BufferedSource); }
-keepclassmembers class java.util.logging.Logger { void updateDalvikLogHandler(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void writeMedium(okio.BufferedSink,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canConstantState(); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class okhttp3.CookieJar { void <clinit>(); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okhttp3.internal.framed.FrameWriter newWriter(okio.BufferedSink,boolean); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class java.util.logging.Logger { void initResourceBundle(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle loadResourceBundle(java.lang.String); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okhttp3.internal.framed.FrameReader newReader(okio.BufferedSource,boolean); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class android.app.FragmentState$1 { void <init>(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.os.BaseBundle { boolean isParcelled(); }
-keepclassmembers class java.util.logging.Logger { void setManager(java.util.logging.LogManager); }
-keepclassmembers class java.net.URI$1 { void <init>(); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.os.BaseBundle { boolean isEmpty(); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { java.lang.Object get(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$1 { void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.os.Handler); }
-keepclassmembers class android.os.BaseBundle { java.util.Set keySet(); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean get(); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.util.logging.Logger { boolean isLoggable(java.util.logging.Level); }
-keepclassmembers class java.io.BufferedOutputStream { void flush(); }
-keepclassmembers class java.util.logging.Logger { boolean internalIsLoggable(java.util.logging.Level); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void set(boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class java.util.logging.Logger { void setResourceBundle(java.util.logging.LogRecord); }
-keepclassmembers class java.io.BufferedOutputStream { void checkNotClosed(); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.io.BufferedOutputStream { void close(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.io.BufferedOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void waitForRelroCreationCompleted(boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <clinit>(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { void close(); }
-keepclassmembers class android.os.BaseBundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.os.BaseBundle { void putIntArray(java.lang.String,int[]); }
-keepclassmembers class java.io.BufferedOutputStream { void flushInternal(); }
-keepclassmembers class java.lang.RealToString$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { long read(okio.Buffer,long); }
-keepclassmembers class android.os.BaseBundle { void putFloatArray(java.lang.String,float[]); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.RealToString initialValue(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { okio.Timeout timeout(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void putStringArray(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void fine(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.app.Activity,android.content.Context,android.os.Handler,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int[] getState(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void jumpToCurrentState(); }
-keepclassmembers class android.widget.AbsSpinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$1 { void <init>(int); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setChangingConfigurations(int); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean onLevelChange(int); }
-keepclassmembers class android.widget.AbsSpinner { void resetList(); }
-keepclassmembers class android.widget.AbsSpinner { void onMeasure(int,int); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class java.util.zip.ZipFile { void checkNotClosed(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void doLoaderStart(); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspot(float,float); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean setState(int[]); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.os.BaseBundle { float getFloat(java.lang.String,float); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class android.os.BaseBundle { float getFloat(java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { int getChildWidth(android.view.View); }
-keepclassmembers class android.widget.AbsSpinner { int getChildHeight(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentsContextLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.widget.AbsSpinner { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.app.Activity getActivity(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.content.Context getContext(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentsContextLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { void recycleAllViews(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class android.widget.AbsSpinner { void setSelection(int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.os.Handler getHandler(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer allocate(int); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void inactivateFragment(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { android.view.View getSelectedView(); }
-keepclassmembers class android.os.BaseBundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class android.widget.AbsSpinner { void requestLayout(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { boolean getRetainLoaders(); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.SpinnerAdapter getAdapter(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class android.widget.AbsSpinner { int getCount(); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void readCentralDir(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.AbsSpinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.Adapter getAdapter(); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(android.graphics.Path,boolean); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,long); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class java.util.zip.ZipFile { void throwZipException(java.lang.String,int); }
-keepclassmembers class java.util.logging.Logger { void reset(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(android.support.graphics.drawable.PathParser$PathDataNode); }
-keepclassmembers class java.util.zip.ZipFile { void access$000(java.util.zip.ZipFile); }
-keepclassmembers class android.os.BaseBundle { float[] getFloatArray(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getPosTan(float,float[],float[]); }
-keepclassmembers class java.util.logging.Logger { void access$100(java.util.logging.Logger,java.util.logging.LogRecord); }
-keepclassmembers class android.os.BaseBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { java.lang.String access$000(java.util.logging.Logger); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void reportLoaderStart(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getPosTan(long,float,float[],float[]); }
-keepclassmembers class android.media.session.MediaController$CallbackStub { void <init>(android.media.session.MediaController); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class okhttp3.FormBody$Builder { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <clinit>(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody build(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { java.util.ArrayList doInBackground(java.lang.String[]); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$2 { void <init>(okhttp3.internal.framed.NameValueBlockReader); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v4.app.Fragment$2 { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class libcore.util.ZoneInfo$CheckedArithmeticException { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfo$CheckedArithmeticException { void <init>(libcore.util.ZoneInfo$1); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$2 { int inflate(byte[],int,int); }
-keepclassmembers class java.lang.reflect.Field { void <init>(java.lang.reflect.ArtField); }
-keepclassmembers class android.support.v4.app.Fragment$2 { android.view.View onFindViewById(int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,int,float,int,float); }
-keepclassmembers class android.support.v4.app.Fragment$2 { boolean onHasView(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { void <init>(int); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class java.lang.reflect.Field { int getModifiers(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String getName(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$19 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.EditText,java.lang.String,android.widget.Spinner,android.widget.Spinner); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getDeclaringClass(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,java.lang.String,android.app.ProgressDialog); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getType(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4 { void run(); }
-keepclassmembers class java.lang.reflect.Field { int getOffset(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { int hashCode(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object take(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class java.lang.reflect.Field { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$19 { void onClick(android.view.View); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { int size(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object,boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean isEmpty(); }
-keepclassmembers class android.view.animation.ScaleAnimation { float resolveScale(float,int,int,int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean remove(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean shouldAllowTextWithIcon(); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initialize(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean hasText(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void updateTextButtonVisibility(); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$5 { void <init>(java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerAfter(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerBefore(); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object,boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object,boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onClick(android.view.View); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte,boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onLongClick(android.view.View); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { long contentLength(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { void <init>(okhttp3.Headers,okio.BufferedSource); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okhttp3.MediaType contentType(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okio.BufferedSource source(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float,boolean); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class android.view.View$TintInfo { void <init>(android.view.View$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onMeasure(int,int); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int,boolean); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void checkOffset(int); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long,boolean); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int following(int); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.reflect.Field { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(float); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.widget.RemoteViews$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int preceding(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$1 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class java.text.RuleBasedBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$1 { void onClick(android.view.View); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.Window makeNewWindow(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class com.android.internal.policy.PolicyManager { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,boolean,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { java.lang.String toUtf16Escape(int); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPadding(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarFragmentActivity { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[]); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void nodesToPath(android.support.graphics.drawable.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.SecurityException { void <init>(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarFragmentActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.jar.Manifest$Chunk { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getHexString(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { int getTag(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean canApplyTheme(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { boolean isPrintableString(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState access$100(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PdfCanvas { void <init>(android.graphics.pdf.PdfDocument,long); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float access$200(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void appendQEString(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setAlpha(int); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void applyParallaxForCurrentSlideOffset(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean isStateful(); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int computePanelTopPosition(float); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeEscaped(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float computeSlideOffset(int); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean isViewUnder(android.view.View,int,int); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean hasOpaqueBackground(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeCanonical(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getRFC2253String(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void addPanelSlideListener(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setPanelStateInternal(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class android.content.res.Resources$Theme { void setTo(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.content.res.Resources$Theme { void applyStyle(int,boolean); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class okio.Okio$2 { void <init>(okio.Timeout,java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { void <init>(java.lang.Object,java.lang.reflect.Method); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray resolveAttributes(int[],int[]); }
-keepclassmembers class okio.Okio$2 { void close(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class android.content.res.Resources$Theme { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class okio.Okio$2 { long read(okio.Buffer,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void computeScroll(); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String access$000(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String getKey(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void dispatchOnPanelStateChanged(android.view.View,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class android.support.v4.view.MotionEventCompatHoneycombMr1 { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$CommentsLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class java.util.StringTokenizer { int countTokens(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$CommentsLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity { void <init>(); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity,au.com.wallaceit.reddinator.activity.ThemesActivity$1); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { int getCount(); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class android.print.pdf.PrintedPdfDocument { void <init>(android.content.Context,android.print.PrintAttributes); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { long getItemId(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { int getViewTypeCount(); }
-keepclassmembers class android.print.pdf.PrintedPdfDocument { android.graphics.pdf.PdfDocument$Page startPage(int); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { boolean shouldBeUsed(); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable superGetDrawable(int); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithm(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithmName(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithm(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List getAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithmName(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$902(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class javax.net.ssl.SSLPeerUnverifiedException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$8 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.Preference); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncodedAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncryptedDigest(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal access$100(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.widget.CheckedTextView { void setChecked(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String toString(); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger access$200(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$8 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.widget.CheckedTextView { boolean isChecked(); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { int access$000(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.pkcs7.AuthenticatedAttributes access$400(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { void closeQuietly(java.io.Closeable); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List access$700(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List,org.apache.harmony.security.pkcs7.SignerInfo$1); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int getCurrentParallaxOffset(); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { void copy(java.io.InputStream,java.io.File); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { int convertDpToPx(android.content.Context,float); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void <init>(java.util.ServiceLoader,java.util.ServiceLoader); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState getPanelState(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { boolean hasNext(); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { java.lang.StringBuilder replaceIcons(java.lang.Enum,java.lang.StringBuilder); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { boolean isEnabled(int[]); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void readClass(); }
-keepclassmembers class android.widget.CheckedTextView { void setVisibility(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean isTouchEnabled(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { java.lang.Object next(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onAttachedToWindow(); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onFinishInflate(); }
-keepclassmembers class android.widget.CheckedTextView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.widget.CheckedTextView { void updatePadding(); }
-keepclassmembers class android.widget.CheckedTextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.CheckedTextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onDetachedFromWindow(); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { java.io.File resourceToFile(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.CheckedTextView { boolean isCheckMarkAtStart(); }
-keepclassmembers class android.widget.CheckedTextView { void setBasePadding(boolean); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { boolean isShiftPressed(); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void checkValidJavaClassName(java.lang.String); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context); }
-keepclassmembers class android.widget.CheckedTextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.CheckedTextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CheckedTextView { void drawableStateChanged(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <clinit>(); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { boolean shouldWrap(android.content.Context); }
-keepclassmembers class android.widget.CheckedTextView { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.app.Dialog { boolean isShowing(); }
-keepclassmembers class android.app.Dialog { void setOwnerActivity(android.app.Activity); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.Context wrap(android.content.Context); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { java.lang.String toString(); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class android.app.Dialog { void dismiss(); }
-keepclassmembers class android.app.Dialog { void hide(); }
-keepclassmembers class android.app.Dialog { void dismissDialog(); }
-keepclassmembers class android.support.v4.content.IntentCompat { void <clinit>(); }
-keepclassmembers class android.app.Dialog { void sendDismissMessage(); }
-keepclassmembers class android.support.v4.content.IntentCompat { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class android.app.Dialog { android.os.Bundle onSaveInstanceState(); }
-keepclassmembers class android.app.Dialog { void onStop(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class okhttp3.RequestBody { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.app.Dialog { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[]); }
-keepclassmembers class android.app.Dialog { void setContentView(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onMeasure(int,int); }
-keepclassmembers class okhttp3.CookieJar$1 { java.util.List loadForRequest(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.CookieJar$1 { void <init>(); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.CookieJar$1 { void saveFromResponse(okhttp3.HttpUrl,java.util.List); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class android.app.Dialog { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.app.Dialog { void setTitle(int); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.app.Dialog { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1 { void onClick(android.view.View); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class android.app.Dialog { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { void <clinit>(); }
-keepclassmembers class android.text.style.TypefaceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class android.app.Dialog { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.app.Dialog { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.app.Dialog { void onBackPressed(); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.app.Dialog { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Dialog { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.app.Dialog { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.app.Dialog { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class android.app.Dialog { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class android.os.Parcel { void nativeFreeBuffer(long); }
-keepclassmembers class android.app.Dialog { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Dialog { void onContentChanged(); }
-keepclassmembers class android.os.Parcel { void nativeAppendFrom(long,long,int,int); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class android.app.Dialog { void onAttachedToWindow(); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.app.Dialog { void onDetachedFromWindow(); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class android.app.Dialog { void onWindowDismissed(); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class android.app.Service { void onCreate(); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class android.app.Service { android.app.Application getApplication(); }
-keepclassmembers class android.app.Service { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class android.app.Service { void onDestroy(); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class android.app.Service { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Service { void onLowMemory(); }
-keepclassmembers class android.app.Service { void onTrimMemory(int); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.app.Service { void onRebind(android.content.Intent); }
-keepclassmembers class android.app.Service { boolean onUnbind(android.content.Intent); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class android.app.Service { void onTaskRemoved(android.content.Intent); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.lang.AutoCloseable); }
-keepclassmembers class android.app.Service { void stopSelf(); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.app.Service { void stopSelf(int); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class android.app.Dialog { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.app.Dialog { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class android.app.Service { boolean stopSelfResult(int); }
-keepclassmembers class libcore.io.IoUtils { void setBlocking(java.io.FileDescriptor,boolean); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.app.Dialog { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.app.Service { void setForeground(boolean); }
-keepclassmembers class android.app.Dialog { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.app.Service { void startForeground(int,android.app.Notification); }
-keepclassmembers class android.app.Dialog { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.app.Dialog { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.app.Dialog { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Service { void stopForeground(boolean); }
-keepclassmembers class android.app.Dialog { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Dialog { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.app.Dialog { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.app.Service { void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode valueOf(int); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap$KeySet { boolean isEmpty(); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class libcore.io.IoUtils { void <clinit>(); }
-keepclassmembers class java.util.HashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.app.Dialog { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.graphics.RadialGradient { android.graphics.Shader copy(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setAllChildrenVisible(); }
-keepclassmembers class android.app.Dialog { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <init>(); }
-keepclassmembers class android.app.Dialog { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class android.app.Dialog { boolean onSearchRequested(); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class android.app.Dialog { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.app.Dialog { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.app.Dialog { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate2(float,float,float,int,int,int); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setDragView(android.view.View); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class android.app.Dialog { boolean requestWindowFeature(int); }
-keepclassmembers class android.widget.Spinner$SavedState$1 { void <init>(); }
-keepclassmembers class okhttp3.FormBody { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class java.util.logging.Logger$1 { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class okhttp3.FormBody { void <init>(java.util.List,java.util.List,okhttp3.FormBody$1); }
-keepclassmembers class okhttp3.FormBody { void <init>(java.util.List,java.util.List); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(); }
-keepclassmembers class okhttp3.FormBody { long writeOrCountBytes(okio.BufferedSink,boolean); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setFadeOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class android.os.Parcel { void writeSparseBooleanArray(android.util.SparseBooleanArray); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class android.app.Dialog { void cancel(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setPanelState(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class okhttp3.FormBody { long contentLength(); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class okhttp3.FormBody { okhttp3.MediaType contentType(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.Boolean truthValue(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,android.content.Context); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class okhttp3.FormBody { void writeTo(okio.BufferedSink); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.Dialog { boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface$OnCancelListener,android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setScrollableView(android.view.View); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void updateObscuredViewVisibility(); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean smoothSlideTo(float,int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class android.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class android.os.Parcel { float[] createFloatArray(); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$5 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class android.ddm.DdmHandleExit { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleExit { void register(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$ICSMotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class android.ddm.DdmHandleExit { void <clinit>(); }
-keepclassmembers class android.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void parse(org.xml.sax.InputSource); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { java.lang.String toString(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean updateTint(int[]); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void <init>(); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setup(); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { java.util.GregorianCalendar createGregorianCalendar(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void localtime(int,libcore.util.ZoneInfo); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class android.transition.Slide$4 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] getEncoded(); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class android.util.ArrayMap$1 { int colIndexOfValue(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void draw(android.graphics.Canvas); }
-keepclassmembers class android.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.Reader getReader(org.xml.sax.InputSource); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.Certificate$1); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.TBSCertificate access$100(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.os.Parcel { void writeStringList(java.util.List); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] access$300(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$1 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[],okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.InputStream getInputStream(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$1 { void execute(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void adup(char[],int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getOpacity(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aval(char[],int,int); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getWrappedDrawable(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int[] getState(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startScroll(int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aname(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String expandEntities(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isCompatTintEnabled(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isStateful(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void entity(char[],int,int); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int lookupEntity(char[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$9 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.lang.String,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setAlpha(int); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.io.BufferedReader { int fillBuf(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setDither(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void eof(char[],int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean etag_cdata(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag(char[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setState(int[]); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class java.io.BufferedReader { boolean isClosed(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getYear(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor openFileDescriptor(java.lang.String,int); }
-keepclassmembers class java.io.BufferedReader { void checkNotClosed(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag_basic(char[],int,int); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMonth(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMonthDay(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getHour(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restart(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMinute(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getGmtOffset(); }
-keepclassmembers class java.io.BufferedReader { int read(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getWeekDay(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pop(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getYearDay(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getSecond(); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class java.io.BufferedReader { int readChar(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getIsDst(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateDefaultImpl(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restartablyPop(); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void copyFieldsFromCalendar(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void push(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int findTransitionIndex(libcore.util.ZoneInfo,int); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean foreign(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void decl(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String prefixOf(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class java.io.BufferedReader { void chompNewline(); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String[] split(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String trimquotes(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class java.io.BufferedReader { void maybeSwallowLF(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String cleanPublicid(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void gi(char[],int,int); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pcdata(char[],int,int); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pitarget(char[],int,int); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pi(char[],int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stagc(char[],int,int); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stage(char[],int,int); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void cmnt(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void rectify(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int getEntity(); }
-keepclassmembers class android.view.DisplayAdjustments { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean isPopupShowing(); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.widget.AutoCompleteTextView { java.lang.CharSequence convertSelectionToString(java.lang.Object); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void <init>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void clearListSelection(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String makeName(char[],int,int); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void <clinit>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.io.File access$000(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$200(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean access$100(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.io.File); }
-keepclassmembers class android.appwidget.AppWidgetManager { android.appwidget.AppWidgetManager getInstance(android.content.Context); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(android.view.View,int,long); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { com.gu.option.Option access$300(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$400(java.lang.String,java.lang.Object[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.io.File[] access$500(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$600(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.io.File); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.lang.String access$802(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$700(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { int access$900(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void comment(char[],int,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void adjustResourceLightness(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void endDTD(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void startDTD(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void changeDirectory(java.io.File); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onFilterComplete(int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class android.widget.AutoCompleteTextView { void updateDropDownForFilter(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void dismissDropDown(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onAttachedToWindow(); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void run(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { android.os.FileObserver createFileObserver(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { int createFolder(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void showDropDown(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String,boolean,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void debug(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.content.FileProvider { void <clinit>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean isValidFile(java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { int getHttpErrorCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { boolean isAuthError(); }
-keepclassmembers class android.support.v4.content.FileProvider { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment newInstance(net.rdrei.android.dirchooser.DirectoryChooserConfig); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void openNewFolderDialog(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void buildImeCompletions(); }
-keepclassmembers class android.support.v4.content.FileProvider { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.content.FileProvider { android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String); }
-keepclassmembers class android.support.v4.content.FileProvider { java.lang.String[] copyOf(java.lang.String[],int); }
-keepclassmembers class android.support.v4.content.FileProvider { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void refreshButtonState(); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performValidation(); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.ListAdapter access$700(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void returnSelectedFolder(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException notAnArray(java.lang.Object); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException incompatibleType(java.lang.Object); }
-keepclassmembers class android.support.v4.content.FileProvider { android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.content.FileProvider { int modeToMode(java.lang.String); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.reflect.Array { java.lang.RuntimeException badArray(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.support.v4.content.FileProvider { android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class java.lang.Throwable { int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getInternalStackTrace(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask$ImageCallback { void <init>(); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { float getInterpolation(float); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void <init>(au.com.wallaceit.reddinator.ui.SimpleTabsWidget); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onDetach(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(android.graphics.drawable.Ripple$1); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Appendable,java.lang.String,java.lang.StackTraceElement[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageSelected(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onResume(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void setDirectoryChooserListener(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class android.support.v4.content.FileProvider { void attachInfo(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.FileProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class android.support.v4.content.FileProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class android.support.v4.content.FileProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class android.support.v4.content.FileProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void <init>(); }
-keepclassmembers class android.support.v4.content.FileProvider { boolean onCreate(); }
-keepclassmembers class android.preference.PreferenceActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class android.support.v4.content.FileProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.util.Xml$XmlSerializerFactory { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$2 { void run(); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class android.support.v4.content.FileProvider { int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void register(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createMultiArray(java.lang.Class,int[]); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class android.view.MenuInflater$MenuState { void <init>(android.view.MenuInflater,android.view.Menu); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class android.view.MenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { int hashCode(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class java.lang.reflect.Array { void set(java.lang.Object,int,java.lang.Object); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class libcore.reflect.AnnotationFactory { libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[],org.apache.harmony.security.x509.AccessDescription$1); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String access$100(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class java.lang.reflect.Array { void setByte(java.lang.Object,int,byte); }
-keepclassmembers class java.lang.reflect.Array { void setBoolean(java.lang.Object,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { org.apache.harmony.security.x509.GeneralName access$200(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.view.animation.Animation$1 { void <init>(android.view.animation.Animation); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean hasHeaders(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.os.FileObserver$ObserverThread { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.preference.PreferenceActivity { java.util.List getHeaders(); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean isMultiPane(); }
-keepclassmembers class android.os.FileObserver$ObserverThread { int startWatching(java.lang.String,int,android.os.FileObserver); }
-keepclassmembers class java.lang.reflect.Array { void setChar(java.lang.Object,int,char); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onIsMultiPane(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onIsHidingHeaders(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <init>(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <clinit>(); }
-keepclassmembers class android.os.FileObserver$ObserverThread { void stopWatching(int); }
-keepclassmembers class android.view.MenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header onGetInitialHeader(); }
-keepclassmembers class java.lang.reflect.Array { void setDouble(java.lang.Object,int,double); }
-keepclassmembers class android.preference.PreferenceActivity { void onBuildHeaders(java.util.List); }
-keepclassmembers class android.view.MenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header onGetNewHeader(); }
-keepclassmembers class java.lang.reflect.Array { void setFloat(java.lang.Object,int,float); }
-keepclassmembers class android.preference.PreferenceActivity { void loadHeadersFromResource(int,java.util.List); }
-keepclassmembers class android.preference.PreferenceActivity { void invalidateHeaders(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { void setInt(java.lang.Object,int,int); }
-keepclassmembers class android.os.FileObserver$ObserverThread { int init(); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class android.os.FileObserver$ObserverThread { int startWatching(int,java.lang.String,int); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.Object); }
-keepclassmembers class android.os.FileObserver$ObserverThread { void stopWatching(int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object get(); }
-keepclassmembers class java.lang.reflect.Array { void setLong(java.lang.Object,int,long); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void set(java.lang.Object); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { boolean compareAndSet(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class java.lang.reflect.Array { void setShort(java.lang.Object,int,short); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object getAndSet(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <clinit>(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class java.io.PrintWriter { void println(int); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.MenuItem addItem(); }
-keepclassmembers class android.view.MenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class android.view.MenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class java.io.PrintWriter { void setError(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.ActionProvider access$000(android.view.MenuInflater$MenuState); }
-keepclassmembers class java.io.PrintWriter { void write(char[]); }
-keepclassmembers class okio.DeflaterSink { void <init>(okio.BufferedSink,java.util.zip.Deflater); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class okio.DeflaterSink { void <init>(okio.Sink,java.util.zip.Deflater); }
-keepclassmembers class java.io.PrintWriter { void doWrite(char[],int,int); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class okio.DeflaterSink { void deflate(boolean); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[],java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int[] getOid(); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String getName(); }
-keepclassmembers class okio.DeflaterSink { void close(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.Object getGroup(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$1 { void <init>(android.content.Context); }
-keepclassmembers class okio.DeflaterSink { void finishDeflate(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class okio.DeflaterSink { void flush(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toOIDString(); }
-keepclassmembers class okio.DeflaterSink { okio.Timeout timeout(); }
-keepclassmembers class java.io.OutputStreamWriter { void close(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class okio.DeflaterSink { void write(okio.Buffer,long); }
-keepclassmembers class java.io.OutputStreamWriter { void flush(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashCode(); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class java.io.OutputStreamWriter { void flushBytes(boolean); }
-keepclassmembers class java.io.OutputStreamWriter { void convert(java.nio.CharBuffer); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void validateOid(int[]); }
-keepclassmembers class java.io.OutputStreamWriter { void drainEncoder(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean isValidFragment(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashIntArray(int[]); }
-keepclassmembers class java.io.OutputStreamWriter { void checkStatus(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceActivity { void setListFooter(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class java.io.OutputStreamWriter { void write(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void <init>(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void connected(okhttp3.Route); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.preference.PreferenceActivity { void onContentChanged(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void failed(okhttp3.Route); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { boolean shouldPostpone(okhttp3.Route); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class android.preference.PreferenceActivity { void onHeaderClick(android.preference.PreferenceActivity$Header,int); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionState { int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class android.preference.PreferenceActivity { android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class java.io.File { java.lang.String fixSlashes(java.lang.String); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.preference.PreferenceActivity { void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int); }
-keepclassmembers class android.preference.PreferenceActivity { void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.io.File { java.lang.String join(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.preference.PreferenceActivity { void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener$1 { void onStream(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class android.app.ActivityTransitionState { void onResume(); }
-keepclassmembers class android.app.ActivityTransitionState { void clear(); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class android.preference.PreferenceActivity { void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View$OnClickListener); }
-keepclassmembers class android.app.ActivityTransitionState { void restoreExitedViews(); }
-keepclassmembers class android.preference.PreferenceActivity { void setSelectedHeader(android.preference.PreferenceActivity$Header); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionState { boolean startExitBackTransition(android.app.Activity); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder builder(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class android.preference.PreferenceActivity { void showBreadCrumbs(android.preference.PreferenceActivity$Header); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeaderInner(java.lang.String,android.os.Bundle); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class java.io.File { boolean canRead(); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeader(java.lang.String,android.os.Bundle); }
-keepclassmembers class java.io.File { boolean canWrite(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File,boolean,java.io.File,dalvik.system.DexFile); }
-keepclassmembers class java.io.File { boolean doAccess(int); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeader(android.preference.PreferenceActivity$Header); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { void <init>(de.cketti.library.changelog.ChangeLog); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(de.cketti.library.changelog.ChangeLog$ReleaseItem,de.cketti.library.changelog.ChangeLog$ReleaseItem); }
-keepclassmembers class java.io.File { void deleteOnExit(); }
-keepclassmembers class android.os.Handler { boolean hasMessages(int); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class java.util.concurrent.FutureTask$WaitNode { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String getCanonicalPath(); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class java.io.File { java.lang.String canonicalizePath(java.lang.String); }
-keepclassmembers class java.io.File { java.io.File getCanonicalFile(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { boolean next(); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class dalvik.system.DexPathList$Element { dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int fieldId(); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class java.io.File { java.io.File getParentFile(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int start(); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int limit(); }
-keepclassmembers class okhttp3.internal.http.StatusLine { void <init>(okhttp3.Protocol,int,java.lang.String); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class android.preference.PreferenceActivity { void startPreferenceFragment(android.app.Fragment,boolean); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class java.io.File { boolean isAbsolute(); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class android.preference.PreferenceActivity { void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class okhttp3.internal.http.StatusLine { okhttp3.internal.http.StatusLine parse(java.lang.String); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean isEmpty(); }
-keepclassmembers class android.preference.PreferenceActivity { void finishPreferencePanel(android.app.Fragment,int,android.content.Intent); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class android.widget.AbsoluteLayout { void onMeasure(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceManager getPreferenceManager(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCachedBitmap(android.graphics.Rect); }
-keepclassmembers class android.preference.PreferenceActivity { void setPreferenceScreen(android.preference.PreferenceScreen); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createCachedBitmapIfNeeded(android.graphics.Rect); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.preference.PreferenceActivity { void addPreferencesFromIntent(android.content.Intent); }
-keepclassmembers class android.preference.PreferenceActivity { void addPreferencesFromResource(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.widget.AbsoluteLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class android.widget.ProgressBar$SavedState$1 { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.io.File { java.lang.String[] listImpl(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void <init>(); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,int,int); }
-keepclassmembers class android.widget.AbsoluteLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void entryEvicted(java.lang.String,java.lang.Long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$3 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$2 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.util.ArrayMap { android.support.v4.util.MapCollections getCollection(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$2 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString { void <clinit>(); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View,int); }
-keepclassmembers class java.io.File { java.io.File[] filenamesToFiles(java.lang.String[]); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.support.v4.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.widget.PopupMenu { android.view.Menu getMenu(); }
-keepclassmembers class java.io.File { boolean mkdir(); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class java.io.File { void mkdirErrno(); }
-keepclassmembers class android.widget.PopupMenu { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.widget.PopupMenu { void show(); }
-keepclassmembers class okio.Okio$3 { void <init>(java.net.Socket); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$5 { void <init>(int); }
-keepclassmembers class okio.Okio$3 { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class android.widget.PopupMenu { void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener); }
-keepclassmembers class java.io.File { boolean mkdirs(boolean); }
-keepclassmembers class java.io.File { boolean mkdirs(); }
-keepclassmembers class android.widget.PopupMenu { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class okio.Okio$3 { void timedOut(); }
-keepclassmembers class android.widget.PopupMenu { void setOnDismissListener(android.widget.PopupMenu$OnDismissListener); }
-keepclassmembers class java.io.File { boolean createNewFile(); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.io.File { java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class okhttp3.internal.Util$1 { void <init>(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.Util$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void <init>(); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] split(java.util.regex.Pattern,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class java.io.File { java.net.URL toURL(); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.io.File { java.lang.String getAbsoluteName(); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoaderImpl(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class android.widget.ListView { void smoothScrollToPosition(int); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Map); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[],boolean); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { boolean isEmpty(); }
-keepclassmembers class java.text.StringCharacterIterator { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class java.lang.Class { void getDeclaredConstructors(boolean,java.util.List); }
-keepclassmembers class java.util.TreeMap { java.lang.Object putInternal(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.text.StringCharacterIterator { int getEndIndex(); }
-keepclassmembers class android.text.style.QuoteSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.text.StringCharacterIterator { char setIndex(int); }
-keepclassmembers class java.text.StringCharacterIterator { int getBeginIndex(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.webkit.WebView$PrivateAccess { void <init>(android.webkit.WebView); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByObject(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$2 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,long); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByEntry(java.util.Map$Entry); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void addIdentifier(java.util.TreeMap,int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$2 { void execute(); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { boolean checkTag(int); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.preference.PreferenceFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceFragment { void <init>(); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.lang.Class { void getDeclaredMethodsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class java.util.TreeMap { void replaceInParent(java.util.TreeMap$Node,java.util.TreeMap$Node); }
-keepclassmembers class android.preference.PreferenceFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { void rebalance(java.util.TreeMap$Node,boolean); }
-keepclassmembers class android.preference.PreferenceFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceFragment { void onStart(); }
-keepclassmembers class android.preference.PreferenceFragment { void onDestroyView(); }
-keepclassmembers class android.preference.PreferenceFragment { void onStop(); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.preference.PreferenceFragment { void onDestroy(); }
-keepclassmembers class android.preference.PreferenceFragment { void setPreferenceScreen(android.preference.PreferenceScreen); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceFragment { void addPreferencesFromResource(int); }
-keepclassmembers class android.preference.PreferenceFragment { android.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.preference.PreferenceFragment { boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference); }
-keepclassmembers class com.android.internal.app.AlertController$6 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.preference.PreferenceFragment { android.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class android.preference.PreferenceFragment { void postBindPreferences(); }
-keepclassmembers class android.preference.PreferenceFragment { void requirePreferenceManager(); }
-keepclassmembers class android.preference.PreferenceFragment { void bindPreferences(); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class java.io.InputStream { void close(); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class android.preference.PreferenceFragment { void onBindPreferences(); }
-keepclassmembers class android.preference.PreferenceFragment { void onUnbindPreferences(); }
-keepclassmembers class android.preference.PreferenceFragment { android.widget.ListView getListView(); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$Node); }
-keepclassmembers class java.lang.Class { void getDeclaredFieldsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.preference.PreferenceFragment { void ensureList(); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$Node); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.ArtField findByName(java.lang.String,java.lang.reflect.ArtField[]); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class android.widget.ScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.ScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <init>(); }
-keepclassmembers class android.widget.ScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int translateFieldId(java.text.FieldPosition); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void register(); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class android.widget.ScrollView { void onMeasure(int,int); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.util.WeakHashMap initialValue(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(libcore.icu.LocaleData); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.widget.ScrollView { boolean inChild(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$2 { void onClick(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.lang.Object initialValue(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigDecimal(java.math.BigDecimal,java.text.FieldPosition); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class android.widget.ScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.ScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigInteger(java.math.BigInteger,java.text.FieldPosition); }
-keepclassmembers class okhttp3.Dns { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.widget.ScrollView { void recycleVelocityTracker(); }
-keepclassmembers class java.lang.Class { boolean isAnnotation(); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(double,java.text.FieldPosition); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void updateFieldPosition(java.text.FieldPosition,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class android.widget.ScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTargets(java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTarget(java.lang.Object,android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class okhttp3.OkHttpClient { void <init>(okhttp3.OkHttpClient$Builder); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class libcore.io.Posix { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void beginDelayedTransition(android.view.ViewGroup,java.lang.Object); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void bfsAddViewChildren(java.util.List,android.view.View); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class android.widget.ScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class libcore.io.Posix { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.HugeEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class libcore.io.Posix { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void captureTransitioningViews(java.util.ArrayList,android.view.View); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class okhttp3.OkHttpClient { void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1); }
-keepclassmembers class java.lang.Class { java.lang.Object newInstance(); }
-keepclassmembers class libcore.io.Posix { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List access$000(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object cloneTransition(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class java.util.HugeEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean containedBeforeIndex(java.util.List,android.view.View,int); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List access$100(); }
-keepclassmembers class libcore.io.Posix { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.X509TrustManager systemDefaultTrustManager(); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void findNamedViews(java.util.Map,android.view.View); }
-keepclassmembers class java.util.HugeEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class libcore.io.Posix { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void getBoundsOnScreen(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class libcore.io.Posix { void mkdir(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator authenticator(); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class java.net.Socks4Message { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class libcore.io.Posix { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class java.net.Socks4Message { int getCommandOrResult(); }
-keepclassmembers class okhttp3.OkHttpClient { int connectTimeoutMillis(); }
-keepclassmembers class java.net.Socks4Message { void setCommandOrResult(int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.net.Socks4Message { int getPort(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.ConnectionPool connectionPool(); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dispatcher dispatcher(); }
-keepclassmembers class java.net.Socks4Message { void setPort(int); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List connectionSpecs(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CookieJar cookieJar(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.Socks4Message { int getIP(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followRedirects(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followSslRedirects(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class java.net.Socks4Message { void setIP(byte[]); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.internal.cache.InternalCache internalCache(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dns dns(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List interceptors(); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Call newCall(okhttp3.Request); }
-keepclassmembers class java.net.Socks4Message { void setUserId(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List networkInterceptors(); }
-keepclassmembers class java.lang.Class { int getDexClassDefIndex(); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List protocols(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class okhttp3.OkHttpClient { int readTimeoutMillis(); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean retryOnConnectionFailure(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.util.ArrayList prepareSetNameOverridesOptimized(java.util.ArrayList); }
-keepclassmembers class okhttp3.OkHttpClient { int writeTimeoutMillis(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.net.Socks4Message { java.lang.String getErrorString(int); }
-keepclassmembers class java.net.Socks4Message { int getLength(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(java.math.RoundingMode,double); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.Class { int getDexAnnotationDirectoryOffset(); }
-keepclassmembers class java.net.Socks4Message { byte[] getBytes(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(long,boolean,java.lang.String); }
-keepclassmembers class libcore.io.Posix { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class java.net.Socks4Message { void setVersionNumber(int); }
-keepclassmembers class android.view.animation.AlphaAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class java.net.Socks4Message { void setString(int,int,java.lang.String); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(float,float); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(long,double,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPatternImpl(long,boolean,java.lang.String); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean hasAlpha(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,long,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDigitList(long,java.lang.String,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList); }
-keepclassmembers class libcore.io.Posix { void remove(java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long open(java.lang.String,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(long,java.lang.String,java.text.ParsePosition,boolean); }
-keepclassmembers class android.widget.ScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class libcore.io.Posix { int recvfromBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(long,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getAttribute(long,int); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.widget.ListView { boolean canAnimate(); }
-keepclassmembers class android.widget.ScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(long,int,double); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setEpicenter(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setAttribute(long,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setEpicenter(java.lang.Object,android.view.View); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class libcore.io.Posix { int sendtoBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.widget.ScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setNameOverridesOptimized(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.content.res.Configuration { boolean isLayoutSizeAtLeast(int); }
-keepclassmembers class libcore.io.Posix { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class libcore.io.Posix { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class libcore.io.Posix { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class libcore.io.Posix { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setNameOverridesUnoptimized(android.view.View,java.util.ArrayList,java.util.Map); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object wrapTransitionInSet(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v4.os.ParcelableCompat$CompatCreator { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String canonicalizePath(java.lang.String,boolean); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.widget.ScrollView { int getScrollRange(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.MimeUtils { java.io.InputStream getContentTypesPropertiesStream(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { void <init>(java.util.List); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { boolean access$000(okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider); }
-keepclassmembers class okhttp3.Response { void <init>(okhttp3.Response$Builder); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { java.lang.String access$100(okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { void <init>(okhttp3.Response$Builder,okhttp3.Response$1); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.net.MimeUtils { void applyOverrides(); }
-keepclassmembers class okhttp3.Response { okhttp3.Request access$1300(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { int access$1500(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Protocol access$1400(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { java.lang.String access$1600(okhttp3.Response); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { okhttp3.Headers access$1800(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.ResponseBody access$1900(okhttp3.Response); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { okhttp3.Handshake access$1700(okhttp3.Response); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2100(okhttp3.Response); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2000(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { long access$2300(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2200(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.ResponseBody body(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String authoritySafePath(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Response { long access$2400(okhttp3.Response); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$WebInterface { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.content.Context); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String getSchemePrefix(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.net.url.UrlUtils { boolean isValidSchemeChar(int,char); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.net.url.UrlUtils { int findFirstOf(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class okhttp3.Response { int code(); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class java.io.BufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.BufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class okhttp3.Response { okhttp3.Headers headers(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { java.lang.String message(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { okhttp3.Response$Builder newBuilder(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class android.widget.ScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.widget.ScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isTouchSelecting(boolean,android.text.Spannable); }
-keepclassmembers class android.widget.ScrollView { void doScrollY(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class okhttp3.Response { okhttp3.Request request(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.Response { java.lang.String toString(); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class android.widget.ScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void <init>(); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.graphics.pdf.PdfDocument { android.graphics.pdf.PdfDocument$Page startPage(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Header { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <init>(okhttp3.internal.framed.FramedStream,long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <clinit>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <init>(okhttp3.internal.framed.FramedStream,long,okhttp3.internal.framed.FramedStream$1); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void finishPage(android.graphics.pdf.PdfDocument$Page); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$100(okhttp3.internal.framed.FramedStream$FramedDataSource); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$102(okhttp3.internal.framed.FramedStream$FramedDataSource,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$300(okhttp3.internal.framed.FramedStream$FramedDataSource); }
-keepclassmembers class android.widget.ScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void writeTo(java.io.OutputStream); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(okio.ByteString,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void checkNotClosed(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void waitUntilReadable(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(okio.ByteString,okio.ByteString); }
-keepclassmembers class okhttp3.internal.framed.Header { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void close(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void dispose(); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class android.widget.ScrollView { void computeScroll(); }
-keepclassmembers class okhttp3.internal.framed.Header { int hashCode(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void close(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void throwIfClosed(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <init>(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler,org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class android.support.v4.content.IntentCompatHoneycomb { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void throwIfCurrentPageNotFinished(); }
-keepclassmembers class okhttp3.internal.framed.Header { java.lang.String toString(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { long nativeCreateDocument(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { long read(okio.Buffer,long); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeFinishPage(long); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeWriteTo(long,java.io.OutputStream,byte[]); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeClose(long); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.text.HtmlToSpannedConverter { android.text.Spanned convert(); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { long nativeStartPage(long,int,int,int,int,int,int); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.ScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class java.math.NativeBN { void BN_mul_word(long,int); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleStartTag(java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class android.widget.ScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void receive(okio.BufferedSource,long); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.ScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class android.media.session.MediaSession$Token$1 { void <init>(); }
-keepclassmembers class android.widget.ScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int next(int,int,boolean); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class okhttp3.ResponseBody { void <init>(); }
-keepclassmembers class android.widget.ScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class okhttp3.ResponseBody { java.nio.charset.Charset charset(); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class android.widget.ScrollView { void requestLayout(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleEndTag(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void onDetachedFromWindow(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { okio.Timeout timeout(); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int measureChildView(android.view.View,int,int,int); }
-keepclassmembers class android.widget.ScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class okhttp3.ResponseBody { byte[] bytes(); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class okhttp3.ResponseBody { void close(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int positionChild(android.view.View,int,int,int,boolean); }
-keepclassmembers class okhttp3.ResponseBody { java.lang.String string(); }
-keepclassmembers class android.widget.ScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.EdgeEffect { void onAbsorb(int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class android.widget.ScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.widget.EdgeEffect { boolean draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void setVisibility(int); }
-keepclassmembers class android.widget.ScrollView { void fling(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleP(android.text.SpannableStringBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleBr(android.text.SpannableStringBuilder); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void start(android.text.SpannableStringBuilder,java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter { java.lang.Object getLast(android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object); }
-keepclassmembers class android.widget.EdgeEffect { void update(); }
-keepclassmembers class android.widget.ScrollView { void scrollTo(int,int); }
-keepclassmembers class android.widget.ScrollView { void endDrag(); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startImg(android.text.SpannableStringBuilder,org.xml.sax.Attributes,android.text.Html$ImageGetter); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.widget.ScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class android.widget.ScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.ScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.content.res.Configuration { int compareTo(android.content.res.Configuration); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startFont(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endFont(android.text.SpannableStringBuilder); }
-keepclassmembers class android.widget.ScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.ScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startA(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endA(android.text.SpannableStringBuilder); }
-keepclassmembers class android.content.res.Configuration { boolean equals(android.content.res.Configuration); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endHeader(android.text.SpannableStringBuilder); }
-keepclassmembers class android.widget.ScrollView { int clamp(int,int,int); }
-keepclassmembers class android.widget.ScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.widget.ScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option none(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class com.gu.option.Option { void <init>(); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option option(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startDocument(); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option some(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endDocument(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory$1 { void <init>(au.com.wallaceit.reddinator.service.ListRemoteViewsFactory,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.media.session.ISessionControllerCallback$Stub { void <init>(); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endPrefixMapping(java.lang.String); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory$1 { void run(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void characters(char[],int,int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Bitmap access$100(android.support.v4.print.PrintHelperKitkat,android.graphics.Bitmap,int); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Matrix access$200(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Bitmap access$400(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class okhttp3.Headers$Builder { void <init>(); }
-keepclassmembers class okhttp3.Headers$Builder { java.util.List access$000(okhttp3.Headers$Builder); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class android.text.BoringLayout { int getEllipsisCount(int); }
-keepclassmembers class okhttp3.Headers$Builder { void checkNameAndValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class java.lang.Float { double doubleValue(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { boolean isClipPath(); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.BoringLayout { void <clinit>(); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Void[]); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class java.lang.StringBuffer { char charAt(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class java.lang.Float { long longValue(); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { void run(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers build(); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class java.lang.Float { java.lang.String toHexString(float); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder removeAll(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder set(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { void setPagingEnabled(boolean); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class android.support.v4.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class android.net.Uri$PathSegments { void <init>(java.lang.String[],int); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class android.net.Uri$PathSegments { int size(); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.Object get(int); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.String get(int); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class android.net.Uri$PathSegments { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void setUnderlineText(boolean); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class com.android.internal.widget.IRemoteViewsFactory$Stub { void <init>(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.widget.ListView { void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.support.v4.content.ContextCompatKitKat { java.io.File[] getExternalCacheDirs(android.content.Context); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class android.support.v4.content.ContextCompatKitKat { java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.widget.ListView { void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class android.widget.ListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class android.graphics.Paint { void setTextAlign(android.graphics.Paint$Align); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.graphics.Paint { void setTextLocale(java.util.Locale); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class android.graphics.Paint { float ascent(); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { void <init>(); }
-keepclassmembers class android.graphics.Paint { float native_measureText(char[],int,int,int); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class java.util.Date { int compareTo(java.util.Date); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(java.lang.String[]); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class java.util.Date { int getYear(); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void setAllCaps(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void onSetTextAppearance(android.content.Context,int); }
-keepclassmembers class android.graphics.Paint { float native_measureText(java.lang.String,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class android.widget.ListView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.widget.ListView { void drawDivider(android.graphics.Canvas,android.graphics.Rect,int); }
-keepclassmembers class android.transition.ChangeTransform$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] access$000(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.MemoryMappedFile access$100(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { int[] access$200(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class android.graphics.RectF { void setEmpty(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$1 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$1 { void execute(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.RectF); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class android.support.v4.app.FragmentTransition$4 { void <init>(android.view.ViewGroup,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class android.graphics.RectF { void union(float,float,float,float); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.RectF { void union(android.graphics.RectF); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void setAlarm(android.content.Context); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void <init>(android.content.Context,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { android.content.Context access$000(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { android.app.Dialog show(android.content.Context,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class java.util.Date { void appendTwoDigits(java.lang.StringBuilder,int); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.Paint { void getTextBounds(java.lang.String,int,int,android.graphics.Rect); }
-keepclassmembers class java.util.Date { int compareTo(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.Runnable getTask(); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$1 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.graphics.Paint { long native_init(); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class android.graphics.Paint { long native_initWithPaint(long); }
-keepclassmembers class android.graphics.Paint { void native_set(long,long); }
-keepclassmembers class android.graphics.Paint { int native_getStyle(long); }
-keepclassmembers class android.graphics.Paint { void native_setStyle(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeCap(long,int); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeJoin(long,int); }
-keepclassmembers class android.graphics.Paint { long native_setShader(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setXfermode(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setPathEffect(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setTypeface(long,long); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider access$102(java.security.MessageDigest,java.security.Provider); }
-keepclassmembers class android.graphics.Paint { void native_setTextAlign(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setTextLocale(long,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.security.MessageDigest { void <clinit>(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void nativeGetStringBounds(long,long,java.lang.String,int,int,int,android.graphics.Rect); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(); }
-keepclassmembers class android.graphics.Paint { void native_setShadowLayer(long,float,float,float,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(int); }
-keepclassmembers class android.graphics.Paint { float native_getLetterSpacing(long); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { void native_setLetterSpacing(long,float); }
-keepclassmembers class android.graphics.Paint { void native_setFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void allocArrays(int); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void <init>(android.widget.ImageView); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { boolean hasOverlappingRendering(); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$4 { void <init>(int); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void clear(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class android.util.SparseArray { void delete(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1$1 { void <init>(au.com.wallaceit.reddinator.core.ThemeHelper$1); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1$1 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class android.util.SparseArray { void remove(int); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class java.net.IDN { java.lang.String toASCII(java.lang.String,int); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,long); }
-keepclassmembers class java.net.IDN { java.lang.String toASCII(java.lang.String); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity,java.lang.String); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <clinit>(); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <init>(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$2 { void run(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { java.lang.Object getToken(); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass1(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass2(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer clear(); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer flip(); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfNull(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.nio.Buffer { void positionImpl(int); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder { void <init>(); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean isEmpty(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void run(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void lock(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <init>(java.net.URL); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void connect(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarFile(); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.util.jar.JarFile openJarFile(); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.Objects { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompat { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.content.res.AssetFileDescriptor$1 { void <init>(); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarEntry(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[]); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void beforeExecute(java.lang.Thread,java.lang.Runnable); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class android.view.View$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int size(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean access$002(libcore.net.url.JarURLConnectionImpl,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.InfoAccessSyntax$1); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <clinit>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { boolean canConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <clinit>(); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.Spinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canApplyTheme(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(java.lang.String,java.lang.String,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.Spinner$SavedState { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canConstantState(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(java.lang.String,java.lang.String,boolean,boolean,net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.util.TreeMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean allowNewDirectoryNameModification(); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean allowReadOnlyDirectory(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$2 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithmName(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithm(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { byte[] getParameters(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int combineMeasuredStates(int,int); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { int hashCode(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String initialDirectory(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String newDirectoryName(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <clinit>(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String toString(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.transition.ArcMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumVerticalAngle(float); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumHorizontalAngle(float); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayerType(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.transition.ArcMotion { float toTangent(float); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1 { void <init>(); }
-keepclassmembers class android.transition.ArcMotion { void setMaximumAngle(float); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void <init>(java.util.ArrayDeque); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getTranslationY(android.view.View); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void remove(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { boolean isCompatVectorFromResourcesEnabled(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { boolean hasNext(); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void <init>(java.util.ArrayDeque,java.util.ArrayDeque$1); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.transition.ArcMotion { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.content.ComponentName getGlobalSearchActivity(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean); }
-keepclassmembers class java.net.Inet6Address { void <init>(byte[],java.lang.String,int); }
-keepclassmembers class java.net.Inet6Address { java.net.Inet6Address getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class android.app.Activity$1 { void <init>(android.app.Activity); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getOrder(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void finishAffinity(android.app.Activity); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimationForView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void start(); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean isDone(); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class java.net.Inet6Address { java.lang.String toString(); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addConditionWaiter(); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <clinit>(); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationY(android.view.View,float); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { java.lang.String decode(byte[],char[],int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void unlinkCancelledWaiters(); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { okhttp3.internal.platform.Jdk9Platform buildIfSupported(); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { int checkInterruptWhileWaiting(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,java.lang.String); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void await(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void reportInterruptAfterWait(int); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$5 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean); }
-keepclassmembers class java.text.DecimalFormat { void initNative(java.lang.String); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(int,byte[],int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { void encode(byte[],int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canApplyTheme(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { long awaitNanos(long); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int getChangingConfigurations(); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { long countBytes(java.lang.String,boolean); }
-keepclassmembers class android.util.Log { int println(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canConstantState(); }
-keepclassmembers class java.text.DecimalFormat { void checkBufferAndFieldPosition(java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte[] protectedArray(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { byte[] encode(java.lang.String); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.nio.ByteArrayBuffer { int protectedArrayOffset(); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setVisibility(int); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.util.ArrayList configureEnteringExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object configureSharedElementsOptimized(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo { void <init>(); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class java.lang.Byte { double doubleValue(); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Byte { int intValue(); }
-keepclassmembers class java.lang.Byte { long longValue(); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class java.lang.Byte { java.lang.String toHexString(byte,boolean); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState$1 { void <init>(); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object configureSharedElementsUnoptimized(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.HardwareRenderer { boolean isAvailable(); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class java.security.SecureRandomSpi { void <init>(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void configureTransitionsOptimized(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class java.text.DecimalFormat { void setRoundingMode(java.math.RoundingMode); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$7 { void <init>(int); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class android.view.HardwareRenderer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class java.lang.reflect.Method { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void configureTransitionsUnoptimized(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.ArtMethod getArtMethod(); }
-keepclassmembers class java.lang.reflect.Method { int getModifiers(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int); }
-keepclassmembers class android.view.inputmethod.CompletionInfo$1 { void <init>(); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypesNative(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.String findKeyForValue(android.support.v4.util.ArrayMap,java.lang.String); }
-keepclassmembers class java.lang.reflect.Method { boolean equalNameAndParameters(java.lang.reflect.Method); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class java.lang.reflect.Method { int hashCode(); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getReturnType(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.lang.reflect.Method { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object getDefaultValue(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[],boolean); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void replaceHide(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void scheduleTargetChange(android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void setOutEpicenter(java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int applyAlpha(int,float); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void stopSelecting(android.view.View,android.text.Spannable); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void setViewVisibility(java.util.ArrayList,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { java.lang.Object verifyToken(java.lang.Object); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object getDefaultValue(java.lang.reflect.Method); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getEnclosingClass(java.lang.Class); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class dalvik.system.DalvikLogging { java.lang.String loggerNameToTag(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class); }
-keepclassmembers class java.lang.System { void setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class java.lang.System { java.util.Properties createSystemProperties(); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getInnerClassName(java.lang.Class); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getInnerClassFlags(java.lang.Class,int); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnonymousClass(java.lang.Class); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class java.lang.System { void checkPropertyName(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void addCode(int,int,byte); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int,int); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void buildTree(); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class android.graphics.SweepGradient { android.graphics.Shader copy(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class okhttp3.internal.framed.Huffman { byte[] decode(byte[]); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void <init>(okio.BufferedSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.Huffman { okhttp3.internal.framed.Huffman get(); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate2(float,float,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void writeNameValueBlockToBuffer(java.util.List); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$800(int,float); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void connectionPreface(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void close(); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void flush(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void goAway(int,okhttp3.internal.framed.ErrorCode,byte[]); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void data(boolean,int,okio.Buffer,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void <clinit>(); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$1 { void onClick(android.view.View); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void ping(boolean,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { int maxDataLength(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void buildTunneledConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void <init>(okhttp3.Route); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class java.util.ServiceLoader { void internalLoad(); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectSocket(int,int); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.internal.connection.StreamAllocation access$000(okhttp3.internal.http.Http2xStream); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.util.List http2HeadersList(okhttp3.Request); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void sendDataFrame(int,int,okio.Buffer,int); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader); }
-keepclassmembers class java.util.ServiceLoader { java.lang.ClassLoader access$000(java.util.ServiceLoader); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Class access$100(java.util.ServiceLoader); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class java.net.SocketException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void settings(okhttp3.internal.framed.Settings); }
-keepclassmembers class java.util.ServiceLoader { java.util.Set access$200(java.util.ServiceLoader); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.lang.String joinOnNull(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void <init>(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readHttp2HeadersList(java.util.List); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { void <clinit>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class okio.ForwardingSource { void <init>(okio.Source); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int addAndGet(int); }
-keepclassmembers class okio.ForwardingSource { void close(); }
-keepclassmembers class okio.ForwardingSource { okio.Timeout timeout(); }
-keepclassmembers class okio.ForwardingSource { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readSpdy3HeadersList(java.util.List); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void synStream(boolean,boolean,int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class android.ddm.DdmRegister { void registerHandlers(); }
-keepclassmembers class okhttp3.CertificatePinner { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void windowUpdate(int,long); }
-keepclassmembers class okhttp3.CertificatePinner { void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.CertificatePinner { void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl { void <init>(); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha1(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.CertificatePinner { java.lang.String pin(java.security.cert.Certificate); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onCancelChooser(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.util.List spdy3HeadersList(okhttp3.Request); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha256(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.CertificatePinner { void check(java.lang.String,java.util.List); }
-keepclassmembers class com.android.internal.app.AlertController$2 { void <init>(com.android.internal.app.AlertController,android.view.View); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnelRequest(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onSelectDirectory(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class okhttp3.CertificatePinner { java.util.List findMatchingPins(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { java.lang.String access$100(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class okhttp3.CertificatePinner { okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connect(int,int,int,java.util.List,boolean); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void finishRequest(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { boolean access$900(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class java.util.jar.Manifest { void <init>(byte[],boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void <init>(au.com.wallaceit.reddinator.core.ThemeManager,org.json.JSONObject); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readResponseHeaders(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { au.com.wallaceit.reddinator.ui.AccountFeedFragment init(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void loadComments(java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class java.util.jar.Manifest { void read(byte[]); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isHealthy(boolean); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Manifest$Chunk getChunk(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { void removeChunks(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void load(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Handshake handshake(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void loadValues(); }
-keepclassmembers class javax.net.SocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class java.util.jar.Manifest { int getMainAttributesEnd(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle); }
-keepclassmembers class javax.net.SocketFactory { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onDeleted(android.content.Context,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { org.json.JSONObject cloneJsonValues(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onSettings(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onDisabled(android.content.Context); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isMultiplexed(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onEnabled(android.content.Context); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onStream(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.util.HashMap getIntColors(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Route route(); }
-keepclassmembers class java.util.jar.Manifest { void <clinit>(); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.lang.String toString(); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.net.Socket socket(); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.lang.String getValue(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { java.lang.String translate(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.util.HashMap getValues(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void translate(java.lang.CharSequence,java.io.Writer); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { org.json.JSONObject getTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.lang.String getValuesString(boolean); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { java.lang.String hex(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void setName(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onDestroy(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onMessageSent(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void reload(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void updateTheme(); }
-keepclassmembers class android.transition.Slide$3 { void <init>(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2); }
-keepclassmembers class okhttp3.internal.Version { java.lang.String userAgent(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.app.BackStackRecord$TransitionState { void <init>(android.app.BackStackRecord); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class java.util.TreeMap$Bound$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void forceUniformWidth(int,int); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { int resolveMinimumHeight(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[],org.apache.harmony.security.x509.EDIPartyName$1); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { boolean tryOnMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$200(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$100(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageSelected(int); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(); }
-keepclassmembers class android.content.Context { android.content.Context createDeviceProtectedStorageContext(); }
-keepclassmembers class android.content.Context { java.io.File getDataDir(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class android.content.Context { boolean isDeviceProtectedStorage(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { int getItemId(); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void <init>(okio.BufferedSource,boolean); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readGoAway(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(java.lang.StringBuilder); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readHeaders(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readPing(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$4 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readRstStream(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { void <init>(java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSettings(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSynReply(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void onMeasure(int,int); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSynStream(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class android.graphics.Rect { int centerY(); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readWindowUpdate(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { boolean nextFrame(okhttp3.internal.framed.FrameReader$Handler); }
-keepclassmembers class android.graphics.Rect { void offsetTo(int,int); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void close(); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void <init>(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void timedOut(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void exitAndThrowIfTimedOut(); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readConnectionPreface(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.os.StrictMode { void onWebViewMethodCalledOnWrongThread(java.lang.Throwable); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class android.os.StrictMode { void onFileUriExposed(java.lang.String); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class android.os.StrictMode { void onVmPolicyViolation(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class android.view.MenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.app.ProgressDialog$1 { void <init>(android.app.ProgressDialog); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int,int); }
-keepclassmembers class android.widget.AbsSpinner$SavedState$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.MenuItem,android.util.AttributeSet); }
-keepclassmembers class android.transition.Explode { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toMillis(long); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class android.transition.Explode { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.SubMenu,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toSeconds(long); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$200(); }
-keepclassmembers class android.view.MenuInflater { android.content.Context access$100(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class okhttp3.Headers { void <init>(okhttp3.Headers$Builder); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$300(android.view.MenuInflater); }
-keepclassmembers class android.transition.Explode { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class okhttp3.Headers { void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object access$400(android.view.MenuInflater); }
-keepclassmembers class android.transition.Explode { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$500(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String[],java.lang.String); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$600(android.view.MenuInflater); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.zip.Deflater { void <init>(); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class java.util.zip.Deflater { void <init>(int,boolean); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class okhttp3.Headers { java.lang.String name(int); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class okhttp3.Headers { java.util.Date getDate(java.lang.String); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int,int); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class okhttp3.Headers { okhttp3.Headers$Builder newBuilder(); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,int); }
-keepclassmembers class okhttp3.Headers { int size(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class java.util.zip.Deflater { void end(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(int[],int,int); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,long,int); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(long); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { void <init>(java.io.InputStream,long,java.util.jar.JarVerifier$VerifierEntry); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(int[],int,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(); }
-keepclassmembers class okhttp3.Headers { java.util.List values(java.lang.String); }
-keepclassmembers class okhttp3.Headers { java.lang.String value(int); }
-keepclassmembers class java.util.zip.Deflater { boolean needsInput(); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.zip.Deflater { void finish(); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class java.util.zip.Deflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class android.transition.Explode { void <clinit>(); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[],int,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int available(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[]); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[]); }
-keepclassmembers class java.util.zip.Deflater { void setLevelsImpl(int,int,long); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[],int,int); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class java.util.zip.Deflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { long skip(long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class java.util.zip.Deflater { void checkOpen(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$2 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class android.content.ContentProvider$Transport { void <init>(android.content.ContentProvider); }
-keepclassmembers class java.util.zip.Deflater { long createStream(int,int,boolean); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionIndex(android.view.MotionEvent); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionMasked(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String,boolean); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean isLeapYear(int); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentViewClient { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.SimpleTimeZone { int mod7(int); }
-keepclassmembers class java.util.SimpleTimeZone { void checkRange(int,int,int); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class java.util.SimpleTimeZone { void checkDay(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentViewClient { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { void <init>(android.view.View); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int hashCode(); }
-keepclassmembers class java.net.Socket { void checkDestination(java.net.InetAddress,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class java.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$10 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$10 { void onClick(android.view.View); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.net.Socket { int getSoTimeout(); }
-keepclassmembers class org.json.JSONException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertList$1); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean useDaylightTime(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int access$400(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$700(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.List access$900(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$800(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <clinit>(); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class android.ddm.DdmHandleHeap { void register(); }
-keepclassmembers class java.util.Currency { java.lang.String toString(); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class android.system.StructLinger { void <init>(int,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class java.net.Socket { boolean usingSocks(); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class java.net.Socket { java.lang.String toString(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <init>(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.net.Socket { void checkOpenAndCreate(boolean); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { void <clinit>(); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class android.app.SearchManager { void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList getChildAnimations(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class android.app.SearchManager { void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfHeadersAbsent(); }
-keepclassmembers class android.app.SearchManager { void ensureSearchDialog(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfHeadersPresent(); }
-keepclassmembers class android.app.SearchManager { void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfStreamAbsent(); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class okhttp3.Handshake { void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class okhttp3.Handshake { okhttp3.Handshake get(javax.net.ssl.SSLSession); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfStreamPresent(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class okhttp3.Handshake { okhttp3.CipherSuite cipherSuite(); }
-keepclassmembers class android.app.SearchManager { android.content.ComponentName getGlobalSearchActivity(); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <clinit>(); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void tag(java.io.FileDescriptor); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.animation.AnimatorSet { boolean isRunning(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class android.app.SearchManager { void stopSearch(); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class android.widget.CompoundButton$SavedState { java.lang.String toString(); }
-keepclassmembers class java.net.Socket { void cacheLocalAddress(); }
-keepclassmembers class okhttp3.Handshake { java.util.List peerCertificates(); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class java.net.Socket { void accepted(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.app.SearchManager { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$8 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class java.util.Collections$1 { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.AutoCompleteTextView access$000(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.app.ProgressDialog access$1002(au.com.wallaceit.reddinator.activity.SubmitActivity,android.app.ProgressDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$200(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { au.com.wallaceit.reddinator.Reddinator access$500(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean access$600(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.TextView access$400(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$900(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.content.res.Resources access$300(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$800(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.support.v4.view.ViewPager access$700(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean validateInput(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class android.view.animation.TranslateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class java.util.ResourceBundle { java.util.MissingResourceException missingResourceException(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { void sortNodes(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class android.view.animation.TranslateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void onSubmitted(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,boolean); }
-keepclassmembers class java.util.LinkedHashMap { void init(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$000(android.animation.AnimatorSet); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.ValueAnimator access$102(android.animation.AnimatorSet,android.animation.ValueAnimator); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.animation.AnimatorSet { java.util.HashMap access$300(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$502(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$400(android.animation.AnimatorSet); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$600(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$702(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.FragmentContainer { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.nio.charset.Charset); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$8 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class java.util.LinkedHashMap { void makeTail(java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class java.util.LinkedHashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class java.util.LinkedHashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class okhttp3.TlsVersion { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { void <init>(); }
-keepclassmembers class okhttp3.TlsVersion { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class android.support.v4.util.MapCollections { void <init>(); }
-keepclassmembers class okhttp3.TlsVersion { okhttp3.TlsVersion forJavaName(java.lang.String); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void requestExtraBinder(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarActivity { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class java.lang.String { char foldCase(char); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class java.lang.String { int compareToIgnoreCase(java.lang.String); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle handleGetBundle(boolean,java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class android.support.v4.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { void <init>(org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { java.lang.String access$1100(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class android.support.v4.os.ParcelableCompat { android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { java.lang.String access$1200(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { java.io.Reader autoDetectingReader(java.io.InputStream); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { org.json.JSONObject access$1302(au.com.wallaceit.reddinator.ui.TabCommentsFragment,org.json.JSONObject); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { au.com.wallaceit.reddinator.ui.TabCommentsFragment init(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class android.graphics.BitmapShader { android.graphics.Shader copy(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.nio.charset.MalformedInputException { void <init>(int); }
-keepclassmembers class java.util.ResourceBundle { java.util.Hashtable getLoaderCache(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void populateCommentsFromData(java.lang.String); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(long,int,int); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale strip(java.util.Locale); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class java.nio.charset.MalformedInputException { java.lang.String getMessage(); }
-keepclassmembers class java.lang.String { void _getChars(int,int,char[],int); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { void <init>(java.lang.String,au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask$ImageCallback); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void loadFromData(org.json.JSONObject,org.json.JSONArray); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class java.util.ResourceBundle { void setLocale(java.util.Locale); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { android.graphics.Bitmap doInBackground(java.lang.Void[]); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,int); }
-keepclassmembers class java.lang.String { int fastIndexOf(int,int); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void endOfInput(boolean); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class android.text.style.ReplacementSpan { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView$PositionScroller$1 { void <init>(android.widget.AbsListView$PositionScroller,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { okio.Timeout timeout(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getLabel(); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Handler); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class android.os.ResultReceiver { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onDestroy(); }
-keepclassmembers class android.os.AsyncTask$2 { void <init>(android.os.AsyncTask); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onPause(); }
-keepclassmembers class android.os.AsyncTask$2 { java.lang.Object call(); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.os.ResultReceiver { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void updateTheme(); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void viewsReady(android.util.ArrayMap); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <init>(int); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElements(android.util.ArrayMap); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.String { java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class okio.RealBufferedSink { void <init>(okio.Sink); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isNested(android.view.View,android.util.ArrayMap); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void stripOffscreenViews(); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSink { okio.Buffer buffer(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSink { void close(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.Window getWindow(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.ViewGroup getDecor(); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink emitCompleteSegments(); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(android.view.View); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class okio.RealBufferedSink { void flush(); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(okio.ByteString); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class okio.RealBufferedSink { okio.Timeout timeout(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition setTargets(android.transition.Transition,boolean); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[]); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(float); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[],int,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class okio.RealBufferedSink { void write(okio.Buffer,long); }
-keepclassmembers class okio.RealBufferedSink { long writeAll(okio.Source); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(boolean); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeByte(int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition configureTransition(android.transition.Transition,boolean); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeInt(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeHexadecimalUnsignedLong(long); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class java.net.ContentHandler { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeShort(int); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class java.lang.CaseMapper$1 { libcore.icu.Transliterator initialValue(); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class android.app.FragmentManagerState { void <init>(); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class android.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class android.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class okhttp3.Authenticator$1 { void <init>(); }
-keepclassmembers class okhttp3.Authenticator$1 { okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.io.RandomAccessFile { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.TabCommentsFragment,java.lang.String); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void draw(android.graphics.Canvas,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class java.io.RandomAccessFile { java.io.FileDescriptor getFD(); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class java.io.RandomAccessFile { long length(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePaint(); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElementMatrices(); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class java.io.RandomAccessFile { int read(byte[],int,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],int,int,long); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePath(); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[]); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class android.app.SearchDialog$3 { void <init>(android.app.SearchDialog); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class java.io.RandomAccessFile { int readInt(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[],int,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { java.lang.String access$200(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void access$100(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment access$400(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { java.lang.String access$300(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$400(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment access$402(au.com.wallaceit.reddinator.activity.PrefsFragment,net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class android.animation.ValueAnimator { void updateScaledDuration(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void clearWebviewCookies(); }
-keepclassmembers class android.support.v4.view.ViewPager$2 { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedEntry nextEntry(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void saveSettingsAndFinish(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class java.io.RandomAccessFile { void seek(long); }
-keepclassmembers class java.util.Arrays { void checkBinarySearchBounds(int,int,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void setupThemePrefs(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Arrays { void fill(byte[],int,int,byte); }
-keepclassmembers class okio.SegmentPool { void recycle(okio.Segment); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.ValueAnimator { long getFrameDelay(); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockEndLines(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockIndices(); }
-keepclassmembers class android.text.DynamicLayout { int getNumberOfBlocks(); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onCancelChooser(); }
-keepclassmembers class android.text.DynamicLayout { int getIndexFirstChangedBlock(); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class java.util.Arrays { void fill(int[],int); }
-keepclassmembers class okio.SegmentPool { okio.Segment take(); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class android.text.DynamicLayout { void setIndexFirstChangedBlock(int); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$4 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,java.util.List); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { void fill(float[],float); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$4 { void execute(); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void clearState(); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { long getFadeDuration(); }
-keepclassmembers class android.text.DynamicLayout { void access$000(android.text.DynamicLayout,java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showView(android.view.View,boolean); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class java.security.cert.X509Certificate { javax.security.auth.x500.X500Principal getIssuerX500Principal(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onDestroy(); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onResume(); }
-keepclassmembers class java.util.Grego { boolean isLeapYear(int); }
-keepclassmembers class java.security.cert.X509Certificate { java.util.Collection getSubjectAlternativeNames(); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void <init>(java.lang.Object[],int,int); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void <init>(java.io.InputStream,java.net.Socket); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { boolean hasNext(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object next(); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onSelectDirectory(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void close(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int available(); }
-keepclassmembers class libcore.net.url.FtpHandler { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void transitionStarted(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void startTransition(java.lang.Runnable); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { long skip(long); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class java.util.Grego { int[] dayToFields(long,int[]); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$3 { void <init>(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void moveSharedElementsToOverlay(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class java.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class java.util.Grego { long floorDivide(long,long,long[]); }
-keepclassmembers class java.util.Grego { int[] timeToFields(long,int[]); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Grego { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <init>(java.lang.Object,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollX(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollX(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casItem(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setAddedCount(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollY(int); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void tryCancel(java.lang.Object); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isOffList(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isCancelled(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBeforeText(java.lang.CharSequence); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setRemovedCount(int); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnescaper { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler(); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(); }
-keepclassmembers class java.util.EnumSet { void <init>(java.lang.Class); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class java.io.PushbackReader { int read(); }
-keepclassmembers class java.io.PushbackReader { void <init>(java.io.Reader,int); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet copyOf(java.util.Collection); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet copyOf(java.util.EnumSet); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet noneOf(java.lang.Class); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class java.io.PushbackReader { void checkNotClosed(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean,int,int); }
-keepclassmembers class java.util.Arrays { void checkStartAndEnd(int,int,int); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { void <init>(android.content.Context,int,int,int,java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompatHoneycomb { void invalidateOptionsMenu(android.app.Activity); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void setGravity(int); }
-keepclassmembers class android.widget.TextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void show(); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { boolean tryShow(); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class java.util.EnumSet { boolean isValidType(java.lang.Class); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView$SavedState { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { void <clinit>(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$2 { void onFocusChange(android.view.View,boolean); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class java.io.PushbackReader { void unread(int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void onDismiss(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { okhttp3.internal.framed.FrameReader newReader(okio.BufferedSource,boolean); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { void <init>(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { okhttp3.internal.framed.FrameWriter newWriter(okio.BufferedSink,boolean); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { void <init>(java.util.TreeMap$KeySet,java.util.TreeMap$Node); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$5 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { int measureContentWidth(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$5 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { java.lang.Object next(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void setCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class java.util.Arrays { java.lang.String deepToString(java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getTypeInternal(); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.util.Locale constructLocaleFromString(java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getType(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.Arrays { void deepToStringImpl(java.lang.Object[],java.lang.Object[],java.lang.StringBuilder); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class android.support.v7.widget.TintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean compareVersionWithoutBuild(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { char typeCodeOf(java.lang.Class); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { boolean access$100(com.android.internal.view.menu.MenuPopupHelper); }
-keepclassmembers class android.support.v7.widget.TintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { android.view.LayoutInflater access$200(com.android.internal.view.menu.MenuPopupHelper); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { com.android.internal.view.menu.MenuBuilder access$300(com.android.internal.view.menu.MenuPopupHelper); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int convertDiptoPix(android.content.Context,float); }
-keepclassmembers class android.transition.TransitionSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { long dirSize(java.io.File); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher region(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void executeJavascriptInWebview(android.webkit.WebView,java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class java.io.ObjectStreamField { boolean writeField(java.io.DataOutputStream); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.graphics.ColorMatrixColorFilter getColorFilterFromColor(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int getActionbarIconColor(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.lang.String getHostString(java.net.InetSocketAddress); }
-keepclassmembers class okio.Timeout$1 { void <init>(); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class java.io.ObjectStreamField { void resolve(java.lang.ClassLoader); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.Arrays { boolean deepToStringImplContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <clinit>(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.transition.TransitionSet { int getTransitionCount(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextInetSocketAddress(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition getTransitionAt(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getFeedDataSize(android.content.Context); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextPostponed(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class java.io.ObjectStreamField { void setUnshared(boolean); }
-keepclassmembers class java.io.ObjectStreamField { boolean defaultResolve(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.graphics.Bitmap getFontBitmap(android.content.Context,java.lang.String,int,int,int[]); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextProxy(); }
-keepclassmembers class android.widget.Editor$HandleView { void showActionPopupWindow(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.InetSocketAddress nextInetSocketAddress(); }
-keepclassmembers class java.util.Arrays { float[] copyOf(float[],int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.os.AsyncTask { android.os.Handler getHandler(); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class android.widget.Editor$HandleView { void hideActionPopupWindow(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route nextPostponed(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getImageCacheSize(android.content.Context); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setStartDelay(long); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.Proxy nextProxy(); }
-keepclassmembers class android.os.AsyncTask { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.content.pm.PackageInfo getPackageInfo(android.content.Context); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getScoreText(int); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object postResult(java.lang.Object); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class android.os.AsyncTask { void postResultIfNotInvoked(java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextInetSocketAddress(java.net.Proxy); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class android.os.AsyncTask { void onPreExecute(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean hasImageExtension(java.lang.String); }
-keepclassmembers class android.os.AsyncTask { boolean isCancelled(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void intentActionShareText(android.content.Context,java.lang.String); }
-keepclassmembers class android.os.AsyncTask { boolean cancel(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Arrays { byte[] copyOfRange(byte[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void intentActionView(android.content.Context,java.lang.String); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask execute(java.lang.Object[]); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isFeedPathDomain(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseCache(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isFeedPathMulti(java.lang.String); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isImageUrl(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isImgurUrl(java.lang.String); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void createCachedBitmapIfNeeded(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void showApiErrorToastOrDialog(android.content.Context,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class android.os.AsyncTask$AsyncTaskResult { void <init>(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet removeTarget(android.view.View); }
-keepclassmembers class android.os.AsyncTask { void publishProgress(java.lang.Object[]); }
-keepclassmembers class android.os.AsyncTask { java.util.concurrent.atomic.AtomicBoolean access$200(android.os.AsyncTask); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class java.util.Arrays { float[] copyOfRange(float[],int,int); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object access$300(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void access$400(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.app.AlertDialog showPostShareDialog(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { int getChangingConfigurations(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy); }
-keepclassmembers class java.util.Arrays { int[] copyOfRange(int[],int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class android.support.v4.view.ViewPager { void <clinit>(); }
-keepclassmembers class java.util.regex.Matcher { void closeImpl(long); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class android.widget.Spinner$2 { void <init>(android.widget.Spinner); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$5 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$5 { void onClick(android.view.View); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setAlpha(int); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void updateActionbarOverflowIcon(android.app.Activity,int); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { void <init>(); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int voteDirectionToInt(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean hasTranslucentRoot(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void connectFailed(okhttp3.Route,java.io.IOException); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean isStateful(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCacheStates(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String voteDirectionToString(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo); }
-keepclassmembers class java.util.MiniEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCachedBitmap(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,android.view.ViewGroup); }
-keepclassmembers class android.os.FileObserver { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNext(); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route next(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class android.os.FileObserver { void startWatching(); }
-keepclassmembers class android.transition.TransitionSet { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class android.os.FileObserver { void stopWatching(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class java.util.MiniEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { void forceVisibility(int,boolean); }
-keepclassmembers class android.os.FileObserver { void <clinit>(); }
-keepclassmembers class java.util.MiniEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int available(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(byte[],int,int); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void close(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setLayoutDirection(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void clearMutated(); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class android.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class okio.RealBufferedSource { void <init>(okio.Source); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ViewUtils { int combineMeasuredStates(int,int); }
-keepclassmembers class android.support.v7.widget.ViewUtils { boolean isLayoutRtl(android.view.View); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String,int); }
-keepclassmembers class okio.RealBufferedSource { void close(); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte,long); }
-keepclassmembers class okio.RealBufferedSource { okio.Buffer buffer(); }
-keepclassmembers class okio.RealBufferedSource { boolean exhausted(); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class android.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow { void show(); }
-keepclassmembers class android.widget.ListPopupWindow { void setDropDownGravity(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.transition.TransitionSet { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class android.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class android.support.v4.view.ViewPager { void completeScroll(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class okio.RealBufferedSource { long read(okio.Buffer,long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setStartDelay(long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(int); }
-keepclassmembers class okio.RealBufferedSource { byte readByte(); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class okio.RealBufferedSource { byte[] readByteArray(); }
-keepclassmembers class android.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.support.v4.view.ViewPager { int determineTargetPage(int,float,int,int); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSource { byte[] readByteArray(long); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class okio.RealBufferedSource { okio.ByteString readByteString(long); }
-keepclassmembers class android.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageScrolled(int,float,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageSelected(int); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void <init>(android.widget.RemoteViews,int,int); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class okio.RealBufferedSource { long readHexadecimalUnsignedLong(); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class okio.RealBufferedSource { int readIntLe(); }
-keepclassmembers class okio.RealBufferedSource { int readInt(); }
-keepclassmembers class android.support.v4.view.ViewPager { void enableLayers(boolean); }
-keepclassmembers class okio.RealBufferedSource { short readShort(); }
-keepclassmembers class okio.RealBufferedSource { short readShortLe(); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class android.support.v4.view.ViewPager { void endDrag(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkNanos(java.lang.Object,long); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.ViewPager { int getClientWidth(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition(); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String readUtf8LineStrict(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupColorAnimator(android.animation.Animator); }
-keepclassmembers class okio.RealBufferedSource { boolean request(long); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStarted(); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class okio.RealBufferedSource { void require(long); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSource { void skip(long); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isDecorView(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { int[] getAllAppWidgetIds(android.content.Context); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class okio.RealBufferedSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isGutterDrag(float,float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { int getWidgetLayoutId(java.lang.Class); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageScrolled(int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { java.lang.Class getWidgetProviderClass(android.content.Context,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean performDrag(float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void hideLoaderAndRefreshViews(android.content.Context,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void refreshAllWidgetViews(au.com.wallaceit.reddinator.Reddinator); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { void <init>(java.lang.String[],int[],android.content.Context,android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void setUpdateSchedule(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$DropDownListView access$600(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.view.ViewPager { void recomputeScrollPosition(int,int,int,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.PopupWindow access$1100(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.widget.ListPopupWindow); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow { android.os.Handler access$1300(android.widget.ListPopupWindow); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void showLoaderAndRefreshViews(android.content.Context,int); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeNonDecorViews(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getQuantityText(int,int); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class android.widget.EditText { boolean getDefaultEditable(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void showLoaderAndUpdate(android.content.Context,int,boolean); }
-keepclassmembers class android.widget.EditText { android.text.Editable getText(); }
-keepclassmembers class android.widget.EditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.widget.EditText { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class android.support.v4.view.ViewPager { void requestParentDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.text.style.StyleSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean resetTouch(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.support.v4.view.ViewPager { void scrollToItem(int,boolean,int,boolean); }
-keepclassmembers class android.widget.EditText { void selectAll(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.content.res.Resources { libcore.icu.NativePluralRules getPluralRule(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.EditText { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onLevelChange(int); }
-keepclassmembers class android.content.res.Resources { int attrForQuantityCode(int); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void updateAllWidgets(android.content.Context); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.res.Resources { java.lang.String stringForQuantityCode(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void sortChildDrawingOrder(); }
-keepclassmembers class android.app.Fragment { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getText(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { void <init>(android.view.View,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.ViewPager { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.app.Fragment { android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.content.res.Resources { java.lang.String getQuantityString(int,int,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <init>(byte[]); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class android.content.res.Resources { java.lang.String getQuantityString(int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class android.support.v4.view.ViewPager { void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <clinit>(); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class java.net.PlainServerSocketImpl { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class java.net.PlainServerSocketImpl { void create(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.res.Resources { java.lang.String[] getStringArray(int); }
-keepclassmembers class android.app.Fragment { void restoreViewState(android.os.Bundle); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class android.app.Fragment { void setIndex(int,android.app.Fragment); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class java.nio.charset.CharacterCodingException { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class android.app.Fragment { boolean isInBackStack(); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class android.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class android.app.Fragment { java.lang.String toString(); }
-keepclassmembers class android.app.Fragment { int hashCode(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class java.util.Vector { java.lang.Object[] newElementArray(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition$1 { void <init>(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$9 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.app.Fragment { void setArguments(android.os.Bundle); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedPath(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class android.app.Fragment { android.os.Bundle getArguments(); }
-keepclassmembers class android.net.Uri$StringUri { java.util.List getPathSegments(); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class android.app.Fragment { android.app.Fragment getTargetFragment(); }
-keepclassmembers class android.app.Fragment { int getTargetRequestCode(); }
-keepclassmembers class android.app.Fragment { android.app.Activity getActivity(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class android.app.Fragment { android.content.res.Resources getResources(); }
-keepclassmembers class android.content.res.Resources { int getDimensionPixelSize(int); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class android.app.Fragment { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.app.Fragment { java.lang.String getString(int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedFragment(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.app.Fragment { android.app.FragmentManager getChildFragmentManager(); }
-keepclassmembers class android.app.Fragment { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment$2); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { void <clinit>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { void <init>(okhttp3.internal.cache.InternalCache); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void apply(java.lang.Object); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.app.Fragment { boolean isAdded(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScrollHorizontally(int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.app.Fragment { boolean isHidden(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class android.app.Fragment { void setHasOptionsMenu(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.ddm.DdmHandleThread { void register(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.ViewPager { void computeScroll(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { boolean isEndToEnd(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$6 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(); }
-keepclassmembers class java.util.Vector { void growByOne(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(int); }
-keepclassmembers class android.app.Fragment { void startActivity(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog { void <init>(android.app.Activity,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.app.Fragment { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response stripBody(okhttp3.Response); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void gc(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache); }
-keepclassmembers class android.app.Fragment { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog { au.com.wallaceit.reddinator.ui.HtmlDialog init(android.app.Activity,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List getSubtrees(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { boolean validate(okhttp3.Response,okhttp3.Response); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List access$000(org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.app.Fragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class android.ddm.DdmHandleThread { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void run(); }
-keepclassmembers class android.app.Fragment { void onInflate(android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class android.support.v4.view.ViewPager { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { boolean isOctalDigit(char); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void clear(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { boolean isZeroToThree(char); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class android.support.v4.view.ViewPager { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase { void <init>(); }
-keepclassmembers class android.content.res.Resources { boolean getBoolean(int); }
-keepclassmembers class android.app.Fragment { android.animation.Animator onCreateAnimator(int,boolean,int); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class android.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.content.res.Resources { float getFloat(int); }
-keepclassmembers class android.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class android.app.Fragment { android.view.View getView(); }
-keepclassmembers class android.support.v4.view.ViewPager { void drawableStateChanged(); }
-keepclassmembers class android.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int keyAt(int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class android.app.Fragment { void onStart(); }
-keepclassmembers class android.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void put(int,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.app.Fragment { void onResume(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class android.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.Fragment { void onStop(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.Fragment { void onPause(); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class android.app.Fragment { void onLowMemory(); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Fragment { void onTrimMemory(int); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.app.Fragment { void onDestroy(); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.app.Fragment { void initState(); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.app.Fragment { void onDetach(); }
-keepclassmembers class android.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int size(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.PagerAdapter getAdapter(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.ViewPager { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.Object valueAt(int); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { int getCurrentItem(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,boolean,java.lang.String); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getEnterTransition(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getExitTransition(); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getReturnTransition(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getReenterTransition(); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForPosition(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getSharedElementEnterTransition(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getSharedElementReturnTransition(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources$Theme newTheme(); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.app.Fragment { boolean getAllowEnterTransitionOverlap(); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class android.app.Fragment { boolean getAllowReturnTransitionOverlap(); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.support.v4.view.ViewPager { void onAttachedToWindow(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDetachedFromWindow(); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.app.Fragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <init>(java.io.IOException); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addConnectException(java.io.IOException); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addSuppressedIfPossible(java.io.IOException,java.io.IOException); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.text.TextLine { void draw(android.graphics.Canvas,float,int,int,int); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class android.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { java.io.IOException getLastConnectException(); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class java.util.jar.JarFile { java.util.HashMap readMetaEntries(java.util.zip.ZipFile,boolean); }
-keepclassmembers class android.support.v4.app.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class java.lang.HexStringParser { float parseFloat(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void <init>(int,int); }
-keepclassmembers class java.lang.HexStringParser { double parseDouble(java.lang.String); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(); }
-keepclassmembers class java.util.jar.JarFile { boolean endsWithIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { long parse(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class java.net.ProxySelector { void <init>(); }
-keepclassmembers class android.app.Fragment { void instantiateChildFragmentManager(); }
-keepclassmembers class android.app.Fragment { void performCreate(android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class android.app.Fragment { android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class java.lang.HexStringParser { void parseHexSign(java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.app.Fragment { void performActivityCreated(android.os.Bundle); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void parseExponent(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.List getMetaEntries(java.util.zip.ZipFile); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.app.Fragment { void performStart(); }
-keepclassmembers class java.lang.HexStringParser { void parseMantissa(java.lang.String); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCachesLocked(android.util.ArrayMap,int); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor open(java.io.File,int); }
-keepclassmembers class java.util.jar.JarFile { void close(); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCacheLocked(android.util.LongSparseArray,int); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class android.app.Fragment { void performResume(); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.Resources { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class java.lang.Enum { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor openInternal(java.io.File,int); }
-keepclassmembers class java.lang.HexStringParser { void setInfinite(); }
-keepclassmembers class java.lang.HexStringParser { void setZero(); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.lang.HexStringParser { void checkedAddExponent(long); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class java.lang.HexStringParser { void processNormalNumber(); }
-keepclassmembers class android.content.res.Resources { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.HexStringParser { void processSubNormalNumber(); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class java.beans.PropertyChangeEvent { void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.HexStringParser { void fitMantissaInDesiredWidth(int); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.String getPropertyName(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getOldValue(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getNewValue(); }
-keepclassmembers class java.lang.HexStringParser { void discardTrailingBits(long); }
-keepclassmembers class android.support.v4.view.ViewPager { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor[] createPipe(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class java.lang.HexStringParser { void round(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.app.Fragment { void performSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.lang.HexStringParser { java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.app.Fragment { void performPause(); }
-keepclassmembers class android.app.Fragment { void performStop(); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class java.lang.HexStringParser { int getOffset(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class java.lang.HexStringParser { int countBitsLength(long); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void performDestroyView(); }
-keepclassmembers class org.xml.sax.SAXNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <init>(java.util.Date,java.util.Date); }
-keepclassmembers class android.app.Fragment { void performDestroy(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotBefore(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotAfter(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition loadTransition(android.content.Context,android.content.res.TypedArray,android.transition.Transition,android.transition.Transition,int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$100(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$000(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.text.TextLine { float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class android.app.Fragment { void <clinit>(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$4 { void onClick(android.view.View); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetManager getAssets(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { java.lang.CharSequence compute(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.ViewPager { void onMeasure(int,int); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { java.lang.CharSequence compute(java.lang.Enum,java.lang.CharSequence); }
-keepclassmembers class java.io.PrintStream { void close(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <init>(java.math.BigInteger,java.util.Date,org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.content.res.Resources { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class java.io.PrintStream { void flush(); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { android.graphics.Typeface getTypeface(android.content.Context,java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void newline(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void close(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { int hashCode(); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class android.os.ParcelFileDescriptor { void closeWithStatus(int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void releaseResources(); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class android.os.ParcelFileDescriptor { byte[] getOrCreateStatusBuffer(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.math.BigInteger access$000(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.os.ParcelFileDescriptor { void writeCommStatusAndClose(int,java.lang.String); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.util.Date access$100(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { org.apache.harmony.security.x509.Extensions access$200(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.content.res.Resources { void cacheDrawable(android.util.TypedValue,android.content.res.Resources$Theme,boolean,android.util.ArrayMap,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { void addRoot(java.lang.String,java.io.File); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceManager { void init(android.content.Context); }
-keepclassmembers class android.preference.PreferenceManager { void <init>(android.app.Activity,int); }
-keepclassmembers class android.preference.PreferenceManager { void setFragment(android.preference.PreferenceFragment); }
-keepclassmembers class android.support.v4.view.ViewPager { void onPageScrolled(int,float,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[]); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { java.io.File getFileForUri(android.net.Uri); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class java.io.PrintStream { void setError(); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[]); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { android.net.Uri getUriForFile(java.io.File); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { java.util.List access$100(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.GeneralNames$1); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawableForCookie(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.support.v4.view.ViewPager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.preference.PreferenceManager { void setSharedPreferencesName(java.lang.String); }
-keepclassmembers class java.util.TreeMap$MapIterator { void <init>(java.util.TreeMap,java.util.TreeMap$Node); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.support.v4.view.ViewPager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.TreeMap$MapIterator { boolean hasNext(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawable(android.util.ArrayMap,long,android.content.res.Resources$Theme); }
-keepclassmembers class android.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.util.TreeMap$MapIterator { java.util.TreeMap$Node stepForward(); }
-keepclassmembers class android.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.preference.PreferenceManager { boolean setPreferences(android.preference.PreferenceScreen); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable$ConstantState getConstantStateLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawableLocked(android.util.LongSparseArray,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { au.com.wallaceit.reddinator.Reddinator access$500(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onBackPressed(); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class android.preference.PreferenceManager { void setNoCommit(boolean); }
-keepclassmembers class org.json.JSONObject { void <init>(org.json.JSONTokener); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onCreate(android.os.Bundle); }
-keepclassmembers class org.json.JSONObject { void <init>(java.lang.String); }
-keepclassmembers class org.json.JSONObject { void <init>(); }
-keepclassmembers class org.json.JSONObject { void <init>(org.json.JSONObject,java.lang.String[]); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,boolean); }
-keepclassmembers class org.json.JSONObject { int length(); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewClient { void <init>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onDestroy(); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,long); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,int); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getCachedColorStateList(long); }
-keepclassmembers class android.preference.PreferenceManager { void dispatchActivityStop(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(int); }
-keepclassmembers class org.json.JSONObject { java.lang.String checkName(java.lang.String); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class android.preference.PreferenceManager { void dispatchActivityDestroy(); }
-keepclassmembers class org.json.JSONObject { boolean has(java.lang.String); }
-keepclassmembers class org.json.JSONObject { java.lang.Object get(java.lang.String); }
-keepclassmembers class org.json.JSONObject { java.lang.Object remove(java.lang.String); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class org.json.JSONObject { boolean getBoolean(java.lang.String); }
-keepclassmembers class org.json.JSONObject { java.lang.Object opt(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.preference.PreferenceManager { void dismissAllScreens(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.preference.PreferenceManager { void setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.json.JSONObject { int getInt(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class org.json.JSONObject { long getLong(java.lang.String); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class org.json.JSONObject { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class org.json.JSONObject { org.json.JSONArray getJSONArray(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$15 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject getJSONObject(java.lang.String); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$15 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class java.lang.StringToReal { double parseDblImpl(java.lang.String,int); }
-keepclassmembers class java.lang.StringToReal { float parseFltImpl(java.lang.String,int); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class org.json.JSONObject { java.util.Iterator keys(); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class java.lang.StringToReal { java.lang.NumberFormatException invalidReal(java.lang.String,boolean); }
-keepclassmembers class org.json.JSONObject { java.lang.String toString(); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class java.lang.StringToReal { java.lang.StringToReal$StringExponentPair initialParse(java.lang.String,int,boolean); }
-keepclassmembers class org.json.JSONObject { void writeTo(org.json.JSONStringer); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class org.json.JSONObject { java.lang.String numberToString(java.lang.Number); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class org.json.JSONObject { void <clinit>(); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.util.AndroidException { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class org.xml.sax.SAXNotRecognizedException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { void setAdapter(android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeView(android.view.View); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void enlargeBuffer(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(java.lang.String); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class java.lang.StringToReal { float parseName(java.lang.String,boolean); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class java.lang.StringToReal { double parseDouble(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void appendNull(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[]); }
-keepclassmembers class java.lang.StringToReal { float parseFloat(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[],int,int); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$9 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItem(int); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean,int); }
-keepclassmembers class libcore.io.ForwardingOs { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void access$000(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void access$100(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setOffscreenPageLimit(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { java.lang.String access$200(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { java.lang.String appendImageExtensionIfNeeded(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void delete0(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void downloadFile(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void doFileDownload(java.lang.String,java.lang.String); }
-keepclassmembers class okio.InflaterSource { void <init>(okio.BufferedSource,java.util.zip.Inflater); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class okio.InflaterSource { void <init>(okio.Source,java.util.zip.Inflater); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[]); }
-keepclassmembers class okio.InflaterSource { void releaseInflatedBytes(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollState(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void shareImage(java.lang.String); }
-keepclassmembers class android.preference.PreferenceFragment$3 { void <init>(android.preference.PreferenceFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onCancelChooser(); }
-keepclassmembers class android.support.v4.view.ViewPager { void smoothScrollTo(int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[],int,int); }
-keepclassmembers class okio.InflaterSource { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class okio.InflaterSource { long read(okio.Buffer,long); }
-keepclassmembers class java.util.HashMap$HashMapEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class java.io.StringWriter { void <init>(int); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getKey(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class android.text.TextLine { float ascent(int); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.io.StringWriter { void write(int); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class java.util.HashMap$HashMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.StringWriter { void write(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class okio.InflaterSource { boolean refill(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onSelectDirectory(java.lang.String); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class java.util.HashMap$HashMapEntry { int hashCode(); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { void <clinit>(); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class okio.InflaterSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.String toString(); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void move(int,int); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(byte[]); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.graphics.Color { int rgb(int,int,int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[]); }
-keepclassmembers class java.util.Random { void <init>(long); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealByteArraySize(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void replace0(int,int,java.lang.String); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealIntArraySize(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float); }
-keepclassmembers class java.util.Random { float nextFloat(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealLongArraySize(int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.util.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[],org.apache.harmony.security.x509.PolicyConstraints$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class java.util.Random { int nextInt(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class android.app.DownloadManager$Request { void <init>(android.net.Uri); }
-keepclassmembers class libcore.io.ForwardingOs { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <clinit>(); }
-keepclassmembers class android.graphics.Color { int parseColor(java.lang.String); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$17 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$17 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.io.ForwardingOs { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.EditText); }
-keepclassmembers class android.graphics.Color { void RGBToHSV(int,int,int,float[]); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.app.DownloadManager$Request { void setDestinationFromBase(java.io.File,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.Color { void colorToHSV(int,float[]); }
-keepclassmembers class android.graphics.Color { int HSVToColor(float[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { boolean isClipPath(); }
-keepclassmembers class android.graphics.Color { int HSVToColor(int,float[]); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class android.graphics.Color { void nativeRGBToHSV(int,int,int,float[]); }
-keepclassmembers class android.graphics.Color { int nativeHSVToColor(int,float[]); }
-keepclassmembers class android.graphics.Color { int getHtmlColor(java.lang.String); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setDescription(java.lang.CharSequence); }
-keepclassmembers class libcore.io.ForwardingOs { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setNotificationVisibility(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setAllowedOverRoaming(boolean); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setAllowedNetworkTypes(int); }
-keepclassmembers class android.app.DownloadManager$Request { android.app.DownloadManager$Request setVisibleInDownloadsUi(boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetService { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetService { android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String toString(); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController); }
-keepclassmembers class android.app.DownloadManager$Request { void <clinit>(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class java.util.zip.ZipEntry { int hashCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(byte[],java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.util.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void <init>(int); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { boolean checkTag(int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.util.zip.ZipEntry { boolean containsNulByte(byte[]); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class libcore.io.Memory { long peekLong(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController,android.media.session.MediaController$1); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1); }
-keepclassmembers class android.support.v4.view.GravityCompat { void <clinit>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[],android.util.PathParser$1); }
-keepclassmembers class android.util.PathParser$PathDataNode { char access$100(android.util.PathParser$PathDataNode); }
-keepclassmembers class libcore.io.Memory { void pokeInt(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.util.PathParser$PathDataNode { float[] access$200(android.util.PathParser$PathDataNode); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class android.app.ActivityTransitionState$1 { void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class android.support.v4.view.GravityCompat { int getAbsoluteGravity(int,int); }
-keepclassmembers class libcore.io.Memory { void pokeLong(byte[],int,long,java.nio.ByteOrder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class libcore.io.Memory { void pokeShort(byte[],int,short,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.text.DateFormat initialValue(); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.lang.Object initialValue(); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.reflect.Constructor { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class java.lang.reflect.Constructor { int getModifiers(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { android.view.View inflate(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class java.lang.reflect.Constructor { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class java.lang.reflect.Constructor { int hashCode(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String toString(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[],boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void setVisibility(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class android.view.animation.LayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.Constructor { void <clinit>(); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String unescapeJava(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String unescapeHtml4(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String escapeEcmaScript(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class java.util.Collections { java.util.List singletonList(java.lang.Object); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class java.util.Collections { java.util.Set singleton(java.lang.Object); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$002(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class android.view.GLES20RecordingCanvas { android.view.GLES20RecordingCanvas obtain(android.view.RenderNode); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void recycle(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <init>(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { long finishRecording(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void <init>(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <clinit>(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void register(); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void finish(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void updateTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { android.app.ActionBar access$100(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceText(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceBagText(int,int); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class java.util.Collections { java.util.ArrayList list(java.util.Enumeration); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence[] getResourceTextArray(int); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(); }
-keepclassmembers class libcore.icu.NativeNormalizer$1 { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.content.res.AssetManager { void ensureStringBlocks(); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.CRC32 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(byte[]); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class java.util.zip.CRC32 { long getValue(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class okhttp3.MediaType { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getPooledStringForCookie(int,int); }
-keepclassmembers class java.util.zip.CRC32 { void reset(); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class okhttp3.MediaType { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.MediaType { okhttp3.MediaType parse(java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class java.util.zip.CRC32 { void update(byte[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class java.util.zip.CRC32 { long updateImpl(byte[],int,int,long); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class okhttp3.Cookie { void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.MediaType { java.nio.charset.Charset charset(); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class okhttp3.Cookie { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { java.io.InputStream openNonAsset(int,java.lang.String,int); }
-keepclassmembers class okhttp3.MediaType { java.nio.charset.Charset charset(java.nio.charset.Charset); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void setTitleText(java.lang.String); }
-keepclassmembers class okhttp3.MediaType { java.lang.String toString(); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void reloadSentMessages(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <init>(); }
-keepclassmembers class okhttp3.Cookie { int dateCharacterOffset(java.lang.String,int,int,boolean); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { android.widget.ProgressBar$RefreshData obtain(int,int,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterCell { void <init>(long); }
-keepclassmembers class java.util.Collections { int secondaryHash(java.lang.Object); }
-keepclassmembers class java.util.Collections { int secondaryHash(int); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <clinit>(); }
-keepclassmembers class okhttp3.Cookie { boolean domainMatch(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo makeTimeZone(java.lang.String,libcore.io.BufferIterator); }
-keepclassmembers class java.util.Collections { int roundUpToPowerOfTwo(int); }
-keepclassmembers class java.util.Collections { java.util.Iterator access$000(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$1 { void onDismiss(android.widget.PopupMenu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,int[],byte[],int[],byte[]); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitDexPath(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.io.File[] splitLibraryPath(java.lang.String); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { void splitAndAdd(java.lang.String,boolean,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <init>(byte[]); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitPaths(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <clinit>(); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.ArrayList,java.io.File,java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$8 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class android.transition.Transition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void onTranslucentConversionComplete(boolean); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class android.content.res.AssetManager { long getAssetLength(long); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class android.content.res.AssetManager { void destroyAsset(long); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class android.content.res.AssetManager { boolean applyStyle(long,int,int,long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { long openNonAssetNative(int,java.lang.String,int); }
-keepclassmembers class android.content.res.AssetManager { boolean resolveAttrs(long,int,int,int[],int[],int[],int[]); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.content.res.AssetManager { boolean retrieveAttributes(long,int[],int[],int[]); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceBagValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.content.res.AssetManager { void applyThemeStyle(long,int,boolean); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { void copyTheme(long,long); }
-keepclassmembers class android.content.res.AssetManager { int[] getArrayStringInfo(int); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String canonicalizeHost(java.lang.String,int,int); }
-keepclassmembers class okhttp3.Cookie { java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class android.transition.Transition { int[] parseMatchOrder(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class android.content.res.AssetManager { long access$100(android.content.res.AssetManager,long); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class android.content.res.AssetManager { void access$500(android.content.res.AssetManager,long); }
-keepclassmembers class okhttp3.Cookie { java.lang.String parseDomain(java.lang.String); }
-keepclassmembers class okhttp3.Cookie { long parseExpires(java.lang.String,int,int); }
-keepclassmembers class android.content.res.AssetManager { void access$400(android.content.res.AssetManager,long); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setStartDelay(long); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean,int,int); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.net.InetAddress decodeIpv6(java.lang.String,int,int); }
-keepclassmembers class android.transition.Transition { void setMatchOrder(int[]); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.transition.Transition { boolean isValidMatch(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.transition.Transition { boolean alreadyContains(int[],int); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class libcore.util.ZoneInfo { int checkedAdd(int,int); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class libcore.util.ZoneInfo { int[] access$100(libcore.util.ZoneInfo); }
-keepclassmembers class libcore.util.ZoneInfo { int access$000(libcore.util.ZoneInfo); }
-keepclassmembers class android.support.graphics.drawable.AndroidResources { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { byte[] access$200(libcore.util.ZoneInfo); }
-keepclassmembers class libcore.util.ZoneInfo { int[] access$300(libcore.util.ZoneInfo); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class libcore.util.ZoneInfo { byte[] access$400(libcore.util.ZoneInfo); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String inet6AddressToAscii(byte[]); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { int access$500(int,int); }
-keepclassmembers class android.transition.SidePropagation { void <init>(); }
-keepclassmembers class okhttp3.Cookie { long parseMaxAge(java.lang.String); }
-keepclassmembers class android.transition.SidePropagation { void setSide(int); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.Cookie { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDotDot(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDot(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int parsePort(java.lang.String,int,int); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void pop(); }
-keepclassmembers class okhttp3.Cookie { int hashCode(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void push(java.lang.String,int,int,boolean,boolean); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int portColonOffset(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String toString(); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void resolvePath(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { int compare(org.json.JSONObject,org.json.JSONObject); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void <init>(); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int schemeDelimiterOffset(java.lang.String,int,int); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void access$000(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$100(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$1000(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int slashCount(java.lang.String,int,int); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$1002(au.com.wallaceit.reddinator.activity.SearchActivity,boolean); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String pattern(); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$102(au.com.wallaceit.reddinator.activity.SearchActivity,boolean); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$1100(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$1102(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { au.com.wallaceit.reddinator.Reddinator access$1200(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { org.json.JSONArray access$1300(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { org.json.JSONArray access$1302(au.com.wallaceit.reddinator.activity.SearchActivity,org.json.JSONArray); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { android.widget.CheckBox access$200(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$300(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$302(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$400(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { android.widget.AutoCompleteTextView access$500(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$600(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$602(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$700(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$702(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter access$800(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { int access$900(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onSearchQueryEnter(); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void createPopupWindow(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void initContentView(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl build(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int effectivePort(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void setThemeColors(); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder encodedQuery(java.lang.String); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void <init>(libcore.net.url.JarURLConnectionImpl,java.io.InputStream,java.util.jar.JarFile); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void hideLoader(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void hideLoader(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void loadMore(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder host(java.lang.String); }
-keepclassmembers class java.net.URLConnection$DefaultContentHandler { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class libcore.reflect.Types { java.lang.String toString(java.lang.Class[]); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class java.nio.charset.CoderResult { void <init>(int,int); }
-keepclassmembers class libcore.reflect.Types { void appendTypeName(java.lang.StringBuilder,java.lang.Class); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isMalformed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onResume(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.system.Os { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.reflect.Types { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void search(); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnmappable(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void showLoader(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class java.nio.charset.CoderResult { void throwException(); }
-keepclassmembers class android.system.Os { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class java.nio.charset.CoderResult { void <clinit>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder port(int); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class java.lang.LinkageError { void <init>(); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class android.os.Trace$1 { void run(); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(int); }
-keepclassmembers class android.widget.RemoteViews$OnClickHandler { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder reencodeForUri(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class android.app.BackStackState$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$5 { void onClick(android.view.View); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder scheme(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class android.system.Os { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class android.support.v4.util.LogWriter { void <init>(java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context,java.util.ArrayList); }
-keepclassmembers class android.support.v4.util.LogWriter { void flushBuilder(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentState$1 { void <init>(); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetIds(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargets(); }
-keepclassmembers class android.support.v4.util.LogWriter { void flush(); }
-keepclassmembers class android.support.v4.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetNames(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetTypes(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String toString(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter$1 { void <init>(au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.content.ContextCompatHoneycomb { void startActivities(android.content.Context,android.content.Intent[]); }
-keepclassmembers class android.widget.LinearLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21$SharedElementCallback21 { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,au.com.wallaceit.reddinator.ui.RedditViewPager); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.Locale { void <init>(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap$2 { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.String viewToString(android.view.View); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class android.widget.LinearLayout { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int applyAlpha(int,float); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.Html$HtmlParser { org.ccil.cowan.tagsoup.HTMLSchema access$000(); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void <clinit>(); }
-keepclassmembers class android.text.Html$HtmlParser { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.support.v4.view.AbsSavedState$1); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.gu.option.Option$Some { void <init>(java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayCountry(java.util.Locale); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class com.gu.option.Option$Some { void foreach(com.gu.option.UnitFunction); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(java.util.Locale); }
-keepclassmembers class com.gu.option.Option$Some { java.lang.Object get(); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayName(java.util.Locale); }
-keepclassmembers class android.app.SearchDialog { int resolveDialogTheme(android.content.Context); }
-keepclassmembers class android.app.SearchDialog { void <init>(android.content.Context,android.app.SearchManager); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object getLastCustomNonConfigurationInstance(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.LoaderManager getSupportLoaderManager(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.media.session.MediaControllerCompat getSupportMediaController(); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class android.app.SearchDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.app.SearchDialog { void createContentView(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onBackPressed(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayVariant(java.util.Locale); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.SearchDialog { boolean show(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$7 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class android.app.SearchDialog { boolean doShow(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean needMirroring(); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$7 { void execute(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayScript(java.util.Locale); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class android.app.SearchDialog { boolean show(android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.Locale { java.lang.String makeLanguageTag(); }
-keepclassmembers class java.net.Inet4Address { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onLowMemory(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.SearchDialog { void onStart(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.app.SearchDialog { void onStop(); }
-keepclassmembers class android.text.Layout$1 { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPause(); }
-keepclassmembers class android.app.SearchDialog { void setWorking(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class java.util.Locale { java.lang.String[] splitIllformedVariant(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { void <clinit>(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.UnderlineSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry,java.util.LinkedHashMap$LinkedEntry,java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class android.transition.ChangeTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.app.SearchDialog { void updateUI(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <init>(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { org.apache.harmony.security.asn1.ASN1Any getInstance(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onResume(); }
-keepclassmembers class java.util.Locale { java.lang.String concatenateRange(java.lang.String[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onResumeFragments(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { boolean checkTag(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainCustomNonConfigurationInstance(); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class android.app.SearchDialog { void updateSearchAutoComplete(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class android.app.SearchDialog { void updateSearchAppIcon(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStart(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Locale { java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStateNotSaved(); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { java.lang.String formatFlags(byte,byte); }
-keepclassmembers class android.app.SearchDialog { void updateSearchBadge(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$7 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.app.SharedElementCallback getListener(android.app.Activity,boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { java.lang.String formatHeader(boolean,int,int,byte,byte); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setSupportMediaController(android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stopCancel(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean doShowWelcomeDialog(android.app.Activity); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void delayCancel(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearDir(java.io.File,int); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onBackPressed(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class java.util.Locale { java.lang.String serializeExtensions(java.util.Map); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.transition.Transition { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearFeedData(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class android.transition.Transition { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearFeedDataAndPreferences(int); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.transition.Transition { void setPropagation(android.transition.TransitionPropagation); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setClipToScreenEnabled(boolean); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.PopupWindow { void setAllowScrollingAnchorParent(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class java.util.Locale { boolean isUnM49AreaCode(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportFinishAfterTransition(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearImageCache(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportInvalidateOptionsMenu(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportPostponeEnterTransition(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportStartPostponedEnterTransition(); }
-keepclassmembers class java.util.Locale { boolean isAsciiAlphaNum(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearUnreadMessages(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void validateRequestPermissionsRequestCode(int); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExit(int,android.content.Intent); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alpha(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void deleteFeed(int); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alphanum(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onDestroy(); }
-keepclassmembers class android.transition.Transition { void setNameOverrides(android.util.ArrayMap); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean getBypassCache(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class java.util.Locale { java.lang.String titleCaseAsciiWord(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getDefaultCommentsMobileSite(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getDefaultMobileSite(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class android.transition.Transition { void forceVisibility(int,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONArray getFeed(int); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void <init>(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExitTransition(); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutMode(int,int); }
-keepclassmembers class android.app.SearchDialog { void setUserQuery(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class java.util.Locale { void addUnicodeExtensionToExtensionsMap(java.util.Set,java.util.Map,java.util.Map); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void fadeOutBackground(); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getExitTransition(); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void invalidateSelf(); }
-keepclassmembers class java.util.Locale { void parseUnicodeExtension(java.lang.String[],java.util.Map,java.util.Set); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONObject getFeedObject(int,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { android.os.Bundle getItemUpdate(); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class java.util.Locale { java.lang.String joinBcp47Subtags(java.util.List); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int getLoadType(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getRedditMobileSite(boolean); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void exitTransitionComplete(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.util.ArrayList getSrList(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$1 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { au.com.wallaceit.reddinator.core.SubredditManager getSubredditManager(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean isReadyToNotify(); }
-keepclassmembers class java.util.Locale { java.lang.String convertGrandfatheredTag(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.Locale { void extractVariantSubtags(java.lang.String[],int,int,java.util.List); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAllowCaching(boolean); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONArray getUnreadMessages(); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class java.util.Locale { int extractExtensions(java.lang.String[],int,int,java.util.Map); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void handleLink(android.content.Context,java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void handleRedditLink(android.content.Context,java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void notifyComplete(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finishIfNecessary(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String,boolean); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finish(); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <init>(long,int,java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.Button getButton(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean moveSharedElementWithParent(); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean isSrlistCached(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getViewsTransition(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int loadAccountMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$3 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int loadAccountSubreddits(); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setupDecor(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void onCreate(); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void openSubredditFeed(android.content.Context,java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$500(android.app.ExitTransitionCoordinator); }
-keepclassmembers class libcore.util.CollectionUtils { java.lang.Iterable dereferenceIterable(java.lang.Iterable,boolean); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$700(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$800(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.animation.ObjectAnimator access$902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class java.util.Locale { boolean access$000(java.lang.String,int,int); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void putSrList(java.util.ArrayList); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1002(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.Locale { boolean access$200(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void removePostFromFeed(int,int,java.lang.String); }
-keepclassmembers class java.util.Locale { boolean access$300(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class java.util.Locale { java.lang.String access$400(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupTitle(android.view.ViewGroup); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean saveThumbnailToCache(android.graphics.Bitmap,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity,java.util.HashMap); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setBypassCache(boolean); }
-keepclassmembers class okio.GzipSource { void <init>(okio.Source); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setFeed(int,org.json.JSONArray); }
-keepclassmembers class okio.GzipSource { void checkEqual(java.lang.String,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setItemUpdate(int,java.lang.String,java.lang.String,int); }
-keepclassmembers class okio.GzipSource { void consumeHeader(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setItemVote(int,int,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupButtons(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.widget.LinearLayout { int getOrientation(); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void <init>(); }
-keepclassmembers class okio.ForwardingTimeout { void <init>(okio.Timeout); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { java.util.ArrayList access$000(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void access$100(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,org.json.JSONObject,boolean); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearDeadline(); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearTimeout(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setLoad(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class okio.ForwardingTimeout { long deadlineNanoTime(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void access$200(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setRefreshView(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setLoadMore(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.widget.EditText access$300(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setUnreadMessages(org.json.JSONArray); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { org.json.JSONArray access$500(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout delegate(); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { org.json.JSONArray access$502(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,org.json.JSONArray); }
-keepclassmembers class okio.ForwardingTimeout { boolean hasDeadline(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void <init>(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { au.com.wallaceit.reddinator.Reddinator access$600(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void showAlertDialog(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okio.ForwardingTimeout { okio.ForwardingTimeout setDelegate(okio.Timeout); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter access$700(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$000(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.content.res.Resources access$800(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { android.content.SharedPreferences access$100(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.widget.TextView access$900(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okio.GzipSource { void consumeTrailer(); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void loadDefaults(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$300(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { int access$200(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean syncAllFilters(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$302(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity,boolean); }
-keepclassmembers class okio.GzipSource { void updateCrc(okio.Buffer,long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void loadPopularSubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void openSidebar(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void returnResult(org.json.JSONObject,boolean); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean isEmptyElementTag(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$5 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,java.lang.String,java.lang.String,android.widget.ImageView,android.widget.ImageView); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void showFeedPrefsDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void search(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$5 { void run(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class okio.GzipSource { void close(); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class okio.GzipSource { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void setThemeColors(); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,boolean,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onBackPressed(); }
-keepclassmembers class okio.GzipSource { okio.Timeout timeout(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void showSortDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void startActivityAndFinish(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { void registerForScrollChanged(android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void unregisterForScrollChanged(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class android.widget.PopupWindow { boolean access$700(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { int[] access$800(); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$1000(android.widget.PopupWindow); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onResume(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1200(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1300(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1400(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <clinit>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1500(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1602(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1702(com.android.internal.app.AlertController,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView access$1102(com.android.internal.app.AlertController,android.widget.ListView); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeIntValue(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.content.res.XmlBlock$Parser { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(float[]); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(int,float[]); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class android.graphics.Interpolator { int nativeTimeToValues(long,int,float[]); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void <init>(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void <init>(int,int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$000(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$100(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$200(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void setTitle(int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$300(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class okhttp3.Dns$1 { void <init>(); }
-keepclassmembers class okhttp3.Dns$1 { java.util.List lookup(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void triggerThunbnailCacheClean(); }
-keepclassmembers class android.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level parse(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void run(); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void <init>(okio.BufferedSource); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { int access$002(okhttp3.internal.framed.NameValueBlockReader,int); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { int access$000(okhttp3.internal.framed.NameValueBlockReader); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class java.util.logging.Level { java.lang.String getName(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void close(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void doneReading(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onSubredditInfoLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { java.util.List readNameValueBlock(int); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { okio.ByteString readByteString(); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void <init>(android.graphics.drawable.Ripple); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.logging.Level { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.util.logging.Level { int hashCode(); }
-keepclassmembers class java.util.logging.Level { java.lang.String toString(); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class java.io.FileWriter { void <init>(java.io.File); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.os.ParcelFileDescriptor$1 { void <init>(); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onWindowFocusChanged(boolean); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround$1 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround$1 { void onGlobalLayout(); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[]); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.animation.LayoutTransition { long access$314(android.animation.LayoutTransition,long); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$400(android.animation.LayoutTransition); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$600(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1000(); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$1200(android.animation.LayoutTransition); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1400(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getEnd(); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getStart(); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { void <clinit>(); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setDirection(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.preference.PreferenceFragment$2 { void <init>(android.preference.PreferenceFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void <init>(android.content.Context,android.content.SharedPreferences); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { android.content.SharedPreferences access$000(au.com.wallaceit.reddinator.core.ThemeManager); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme access$100(au.com.wallaceit.reddinator.core.ThemeManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void loadThemes(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setRelative(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { void <init>(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean validateThemeJson(org.json.JSONObject); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$2 { void <init>(android.content.Context); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void <init>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getDisabledThemeAttrColor(android.content.Context,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromHttp2(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireInterruptibly(int); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromSpdy3Rst(int); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int,float); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromSpdyGoAway(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void clearPreviewTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme cloneTheme(java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.util.TypedValue getTypedValue(); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode[] values(); }
-keepclassmembers class android.preference.PreferenceActivity$2 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void deleteCustomTheme(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.preference.PreferenceActivity$2 { void onClick(android.view.View); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme getActiveTheme(java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(byte[],int,int); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void verify(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$5 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,java.util.List,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { java.lang.String getPreviewName(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$5 { void execute(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme getTheme(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { org.json.JSONObject getThemeJSON(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { java.util.LinkedHashMap getThemeList(int); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireInterruptibly(int); }
-keepclassmembers class android.app.FragmentState { void <init>(android.app.Fragment); }
-keepclassmembers class android.app.FragmentState { android.app.Fragment instantiate(android.app.Activity,android.app.Fragment); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean importTheme(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean isThemeEditable(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void saveCustomTheme(java.lang.String,au.com.wallaceit.reddinator.core.ThemeManager$Theme); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean savePreviewTheme(); }
-keepclassmembers class android.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class android.app.FragmentState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean setPreviewTheme(org.json.JSONObject); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$9 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$9 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void <init>(okio.BufferedSource,int,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readData(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(java.util.List); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int size(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.util.Set getCriticalExtensionOIDs(); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readGoAway(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferAfterCancelledWait(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { java.util.List readHeaderBlock(int,short,byte,int); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readHeaders(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void verify(java.security.PublicKey); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPing(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void <init>(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$1 { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void <init>(au.com.wallaceit.reddinator.service.MailCheckService,au.com.wallaceit.reddinator.service.MailCheckService$1); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPriority(okhttp3.internal.framed.FrameReader$Handler,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPriority(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPushPromise(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$ImageWebViewClient { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void <init>(au.com.wallaceit.reddinator.core.SubredditManager,au.com.wallaceit.reddinator.core.SubredditManager$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$ImageWebViewClient { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity,au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void <init>(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { org.json.JSONArray doInBackground(java.lang.Void[]); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readRstStream(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { java.util.List access$000(org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class libcore.util.Objects { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readSettings(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry,java.util.jar.JarFile); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { int hashCode(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readWindowUpdate(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void close(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { boolean nextFrame(okhttp3.internal.framed.FrameReader$Handler); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readConnectionPreface(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder encodedPath(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void dispose(); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void <clinit>(); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void <init>(int,okhttp3.internal.framed.FramedConnection,boolean,boolean,java.util.List); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap$Values { int size(); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.content.ComponentName$1 { android.content.ComponentName createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int); }
-keepclassmembers class android.content.ComponentName$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$1000(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$1200(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedStream$StreamTimeout access$1100(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void setEpicenter(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { int access$600(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedConnection access$500(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedStream$StreamTimeout access$700(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(android.app.ActivityTransitionCoordinator$1); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.ErrorCode access$800(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$900(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void cancelStreamIfNecessary(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void checkOutNotClosed(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean closeInternal(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void waitForIo(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void addBytesToWriteWindow(long); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void close(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void closeLater(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.widget.TextView$Drawables { void resolveWithLayoutDirection(int); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { int getId(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { java.util.List getResponseHeaders(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class android.widget.FrameLayout { void setVisibility(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class android.widget.TextView$Drawables { void updateDrawablesLayoutDirection(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.widget.FrameLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.FrameLayout { void drawableStateChanged(); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Sink getSink(); }
-keepclassmembers class android.widget.FrameLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Source getSource(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean isLocallyInitiated(); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean isOpen(); }
-keepclassmembers class android.widget.FrameLayout { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Timeout readTimeout(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveData(okio.BufferedSource,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveFin(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { int access$100(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1002(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1102(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class android.view.InputDevice { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveHeaders(java.util.List,okhttp3.internal.framed.HeadersMode); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1202(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { java.util.ArrayList access$1300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1400(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.app.ProgressDialog access$1500(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.app.ProgressDialog access$1502(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.app.ProgressDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.widget.ArrayAdapter access$1800(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1700(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1900(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$200(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$2000(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter access$300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter access$302(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class android.view.InputDevice { java.lang.String toString(); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveRstStream(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$400(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$500(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.content.res.Resources access$600(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter access$700(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.widget.Button access$900(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.content.SharedPreferences access$800(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void finishWidgetSetup(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void refreshSubredditsList(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Timeout writeTimeout(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void setLoginButton(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class android.os.UserHandle { int getIdentifier(); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void setThemeColors(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.view.InputDevice { void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { void <init>(java.util.Enumeration,java.util.jar.JarFile); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { boolean hasMoreElements(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.util.jar.JarEntry nextElement(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showFeedPrefsDialog(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$3 { void <init>(int); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.lang.Object nextElement(); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper { void handleThemeInstall(android.content.Context,au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface,org.json.JSONObject,java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { org.apache.harmony.security.asn1.ASN1Boolean getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.FrameLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <clinit>(); }
-keepclassmembers class android.widget.FrameLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showFilterEditDialog(); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiDeleteDialog(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity$4 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class android.preference.PreferenceActivity$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { void <init>(au.com.wallaceit.reddinator.Reddinator,java.lang.String,java.lang.String,java.lang.String,boolean,au.com.wallaceit.reddinator.tasks.SubmitTask$Callback); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey getPublicKey(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] getEncoded(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiEditDialog(java.lang.String); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey generateKeyForAlgorithm(java.security.spec.KeySpec,java.lang.String); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[],org.apache.harmony.security.x509.SubjectPublicKeyInfo$1); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$TabClickListener { void <init>(au.com.wallaceit.reddinator.ui.SimpleTabsWidget,int); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$100(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$TabClickListener { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$7 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addDependency(android.animation.AnimatorSet$Dependency); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { int access$300(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <clinit>(); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$200(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$202(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class android.widget.HorizontalScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.HorizontalScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.HorizontalScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class android.widget.HorizontalScrollView$SavedState { void <clinit>(); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiRenameDialog(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$1 { void <init>(au.com.wallaceit.reddinator.ui.RWebView,android.webkit.WebView$HitTestResult); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showSortDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showViewDomainDialog(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder peekService(android.content.Intent,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showWidgetThemeDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void updateFeedAndFinish(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] doubleCapacity(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] makeTable(int); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onBackPressed(); }
-keepclassmembers class java.io.InputStreamReader { int read(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void post(java.lang.Runnable); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$6 { void run(); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object fromToken(android.content.Context,java.lang.Object); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object getMediaController(android.app.Activity); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class java.io.InputStreamReader { boolean isOpen(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid$1 { void <init>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object getSessionToken(java.lang.Object); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(long); }
-keepclassmembers class java.util.Hashtable { void <clinit>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { void setMediaController(android.app.Activity,java.lang.Object); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$600(java.util.Hashtable); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.Locale); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { okhttp3.MediaType contentType(); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { void <init>(); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { okio.BufferedSource source(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { long contentLength(); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class java.util.ArrayDeque { void allocateElements(int); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class java.util.GregorianCalendar { void fullFieldsCalc(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { int getCount(); }
-keepclassmembers class android.widget.IconTextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { java.lang.String getItemKey(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onRandomSubredditLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <clinit>(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { long getItemId(int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List allSubjectAltNames(java.security.cert.X509Certificate); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onResume(); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object removeFirst(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onStart(); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onSubscriptionEditComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.Object[],org.json.JSONObject); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.security.Signature { java.security.Signature getSignature(java.lang.String,java.security.Provider); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class java.util.Arrays$ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class java.util.ArrayDeque { boolean removeFirstOccurrence(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { boolean hasLandscapeAndPortraitLayouts(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class java.util.ArrayDeque { boolean add(java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { boolean delete(int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class java.security.Signature { java.lang.String getAlgorithm(); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.cert.Certificate); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class java.util.ArrayDeque { int size(); }
-keepclassmembers class java.util.ArrayDeque { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$4 { void <init>(au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { void <init>(okhttp3.CookieJar); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { java.lang.String cookieHeader(java.util.List); }
-keepclassmembers class java.util.ArrayDeque { boolean isEmpty(); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class java.util.ArrayDeque { boolean remove(java.lang.Object); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { org.apache.harmony.security.asn1.ASN1UTCTime getInstance(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class java.security.Signature { void update(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void startupTasks(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.widget.RemoteViews { void recalculateMemoryUsage(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.ArrayDeque { int access$300(java.util.ArrayDeque); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object[] access$400(java.util.ArrayDeque); }
-keepclassmembers class java.util.ArrayDeque { int access$200(java.util.ArrayDeque); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider access$000(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { boolean access$500(java.util.ArrayDeque,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.BufferedSink access$300(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { int access$502(okhttp3.internal.http.Http1xStream,int); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class android.widget.RemoteViews { void addAction(android.widget.RemoteViews$Action); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { int access$500(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.OkHttpClient access$900(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$2 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void <init>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void detachTimeout(okio.ForwardingTimeout); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2,android.app.Dialog); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source getTransferStream(okhttp3.Response); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewText(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setViewVisibility(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void finishUpdate(android.view.View); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void finishUpdate(android.view.ViewGroup); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void finishRequest(); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.widget.Toolbar$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink newChunkedSink(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { float getPageWidth(int); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newChunkedSource(okhttp3.HttpUrl); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(byte[],int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink newFixedLengthSink(long); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewBitmap(int,android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newFixedLengthSource(long); }
-keepclassmembers class android.widget.RemoteViews { void setEmptyView(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newUnknownLengthSource(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void restoreState(android.os.Parcelable,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.view.PagerAdapter { android.os.Parcelable saveState(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.View,int,java.lang.Object); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int next(); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { void nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews { void setOnClickPendingIntent(int,android.app.PendingIntent); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setViewPagerObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.RemoteViews { void setPendingIntentTemplate(int,android.app.PendingIntent); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Headers readHeaders(); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Response$Builder readResponse(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void startUpdate(android.view.View); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void startUpdate(android.view.ViewGroup); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBitString(); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void writeRequest(okhttp3.Headers,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Response$Builder readResponseHeaders(); }
-keepclassmembers class android.widget.RemoteViews { void setTextColor(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setRemoteAdapter(int,int,android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readEnumerated(); }
-keepclassmembers class android.widget.RemoteViews { void setRemoteAdapter(int,android.content.Intent); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBoolean(); }
-keepclassmembers class android.widget.RemoteViews { void setScrollPosition(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readGeneralizedTime(); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$3$1 { android.graphics.Bitmap doInBackground(android.net.Uri[]); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$3$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class android.widget.RemoteViews { void setInt(int,java.lang.String,int); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class android.widget.RemoteViews { void setCharSequence(int,java.lang.String,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readUTCTime(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.widget.RemoteViews { void setBitmap(int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.view.KeyCharacterMap { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(float); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$Bound$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$7 { void <init>(android.view.ViewGroup,java.util.ArrayList,java.util.Map); }
-keepclassmembers class java.util.GregorianCalendar { int computeYearAndDay(long,long); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int strToInt(int,int); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class java.util.GregorianCalendar { long daysFromBaseYear(long); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { void <init>(boolean); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readInteger(); }
-keepclassmembers class org.json.JSONStringer$Scope { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { void <init>(); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onData(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onHeaders(int,java.util.List,boolean); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { void <init>(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class org.json.JSONStringer$Scope { void <clinit>(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { java.lang.String getMessage(); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onRequest(int,java.util.List); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOctetString(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(boolean,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { org.apache.harmony.security.asn1.ASN1Exception expected(java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(int); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class android.transition.Slide$6 { void <init>(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(boolean,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOID(); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { void onReset(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.text.style.SuperscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class android.widget.RemoteViews { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class java.util.GregorianCalendar { int getOffset(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class android.widget.RemoteViews { android.widget.RemoteViews$BitmapCache access$400(android.widget.RemoteViews); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class java.util.GregorianCalendar { int julianError(); }
-keepclassmembers class java.util.GregorianCalendar { int mod(int,int); }
-keepclassmembers class java.util.GregorianCalendar { int mod7(long); }
-keepclassmembers class android.widget.RemoteViews { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class java.util.GregorianCalendar { void roll(int,int); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getBuffer(); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getOffset(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getTagOffset(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int read(); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsUserCerts(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsCACerts(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readContent(); }
-keepclassmembers class android.content.res.TypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class java.util.ArrayList { int newCapacity(int); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setIndirectCRL(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsAttributeCerts(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void <init>(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$202(okhttp3.internal.framed.FramedStream$FramedDataSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void emitDataFrame(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$200(okhttp3.internal.framed.FramedStream$FramedDataSink); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$400(okhttp3.internal.framed.FramedStream$FramedDataSink); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$1 { void <init>(au.com.wallaceit.reddinator.core.RedditData); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Href { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { java.lang.Object call(); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[]); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class java.util.ArrayList { java.lang.IndexOutOfBoundsException throwIndexOutOfBoundsException(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$1 { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$OverrideClient { void <init>(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[]); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$OverrideClient { void <init>(au.com.wallaceit.reddinator.activity.OAuthView,au.com.wallaceit.reddinator.activity.OAuthView$1); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class java.util.GregorianCalendar { void roll(int,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void close(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void flush(); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class java.nio.CharSequenceAdapter { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toNanos(long); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(okhttp3.ConnectionSpec); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$6 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { boolean access$000(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(boolean); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { boolean access$300(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] copyOfRange(float[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { okio.Timeout timeout(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec build(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void write(okio.Buffer,long); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class java.util.ArrayList { void trimToSize(); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class java.util.ArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class java.util.ArrayList { int hashCode(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] deepCopyNodes(android.support.graphics.drawable.PathParser$PathDataNode[]); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void extract(java.lang.String,int,android.support.graphics.drawable.PathParser$ExtractFloatResult); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class java.io.Reader { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void <init>(com.android.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$10 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean invoke(); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isEnabled(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$10 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setEnabled(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { int getGroupId(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { int getOrdering(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { int getItemId(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setAlphabeticShortcut(char); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setNumericShortcut(char); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { void <init>(java.lang.String,int,java.util.List,java.util.List); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.SubMenu getSubMenu(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean hasSubMenu(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setSubMenu(com.android.internal.view.menu.SubMenuBuilder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setAlpha(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { float getAlpha(); }
-keepclassmembers class java.net.NetworkInterface { int getIndex(); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.CommentTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String[] readIfInet6Lines(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.CharSequence getTitle(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setTitle(java.lang.CharSequence); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.CommentTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[]); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setTitleCondensed(java.lang.CharSequence); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean canApplyTheme(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setIcon(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isCheckable(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setCheckable(boolean); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv4Address(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setExclusiveCheckable(boolean); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isExclusiveCheckable(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setCheckedInt(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setChecked(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class java.net.NetworkInterface { int readIntFile(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isVisible(); }
-keepclassmembers class java.net.NetworkInterface { java.net.SocketException rethrowAsSocketException(java.lang.Exception); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByInetAddress(java.net.InetAddress); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean setVisibleInt(boolean); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setVisible(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.text.MeasuredText { void setPos(int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setMenuInfo(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class java.net.NetworkInterface { java.util.List getNetworkInterfacesList(); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { void <init>(); }
-keepclassmembers class java.net.NetworkInterface { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.NetworkInterface { int hashCode(); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isActionButton(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setActionView(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setActionView(int); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { okhttp3.CertificatePinner build(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setShowAsAction(int); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException failedVerification(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(java.lang.String,java.util.jar.Manifest,java.util.HashMap); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setActionProvider(android.view.ActionProvider); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean expandActionView(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.ActionProvider getActionProvider(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean hasCollapsibleActionView(); }
-keepclassmembers class java.util.jar.JarVerifier { java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class java.net.NetworkInterface { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class java.util.jar.JarVerifier { boolean readCertificates(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.util.jar.JarVerifier { void verifyCertificate(java.lang.String); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void close(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void jumpToCurrentState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.io.OutputStream { void close(); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void flush(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { okio.Timeout timeout(); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void write(okio.Buffer,long); }
-keepclassmembers class java.util.jar.JarVerifier { boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean); }
-keepclassmembers class java.util.jar.JarVerifier { boolean isSignedJar(); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getTimeFormat(int); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class java.util.jar.JarVerifier { void removeMetaEntries(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field checkAndGetReflectionField(java.io.ObjectStreamField); }
-keepclassmembers class org.apache.commons.lang3.text.translate.AggregateTranslator { void <init>(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.AggregateTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newEntryArray(int); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass createClassDesc(java.lang.Class); }
-keepclassmembers class java.math.Conversion { java.lang.String toDecimalScaledString(long,int); }
-keepclassmembers class java.util.WeakHashMap { void computeMaxSize(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityHoneycomb { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(int); }
-keepclassmembers class java.io.ObjectStreamClass { void buildFieldDescriptors(java.lang.reflect.Field[]); }
-keepclassmembers class android.view.ViewStub { void draw(android.graphics.Canvas); }
-keepclassmembers class java.net.InetAddress { void <init>(int,byte[],java.lang.String); }
-keepclassmembers class android.view.ViewStub { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewStub { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewStub { void setVisibility(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class android.view.ViewStub { android.view.View inflate(); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class java.lang.IntegralToString$1 { char[] initialValue(); }
-keepclassmembers class java.lang.IntegralToString$1 { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.IntegralToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.WeakHashMap { void poll(); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void removeEntry(java.util.WeakHashMap$Entry); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { long computeSerialVersionUID(java.lang.Class,java.lang.reflect.Field[]); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class java.math.Conversion { double bigInteger2Double(java.math.BigInteger); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByNameImpl(java.lang.String,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress makeInetAddress(byte[],java.lang.String); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap { void rehash(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { boolean checkTag(int); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class android.os.Process { void setThreadPriority(int); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { org.apache.harmony.security.asn1.ASN1Enumerated getInstance(); }
-keepclassmembers class java.net.InetAddress { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <clinit>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getHostByAddrImpl(java.net.InetAddress); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForFieldSignature(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class java.net.InetAddress { boolean isNumeric(java.lang.String); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForSignature(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddress(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field fieldSerialPersistentFields(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { org.apache.harmony.security.asn1.ASN1Integer getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class,long); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class resolveConstructorClass(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { int toIntValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.math.BigInteger toBigIntegerValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object fromIntValue(int); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { long getConstructorId(java.lang.Class); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean inSamePackage(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] fields(); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getConstructorSignature(java.lang.reflect.Constructor); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField getField(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List getHierarchy(); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List makeHierarchy(); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { void copyFieldAttributes(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getFieldSignature(java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getLoadFields(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.reflect.Method); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamClass { byte getFlags(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasClinit(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperclass(); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isPrimitiveType(char); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class java.net.InetAddress { java.net.UnknownHostException badAddressLength(byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { void resolveProperties(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class java.net.InetAddress { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class java.net.InetAddress { byte[] ipv4MappedToIPv4(byte[]); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookupStreamClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.WeakHashMap getCache(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatLollipop { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class android.widget.Spinner { void setEnabled(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class android.widget.Spinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteReplace(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadResolve(); }
-keepclassmembers class android.content.ContentProvider$1 { void <init>(android.content.ContentProvider,android.content.ContentProvider$PipeDataWriter,android.os.ParcelFileDescriptor[],android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteReplace(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteObject(); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteObject(); }
-keepclassmembers class android.widget.Spinner { int getBaseline(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadResolve(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadObjectNoData(); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObject(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObjectNoData(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.Spinner { void onDetachedFromWindow(); }
-keepclassmembers class java.io.ObjectStreamClass { void setFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.io.ObjectStreamClass { void setClass(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContentProvider$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamClass { void initPrivateFields(java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { void setName(java.lang.String); }
-keepclassmembers class android.widget.Spinner { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.ObjectStreamClass { void setFlags(byte); }
-keepclassmembers class java.io.ObjectStreamClass { void setLoadFields(java.io.ObjectStreamField[]); }
-keepclassmembers class android.widget.Spinner { void onMeasure(int,int); }
-keepclassmembers class android.widget.Spinner { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { void setSuperclass(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectStreamClass { void setSerialVersionUID(long); }
-keepclassmembers class java.io.ObjectStreamClass { int primitiveSize(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class android.widget.Spinner { void layout(int,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcObjectClass(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator$1 { void <init>(au.com.wallaceit.reddinator.Reddinator); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.widget.Spinner { android.view.View makeView(int,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.widget.Spinner { void setUpChild(android.view.View,boolean); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcEnumClass(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void <init>(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.security.NoSuchAlgorithmException notFound(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.widget.Spinner { boolean performClick(); }
-keepclassmembers class android.widget.Spinner { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.Spinner { int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.widget.Spinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Spinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void startIfReady(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(okhttp3.Request); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setParameters(int,int,int,boolean); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(okhttp3.Request,okhttp3.Request$1); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.HttpUrl access$000(okhttp3.Request$Builder); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Headers$Builder access$200(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.RequestBody access$300(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { java.lang.Object access$400(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request build(); }
-keepclassmembers class okhttp3.Request$Builder { java.lang.String access$100(okhttp3.Request$Builder); }
-keepclassmembers class android.widget.ScrollBarDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder delete(okhttp3.RequestBody); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder get(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder headers(okhttp3.Headers); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class okio.Segment { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class okio.Segment { void <init>(okio.Segment); }
-keepclassmembers class okio.Segment { void <init>(byte[],int,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder post(okhttp3.RequestBody); }
-keepclassmembers class okio.Segment { void compact(); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class okio.Segment { okio.Segment pop(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder put(okhttp3.RequestBody); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder removeHeader(java.lang.String); }
-keepclassmembers class okio.Segment { okio.Segment push(okio.Segment); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(java.lang.String); }
-keepclassmembers class okio.Segment { okio.Segment split(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class java.util.Collections$SingletonList { void <init>(java.lang.Object); }
-keepclassmembers class okio.Segment { void writeTo(okio.Segment,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.widget.ScrollBarDrawable mutate(); }
-keepclassmembers class java.util.Collections$SingletonList { java.lang.Object get(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlpha(int); }
-keepclassmembers class java.util.Collections$SingletonList { int size(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.util.List); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(okhttp3.HttpUrl); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.util.List); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.transition.Slide$5 { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.widget.ArrayAdapter { void addAll(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateMirrorMatrix(float); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { org.apache.harmony.security.x509.NameConstraints decode(byte[]); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.widget.ArrayAdapter { void clear(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.http.HttpDate { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ArrayAdapter { void sort(java.util.Comparator); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.lang.String format(java.util.Date); }
-keepclassmembers class android.widget.IconButton { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.util.Date parse(java.lang.String); }
-keepclassmembers class android.widget.ArrayAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.app.BackStackRecord$1 { void <init>(android.app.BackStackRecord,android.view.View,java.util.ArrayList,android.app.Fragment,android.transition.Transition,android.transition.Transition,android.app.BackStackRecord$TransitionState,boolean,java.util.ArrayList,android.app.Fragment,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.widget.ArrayAdapter { void init(android.content.Context,int,int,java.util.List); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.Collections$SingletonSet { void <init>(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.util.Collections$SingletonSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.widget.ArrayAdapter { int getPosition(java.lang.Object); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class java.lang.Math { double hypot(double,double); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(long,int,boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setAlpha(int); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ArrayAdapter { void setDropDownViewResource(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.ArrayAdapter createFromResource(android.content.Context,int,int); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean isStateful(); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onLevelChange(int); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.lang.Math { double toDegrees(double); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void clearMutated(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[],org.apache.harmony.security.x509.NameConstraints$1); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class android.app.LoaderManagerImpl { void <init>(java.lang.String,android.app.Activity,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyState(android.content.res.TypedArray); }
-keepclassmembers class okio.Timeout { okio.Timeout clearDeadline(); }
-keepclassmembers class okio.Timeout { void <clinit>(); }
-keepclassmembers class okio.Timeout { void <init>(); }
-keepclassmembers class android.app.LoaderManagerImpl { void updateActivity(android.app.Activity); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List); }
-keepclassmembers class okio.Timeout { okio.Timeout clearTimeout(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { javax.security.auth.x500.X500Principal getX500Principal(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName(java.lang.String); }
-keepclassmembers class okio.Timeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class okio.Timeout { long deadlineNanoTime(); }
-keepclassmembers class okio.Timeout { boolean hasDeadline(); }
-keepclassmembers class okio.Timeout { void throwIfReached(); }
-keepclassmembers class okio.Timeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName0(java.lang.String); }
-keepclassmembers class okio.Timeout { long timeoutNanos(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List,org.apache.harmony.security.x501.Name$1); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.util.List access$100(org.apache.harmony.security.x501.Name); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity,au.com.wallaceit.reddinator.activity.SubmitActivity$1); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void initializeWithState(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.Future submit(java.lang.Runnable); }
-keepclassmembers class android.os.ResultReceiver$MyResultReceiver { void <init>(android.os.ResultReceiver); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toNanos(long); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Protocol access$100(okhttp3.Response$Builder); }
-keepclassmembers class java.net.ProxySelectorImpl { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Request access$000(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { long access$1100(okhttp3.Response$Builder); }
-keepclassmembers class java.net.ProxySelectorImpl { void <init>(); }
-keepclassmembers class okhttp3.Response$Builder { java.lang.String access$300(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { long access$1000(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { int access$200(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(okhttp3.Response,okhttp3.Response$1); }
-keepclassmembers class java.net.ProxySelectorImpl { java.util.List select(java.net.URI); }
-keepclassmembers class android.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Headers$Builder access$500(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Handshake access$400(okhttp3.Response$Builder); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy selectOneProxy(java.net.URI); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.ResponseBody access$600(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$700(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$900(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$800(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder body(okhttp3.ResponseBody); }
-keepclassmembers class okhttp3.Response$Builder { void checkSupportResponse(java.lang.String,okhttp3.Response); }
-keepclassmembers class java.net.ProxySelectorImpl { int getSystemPropertyInt(java.lang.String,int); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response build(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder cacheResponse(okhttp3.Response); }
-keepclassmembers class java.security.Security { void registerDefaultProviders(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy lookupProxy(java.lang.String,java.lang.String,java.net.Proxy$Type,int); }
-keepclassmembers class okhttp3.Response$Builder { void checkPriorResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder code(int); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder handshake(okhttp3.Handshake); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { java.lang.String toString(int[]); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder message(java.lang.String); }
-keepclassmembers class java.net.ProxySelectorImpl { boolean isNonProxyHost(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder headers(okhttp3.Headers); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder networkResponse(okhttp3.Response); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { void <clinit>(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder priorResponse(okhttp3.Response); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder receivedResponseAtMillis(long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void <clinit>(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder protocol(okhttp3.Protocol); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder request(okhttp3.Request); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { boolean isOID(java.lang.String); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void <init>(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder sentRequestAtMillis(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { int measureChildForCells(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.database.ContentObservable { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ActivityChooserModel { android.content.Context access$300(android.widget.ActivityChooserModel); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ActivityChooserModel { boolean access$602(android.widget.ActivityChooserModel,boolean); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$400(); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$500(android.widget.ActivityChooserModel); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.widget.ActivityChooserModel { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Void doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.util.Base64$Encoder { void <init>(int,byte[]); }
-keepclassmembers class android.content.BroadcastReceiver { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult goAsync(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasureExactFormat(int,int); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.IBinder peekService(android.content.Context,android.content.Intent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultCode(int); }
-keepclassmembers class android.util.Base64$Encoder { boolean process(byte[],int,int,boolean); }
-keepclassmembers class android.content.BroadcastReceiver { int getResultCode(); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultData(java.lang.String); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class android.content.BroadcastReceiver { java.lang.String getResultData(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { void <init>(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultExtras(android.os.Bundle); }
-keepclassmembers class android.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.Bundle getResultExtras(boolean); }
-keepclassmembers class java.io.FilterOutputStream { void flush(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.Protocol access$000(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.PushObserver access$100(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class android.content.BroadcastReceiver { void setResult(int,java.lang.String,android.os.Bundle); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { boolean access$200(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Listener access$300(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class java.security.Security { void renumProviders(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getAbortBroadcast(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { java.lang.String access$400(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { java.net.Socket access$500(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class android.content.BroadcastReceiver { void abortBroadcast(); }
-keepclassmembers class java.security.Security { void access$100(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okio.BufferedSink access$600(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { void clearAbortBroadcast(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okio.BufferedSource access$700(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isOrderedBroadcast(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection build(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isInitialStickyBroadcast(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder listener(okhttp3.internal.framed.FramedConnection$Listener); }
-keepclassmembers class android.content.BroadcastReceiver { void setOrderedHint(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void setPendingResult(android.content.BroadcastReceiver$PendingResult); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder protocol(okhttp3.Protocol); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult getPendingResult(); }
-keepclassmembers class android.content.BroadcastReceiver { int getSendingUserId(); }
-keepclassmembers class android.content.BroadcastReceiver { void setDebugUnregister(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getDebugUnregister(); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class android.graphics.Bitmap$CompressFormat { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap$CompressFormat { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$2 { void <init>(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class java.net.PlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$2 { void onHideCustomView(); }
-keepclassmembers class android.util.Base64$Encoder { void <clinit>(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context,android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context); }
-keepclassmembers class java.net.PlainSocketImpl { boolean usingSocks(); }
-keepclassmembers class java.net.PlainSocketImpl { void checkNotClosed(); }
-keepclassmembers class java.net.PlainSocketImpl { int available(); }
-keepclassmembers class java.net.PlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { boolean parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray); }
-keepclassmembers class java.net.PlainSocketImpl { void close(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int,int); }
-keepclassmembers class java.net.PlainSocketImpl { void create(boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void <init>(okio.BufferedSource); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void readContinuationHeader(); }
-keepclassmembers class java.net.PlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class java.net.PlainSocketImpl { void listen(int); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.InetAddress socksGetServerAddress(); }
-keepclassmembers class java.net.PlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { int socksGetServerPort(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.List getChangeLog(boolean); }
-keepclassmembers class android.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksConnect(java.net.InetAddress,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void close(); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { long read(okio.Buffer,long); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.Comparator getChangeLogComparator(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksRequestConnection(java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { void socksAccept(); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void dismissPopupMenus(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.net.PlainSocketImpl { void socksBind(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { boolean hasNationalNumberPattern(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getLocalizedChangeLog(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.lang.String getLog(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksSendRequest(int,java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.lang.String getLog(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.Socks4Message socksReadReply(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.json.JSONArray { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getMasterChangeLog(boolean); }
-keepclassmembers class java.io.SerializationHandleMap { void <init>(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLog(org.xmlpull.v1.XmlPullParser,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class java.io.SerializationHandleMap { void resizeArrays(int); }
-keepclassmembers class java.net.PlainSocketImpl { int read(byte[],int,int); }
-keepclassmembers class org.json.JSONArray { void <init>(org.json.JSONTokener); }
-keepclassmembers class java.io.SerializationHandleMap { int get(java.lang.Object); }
-keepclassmembers class org.json.JSONArray { void <init>(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void write(byte[],int,int); }
-keepclassmembers class java.io.SerializationHandleMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.io.SerializationHandleMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class java.net.PlainSocketImpl { int access$000(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class org.json.JSONArray { int length(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean hasSupportDividerBeforeChildAt(int); }
-keepclassmembers class java.net.PlainSocketImpl { void access$100(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLogFromResource(int,boolean); }
-keepclassmembers class java.io.SerializationHandleMap { int put(java.lang.Object,int); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class org.json.JSONArray { org.json.JSONArray put(java.lang.Object); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String getLastPathSegment(); }
-keepclassmembers class java.io.SerializationHandleMap { void rehash(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.io.SerializationHandleMap { int remove(java.lang.Object); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity$Header$1 { void <init>(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onDetachedFromWindow(); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void <init>(); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class org.json.JSONArray { java.lang.Object get(int); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.content.Context access$100(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.webkit.WebChromeClient$CustomViewCallback access$200(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { int compareTo(java.lang.Object); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { au.com.wallaceit.reddinator.ui.TabWebFragment init(java.lang.String,int,boolean); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void load(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void load(java.lang.String); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class android.database.AbstractCursor { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.WebViewActivity); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void checkCacheVersion(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { org.apache.harmony.security.asn1.ASN1BitString getInstance(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean cancelExitingRipples(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String map2AlgName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setAlpha(int); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.json.JSONArray { java.lang.String getString(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void <init>(android.app.Activity,android.view.ViewGroup,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void selectEntries(java.security.Provider); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void findViewsWithText(java.util.ArrayList,android.view.ViewGroup,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class org.json.JSONArray { org.json.JSONArray getJSONArray(int); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class org.json.JSONArray { org.json.JSONObject getJSONObject(int); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void run(); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class java.math.BigInt { void shift(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.math.BigInt { void multiplyByPositiveInt(int); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { boolean isOID(java.lang.String); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onDestroy(); }
-keepclassmembers class org.json.JSONArray { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class org.json.JSONArray { boolean equals(java.lang.Object); }
-keepclassmembers class org.json.JSONArray { void writeTo(org.json.JSONStringer); }
-keepclassmembers class org.json.JSONArray { int hashCode(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$2 { void <init>(au.com.wallaceit.reddinator.Reddinator,org.json.JSONObject,android.content.Context,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registrationComplete(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent superGetParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(long); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String nativeAxisToString(int); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$7 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class java.text.NumberFormat { int getMaximumFractionDigits(); }
-keepclassmembers class java.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$7 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(); }
-keepclassmembers class java.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { void <init>(int,int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { int access$100(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { okhttp3.internal.framed.Huffman$Node[] access$000(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { int access$200(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void <init>(android.view.View); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void applySupportBackgroundTint(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean shouldApplyFrameworkTintUsingColorFilter(); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class android.text.Selection { void selectAll(android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void removeRipple(android.graphics.drawable.Ripple); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getRippleIndex(android.graphics.drawable.Ripple); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void onSetBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setInternalBackgroundTint(android.content.res.ColorStateList); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class libcore.io.HeapBufferIterator { void <init>(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class libcore.io.HeapBufferIterator { void seek(int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void skip(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class libcore.io.HeapBufferIterator { int readInt(); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class libcore.io.HeapBufferIterator { short readShort(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void dispatchFitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class libcore.io.HeapBufferIterator { libcore.io.BufferIterator iterator(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.app.SearchableInfo { java.lang.String getSuggestAuthority(); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.app.SearchableInfo { boolean useBadgeLabel(); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getProviders(); }
-keepclassmembers class android.app.SearchableInfo { boolean useBadgeIcon(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$4 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onAttachedToWindow(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void initializeFromState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onDetachedFromWindow(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void initServiceInfo(java.security.Provider); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class android.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context getActivityContext(android.content.Context); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context createActivityContext(android.content.Context,android.content.ComponentName); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void appendServiceLocked(java.lang.String,java.security.Provider$Service); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int getCacheVersion(); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getTimeInstance(int,java.util.Locale); }
-keepclassmembers class android.widget.ProgressBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider$Service getSecureRandomService(); }
-keepclassmembers class android.widget.ProgressBar { void onResolveDrawables(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class android.widget.ProgressBar { void postInvalidate(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class java.text.DateFormat { void setLenient(boolean); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.widget.ProgressBar { void doRefreshProgress(int,int,boolean,boolean); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class java.text.DateFormat { void checkTimeStyle(int); }
-keepclassmembers class android.widget.ProgressBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable[] getChildren(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.ProgressBar { void refreshProgress(int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setLayoutDirection(int); }
-keepclassmembers class android.widget.ProgressBar { void setSecondaryProgress(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.app.SearchableInfo { void addActionKey(android.app.SearchableInfo$ActionKeyInfo); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void startAnimation(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void <init>(okio.BufferedSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void writeContinuationFrames(int,long); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class android.widget.ProgressBar { void stopAnimation(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class android.widget.ProgressBar { void setVisibility(int); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class android.widget.ProgressBar { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.content.Intent { android.net.Uri getData(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void close(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void connectionPreface(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class android.widget.ProgressBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableBounds(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void data(boolean,int,okio.Buffer,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void dataFrame(int,byte,okio.Buffer,int); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class android.content.Intent { boolean getBooleanExtra(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void flush(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void frameHeader(int,int,byte,byte); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class android.widget.ProgressBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class android.widget.ProgressBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.app.BackStackRecord$3 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.content.Intent { int getIntExtra(java.lang.String,int); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.app.SearchableInfo { int getLabelId(); }
-keepclassmembers class android.app.SearchableInfo { int getIconId(); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void goAway(int,okhttp3.internal.framed.ErrorCode,byte[]); }
-keepclassmembers class android.app.SearchableInfo { boolean getVoiceSearchEnabled(); }
-keepclassmembers class android.widget.ProgressBar { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class android.app.SearchableInfo { int getInputType(); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class android.app.SearchableInfo { int getImeOptions(); }
-keepclassmembers class android.widget.ProgressBar { void drawableStateChanged(); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableState(); }
-keepclassmembers class android.util.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.app.SearchableInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$000(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class android.util.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void headers(boolean,int,java.util.List); }
-keepclassmembers class android.widget.ProgressBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class android.util.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.widget.ProgressBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ProgressBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.widget.ProgressBar { void onAttachedToWindow(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { int maxDataLength(); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void ping(boolean,int,int); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$100(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$102(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class android.util.PathParser { void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$202(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.ProgressBar { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$302(android.view.View$ListenerInfo,android.view.View$OnKeyListener); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1200(android.view.View$ListenerInfo); }
-keepclassmembers class android.widget.ProgressBar { void scheduleAccessibilityEventSender(); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$3 { void <init>(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void access$1600(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,java.lang.String); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void apply(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void createMulti(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class android.app.SearchableInfo { void <clinit>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getCount(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.app.SearchDialog$5 { void <init>(android.app.SearchDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { long getItemId(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getItemViewType(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { java.lang.Object getItem(int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void settings(okhttp3.internal.framed.Settings); }
-keepclassmembers class android.content.Intent { int getFlags(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { org.json.JSONObject getItem(int); }
-keepclassmembers class android.content.Intent { android.os.Bundle getExtras(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[]); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$2 { void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { org.apache.harmony.security.pkcs7.SignedData getSignedData(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void synStream(boolean,boolean,int,int,java.util.List); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void windowUpdate(int,long); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(boolean[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void setBit(int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(byte[],int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean getBit(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[],org.apache.harmony.security.pkcs7.ContentInfo$1); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.os.AsyncTask$3 { void <init>(android.os.AsyncTask,java.util.concurrent.Callable); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean[] toBooleanArray(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class android.os.AsyncTask$3 { void done(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadPostTask$Callback); }
-keepclassmembers class android.content.Intent { android.content.Intent setData(android.net.Uri); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getViewTypeCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void refreshMultis(); }
-keepclassmembers class android.content.Intent { android.content.Intent setType(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { org.json.JSONArray doInBackground(java.lang.String[]); }
-keepclassmembers class android.view.MotionEvent { java.lang.String axisToString(int); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent setDataAndType(android.net.Uri,java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void <init>(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,boolean); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.os.Environment$UserEnvironment { void <init>(int); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class android.widget.ScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class java.math.BitLevel { boolean nonZeroDroppedBits(int,int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.Fragment$1 { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment$1 { void run(); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void <init>(okhttp3.internal.http.Http1xStream,long); }
-keepclassmembers class android.view.animation.Animation { android.view.animation.Animation clone(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$2 { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.animation.Animation { void reset(); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void <init>(okhttp3.internal.http.Http1xStream,long,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.animation.Animation { void detach(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void close(); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class android.view.animation.Animation { boolean isInitialized(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.view.animation.Animation { void initialize(int,int,int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void flush(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { okio.Timeout timeout(); }
-keepclassmembers class android.view.animation.Animation { void setListenerHandler(android.os.Handler); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void write(okio.Buffer,long); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] getExternalDirsForApp(); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.system.ErrnoException { java.net.SocketException rethrowAsSocketException(); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] buildExternalStoragePublicDirs(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.v4.app.SupportActivity { void <init>(); }
-keepclassmembers class android.support.v4.app.SupportActivity { android.support.v4.app.SupportActivity$ExtraData getExtraData(java.lang.Class); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class android.support.v4.app.SupportActivity { void putExtraData(android.support.v4.app.SupportActivity$ExtraData); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { void setStartTime(long); }
-keepclassmembers class android.view.animation.Animation { void start(); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class android.view.animation.Animation { boolean isFillEnabled(); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.view.animation.Animation { float getScaleFactor(); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.view.animation.Animation { long getStartTime(); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class android.view.animation.Animation { boolean getFillBefore(); }
-keepclassmembers class android.view.animation.Animation { boolean getFillAfter(); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtras(android.os.Bundle); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class java.lang.Short { double doubleValue(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class android.content.Intent { android.content.Intent setFlags(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void setup(int,float); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.content.Intent { android.content.Intent setPackage(java.lang.String); }
-keepclassmembers class java.lang.Short { long longValue(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String,int); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class android.content.Intent { android.content.Intent setClass(android.content.Context,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class android.content.Intent { void setSourceBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.security.cert.CertificateFactory { void <clinit>(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$20 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$20 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.AbsListView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean shouldDraw(); }
-keepclassmembers class android.support.v4.content.ContextCompatJellybean { void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationStart(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationRepeat(); }
-keepclassmembers class android.widget.AbsListView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationEnd(); }
-keepclassmembers class android.widget.RemoteViews$4 { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation,float); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int size(); }
-keepclassmembers class java.io.NotActiveException { void <init>(); }
-keepclassmembers class android.content.Intent { boolean filterEquals(android.content.Intent); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.view.animation.Animation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { float resolveSize(int,float,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void enter(boolean); }
-keepclassmembers class android.view.animation.Animation { void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation); }
-keepclassmembers class android.content.Intent { int filterHashCode(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exit(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class android.view.animation.Animation { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[]); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class libcore.icu.NativeNormalizer { int toUNormalizationMode(java.text.Normalizer$Form); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void createPendingHardwareExit(int,int,int); }
-keepclassmembers class android.view.animation.Animation { boolean hasAlpha(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class java.util.AbstractMap { void putAll(java.util.Map); }
-keepclassmembers class android.view.animation.Animation { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStarted(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalizeImpl(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { java.lang.String getId(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jump(); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void start(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void endSoftwareAnimations(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exitSoftware(int,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void decodeExtensionValue(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelSoftwareAnimations(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancel(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.String toUri(int); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.TimeInterpolator access$000(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void invalidateSelf(); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.ObjectAnimator access$202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.AnimatorListenerAdapter access$100(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean access$302(android.graphics.drawable.RippleBackground,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <clinit>(); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void scheduleAnimation(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(android.animation.ValueAnimator$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$2 { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getCertificates(); }
-keepclassmembers class android.content.Intent { void toUriFragment(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getSignerInfos(); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePattern(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.lang.String toString(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.content.Intent { void toUriInner(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { int access$000(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$100(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$400(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$300(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { org.apache.harmony.security.pkcs7.ContentInfo access$200(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$500(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List,org.apache.harmony.security.pkcs7.SignedData$1); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePatternCharacter(char); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class android.transition.Slide$2 { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object remove(int); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int[] access$100(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue,org.apache.harmony.security.x509.Extension$1); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { byte[] access$300(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean access$200(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer formatImpl(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void <init>(okhttp3.ConnectionPool,okhttp3.Address); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void deallocate(boolean,boolean,boolean); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void removeRange(int,int); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.content.Intent { android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$5 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class java.text.SimpleDateFormat { void append(java.lang.StringBuffer,java.text.FieldPosition,java.util.List,char,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void <init>(long,int); }
-keepclassmembers class android.transition.ChangeImageTransform { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int following(int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean); }
-keepclassmembers class libcore.icu.NativeBreakIterator { java.text.CharacterIterator getText(); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RouteDatabase routeDatabase(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.graphics.ColorMatrix { void <init>(float[]); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <init>(byte[]); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void acquire(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.graphics.ColorMatrix { void <init>(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { boolean hasMoreRoutes(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { long toNanos(long); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String,java.text.CharacterIterator); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection connection(); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean hasText(); }
-keepclassmembers class android.graphics.ColorMatrix { void set(android.graphics.ColorMatrix); }
-keepclassmembers class android.graphics.ColorMatrix { float[] getArray(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.graphics.ColorMatrix { void reset(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { java.util.List getAttributes(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int preceding(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List,org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { long getWordInstanceImpl(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setTextImpl(long,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int precedingImpl(long,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundaryImpl(long,java.lang.String,int); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void noNewStreams(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpStream stream(); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int currentImpl(long,java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFailed(java.io.IOException); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int followingImpl(long,java.lang.String,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.text.SimpleDateFormat { void appendDayOfWeek(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { void <init>(long,okhttp3.Request,okhttp3.Response); }
-keepclassmembers class android.animation.AnimatorInflater { void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFinished(boolean,okhttp3.internal.http.HttpStream); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMonth(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class java.net.URL { void fixURL(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { java.lang.String toString(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long cacheResponseAge(); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void appendTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long computeFreshnessLifetime(); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class java.net.URL { void setupStreamHandler(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumericTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMilliseconds(java.lang.StringBuffer,int,int); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean hasConditions(okhttp3.Request); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumber(java.lang.StringBuffer,int,int); }
-keepclassmembers class okio.AsyncTimeout$1 { void <init>(okio.AsyncTimeout,okio.Sink); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy getCandidate(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$6 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class okio.AsyncTimeout$1 { void close(); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean isFreshnessLifetimeHeuristic(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class okio.AsyncTimeout$1 { void flush(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$6 { void execute(); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date error(java.text.ParsePosition,int,java.util.TimeZone); }
-keepclassmembers class java.net.URL { java.net.URI toURI(); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class okio.AsyncTimeout$1 { okio.Timeout timeout(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy get(); }
-keepclassmembers class okio.AsyncTimeout$1 { void write(okio.Buffer,long); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.FontFamily { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$3 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class java.text.SimpleDateFormat { int parse(java.lang.String,int,char,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$3 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.FontFamily { boolean addFont(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class android.graphics.LinearGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.lang.String,int,boolean); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class java.net.URL { int getEffectivePort(); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontFromAsset(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFont(long,java.lang.String); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.lang.String,int,boolean); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontFromAsset(long,android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseFractionalSeconds(java.lang.String,int,int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(char[],int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseDayOfWeek(java.lang.String,int,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { int parseMonth(java.lang.String,int,int,int,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class java.lang.Double { long longValue(); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$2 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.lang.Double { int intValue(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$2 { void execute(); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Number parseNumber(int,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(java.lang.String); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseNumber(int,java.lang.String,int,int,int); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class libcore.reflect.AnnotationMember { libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class java.text.SimpleDateFormat { int parseText(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseTimeZone(java.lang.String,int); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateRange(long,long,int,java.lang.String); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateRange(java.util.Locale,java.util.TimeZone,long,long,int); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isFinal(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isNative(int); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isInterface(int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doDestroy(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPrivate(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStrict(int); }
-keepclassmembers class libcore.icu.DateIntervalFormat { long getFormatter(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String toSkeleton(java.util.Calendar,java.util.Calendar,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isSynchronized(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isTransient(int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportNextStart(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4$1 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity$4,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doRetain(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportStart(); }
-keepclassmembers class java.lang.reflect.Modifier { java.lang.String toString(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isConstructor(int); }
-keepclassmembers class android.preference.PreferenceActivity$3 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4$1 { void run(); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean invalidatesCache(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class android.preference.PreferenceActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String toPattern(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean permitsRequestBody(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void removeComposingSpans(android.text.Spannable); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStop(); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class android.support.v4.app.BackStackState { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean requiresRequestBody(java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackState { void <init>(android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean redirectsToGet(java.lang.String); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$100(android.os.Parcel); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean isMidnight(java.util.Calendar); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.transition.Slide$1 { void <init>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean onTheHour(java.util.Calendar); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallOnDifferentDates(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.support.v4.app.BackStackState { android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.transition.TransitionPropagation { void <init>(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallInSameMonth(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean isThisYear(java.util.Calendar); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallInSameYear(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class libcore.icu.DateIntervalFormat { int julianDay(java.util.Calendar); }
-keepclassmembers class libcore.icu.DateIntervalFormat { int dayDistance(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <clinit>(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { long createDateIntervalFormat(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void destroyDateIntervalFormat(long); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void finishRetain(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void access$000(long); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateInterval(long,long,long); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { boolean hasRunningLoaders(); }
-keepclassmembers class libcore.io.Streams { void readFully(java.io.InputStream,byte[],int,int); }
-keepclassmembers class libcore.io.Streams { byte[] readFully(java.io.InputStream); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { void <init>(int,int,int); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class libcore.io.Streams { int readSingleByte(java.io.InputStream); }
-keepclassmembers class android.support.v4.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okhttp3.internal.framed.Settings { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Settings { void clear(); }
-keepclassmembers class okhttp3.internal.framed.Settings { int flags(int); }
-keepclassmembers class libcore.io.Streams { byte[] readFullyNoClose(java.io.InputStream); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { android.graphics.pdf.PdfDocument$PageInfo$Builder setContentRect(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.framed.Settings { int get(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void <init>(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.FrameReader); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void <init>(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.FrameReader,okhttp3.internal.framed.FramedConnection$1); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { android.graphics.pdf.PdfDocument$PageInfo create(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class libcore.io.Streams { long skipByReading(java.io.InputStream,long); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void <init>(android.widget.Editor$HandleView); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void ackSettings(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getHeaderTableSize(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void data(boolean,int,okio.BufferedSource,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.Streams { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getMaxConcurrentStreams(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getInitialWindowSize(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x501.Name access$100(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void execute(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x509.GeneralNames access$000(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getMaxFrameSize(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void calculateColor(int); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { android.view.MenuItem getItem(); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean isPersisted(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$5 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void goAway(int,okhttp3.internal.framed.ErrorCode,okio.ByteString); }
-keepclassmembers class okhttp3.internal.framed.Settings { void merge(okhttp3.internal.framed.Settings); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { com.android.internal.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean isSet(int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByTenPow(java.math.BigInteger,long); }
-keepclassmembers class okhttp3.internal.framed.Settings { okhttp3.internal.framed.Settings set(int,int,int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByPositiveInt(java.math.BigInteger,int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean persistValue(int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void updateHostController(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { android.view.SubMenu setHeaderTitle(java.lang.CharSequence); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void headers(boolean,boolean,int,int,java.util.List,okhttp3.internal.framed.HeadersMode); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$2 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class okhttp3.internal.framed.Settings { int size(); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$2 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByFivePow(java.math.BigInteger,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onMeasure(int,int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.ThreadLocal$Values { void inheritValues(java.lang.ThreadLocal$Values); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class java.lang.ThreadLocal$Values { void initializeTable(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$14 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class java.lang.ThreadLocal$Values { void cleanUp(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$14 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class java.lang.ThreadLocal$Values { boolean rehash(); }
-keepclassmembers class android.widget.AbsListView$AbsPositionScroller { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void ping(boolean,int,int); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.ThreadLocal$Values { void add(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void priority(int,int,int,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void pushPromise(int,int,java.util.List); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void put(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void settings(boolean,okhttp3.internal.framed.Settings); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object getAfterMiss(java.lang.ThreadLocal); }
-keepclassmembers class android.app.AlertDialog { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.AlertDialog { android.widget.Button getButton(int); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class android.app.AlertDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class android.app.AlertDialog { void setView(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.Hpack { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal$Values { int next(int); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object[] access$000(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.util.zip.Inflater { void <init>(); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal$Values { int access$100(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.util.zip.Inflater { long createStream(boolean); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void windowUpdate(int,long); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.zip.Inflater { void endImpl(long); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setColor(int); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class android.app.AlertDialog { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { void <init>(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.Boolean); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { org.json.JSONArray filterThemes(org.json.JSONArray); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.app.AlertDialog { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.util.zip.Inflater { int getRemaining(); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class java.util.zip.Inflater { int getTotalOut(); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setSaturation(float); }
-keepclassmembers class java.util.zip.Inflater { long getTotalOutImpl(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { org.json.JSONArray doInBackground(java.lang.Void[]); }
-keepclassmembers class java.util.zip.Inflater { int inflateImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class android.transition.ChangeClipBounds { void <clinit>(); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[]); }
-keepclassmembers class java.util.zip.Inflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[],int,int); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class java.util.zip.Inflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { int setFileInput(java.io.FileDescriptor,long,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okio.ByteString access$100(okio.ByteString); }
-keepclassmembers class okhttp3.internal.framed.Hpack { java.util.Map access$200(); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okhttp3.internal.framed.Header[] access$000(); }
-keepclassmembers class okhttp3.internal.framed.Hpack { java.util.Map nameToFirstIndex(); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okio.ByteString checkLowercase(okio.ByteString); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler); }
-keepclassmembers class android.text.Html { java.lang.String toHtml(android.text.Spanned); }
-keepclassmembers class java.util.zip.Inflater { int setFileInputImpl(java.io.FileDescriptor,long,int,long); }
-keepclassmembers class android.text.Html { void withinDiv(java.lang.StringBuilder,android.text.Spanned,int,int); }
-keepclassmembers class android.text.Html { void withinHtml(java.lang.StringBuilder,android.text.Spanned); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void addActionBarHideOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class java.util.zip.Inflater { void checkOpen(); }
-keepclassmembers class android.support.v4.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class libcore.io.MemoryMappedFile { long size(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { boolean hasNext(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { java.lang.Object next(); }
-keepclassmembers class android.text.Html { java.lang.String getOpenParaTagWithDirection(android.text.Spanned,int,int); }
-keepclassmembers class android.text.Html { void withinBlockquote(java.lang.StringBuilder,android.text.Spanned,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void remove(); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.text.Html { void withinParagraph(java.lang.StringBuilder,android.text.Spanned,int,int,int,boolean); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class android.app.SharedElementCallback { void onSharedElementStart(java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postRemoveActionBarHideOffset(); }
-keepclassmembers class android.app.SharedElementCallback { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void removeActionBarHideOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postAddActionBarHideOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldHideActionBarOnFling(float,float); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathSegments getPathSegments(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$6 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.StaticLayout { void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$6 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getActionBarHideOffset(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void haltActionBarHideOffsetAnimations(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromDecoded(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { long native_get_long(java.lang.String,long); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class android.text.Html { void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.os.SystemProperties { long getLong(java.lang.String,long); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.LookupTranslator { void <init>(java.lang.CharSequence[][]); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onMeasure(int,int); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.LookupTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setIcon(int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token$1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void access$000(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { android.app.Dialog access$300(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { int access$200(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void access$400(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,int,android.content.Intent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void close(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class java.math.BigDecimal { void <init>(double); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void close(int,android.content.Intent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class java.math.BigDecimal { void <init>(double,java.math.MathContext); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { int[] onCreateDrawableState(int); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.Fragment$1 { android.view.View findViewById(int); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.ThreadGroup { int getMaxPriority(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.app.Fragment$1 { void <init>(android.app.Fragment); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class android.app.Fragment$1 { boolean hasView(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void sendAccessibilityEvent(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onSubscriptionEditComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.Object[],org.json.JSONObject); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDaemon(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void pullChildren(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDestroyed(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void setActionBarHideOffset(int); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void calculateColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onThemeResult(boolean); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class java.lang.ThreadGroup { void setMaxPriority(int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener); }
-keepclassmembers class java.lang.ThreadGroup { void setDaemon(boolean); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { int getOpacity(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onMeasure(int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class org.json.JSON { double checkDouble(double); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class org.json.JSON { java.lang.Boolean toBoolean(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setView(android.view.View); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class java.lang.ThreadGroup { void addThread(java.lang.Thread); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.json.JSON { java.lang.Integer toInteger(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class org.json.JSON { java.lang.Long toLong(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class org.json.JSON { java.lang.String toString(java.lang.Object); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.Object,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog show(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$102(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[],int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal divideBigIntegers(java.math.BigInteger,java.math.BigInteger,int,java.math.RoundingMode); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.android.internal.app.AlertController$4 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal dividePrimitiveLongs(long,long,int,java.math.RoundingMode); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setColor(int); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setOpacity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { android.content.res.Resources access$300(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme access$200(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void access$500(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { boolean access$402(au.com.wallaceit.reddinator.activity.ThemeEditorActivity,boolean); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void onBackPressed(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$3 { void onClick(android.view.View); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class java.lang.Integer { java.lang.NumberFormatException invalidInt(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity,au.com.wallaceit.reddinator.activity.ThemeEditorActivity$1); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void access$200(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void add(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void <init>(); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { double doubleValue(); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { android.net.Uri$PathSegments build(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void cleanupExec(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$3 { void execute(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$3 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[],okhttp3.internal.framed.Settings); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class java.lang.Integer { long longValue(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class java.io.Writer { void write(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void endAnimatingAwayFragments(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.transition.TransitionInflater { void <init>(android.content.Context); }
-keepclassmembers class java.lang.Integer { int parse(java.lang.String,int,int,boolean); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionInflater from(android.content.Context); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void ensureExecReady(boolean); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition inflateTransition(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toBinaryString(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { java.lang.String toString(); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.CertificateList$1); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executeOps(java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class java.math.BigDecimal { int signum(); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { boolean isZero(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.TBSCertList access$100(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { byte[] access$300(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal setScale(int,java.math.RoundingMode); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <clinit>(); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal setScale(int,int); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePoint(long); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePointRight(int); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.text.StaticLayout { int[] nLineBreakOpportunities(java.lang.String,char[],int,int[]); }
-keepclassmembers class java.math.BigDecimal { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.text.StaticLayout { void finish(); }
-keepclassmembers class android.text.StaticLayout { void prepare(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void forcePostponedTransactions(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.transition.TransitionInflater { java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveFragmentsToInvisible(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean modifiesAlpha(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.transition.TransitionInflater { void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int,java.util.TreeMap$1); }
-keepclassmembers class java.util.TreeMap$Bound { java.util.TreeMap$Bound[] values(); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.TreeMap$Bound { void <clinit>(); }
-keepclassmembers class java.io.FilterReader { void <init>(java.io.Reader); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.support.v4.view.ViewPager); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { int getNextVisibleChildIndex(int); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { boolean isStacked(); }
-keepclassmembers class java.math.BigDecimal { long longValue(); }
-keepclassmembers class java.math.BigDecimal { int intValue(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void setStacked(boolean); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.content.ComponentName { java.lang.String toShortString(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class java.math.BigDecimal { double doubleValue(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void scheduleCommit(); }
-keepclassmembers class android.content.ComponentName { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.transition.TransitionInflater { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class java.math.BigDecimal { int longCompareTo(long,long); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class android.graphics.ColorMatrixColorFilter { void <init>(android.graphics.ColorMatrix); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addBackStackState(android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$2 { void <init>(android.view.View,java.util.ArrayList); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addFragment(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.graphics.ColorMatrixColorFilter { void update(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$200(); }
-keepclassmembers class android.graphics.ColorMatrixColorFilter { long nativeColorMatrixFilter(float[]); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal zeroScaledBy(long); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { void <init>(android.util.MapCollections); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class java.security.SecureRandom { void <init>(); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { boolean contains(java.lang.Object); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class java.util.Hashtable$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.security.SecureRandom { void setSeed(byte[]); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class java.security.SecureRandom { void setSeed(long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.FragmentTransaction beginTransaction(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void completeShowHideFragment(android.support.v4.app.Fragment); }
-keepclassmembers class java.security.SecureRandom { void nextBytes(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.ComposeMessageTask$Callback,java.lang.String[]); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File); }
-keepclassmembers class java.security.SecureRandom { void <clinit>(); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void detachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { void <init>(android.content.Context,boolean,java.lang.Runnable); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getPositionDescription(); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class sun.misc.Unsafe { int arrayBaseOffset(java.lang.Class); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchActivityCreated(); }
-keepclassmembers class sun.misc.Unsafe { int arrayIndexScale(java.lang.Class); }
-keepclassmembers class sun.misc.Unsafe { int getArrayIndexScaleForComponentType(java.lang.Class); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,long,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class sun.misc.Unsafe { int getArrayBaseOffsetForComponentType(java.lang.Class); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class dalvik.system.DexFile { long openDexFile(java.lang.String,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void <init>(android.content.Context,au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ActivityInterface,au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.core.ThemeManager$Theme,int,org.json.JSONArray,boolean,boolean); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapLong(java.lang.Object,long,long,long); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeIntValue(int,int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,long); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedInt(java.lang.Object,long,int); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class dalvik.system.DexFile { long openDexFileNative(java.lang.String,java.lang.String,int); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class android.util.XmlPullAttributes { float getAttributeFloatValue(int,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { org.apache.harmony.security.asn1.ASN1OctetString getInstance(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl$1 { void <init>(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ActivityInterface access$000(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadImage(android.widget.ImageView,android.widget.ImageView,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.content.Context access$200(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadTheme(); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String validate(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class libcore.net.UriCodec { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroy(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroyView(); }
-keepclassmembers class libcore.net.UriCodec { void validateSimple(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[]); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { int getCount(); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(); }
-keepclassmembers class android.support.v7.appcompat.R$styleable { void <clinit>(); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { org.json.JSONObject getItem(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.os.Bundle getItemExtras(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int ave(int,int,float); }
-keepclassmembers class libcore.net.UriCodec { int hexToInt(char); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int calculateColor(float); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(byte[]); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,byte); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { float[] calculatePointerPosition(float); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { long getItemId(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { byte[] encode(java.lang.Object); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { float colorToAngle(int); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object report(int); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <init>(android.content.Context); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.util.concurrent.Callable); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean draw(android.graphics.Canvas); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean isFinished(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onAbsorb(int); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean cancel(boolean); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onPull(float,float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onRelease(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void setSize(int,int); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.lang.reflect.AbstractMethod { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addOpacityBar(com.larswerkman.holocolorpicker.OpacityBar); }
-keepclassmembers class java.util.concurrent.FutureTask { void done(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int fixMethodFlags(int); }
-keepclassmembers class java.util.concurrent.FutureTask { void set(java.lang.Object); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getModifiers(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class java.util.concurrent.FutureTask { void setException(java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addSaturationBar(com.larswerkman.holocolorpicker.SaturationBar); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addValueBar(com.larswerkman.holocolorpicker.ValueBar); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.FutureTask { void run(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void changeOpacityBarColor(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getAccessFlags(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getDexMethodIndex(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void changeValueBarColor(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean equals(java.lang.Object); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int getColor(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int getOldCenterColor(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean hasOpacityBar(); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean hasValueBar(); }
-keepclassmembers class java.util.concurrent.FutureTask { void handlePossibleCancellationInterrupt(int); }
-keepclassmembers class java.util.concurrent.FutureTask { void finishCompletion(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class java.util.concurrent.FutureTask { int awaitDone(boolean,long); }
-keepclassmembers class android.support.v4.app.FragmentTransition$3 { void <init>(android.view.ViewGroup,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void apply(java.lang.Object); }
-keepclassmembers class java.util.concurrent.FutureTask { void removeWaiter(java.util.concurrent.FutureTask$WaitNode); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class okhttp3.ConnectionPool { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.app.Activity); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(int,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.concurrent.FutureTask { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 { void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class okhttp3.ConnectionPool { int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.app.Activity,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void access$500(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { int computeUsableHeight(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(); }
-keepclassmembers class okhttp3.ConnectionPool { long cleanup(long); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void possiblyResizeChildOfContent(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.content.res.Resources access$100(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$000(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.TextView access$200(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean access$400(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$500(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class okhttp3.ConnectionPool { boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$600(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean validateInput(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class okhttp3.ConnectionPool { okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchPause(); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class okhttp3.ConnectionPool { void put(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchReallyStop(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchResume(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStart(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStop(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void doPendingDeferredStart(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void onMessageSent(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String[]); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setColor(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void <init>(android.widget.RemoteViews,int,android.content.Intent); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewGroup { void bringChildToFront(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { boolean hasStableIds(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void initialiseVote(int,int); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setNewCenterColor(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setOldCenterColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadFeedPrefs(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Void doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void removePostAtPosition(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void setFeed(org.json.JSONArray,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void setTheme(au.com.wallaceit.reddinator.core.ThemeManager$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void updateUiVote(int,java.lang.String,java.lang.String,int); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void execSingleAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void resetTransition(); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceHead(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceTail(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class java.io.DataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDrag(android.view.View); }
-keepclassmembers class java.io.DataOutputStream { void writeByte(int); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { boolean casCleanMe(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentByTag(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <clinit>(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class java.lang.RealToString { void <init>(); }
-keepclassmembers class java.lang.RealToString { java.lang.RealToString getInstance(); }
-keepclassmembers class java.lang.RealToString { java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <init>(byte[]); }
-keepclassmembers class java.lang.RealToString { void appendDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class java.lang.RealToString { java.lang.String doubleToString(double); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class android.preference.PreferenceInflater { void <init>(android.content.Context,android.preference.PreferenceManager); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.preference.PreferenceInflater { void init(android.preference.PreferenceManager); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float cross(float,float,float,float); }
-keepclassmembers class android.preference.PreferenceInflater { boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object awaitFulfill(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.lang.Object,boolean,long); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class java.lang.ThreadLocal { int access$200(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ref.Reference access$300(java.lang.ThreadLocal); }
-keepclassmembers class okhttp3.internal.Util { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class okhttp3.internal.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class java.lang.RealToString { java.lang.String floatToString(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.preference.PreferenceInflater { android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup); }
-keepclassmembers class okhttp3.internal.Util { void closeAll(java.io.Closeable,java.io.Closeable); }
-keepclassmembers class java.lang.RealToString { void appendFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class android.preference.PreferenceInflater { android.preference.GenericInflater$Parent onMergeRoots(android.preference.GenericInflater$Parent,boolean,android.preference.GenericInflater$Parent); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.net.Socket); }
-keepclassmembers class android.preference.PreferenceInflater { boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String[] concat(java.lang.String[],java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void clean(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class okhttp3.internal.Util { boolean containsInvalidHostnameAsciiCodes(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <init>(boolean[]); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,char); }
-keepclassmembers class org.json.JSONStringer { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { boolean discard(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { boolean[] access$000(org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { float specialValue(); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String domainToAscii(java.lang.String); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer array(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(java.lang.StringToReal$1); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <clinit>(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endArray(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void hideFragment(android.support.v4.app.Fragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$WebInterface { void <init>(au.com.wallaceit.reddinator.ui.TabCommentsFragment,android.content.Context); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endObject(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer object(); }
-keepclassmembers class okhttp3.internal.Util { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$5 { boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <clinit>(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class java.lang.RealToString { void freeFormatExponential(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer open(org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String hostHeader(okhttp3.HttpUrl,boolean); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer close(org.json.JSONStringer$Scope,org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean isStateAtLeast(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getMatrixScale(android.graphics.Matrix); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class java.lang.RealToString { void freeFormat(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { int indexOf(java.lang.Object[],java.lang.Object); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.util.List); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer$Scope peek(); }
-keepclassmembers class okhttp3.internal.Util { java.util.List intersect(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class au.com.wallaceit.reddinator.service.BootReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.BootReceiver { void <init>(); }
-keepclassmembers class org.json.JSONStringer { void replaceTop(org.json.JSONStringer$Scope); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class java.lang.RealToString { void bigIntDigitGenerator(long,int,boolean,int); }
-keepclassmembers class okhttp3.internal.Util { java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getAlpha(); }
-keepclassmembers class java.lang.RealToString { void longDigitGenerator(long,int,boolean,boolean,int); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer value(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setAlpha(float); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class okhttp3.internal.Util { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class okhttp3.internal.Util { okio.ByteString sha1(okio.ByteString); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.Util { okio.ByteString sha256(okio.ByteString); }
-keepclassmembers class org.json.JSONStringer { void string(java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class okhttp3.internal.Util { boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeActive(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.RealToString { void <init>(java.lang.RealToString$1); }
-keepclassmembers class java.lang.RealToString { void <clinit>(); }
-keepclassmembers class org.json.JSONStringer { void newline(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer key(java.lang.String); }
-keepclassmembers class org.json.JSONStringer { void beforeKey(); }
-keepclassmembers class okhttp3.internal.Util { int skipLeadingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { int skipTrailingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class org.json.JSONStringer { void beforeValue(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeInactive(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.Util { java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class org.json.JSONStringer { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveFragmentToExpectedState(android.support.v4.app.Fragment); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String trimSubstring(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.Util { boolean verifyAsIpAddress(java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Font { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { void <init>(okhttp3.internal.http.Http1xStream,long); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageSelected(int); }
-keepclassmembers class android.support.v4.app.NavUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void drawableStateChanged(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String relativePath(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags,org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.app.Activity); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class java.net.URI { void parseURI(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.ListView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6 { void run(); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL,boolean); }
-keepclassmembers class java.net.URI { java.lang.String validateScheme(java.lang.String,int); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { int getCurrentModeType(); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.ReasonFlags access$100(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class java.net.URI { void parseAuthority(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.GeneralNames access$200(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <clinit>(); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { void <init>(); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CodePointTranslator { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment); }
-keepclassmembers class java.net.URI { void validateUserInfo(java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CodePointTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class java.net.URI { boolean isValidHost(boolean,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient build(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertificate$1); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.net.URI { boolean isValidDomainName(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { int access$100(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.app.SearchableInfo$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.app.SearchableInfo$1 { android.app.SearchableInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.app.SearchableInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class java.util.TreeMap$1 { void <init>(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3,android.widget.EditText); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$1 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean isTransitionGroup(); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class libcore.icu.Transliterator { void <init>(java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { long create(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(long,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotFull(); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int clamp(int,int,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.net.URI { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void doScrollY(int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void endDrag(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void ensureGlows(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class java.net.URI$PartEncoder { void <init>(java.lang.String); }
-keepclassmembers class java.net.URI$PartEncoder { boolean isRetained(char); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getVerticalScrollFactorCompat(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void checkMail(android.content.Context,java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean inChild(int,int); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void onCreate(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object take(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.view.ViewGroup { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewGroup { void dispatchFreezeSelfOnly(android.util.SparseArray); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.ViewGroup { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.view.ViewGroup { void dispatchThawSelfOnly(android.util.SparseArray); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void onAnimationStart(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationEnd(); }
-keepclassmembers class android.app.ListActivity$2 { void <init>(android.app.ListActivity); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void recycleVelocityTracker(); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Headers); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Response); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { boolean hasBody(okhttp3.Response); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class java.net.Proxy { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class java.net.Proxy { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class java.net.Proxy { int hashCode(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { int sign(int); }
-keepclassmembers class android.view.ViewGroup { void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int parseSeconds(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { int dipsToPixels(int); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class android.view.ViewGroup { void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int); }
-keepclassmembers class android.app.BackStackRecord { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipUntil(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long stringToLong(java.lang.String); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class android.app.BackStackRecord { void addOp(android.app.BackStackRecord$Op); }
-keepclassmembers class android.view.ViewGroup { void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction add(android.app.Fragment,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.ViewGroup { void onDebugDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void computeScroll(); }
-keepclassmembers class android.app.BackStackRecord { void doAddOp(int,android.app.Fragment,java.lang.String,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$3 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void noteStateNotSaved(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$3 { void execute(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction replace(int,android.app.Fragment); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction remove(android.app.Fragment); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.animation.AnimatorSet$Dependency { void <init>(android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction setTransition(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void performPendingDeferredStart(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { void <init>(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchGetDisplayList(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { void recreateChildDisplayList(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class android.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class android.app.BackStackRecord { int commit(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.app.BackStackRecord { int commitAllowingStateLoss(); }
-keepclassmembers class android.app.BackStackRecord { int commitInternal(boolean); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.app.BackStackRecord { void run(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void fling(int); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Transformation getChildTransformation(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.FragmentTransaction { void <init>(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.nio.ByteOrder { boolean isLittleEndian(); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getNestedScrollAxes(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getScrollRange(); }
-keepclassmembers class android.app.BackStackRecord { void setFirstOut(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class android.app.BackStackRecord { void setLastIn(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.app.BackStackRecord { void calculateFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { android.support.v4.media.session.MediaSessionCompat$Token getSessionToken(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void removeFragment(android.support.v4.app.Fragment); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] APOS_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] BASIC_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] BASIC_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] APOS_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] HTML40_EXTENDED_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] HTML40_EXTENDED_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE(); }
-keepclassmembers class android.app.SearchDialog$4 { void <init>(android.app.SearchDialog); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] invert(java.lang.String[][]); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class libcore.io.IoBridge { int available(java.io.FileDescriptor); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class android.app.BackStackRecord { void calculateBackFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class libcore.io.IoBridge { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onAttachedToWindow(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.os.Environment { void initForCurrentUser(); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition cloneTransition(android.transition.Transition); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getEnterTransition(android.app.Fragment,boolean); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getExitTransition(android.app.Fragment,boolean); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getSharedElementTransition(android.app.Fragment,android.app.Fragment,boolean); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class libcore.io.IoBridge { void connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList captureExitingViews(android.transition.Transition,android.app.Fragment,android.util.ArrayMap,android.view.View); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStorageDirectory(); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapSharedElements(android.app.BackStackRecord$TransitionState,android.app.Fragment,boolean); }
-keepclassmembers class libcore.io.IoBridge { java.lang.String connectDetail(java.net.InetAddress,int,int,android.system.ErrnoException); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStoragePublicDirectory(java.lang.String); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { long access$000(); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList addTransitionTargets(android.app.BackStackRecord$TransitionState,android.transition.Transition,android.transition.Transition,android.transition.Transition,android.view.View,android.app.Fragment,android.app.Fragment,java.util.ArrayList,boolean,java.util.ArrayList); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class android.view.ViewGroup { void bindLayoutAnimation(android.view.View); }
-keepclassmembers class libcore.io.IoBridge { boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Environment { java.io.File getDirectory(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class android.os.Environment { java.lang.String getCanonicalPathOrNull(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class android.os.Environment { void throwIfUserRequired(); }
-keepclassmembers class android.os.Environment { java.io.File[] buildPaths(java.io.File[],java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOption(java.io.FileDescriptor,int); }
-keepclassmembers class android.os.Environment { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper { void <clinit>(); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition,android.transition.Transition,android.app.Fragment,boolean); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper { void <init>(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onMeasure(int,int); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.os.Environment { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class libcore.io.IoBridge { boolean booleanFromInt(int); }
-keepclassmembers class android.app.BackStackRecord { void configureTransitions(int,android.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class libcore.io.IoBridge { int booleanToInt(boolean); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class java.util.AbstractCollection { boolean removeAll(java.util.Collection); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOption(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.AbstractCollection { java.util.ArrayList toArrayList(); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class android.app.BackStackRecord { void removeTargetedViewsFromTransitions(android.view.ViewGroup,android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftRight(int); }
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int,java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { int getGroupSourceReqOp(int); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class android.app.BackStackRecord { void addTargets(android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class android.view.HardwareCanvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.view.HardwareCanvas { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$2 { void <init>(au.com.wallaceit.reddinator.ui.RWebView,android.app.ProgressDialog,java.lang.String); }
-keepclassmembers class android.view.HardwareCanvas { void drawRenderNode(android.view.RenderNode); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$2 { void run(); }
-keepclassmembers class android.app.BackStackRecord { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.util.ArrayMap); }
-keepclassmembers class android.app.BackStackRecord { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class java.math.BigInteger { int getLowestSetBit(); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.net.UnknownServiceException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog$NoNavClient { void <init>(au.com.wallaceit.reddinator.ui.HtmlDialog,au.com.wallaceit.reddinator.ui.HtmlDialog$1); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog$NoNavClient { void <init>(au.com.wallaceit.reddinator.ui.HtmlDialog); }
-keepclassmembers class android.app.BackStackRecord { void excludeHiddenFragments(java.util.ArrayList,int,android.transition.Transition); }
-keepclassmembers class libcore.io.IoBridge { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.app.BackStackRecord { void setEpicenter(android.transition.Transition,android.view.View); }
-keepclassmembers class java.math.BigInteger { double doubleValue(); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void removeListeners(); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterSendto(boolean,android.system.ErrnoException); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class libcore.io.IoBridge { int recvfrom(boolean,java.io.FileDescriptor,byte[],int,int,int,java.net.DatagramPacket,boolean); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class libcore.io.IoBridge { int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$1 { void <init>(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterRecvfrom(boolean,boolean,android.system.ErrnoException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$1 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.PreferenceCategory); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor socket(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$1 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverride(android.util.ArrayMap,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class libcore.io.IoBridge { java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class libcore.io.IoBridge { int getSocketLocalPort(java.io.FileDescriptor); }
-keepclassmembers class android.app.BackStackRecord { void setBackNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void init(); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { int getHorizontalFadingEdgeLength(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void run(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestLayout(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollTo(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getOpacity(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.view.View { void setOnFocusChangeListener(android.view.View$OnFocusChangeListener); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.View { void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean startNestedScroll(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean isStateful(); }
-keepclassmembers class android.view.View { void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void stopNestedScroll(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.ViewGroup { boolean canAnimate(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void saveFragmentViewState(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setBackStackIndex(int,android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float,int); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.view.View { void setOnKeyListener(android.view.View$OnKeyListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class libcore.net.url.JarHandler { void <init>(); }
-keepclassmembers class libcore.net.url.JarHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class libcore.net.url.JarHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.BackStackRecord$2 { void <init>(android.app.BackStackRecord,android.view.ViewGroup,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.ArrayList,android.transition.Transition); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class android.view.ViewGroup { void measureChildren(int,int); }
-keepclassmembers class libcore.net.url.JarHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void showFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void <init>(android.content.Context,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class java.lang.Thread { void create(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void clearMutated(); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isDefault(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isPrecisionSet(); }
-keepclassmembers class java.util.Formatter$FormatToken { int getArgIndex(); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setArgIndex(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getWidth(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setWidth(int); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class java.util.Formatter$FormatToken { int getPrecision(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setPrecision(int); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean setFlag(int); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setAlpha(int); }
-keepclassmembers class java.util.Formatter$FormatToken { char getConversionType(); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setConversionType(char); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class java.util.Formatter$FormatToken { char getDateSuffix(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setDateSuffix(char); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean requireArgument(); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { android.content.Context access$000(au.com.wallaceit.reddinator.service.ListRemoteViewsFactory); }
-keepclassmembers class java.util.Formatter$FormatToken { void checkFlags(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void hideWidgetLoader(boolean,boolean,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class android.view.ViewGroup { void finishAnimatingView(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getOpacity(); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class java.lang.Thread { void setDaemon(boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.Thread { void checkNotStarted(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Field$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.Formatter$FormatToken { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(java.util.Formatter$1); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void loadReddits(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.Boolean); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { java.lang.Long doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { byte[] engineDigest(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$4 { void onClick(android.view.View); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class java.lang.Thread { boolean holdsLock(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$9 { boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.lang.Thread { boolean nativeHoldsLock(java.lang.Object); }
-keepclassmembers class java.lang.Thread { void unpark(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class java.lang.Thread { void parkFor(long); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.Thread { void parkUntil(long); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Paint getDebugPaint(); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class android.view.ViewGroup { void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void clear(); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void increment(int); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class android.view.ViewGroup { void access$500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void addBitmapMemory(android.graphics.Bitmap); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class android.util.Base64 { java.lang.String encodeToString(byte[],int); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1); }
-keepclassmembers class android.util.Base64 { byte[] encode(byte[],int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { org.apache.harmony.security.asn1.ASN1Oid getInstance(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder allowNewDirectoryNameModification(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.util.Base64 { byte[] encode(byte[],int,int,int); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder allowReadOnlyDirectory(boolean); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig build(); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.reflect.Field,java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.ClipDescription { boolean compareMimeTypes(java.lang.String,java.lang.String); }
-keepclassmembers class android.media.session.MediaSession$Token { void <init>(android.media.session.ISessionController); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.util.Base64 { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class android.view.View$2 { void <init>(android.view.View,int); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder initialDirectory(java.lang.String); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$2 { boolean apply(android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder newDirectoryName(java.lang.String); }
-keepclassmembers class android.view.View$2 { boolean apply(java.lang.Object); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String getMessage(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <clinit>(); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.util.List alpnProtocolNames(java.util.List); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.platform.Platform { byte[] concatLengthPrefixed(java.util.List); }
-keepclassmembers class android.media.session.MediaSession$Token { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform findPlatform(); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform get(); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class okhttp3.HttpUrl { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentState { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$10 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$10 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okhttp3.HttpUrl { void <init>(okhttp3.HttpUrl$Builder); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void <init>(); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void run(); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentState { android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class okhttp3.internal.platform.Platform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.platform.Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String access$100(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.HttpUrl { void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1); }
-keepclassmembers class android.widget.RemoteViewsService$RemoteViewsFactoryAdapter { void <init>(android.widget.RemoteViewsService$RemoteViewsFactory,boolean); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String access$200(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.platform.Platform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class okhttp3.HttpUrl { int access$300(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.platform.Platform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class okhttp3.internal.platform.Platform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class okhttp3.HttpUrl { void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class android.view.RenderNode { android.view.HardwareCanvas start(int,int); }
-keepclassmembers class android.view.View { void requestFitSystemWindows(); }
-keepclassmembers class android.view.RenderNode { void end(android.view.HardwareCanvas); }
-keepclassmembers class android.view.View { void requestApplyInsets(); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.view.RenderNode { void destroyDisplayListData(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class android.view.RenderNode { long getNativeDisplayList(); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.support.v4.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1,android.widget.EditText); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void <init>(int,int,okio.Source); }
-keepclassmembers class okhttp3.HttpUrl { int decodeHexDigit(char); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class okhttp3.HttpUrl { int defaultPort(java.lang.String); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void <init>(int,okio.Source); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void adjustDynamicTableByteCount(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Address createAddress(okhttp3.HttpUrl); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void clearDynamicTable(); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class android.view.RenderNode { boolean setProjectBackwards(boolean); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int dynamicTableIndex(int); }
-keepclassmembers class android.view.RenderNode { boolean setProjectionReceiver(boolean); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int evictToRecoverBytes(int); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class okhttp3.HttpUrl { void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Request followUpRequest(okhttp3.Response); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl parse(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { void pathSegmentsToString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { okio.ByteString getName(int); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,int,int,boolean); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void insertIntoDynamicTable(int,okhttp3.internal.framed.Header); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void <init>(int,okio.Buffer); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,boolean); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setStaticMatrix(android.graphics.Matrix); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List percentDecode(java.util.List,boolean); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { boolean setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void <init>(okio.Buffer); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void adjustDynamicTableByteCount(); }
-keepclassmembers class okhttp3.HttpUrl { void percentDecode(okio.Buffer,java.lang.String,int,int,boolean); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void clearDynamicTable(); }
-keepclassmembers class android.view.RenderNode { boolean setHasOverlappingRendering(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { int evictToRecoverBytes(int); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean isRecoverable(java.io.IOException,boolean); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class okhttp3.HttpUrl { boolean percentEncoded(java.lang.String,int,int); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean recover(java.io.IOException,boolean,okhttp3.Request); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { boolean isStaticHeader(int); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List queryStringToNamesAndValues(java.lang.String); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int readByte(); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readIndexedHeader(int); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void insertIntoDynamicTable(okhttp3.internal.framed.Header); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedFragment(); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeAlpha(int,int); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPassword(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeColors(int,int); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(byte[]); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class com.android.internal.app.AlertController$5 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPath(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { int next(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeComponent(int,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingIndexedName(int); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBitString(); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List encodedPathSegments(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingNewName(); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithoutIndexingIndexedName(int); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedQuery(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void setHeaderTableSizeSetting(int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithoutIndexingNewName(); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedUsername(); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBoolean(); }
-keepclassmembers class android.view.RenderNode { boolean setLeft(int); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.view.RenderNode { boolean setTop(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { java.util.List getAndResetHeaderList(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeByteString(okio.ByteString); }
-keepclassmembers class okhttp3.HttpUrl { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readOctetString(); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { okio.ByteString readByteString(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeHeaders(java.util.List); }
-keepclassmembers class okhttp3.HttpUrl { int hashCode(); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String host(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class okhttp3.HttpUrl { boolean isHttps(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readHeaders(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int setAlphaComponent(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readUTCTime(); }
-keepclassmembers class android.view.View { void setSaveFromParentEnabled(boolean); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(java.lang.String); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.HttpUrl { int port(); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readGeneralizedTime(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayListData(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean isForWebSocket(); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeInt(int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetTop(long,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int readInt(int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeft(long,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void calculateColor(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,au.com.wallaceit.reddinator.activity.AccountActivity$1); }
-keepclassmembers class android.support.v4.util.LruCache { void <init>(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectBackwards(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectionReceiver(long,boolean); }
-keepclassmembers class android.support.v4.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { org.json.JSONObject[] doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class android.content.Intent$FilterComparison { void <init>(android.content.Intent); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class java.util.AbstractList { void clear(); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetHasOverlappingRendering(long,boolean); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.content.Intent$FilterComparison { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl resolve(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String scheme(); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String toString(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.content.Intent$FilterComparison { int hashCode(); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class android.support.v4.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.HttpUrl { java.net.URI uri(); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.VoteTask$Callback,java.lang.String,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetStaticMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetAnimationMatrix(long,long); }
-keepclassmembers class android.view.View { java.util.ArrayList getFocusables(int); }
-keepclassmembers class java.nio.FileChannelImpl { void <init>(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void onPreExecute(); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <init>(); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean isFulfilling(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.VoteTask$Callback,java.lang.String,int,int,int); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$Transferer { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.nio.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onMeasure(int,int); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.webkit.CookieManager { android.webkit.CookieManager getInstance(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class java.util.AbstractList { java.lang.Object remove(int); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class java.util.AbstractList { void removeRange(int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isClipPath(); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { int getBitmapId(android.graphics.Bitmap); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class android.transition.Fade { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class android.support.v4.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$6 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,android.widget.EditText); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode awaitFulfill(java.util.concurrent.SynchronousQueue$TransferStack$SNode,boolean,long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class libcore.net.url.FileURLConnection$1 { void <init>(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void expand(int); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <init>(byte[]); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class java.util.BitSet { void shrinkSize(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.BitSet { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean shouldSpin(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.util.BitSet { void <init>(long[]); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void clean(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <clinit>(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void <clinit>(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setColor(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.util.BitSet { void ensureCapacity(int); }
-keepclassmembers class java.security.Signature$SignatureImpl { void <init>(java.lang.String,java.security.Provider); }
-keepclassmembers class android.text.Layout { void drawText(android.graphics.Canvas,int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <clinit>(); }
-keepclassmembers class java.security.Signature$SignatureImpl { boolean engineVerify(byte[]); }
-keepclassmembers class java.util.BitSet { boolean get(int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class java.util.BitSet { void set(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setValue(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class java.io.DataInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,au.com.wallaceit.reddinator.activity.AccountActivity$1); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(java.security.Key); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { java.lang.Boolean doInBackground(java.lang.Void[]); }
-keepclassmembers class java.util.BitSet { void checkIndex(int); }
-keepclassmembers class java.io.DataInputStream { byte readByte(); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[]); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { void <init>(java.util.List); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList inflateColorStateList(android.content.Context,int); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean isFallbackPossible(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { boolean isColorInt(android.content.Context,int); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean connectionFailed(java.io.IOException); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int,java.io.DataInput); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(); }
-keepclassmembers class java.io.DataInputStream { int skipBytes(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void gc(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.text.Layout { void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class org.json.JSONTokener { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object nextValue(); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class org.json.JSONTokener { int nextCleanInternal(); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.Layout { long getLineRangeForDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class java.nio.FileChannelImpl { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void <init>(byte[]); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class org.json.JSONTokener { void skipToEndOfLine(); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextString(char); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class org.json.JSONTokener { char readEscapeCharacter(); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object readLiteral(); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class java.util.BitSet { int cardinality(); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class android.view.View { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void <init>(au.com.wallaceit.reddinator.core.RedditData,android.content.SharedPreferences); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextToInternal(java.lang.String); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class java.net.ServerSocket { void <init>(int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONObject readObject(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isFocused(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasFocus(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { au.com.wallaceit.reddinator.core.RedditData access$100(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean access$502(android.widget.ListPopupWindow$DropDownListView,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.PushObserver { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addMultiData(org.json.JSONObject); }
-keepclassmembers class java.net.ServerSocket { void readBackBindState(); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addSubredditData(org.json.JSONObject); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class java.net.ServerSocket { void checkListen(int); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONArray readArray(); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getCurrentFeed(int); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getPostFilters(java.lang.String); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONException syntaxError(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$ReleaseItem { void <init>(int,java.lang.String,java.util.List); }
-keepclassmembers class android.view.View { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class org.json.JSONTokener { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void <init>(); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void saveMultis(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void savePostFilters(); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void saveSubs(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addMultis(org.json.JSONArray,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addPostFilter(int,java.lang.String); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class java.net.ServerSocket { void checkOpen(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addSubreddit(org.json.JSONObject); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void run(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearAllFilter(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearPostFilters(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONArray filterFeed(int,org.json.JSONArray,org.json.JSONArray,boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.RemoteViews$MutablePair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void nextFrame(boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class android.app.DialogFragment { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class android.app.DialogFragment { void setStyle(int,int); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class android.app.DialogFragment { void show(android.app.FragmentManager,java.lang.String); }
-keepclassmembers class android.app.DialogFragment { void dismiss(); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class android.app.DialogFragment { void dismissInternal(boolean); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class android.app.DialogFragment { int getTheme(); }
-keepclassmembers class android.app.DialogFragment { boolean getShowsDialog(); }
-keepclassmembers class android.app.DialogFragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class android.ddm.DdmHandleHello { void <init>(); }
-keepclassmembers class android.app.DialogFragment { void onDetach(); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleHello { void register(); }
-keepclassmembers class android.app.DialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void run(); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class android.app.DialogFragment { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class android.app.DialogFragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class android.app.DialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.app.DialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.app.DialogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getAllFilter(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.lang.String getCurrentFeedName(int); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.DialogFragment { void onStart(); }
-keepclassmembers class android.text.style.SubscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getMultiData(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatLollipop { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.app.DialogFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.lang.String getCurrentFeedPath(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.app.DialogFragment { void onStop(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getMultiList(); }
-keepclassmembers class android.app.DialogFragment { void onDestroyView(); }
-keepclassmembers class android.app.DialogFragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getMultiSubreddits(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { int available(); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class android.view.View { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class java.io.ObjectInputStream { void checkReadPrimitiveTypes(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toAsciiBytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toIsoLatin1Bytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toUtf8Bytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toBigEndianUtf16Bytes(char[],int,int); }
-keepclassmembers class android.system.StructPollfd { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { int getPostFilterCount(); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class java.nio.charset.Charsets { void asciiBytesToChars(byte[],int,int,char[]); }
-keepclassmembers class java.nio.charset.Charsets { void isoLatin1BytesToChars(byte[],int,int,char[]); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getSubredditData(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadObject(); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getSubredditNames(); }
-keepclassmembers class java.io.ObjectInputStream { int nextHandle(); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class java.io.ObjectInputStream { byte nextTC(); }
-keepclassmembers class android.view.View { int getMeasuredWidthAndState(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { boolean isFeedMulti(int); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void pushbackTC(); }
-keepclassmembers class java.io.ObjectInputStream { int read(); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class java.io.ObjectInputStream { int read(byte[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void loadDefaultSubreddits(); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockData(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void removeMulti(java.lang.String); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void removeSubreddit(java.lang.String); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockDataLong(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setAllFilter(java.util.ArrayList); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class java.io.ObjectInputStream { void discardData(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeed(int,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.text.Layout { boolean shouldClampCursor(int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(); }
-keepclassmembers class android.text.Layout { void getCursorPath(int,android.graphics.Path,java.lang.CharSequence); }
-keepclassmembers class android.ddm.DdmHandleHello { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.StreamCorruptedException corruptStream(byte); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readContent(byte); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$JellybeanMr1Impl { void <init>(); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeedDomain(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeedSubreddit(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNonPrimitiveContent(boolean); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setMultiData(java.lang.String,org.json.JSONObject); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover { void <init>(); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover { boolean translate(int,java.io.Writer); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setMultiSubs(java.lang.String,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$2 { void <init>(int); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readCyclicReference(); }
-keepclassmembers class okhttp3.ConnectionSpec { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Exception readException(); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldDescriptors(java.io.ObjectStreamClass); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setSubreddits(org.json.JSONArray); }
-keepclassmembers class android.view.View { boolean hasOverlappingRendering(); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompatIcs { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class okhttp3.ConnectionSpec { void <init>(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec { void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean access$400(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String[] access$500(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String[] access$600(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean nonEmptyIntersection(java.lang.String[],java.lang.String[]); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean access$700(okhttp3.ConnectionSpec); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String formatClassSig(java.lang.String); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class android.view.View { void setTransitionAlpha(float); }
-keepclassmembers class okhttp3.ConnectionSpec { okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void <init>(org.ccil.cowan.tagsoup.ElementType,boolean); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.Element next(); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver$1 { void <init>(android.widget.AutoCompleteTextView$PopupDataSetObserver); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setNext(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String name(); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String namespace(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String localName(); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int model(); }
-keepclassmembers class okhttp3.ConnectionSpec { void apply(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int flags(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class android.view.View { void setTop(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean canContain(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List cipherSuites(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void anonymize(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void clean(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void preclose(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean isPreclosed(); }
-keepclassmembers class okhttp3.ConnectionSpec { int hashCode(); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isCompatible(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.ViewOverlay { boolean isEmpty(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isTls(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean supportsTlsExtensions(); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List tlsVersions(); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String toString(); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void <init>(android.support.v7.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class android.view.View { void setLeft(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { java.lang.Boolean doInBackground(android.net.Uri[]); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { java.lang.String getParentActivityName(android.content.pm.ActivityInfo); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class okio.Base64 { void <clinit>(); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { void readHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void updateSeed(byte[]); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineSetSeed(byte[]); }
-keepclassmembers class android.transition.ChangeTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineNextBytes(byte[]); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class java.io.ObjectInputStream { java.util.List cacheSuperclassesFor(java.lang.Class); }
-keepclassmembers class android.transition.ChangeTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class java.io.ObjectInputStream { int findStreamSuperclass(java.lang.Class,java.util.List,int); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isProjected(); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectNoData(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[],byte[]); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.view.GhostView { void <init>(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectForClass(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class android.view.GhostView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class android.view.GhostView { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.GhostView { void setVisibility(int); }
-keepclassmembers class android.view.GhostView { void setGhostedVisibility(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class android.view.GhostView { void onDetachedFromWindow(); }
-keepclassmembers class android.view.GhostView { void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class android.view.View { android.view.ViewOutlineProvider getOutlineProvider(); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewArray(boolean); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.GhostView { void copySize(android.view.View,android.view.View); }
-keepclassmembers class android.view.GhostView { int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class android.view.GhostView { void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { byte[] getRandomBytes(int); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.GhostView { int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <clinit>(); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.content.ContentProviderNative { void <init>(); }
-keepclassmembers class android.view.GhostView { boolean isGhostWrapper(android.view.View); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class com.gu.option.Option$None { void <init>(); }
-keepclassmembers class android.view.GhostView { void getParents(android.view.View,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$16 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String,android.widget.EditText); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(android.view.View,android.view.View); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$16 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class com.gu.option.Option$None { void foreach(com.gu.option.UnitFunction); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewClass(boolean); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.webkit.WebChromeClient { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDesc(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDescInternal(); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformHeight(int,int); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class android.transition.ChangeTransform { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readEnum(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformWidth(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNewClassDesc(boolean); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { void <init>(java.security.cert.X509Certificate[]); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewProxyClassDesc(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { int readNewHandle(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewObject(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class okhttp3.Route { void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.InvalidClassException missingClassDescriptor(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class okhttp3.Route { okhttp3.Address address(); }
-keepclassmembers class okhttp3.Route { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewString(boolean); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class okhttp3.Route { int hashCode(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void unread(java.io.PushbackReader,int); }
-keepclassmembers class okhttp3.Route { boolean requiresTunnel(); }
-keepclassmembers class okhttp3.Route { java.net.Proxy proxy(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class okhttp3.Route { java.net.InetSocketAddress socketAddress(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewLongString(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { java.lang.String getSystemId(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void resetDocumentLocator(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getBaseline(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readUnshared(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.graphics.drawable.Drawable getDividerDrawable(); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getDividerWidth(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getGravity(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getLocationOffset(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getVirtualChildCount(); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object registeredObjectRead(int); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class java.io.ObjectInputStream { void registerObjectRead(java.lang.Object,int,boolean); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class okio.Buffer { void <clinit>(); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class okio.Buffer { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Activity); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class java.io.ObjectInputStream { void resetSeenObjects(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setLayoutDirection(int); }
-keepclassmembers class java.io.ObjectInputStream { void resetState(); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void mark(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void startCDATA(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void save(int,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { void verifyAndInit(java.io.ObjectStreamClass); }
-keepclassmembers class android.view.View { void computeScroll(); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.view.View { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.view.View { float getBottomFadingEdgeStrength(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <clinit>(); }
-keepclassmembers class android.view.View { float getLeftFadingEdgeStrength(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class android.view.View { float getRightFadingEdgeStrength(); }
-keepclassmembers class okio.Buffer { void clear(); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void <init>(android.app.FragmentManagerImpl,android.app.Fragment); }
-keepclassmembers class java.io.ObjectInputStream { void checkedSetSuperClassDesc(java.io.ObjectStreamClass,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class android.util.MutableInt { void <init>(int); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void <init>(okhttp3.ConnectionPool); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void run(); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class okio.Buffer { void close(); }
-keepclassmembers class okio.Buffer { long completeSegmentByteCount(); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class okhttp3.RequestBody$2 { void <init>(okhttp3.MediaType,int,byte[],int); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class okhttp3.RequestBody$2 { long contentLength(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class okhttp3.RequestBody$2 { okhttp3.MediaType contentType(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class okhttp3.RequestBody$2 { void writeTo(okio.BufferedSink); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureHorizontal(int,int); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class android.view.View { boolean canScrollHorizontally(int); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class okio.Buffer { okio.Buffer copyTo(okio.Buffer,long,long); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask$Callback); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void dispatchMenuVisibilityChanged(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setCustomView(int); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.StreamResetException { void <init>(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayShowHomeEnabled(boolean); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.Reader); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.transition.Visibility { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class okio.Buffer { boolean exhausted(); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayShowTitleEnabled(boolean); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getPublicId(); }
-keepclassmembers class okio.Buffer { void flush(); }
-keepclassmembers class android.transition.Visibility { int getMode(); }
-keepclassmembers class okio.Buffer { byte getByte(long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayShowCustomEnabled(boolean); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getSystemId(); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class org.xml.sax.InputSource { java.io.InputStream getByteStream(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getEncoding(); }
-keepclassmembers class org.xml.sax.InputSource { void setCharacterStream(java.io.Reader); }
-keepclassmembers class org.xml.sax.InputSource { java.io.Reader getCharacterStream(); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class okio.Buffer { long indexOf(byte,long); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class android.transition.Visibility { void forceVisibility(int,boolean); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <init>(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class okio.ByteString { void <clinit>(); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class okio.ByteString { void <init>(byte[]); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class okio.ByteString { int codePointIndexToCharIndex(java.lang.String,int); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.app.UiModeManager { void <init>(); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class android.app.UiModeManager { int getCurrentModeType(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { int type(java.lang.String); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class android.app.UiModeManager { void <clinit>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class okio.ByteString { okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class okio.ByteString { okio.ByteString of(byte[]); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompatApi21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class okio.ByteString { java.lang.String base64(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 createCallback23(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class okio.ByteString { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class okio.ByteString { int compareTo(okio.ByteString); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAffinity(android.app.Activity); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class okio.ByteString { byte getByte(int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class okio.ByteString { java.lang.String hex(); }
-keepclassmembers class okio.ByteString { int hashCode(); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class okhttp3.internal.Internal { void <init>(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[]); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[],int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity); }
-keepclassmembers class android.widget.ImageView$ScaleType { android.widget.ImageView$ScaleType[] values(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1 { void onClick(android.view.View); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int measureNullChild(int); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureVertical(int,int); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class okio.ByteString { boolean rangeEquals(int,byte[],int,int); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class okio.Buffer { int read(byte[],int,int); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class okio.ByteString { int size(); }
-keepclassmembers class java.util.HashMap { void constructorPutAll(java.util.Map); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class java.util.HashMap { int capacityForInitSize(int); }
-keepclassmembers class okio.Buffer { long read(okio.Buffer,long); }
-keepclassmembers class okio.ByteString { okio.ByteString substring(int,int); }
-keepclassmembers class android.view.View { void saveHierarchyState(android.util.SparseArray); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class android.view.View { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class okio.ByteString { okio.ByteString toAsciiLowercase(); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class okio.Buffer { byte readByte(); }
-keepclassmembers class android.view.View { void restoreHierarchyState(android.util.SparseArray); }
-keepclassmembers class android.view.View { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader,java.util.Map); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet6Address,short); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$2 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.net.InterfaceAddress { short countPrefixLength(java.net.Inet4Address); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(long); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class libcore.io.Base64 { void <clinit>(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(long); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class java.net.InterfaceAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { long getDrawingTime(); }
-keepclassmembers class okio.ByteString { byte[] toByteArray(); }
-keepclassmembers class okio.ByteString { java.lang.String toString(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class android.os.ResultReceiver$1 { void <init>(); }
-keepclassmembers class java.net.InterfaceAddress { int hashCode(); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class java.net.InterfaceAddress { java.lang.String toString(); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class android.view.View { boolean hasStaticLayer(); }
-keepclassmembers class java.util.HashMap { java.lang.Object putValueForNullKey(java.lang.Object); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class okio.ByteString { void write(okio.Buffer); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class java.util.HashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class android.view.View { android.view.HardwareLayer getHardwareLayer(); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class java.util.HashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class java.util.HashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.Object[]); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class android.os.Bundle { void putAll(android.os.Bundle); }
-keepclassmembers class java.util.HashMap { void ensureCapacity(int); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class okio.Buffer { void readFully(byte[]); }
-keepclassmembers class android.view.View { void dispatchGetDisplayList(); }
-keepclassmembers class android.view.View { boolean canHaveDisplayList(); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class okio.Buffer { long readHexadecimalUnsignedLong(); }
-keepclassmembers class android.view.View { void updateDisplayListIfDirty(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] makeTable(int); }
-keepclassmembers class android.text.format.Time { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] doubleCapacity(); }
-keepclassmembers class android.text.format.Time { void initialize(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class android.view.View { android.view.RenderNode getDisplayList(); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class android.view.View { android.graphics.Bitmap getDrawingCache(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class java.util.HashMap { java.lang.Object removeNullKey(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setCustomView(android.view.View); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class java.util.HashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class okio.Buffer { int readInt(); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class android.view.View { void buildDrawingCache(boolean); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class java.util.HashMap { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void buildDrawingCacheImpl(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity$NonConfigurationInstances { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class okio.Buffer { int readIntLe(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onMeasure(int,int); }
-keepclassmembers class android.os.Bundle { void putSparseParcelableArray(java.lang.String,android.util.SparseArray); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class android.os.Bundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isRunning(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean contains(java.lang.Object); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.os.Bundle { void putFloatArray(java.lang.String,float[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class okio.Buffer { short readShort(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class android.os.Bundle { void putBundle(java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.app.Activity { android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.HashMap { boolean access$600(java.util.HashMap,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class okio.Buffer { short readShortLe(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.util.HashMap { void <clinit>(); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class okio.Buffer { java.lang.String readString(long,java.nio.charset.Charset); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$2 { void onClick(android.view.View); }
-keepclassmembers class android.app.SearchDialog$2 { void onClick(android.view.View); }
-keepclassmembers class android.app.SearchDialog$2 { void <init>(android.app.SearchDialog); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class android.os.Bundle { float getFloat(java.lang.String); }
-keepclassmembers class android.os.Bundle { float getFloat(java.lang.String,float); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.os.Bundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class android.view.View { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.os.Bundle { android.os.Bundle getBundle(java.lang.String); }
-keepclassmembers class android.view.View { int getLeftPaddingOffset(); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class android.view.View { int getRightPaddingOffset(); }
-keepclassmembers class android.view.View { int getTopPaddingOffset(); }
-keepclassmembers class android.view.View { int getBottomPaddingOffset(); }
-keepclassmembers class android.view.View { int getFadeTop(boolean); }
-keepclassmembers class android.text.format.Time { void set(long); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class android.view.View { int getFadeHeight(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable[] getParcelableArray(java.lang.String); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void onStart(); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class android.app.Activity { void onResume(); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getParcelableArrayList(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class android.view.View { boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean); }
-keepclassmembers class android.os.Bundle { android.util.SparseArray getSparseParcelableArray(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8Line(long); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.os.Bundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$4 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$4 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class android.os.Bundle { float[] getFloatArray(java.lang.String); }
-keepclassmembers class android.app.Activity { void onPause(); }
-keepclassmembers class android.text.format.Time { int getJulianDay(long,long); }
-keepclassmembers class android.view.View { boolean draw(android.graphics.Canvas,android.view.ViewGroup,long); }
-keepclassmembers class android.view.View { void setDisplayListProperties(android.view.RenderNode); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Activity { void onDestroy(); }
-keepclassmembers class android.text.format.Time { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void cd(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connect(); }
-keepclassmembers class okio.Buffer { void skip(long); }
-keepclassmembers class okio.Buffer { long size(); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class android.app.Activity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <init>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connectInternal(); }
-keepclassmembers class okio.Buffer { okio.Timeout timeout(); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class okio.Buffer { okio.Segment writableSegment(int); }
-keepclassmembers class android.app.Activity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class okio.Buffer { okio.Buffer write(okio.ByteString); }
-keepclassmembers class android.graphics.Shader { boolean getLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[],int,int); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[]); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Shader { void copyLocalMatrix(android.graphics.Shader); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void getFile(); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.app.Activity { void onLowMemory(); }
-keepclassmembers class android.graphics.Shader { void nativeSetLocalMatrix(long,long); }
-keepclassmembers class okio.Buffer { void write(okio.Buffer,long); }
-keepclassmembers class libcore.net.url.FtpURLConnection { int getReply(); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void login(); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { void <init>(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class okio.Buffer { long writeAll(okio.Source); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class okio.Buffer { okio.Buffer writeByte(int); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void port(); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String readLine(); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { boolean readMultiLine(); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void sendFile(); }
-keepclassmembers class android.app.Activity { void initWindowDecorActionBar(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { int getMeasuredHeightWithMargins(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean isCollapsed(android.view.View); }
-keepclassmembers class android.app.Activity { void setContentView(int); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void drawableStateChanged(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setType(); }
-keepclassmembers class android.app.Activity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void write(java.lang.String); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class android.app.LoaderManager { void <init>(); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.View getTabContainer(); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeHexadecimalUnsignedLong(long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { void draw(android.graphics.Canvas); }
-keepclassmembers class android.app.ProgressDialog { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onFinishInflate(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.ProgressDialog { void initFormats(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeInt(int); }
-keepclassmembers class android.app.ProgressDialog { android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.app.ProgressDialog { android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String access$000(au.com.wallaceit.reddinator.core.RedditData); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class android.app.ProgressDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void checkAppToken(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void checkLogin(); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void createHttpClient(); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getDeviceId(); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class android.app.Activity { void onContentChanged(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getErrorJson(java.lang.String); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$5 { void <init>(android.content.Context); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.lang.VMClassLoader { int getBootClassPathSize(); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String getBootClassPathResource(java.lang.String,int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeShort(int); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getHtmlErrorText(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getJsonErrorText(org.json.JSONObject); }
-keepclassmembers class android.app.ProgressDialog { void onStart(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.app.ProgressDialog { void onStop(); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.app.ProgressDialog { void setProgress(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onMeasure(int,int); }
-keepclassmembers class android.app.ProgressDialog { void setSecondaryProgress(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class android.app.ProgressDialog { void setMax(int); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.ProgressDialog { void incrementProgressBy(int); }
-keepclassmembers class android.app.ProgressDialog { void incrementSecondaryProgressBy(int); }
-keepclassmembers class android.app.ProgressDialog { void setProgressDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { android.content.Intent getLoginIntent(android.content.Context,boolean); }
-keepclassmembers class android.app.Activity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminate(boolean); }
-keepclassmembers class android.view.View { void drawBackground(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getTokenValue(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.app.ProgressDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Activity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.app.ProgressDialog { void onProgressChanged(); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getUserInfo(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { void <init>(int,int,boolean); }
-keepclassmembers class android.view.View { void setBackgroundRenderNodeProperties(android.view.RenderNode); }
-keepclassmembers class android.view.View { android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(org.xml.sax.Attributes); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { boolean translate(int,java.io.Writer); }
-keepclassmembers class android.app.Activity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isAuthenticationError(org.json.JSONObject); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getURI(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getLength(); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isTokenExpired(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getLocalName(int); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getQName(int); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getType(int); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void redditApiDelete(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiGet(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getIndex(java.lang.String); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray redditApiGetArray(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiOauthRequest(java.lang.String,java.util.HashMap); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiPost(java.lang.String); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8CodePoint(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiPut(java.lang.String); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void clear(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void setVisibility(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String redditApiRequest(java.lang.String,java.lang.String,int,java.util.HashMap); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttributes(org.xml.sax.Attributes); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class android.support.v4.os.BuildCompat { boolean isAtLeastN(); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void removeAttribute(int); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void ensureCapacity(int); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class android.support.v4.app.FragmentManager { void <init>(); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void badIndex(int); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void refreshToken(); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void retrieveAppToken(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.ISessionController); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.AnimationSet clone(); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.View { void setBackgroundColor(int); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void saveAppToken(); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void saveUserData(); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.MediaSession$Token); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void throwOAuthError(org.json.JSONObject); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.view.animation.AnimationSet { boolean hasAlpha(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject addFilterSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class android.view.View { android.content.res.ColorStateList getBackgroundTintList(); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject addMultiSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class android.view.View { void setBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback23Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.view.View { android.graphics.PorterDuff$Mode getBackgroundTintMode(); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartTime(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class android.view.animation.AnimationSet { long getStartTime(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void clearStoredInboxCount(); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void composeMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.animation.AnimationSet { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject copyMulti(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.animation.AnimationSet { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class android.media.session.MediaController { void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class android.app.Activity { void finish(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getScheme(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.view.View { void resetPaddingToInitialValues(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void appendSspTo(java.lang.StringBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject createMulti(java.lang.String,org.json.JSONObject); }
-keepclassmembers class android.view.animation.AnimationSet { void initialize(int,int,int,int); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String toString(); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeUriString(); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class android.view.animation.AnimationSet { void restoreChildrenStartOffset(); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void reset(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class android.view.animation.AnimationSet { java.util.List getAnimations(); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.Animation clone(); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void <init>(); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void updateAppWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void close(); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.view.View { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void deleteMulti(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.util.Locale,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountry(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguage(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariant(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScript(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.app.Activity { void onTitleChanged(java.lang.CharSequence,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScriptNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class libcore.icu.ICU { java.util.Locale addLikelySubtags(java.util.Locale); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onContentChanged(); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class libcore.icu.ICU { java.lang.String addLikelySubtags(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setup(int,int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeFinished(android.support.v7.view.ActionMode); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeStarted(android.support.v7.view.ActionMode); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject editMulti(java.lang.String,org.json.JSONObject); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(com.android.internal.util.Predicate); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportContentChanged(); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onSupportNavigateUp(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getAccountFeed(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.app.Activity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class android.view.View { java.lang.Object getTag(); }
-keepclassmembers class android.view.View { void setTag(java.lang.Object); }
-keepclassmembers class android.app.FragmentTransaction { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.View { java.lang.Object getTag(int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class android.view.View { void setTagInternal(int,java.lang.Object); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class android.view.View { void setKeyedTag(int,java.lang.Object); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getChildComments(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$4 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$4 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$1 { void <init>(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$1 { void onClick(android.view.View); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getCommentKarma(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getCommentsContextFeed(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getCommentsFeed(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getDefaultSubreddits(); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getFilter(java.lang.String); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { int getInboxCount(); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getKarmaBreakdown(); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getLastUserUpdateTime(); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getLinkKarma(); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMessageFeed(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMyMultis(); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMySubreddits(); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getPopularSubreddits(); }
-keepclassmembers class android.view.View { int getMinimumHeight(); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.View { void startAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getRandomSubreddit(); }
-keepclassmembers class android.view.View { void onAnimationStart(); }
-keepclassmembers class android.view.View { void onAnimationEnd(); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getRedditFeed(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class android.preference.GenericInflater { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class android.preference.GenericInflater { void setDefaultPackage(java.lang.String); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.preference.GenericInflater { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.view.View { int getWindowSystemUiVisibility(); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object inflate(int,android.preference.GenericInflater$Parent,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getSubmitText(java.lang.String); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater$Parent,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getSubredditInfo(java.lang.String); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class android.util.SparseBooleanArray { android.util.SparseBooleanArray clone(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getTrophies(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startScroll(int,int,boolean); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getUsername(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void initiateLogin(android.content.Context,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void initiateLoginForResult(android.app.Activity,boolean); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.view.View { void checkForLongClick(int); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object createItemFromTag(org.xmlpull.v1.XmlPullParser,java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isLoggedIn(); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$3 { void run(); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float); }
-keepclassmembers class android.graphics.drawable.Ripple { void setup(int,float); }
-keepclassmembers class android.preference.GenericInflater { void rInflate(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean isHardwareAnimating(); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class android.graphics.drawable.Ripple { void clampStartingPosition(); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class android.app.Activity { void requestPermissions(java.lang.String[],int); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.app.Activity { boolean shouldShowRequestPermissionRationale(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void onHotspotBoundsChanged(); }
-keepclassmembers class android.preference.GenericInflater { void <clinit>(); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void purgeAccountData(); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void removeFilterSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void removeMultiSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Ripple { void move(float,float); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class android.graphics.drawable.Ripple { void enter(); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject renameMulti(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.Ripple { void exit(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.Ripple { void createPendingHardwareExit(int,int); }
-keepclassmembers class android.graphics.drawable.Ripple { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.view.View { float getVerticalScrollFactor(); }
-keepclassmembers class android.view.View { float getHorizontalScrollFactor(); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl$3 { void <init>(android.app.FragmentManagerImpl,java.lang.String,int); }
-keepclassmembers class android.app.FragmentManagerImpl$3 { void run(); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray searchRedditPosts(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void jump(); }
-keepclassmembers class android.graphics.drawable.Ripple { void endSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.Ripple { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger); }
-keepclassmembers class android.graphics.drawable.Ripple { void exitSoftware(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancel(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class android.graphics.drawable.Ripple { void removeSelf(); }
-keepclassmembers class android.graphics.drawable.Ripple { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Ripple { void access$100(android.graphics.drawable.Ripple); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray searchSubreddits(java.lang.String); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject submit(java.lang.String,boolean,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Filter { java.lang.CharSequence convertResultToString(java.lang.Object); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class java.text.ParsePosition { int getErrorIndex(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class java.text.ParsePosition { void setErrorIndex(int); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int available(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(byte[],int,int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject subscribe(java.lang.String,boolean); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long skip(long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int fill(java.util.zip.Inflater,int); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void updateUserInfo(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$102(java.util.zip.ZipFile$RAFStream,long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$200(java.util.zip.ZipFile$RAFStream); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean vote(java.lang.String,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { boolean translate(int,java.io.Writer); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void <init>(); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void <init>(java.lang.String,int,int,int,org.ccil.cowan.tagsoup.Schema); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(java.lang.String,boolean); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String name(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int flags(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int model(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { boolean canContain(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.view.View { boolean access$2000(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { int access$2400(android.view.View); }
-keepclassmembers class android.widget.ListPopupWindow$2 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.view.View { boolean access$2500(android.view.View); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setParent(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[],org.apache.harmony.security.x509.OtherName$1); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { java.lang.String access$100(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { byte[] access$200(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <clinit>(); }
-keepclassmembers class android.util.FloatMath { float floor(float); }
-keepclassmembers class android.util.FloatMath { float ceil(float); }
-keepclassmembers class android.util.FloatMath { float sqrt(float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class android.widget.AbsListView$PositionScroller { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView$PositionScroller { void start(int); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.widget.AbsListView$PositionScroller { void scrollToVisible(int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class android.widget.AbsListView$PositionScroller { void stop(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void push(int[],java.lang.Object[]); }
-keepclassmembers class android.app.BackStackState { void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class android.app.BackStackState { android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1 { void <init>(au.com.wallaceit.reddinator.Reddinator,org.json.JSONObject,android.content.Context,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPackageName(); }
-keepclassmembers class android.preference.PreferenceFragment$1 { void <init>(android.preference.PreferenceFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void <init>(android.content.Context,android.widget.LinearLayout,android.widget.HorizontalScrollView); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void <init>(android.content.Context,android.widget.LinearLayout); }
-keepclassmembers class android.widget.RemoteViews$Action { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { android.support.v4.view.ViewPager access$000(au.com.wallaceit.reddinator.ui.SimpleTabsWidget); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void initTabs(); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getFactoryClass(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void insertTab(int,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setBackgroundColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setInidicatorColor(int); }
-keepclassmembers class android.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.ChangeScroll { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeScroll { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeScroll { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.BackStackState { void <clinit>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void setTimeInMillis(long); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void updateZoneInfoFromTimeZone(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setTab(int); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.format.Time$TimeCalculator { libcore.util.ZoneInfo lookupZoneInfo(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setTextColor(int); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setViewPager(android.support.v4.view.ViewPager); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { boolean canApplyTheme(); }
-keepclassmembers class android.webkit.WebViewFactory { void loadNativeLibrary(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void copyFieldsToTime(android.text.format.Time); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void <init>(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endDocument(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startDocument(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endPrefixMapping(java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void characters(char[],int,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { void <init>(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { int access$900(android.text.HtmlToSpannedConverter$Header); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class android.support.v4.app.SupportActivity$ExtraData { void <init>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.lang.String access$100(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { int access$200(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.util.ArrayList access$300(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void access$400(android.content.Context,boolean); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void <clinit>(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void access$500(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void clearSharedPreferences(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void printStatus(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void init(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void log(java.lang.String); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void setOptOut(android.content.Context,boolean); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void onStart(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { boolean shouldShowRateDialog(); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { boolean showRateDialogIfNeeded(android.content.Context); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet); }
-keepclassmembers class okhttp3.CacheControl { void <init>(okhttp3.CacheControl$Builder); }
-keepclassmembers class android.database.MatrixCursor { void <init>(java.lang.String[],int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void showRateDialog(android.content.Context); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class okhttp3.CacheControl { void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String); }
-keepclassmembers class okhttp3.CacheControl { void <clinit>(); }
-keepclassmembers class okhttp3.CacheControl { void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1); }
-keepclassmembers class android.database.MatrixCursor { void ensureCapacity(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class android.database.MatrixCursor { void addRow(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class okhttp3.CacheControl { okhttp3.CacheControl parse(okhttp3.Headers); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class okhttp3.CacheControl { boolean isPrivate(); }
-keepclassmembers class java.util.TreeMap$Bound$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class okhttp3.CacheControl { int minFreshSeconds(); }
-keepclassmembers class okhttp3.CacheControl { boolean isPublic(); }
-keepclassmembers class okhttp3.CacheControl { int maxStaleSeconds(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class okhttp3.CacheControl { boolean noStore(); }
-keepclassmembers class okhttp3.CacheControl { int maxAgeSeconds(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void <init>(android.support.v4.app.BackStackRecord,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void cancelTransaction(); }
-keepclassmembers class okhttp3.CacheControl { boolean noCache(); }
-keepclassmembers class okhttp3.CacheControl { boolean onlyIfCached(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void onStartEnterTransition(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void startListening(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { boolean access$000(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void completeTransaction(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { boolean isReady(); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class okio.AsyncTimeout { okio.AsyncTimeout awaitTimeout(); }
-keepclassmembers class okio.AsyncTimeout { boolean cancelScheduledTimeout(okio.AsyncTimeout); }
-keepclassmembers class okio.AsyncTimeout { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <init>(); }
-keepclassmembers class okio.AsyncTimeout { long remainingNanos(long); }
-keepclassmembers class okio.AsyncTimeout { void scheduleTimeout(okio.AsyncTimeout,long,boolean); }
-keepclassmembers class okio.AsyncTimeout { void enter(); }
-keepclassmembers class okio.AsyncTimeout { java.io.IOException exit(java.io.IOException); }
-keepclassmembers class okio.AsyncTimeout { boolean exit(); }
-keepclassmembers class okio.AsyncTimeout { void exit(boolean); }
-keepclassmembers class java.nio.NioUtils { java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class okio.AsyncTimeout { okio.Source source(okio.Source); }
-keepclassmembers class okio.AsyncTimeout { okio.Sink sink(okio.Sink); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$1 { void <init>(okhttp3.internal.framed.NameValueBlockReader,okio.Source); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$1 { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class java.util.logging.LogManager { void checkAccess(); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class java.util.logging.LogManager { void addToFamilyTree(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class java.util.logging.LogManager { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Object getInstanceByClass(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class java.util.logging.LogManager { void readConfigurationImpl(java.io.InputStream); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class java.util.logging.LogManager { void setLevelRecursively(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class java.util.logging.LogManager { void setParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BackStackState$1 { void <init>(); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class android.widget.HorizontalScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$1 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$1 { void onClick(android.view.View); }
-keepclassmembers class libcore.net.url.FileHandler { void <init>(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void <init>(au.com.wallaceit.reddinator.Reddinator,android.content.Context,au.com.wallaceit.reddinator.tasks.SubscriptionEditTask$Callback,int); }
-keepclassmembers class libcore.net.url.FileHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <clinit>(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <init>(); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { java.lang.Boolean doInBackground(java.lang.Object[]); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lockInterruptibly(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { boolean isAccessible(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean arrayContains(int[],int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void checkVectorDrawableSetup(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void onPreExecute(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class android.transition.PathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView$3 { void run(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { long createCacheKey(android.util.TypedValue); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class android.widget.AdapterView { void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewCompat$Api24ViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.support.v7.widget.AppCompatDrawableManager get(); }
-keepclassmembers class android.widget.AdapterView { void removeViewAt(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class android.widget.AdapterView { long getSelectedItemId(); }
-keepclassmembers class android.widget.AdapterView { java.lang.Object getSelectedItem(); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintListFromCache(android.content.Context,int); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuff$Mode getTintMode(int); }
-keepclassmembers class android.widget.AdapterView { boolean isInFilterMode(); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean isVectorDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.widget.AdapterView { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.widget.AdapterView { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class android.widget.AdapterView { boolean canAnimate(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class android.widget.AdapterView { void handleDataChanged(); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class android.widget.AdapterView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void access$200(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { android.app.ProgressDialog access$502(au.com.wallaceit.reddinator.activity.ThemesActivity,android.app.ProgressDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { java.util.HashMap access$300(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void refreshList(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { android.content.res.Resources access$400(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onSubmitted(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class java.util.logging.LogManager$1 { void run(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFile(java.lang.String); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFile(java.io.File); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { void <clinit>(); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadRandomTask$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$2 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void <init>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$2 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { void <clinit>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { void <init>(java.lang.String,int,char); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { char character(); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { android.view.ViewGroup wrap(android.view.View); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { java.lang.String getTtfFilename(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.Iconify$IconValue iconFrom(java.lang.String); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.Iconify$IconValue valueOf(java.lang.String); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.BaseIconValue iconFrom(java.lang.String); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { java.lang.String getPrefix(); }
