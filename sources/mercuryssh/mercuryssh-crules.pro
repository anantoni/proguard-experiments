-ignorewarnings
-dontnote

-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int[]); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { java.lang.Object getObjectVolatile(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getMethods(); }
-keepclassmembers class java.security.AccessController { java.lang.Object doPrivileged(java.security.PrivilegedAction); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getConstructors(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class java.lang.Class { java.lang.Object newInstance(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getField(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getFields(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object get(java.lang.Object,int); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { void set(java.lang.Object,int,java.lang.Object); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class java.nio.channels.NonWritableChannelException { void <init>(); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(); }
-keepclassmembers class com.android.okio.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion { void <clinit>(); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(java.security.Security$1); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class com.android.okio.Util { short reverseBytesShort(short); }
-keepclassmembers class java.security.Security$SecurityDoor { void renumProviders(); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class java.util.Vector { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class java.util.Vector { void <init>(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class java.util.Vector { java.lang.Object[] newElementArray(int); }
-keepclassmembers class java.util.Vector { void add(int,java.lang.Object); }
-keepclassmembers class com.android.okio.Util { int reverseBytesInt(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any { void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String); }
-keepclassmembers class java.util.Vector { boolean add(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion { com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values(); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { java.util.List getAliases(java.security.Provider$Service); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class com.android.okio.Util { void sneakyRethrow(java.lang.Throwable); }
-keepclassmembers class org.greenrobot.eventbus.ThreadMode { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any { void assign(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class com.android.okio.Util { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$ThreadGroupThreadSet { void <init>(java.lang.ThreadGroup); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.PackageVersion { void <clinit>(); }
-keepclassmembers class java.util.EnumSet { void <init>(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.PackageVersion { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.ThreadMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.PackageVersion { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <init>(byte[]); }
-keepclassmembers class java.util.Vector { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet noneOf(java.lang.Class); }
-keepclassmembers class com.android.okio.Util { void <clinit>(); }
-keepclassmembers class java.util.Vector { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.nio.CharSequenceAdapter { void <init>(java.lang.CharSequence); }
-keepclassmembers class org.greenrobot.eventbus.ThreadMode { org.greenrobot.eventbus.ThreadMode[] values(); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$ThreadGroupThreadSet { void resize(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <clinit>(); }
-keepclassmembers class java.util.Vector { java.lang.Object elementAt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LRUMap { void <init>(int,int); }
-keepclassmembers class android.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LRUMap { void clear(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LRUMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$1 { void onAnimationEnd(android.view.View); }
-keepclassmembers class android.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet range(java.lang.Enum,java.lang.Enum); }
-keepclassmembers class com.afollestad.materialdialogs.DefaultAdapter { void <init>(com.afollestad.materialdialogs.MaterialDialog,int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$1 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { void <init>(java.util.EnumMap$EnumMapEntrySet); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.util.Map$Entry get(java.util.MapEntry); }
-keepclassmembers class java.util.Vector { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class java.util.EnumSet { boolean isValidType(java.lang.Class); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { byte[] getEncoded(); }
-keepclassmembers class java.util.EnumSet { java.lang.Object writeReplace(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer,java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.transition.Visibility$VisibilityInfo { void <init>(android.transition.Visibility$1); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class java.util.Vector { java.lang.Object get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LRUMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Vector { boolean contains(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.Vector { void growByOne(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] access$000(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColors(int[]); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class android.animation.Animator { void end(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.MemoryMappedFile access$100(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColorStateList(android.content.res.ColorStateList); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { int[] access$200(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class android.animation.Animator { void start(); }
-keepclassmembers class android.animation.Animator { void cancel(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.app.LoaderManager { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.MinimalPrettyPrinter { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer { void <init>(); }
-keepclassmembers class java.util.Vector { void growBy(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer { java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.core.util.MinimalPrettyPrinter { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(byte[]); }
-keepclassmembers class android.animation.Animator { void resume(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer { org.w3c.dom.Document _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.Vector { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.pattern.util.AsIsEscapeUtil { void <init>(); }
-keepclassmembers class ch.qos.logback.core.pattern.util.AsIsEscapeUtil { void escape(java.lang.String,java.lang.StringBuffer,char,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class java.util.Vector { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.animation.Animator { boolean isStarted(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { void <init>(java.util.concurrent.ArrayBlockingQueue); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$000(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer { void <clinit>(); }
-keepclassmembers class android.transition.Visibility$VisibilityInfo { void <init>(); }
-keepclassmembers class android.animation.Animator { void addPauseListener(android.animation.Animator$AnimatorPauseListener); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.manager.ExportPublicKeyStatus { void <clinit>(); }
-keepclassmembers class java.lang.AssertionError { void <init>(boolean); }
-keepclassmembers class java.lang.AssertionError { void <init>(char); }
-keepclassmembers class java.lang.AssertionError { void <init>(int); }
-keepclassmembers class java.lang.AssertionError { void <init>(long); }
-keepclassmembers class java.util.Vector { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { boolean isDetached(); }
-keepclassmembers class java.lang.AssertionError { void <init>(float); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { int incCursor(int); }
-keepclassmembers class java.util.Vector { void insertElementAt(java.lang.Object,int); }
-keepclassmembers class it.skarafaz.mercury.manager.ExportPublicKeyStatus { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Bitmap access$100(android.support.v4.print.PrintHelperKitkat,android.graphics.Bitmap,int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { boolean invalidated(int,int,long,int); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class java.util.Vector { java.lang.Object lastElement(); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Matrix access$200(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int); }
-keepclassmembers class it.skarafaz.mercury.manager.ExportPublicKeyStatus { it.skarafaz.mercury.manager.ExportPublicKeyStatus[] values(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class android.view.WindowManager$LayoutParams { boolean mayUseInputMethod(int); }
-keepclassmembers class java.lang.AssertionError { void <init>(double); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class java.net.URLEncoder$1 { boolean isRetained(char); }
-keepclassmembers class it.skarafaz.mercury.manager.ExportPublicKeyStatus { int message(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class java.util.Vector { java.lang.Object remove(int); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { void incorporateDequeues(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class java.net.URLEncoder$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void ensureAutoNightModeManager(); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Bitmap access$400(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class java.util.Vector { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean shouldRecreateOnNightModeChange(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { void detach(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { void noNext(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <clinit>(); }
-keepclassmembers class java.util.Vector { boolean removeElement(java.lang.Object); }
-keepclassmembers class java.util.Vector { void removeAllElements(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[],org.apache.commons.lang3.reflect.TypeUtils$1); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { boolean hasNext(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(int,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean updateForNightMode(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itr { java.lang.Object next(); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(int); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean applyDayNight(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class android.app.ContextImpl$40 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int,int,int); }
-keepclassmembers class android.app.ContextImpl$40 { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { int getNightMode(); }
-keepclassmembers class ch.qos.logback.core.util.ContextUtil { void addHostNameAsProperty(); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(); }
-keepclassmembers class ch.qos.logback.core.util.ContextUtil { void <init>(ch.qos.logback.core.Context); }
-keepclassmembers class java.util.LinkedHashSet { java.util.HashMap createBackingMap(int,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { int mapNightMode(int); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class android.support.v4.app.BackStackRecord$3 { void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.util.ContextUtil { void addProperties(java.util.Properties); }
-keepclassmembers class java.math.BigInt { void putHexString(java.lang.String); }
-keepclassmembers class java.util.Vector { void removeElementAt(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { java.lang.CharSequence getTitle(); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class java.util.Vector { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Response createOkResponse(com.android.okhttp.Request,java.net.CacheResponse); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onStop(); }
-keepclassmembers class java.util.Vector { java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException(int,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord$3 { boolean onPreDraw(); }
-keepclassmembers class java.util.Vector { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onStart(); }
-keepclassmembers class android.support.v4.app.ShareCompat$IntentBuilder { void <init>(android.app.Activity); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { void <init>(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.Vector { java.lang.String toString(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class); }
-keepclassmembers class android.support.v4.app.ShareCompat$IntentBuilder { android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.util.Vector { int size(); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class java.util.Vector { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.math.BigInt { void putBigEndian(byte[],boolean); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { java.lang.Object _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.net.HttpURLConnection createJavaUrlConnection(com.android.okhttp.Response); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Headers extractOkHeaders(java.net.CacheResponse); }
-keepclassmembers class java.math.BigInt { byte[] bigEndianMagnitude(); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Headers extractOkHeaders(java.util.Map); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.String extractStatusLine(java.net.CacheResponse); }
-keepclassmembers class java.math.BigInt { void shift(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.String extractStatusLine(java.util.Map); }
-keepclassmembers class java.math.BigInt { void multiplyByPositiveInt(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder { void <init>(); }
-keepclassmembers class android.hardware.usb.IUsbManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException throwRequestModificationException(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt subtraction(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class java.math.BigInt { java.math.BigInt gcd(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder { byte[] _constructArray(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt modulus(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.animation.HoneycombMr1AnimatorCompatProvider { void clearInterpolator(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Response$Body createOkBody(com.android.okhttp.Headers,java.io.InputStream); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class java.math.BigInt { java.math.BigInt modInverse(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.util.Map extractJavaHeaders(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException throwResponseBodyAccessException(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException access$000(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt generatePrimeDefault(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt modExp(java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.support.v4.animation.HoneycombMr1AnimatorCompatProvider { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException access$200(); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class android.app.ActivityThread$2 { void <init>(android.app.ActivityThread,android.app.IActivityManager); }
-keepclassmembers class android.support.v4.content.ContextCompatJellybean { void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.support.v4.animation.HoneycombMr1AnimatorCompatProvider { android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator(); }
-keepclassmembers class java.math.BitLevel { boolean nonZeroDroppedBits(int,int[]); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.app.ActivityThread$2 { void run(); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA { void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA { boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { void <clinit>(); }
-keepclassmembers class java.util.TimerTask { boolean isScheduled(); }
-keepclassmembers class android.support.v4.os.AsyncTaskCompatHoneycomb { void executeParallel(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class java.util.TimerTask { void <init>(); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { java.lang.String baseTypeName(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { java.lang.Class getDefaultImpl(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { java.lang.String getPropertyName(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair { void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { android.view.ViewTreeObserver$CopyOnWriteArray$Access start(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NullSerializer { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NullSerializer { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void end(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class android.renderscript.Type { android.renderscript.Element getElement(); }
-keepclassmembers class android.renderscript.Type { int getZ(); }
-keepclassmembers class android.renderscript.Type { int getX(); }
-keepclassmembers class android.renderscript.Type { int getY(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class android.renderscript.Type { boolean hasFaces(); }
-keepclassmembers class android.renderscript.Type { boolean hasMipmaps(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NullSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { int size(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void addAll(android.view.ViewTreeObserver$CopyOnWriteArray); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.renderscript.Type { void calcElementCount(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.renderscript.Type { int getCount(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { void <init>(java.util.Enumeration,java.util.Enumeration); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$ListType { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[],int,int); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.lang.Object nextElement(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { java.lang.String toString(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { boolean hasMoreElements(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$ListType { com.afollestad.materialdialogs.MaterialDialog$ListType[] values(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$ListType { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.renderscript.Type { void <init>(long,android.renderscript.RenderScript); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$ListType { int getLayoutForType(com.afollestad.materialdialogs.MaterialDialog$ListType); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.net.URL nextElement(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase { com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver(); }
-keepclassmembers class java.lang.StringBuilder { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void <init>(android.support.v4.app.FragmentManager); }
-keepclassmembers class android.support.v4.app.NotificationCompatBase { android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent); }
-keepclassmembers class android.hardware.Sensor { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.view.View$14 { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9); }
-keepclassmembers class java.nio.SocketChannelImpl { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class java.nio.SocketChannelImpl { void <init>(java.nio.channels.spi.SelectorProvider,boolean); }
-keepclassmembers class android.hardware.Sensor { int getHandle(); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void finishUpdate(android.view.ViewGroup); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { void <init>(android.media.MediaRouter$RouteCategory); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { java.lang.CharSequence getName(android.content.res.Resources); }
-keepclassmembers class java.nio.SocketChannelImpl { void <init>(java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { void addRoute(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int getChangingConfigurations(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void backup(); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canConstantState(); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor { void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor { void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void restoreState(android.os.Parcelable,java.lang.ClassLoader); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.hardware.Sensor { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void restore(); }
-keepclassmembers class java.nio.SocketChannelImpl { void onBind(boolean); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void scale(float); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback { void <init>(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.hardware.Sensor { void <clinit>(); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(long,int,boolean); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { int getRouteCount(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompatHoneycomb { void checkIfLegalArg(android.view.View); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class java.nio.SocketChannelImpl { boolean connect(java.net.SocketAddress); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { android.media.MediaRouter$RouteInfo getRouteAt(int); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class android.support.v4.widget.SearchViewCompatHoneycomb { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean equals(byte[],byte[],int); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { android.os.Parcelable saveState(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCause(java.lang.Throwable); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class java.nio.SocketChannelImpl { void onConnectStatusChanged(java.net.InetSocketAddress,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompatHoneycomb { void setSearchableInfo(android.view.View,android.content.ComponentName); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.nio.SocketChannelImpl { boolean isEINPROGRESS(java.io.IOException); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void initContentView(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { int size(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean isCollapsed(android.view.View); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { void routeUpdated(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void drawableStateChanged(); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { int getMeasuredHeightWithMargins(android.view.View); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void createPopupWindow(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { boolean isEmpty(); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.View getTabContainer(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void show(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { void updateName(); }
-keepclassmembers class java.text.ChoiceFormat { void <init>(double[],java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getMessage(java.lang.Throwable); }
-keepclassmembers class java.io.FilterOutputStream { void flush(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onFinishInflate(); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { int getCount(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentStatePagerAdapter { void startUpdate(android.view.ViewGroup); }
-keepclassmembers class java.text.ChoiceFormat { void <init>(java.lang.String); }
-keepclassmembers class java.text.ChoiceFormat { void applyPattern(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getRootCauseMessage(java.lang.Throwable); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { long getItemId(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class android.media.MediaRouter$RouteGroup { void updateVolume(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { int clipVertically(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { java.lang.Object getItem(int); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getRootCause(java.lang.Throwable); }
-keepclassmembers class org.slf4j.helpers.NOPLoggerFactory { void <init>(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String[] getRootCauseStackTrace(java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.util.AggregationType { void <clinit>(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(); }
-keepclassmembers class org.slf4j.helpers.NOPLoggerFactory { org.slf4j.Logger getLogger(java.lang.String); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { int getTextOffset(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { int getVerticalLocalPosition(int); }
-keepclassmembers class ch.qos.logback.core.util.AggregationType { ch.qos.logback.core.util.AggregationType[] values(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter { com.fasterxml.jackson.databind.ser.PropertyFilter from(com.fasterxml.jackson.databind.ser.BeanPropertyFilter); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$H { void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.util.List getStackFrameList(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onMeasure(int,int); }
-keepclassmembers class java.text.ChoiceFormat { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setRampUpDuration(int); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setRampDownDuration(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void requestStop(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { boolean isFinished(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getStackTrace(java.lang.Throwable); }
-keepclassmembers class java.text.ChoiceFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class ch.qos.logback.core.util.AggregationType { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$H { void handleMessage(android.os.Message); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi24 { java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(int,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { int getThrowableCount(java.lang.Throwable); }
-keepclassmembers class java.nio.SocketChannelImpl { void checkUnconnected(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void describe(java.lang.StringBuilder,boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { float getValueAt(long); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.util.List getThrowableList(java.lang.Throwable); }
-keepclassmembers class java.text.ChoiceFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { void <clinit>(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { android.util.ArraySet add(android.util.ArraySet,java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void <init>(); }
-keepclassmembers class java.text.ChoiceFormat { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { void <init>(java.lang.Class,java.lang.Short); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { java.lang.String getStatus(); }
-keepclassmembers class java.nio.SocketChannelImpl { java.net.InetSocketAddress validateAddress(java.net.SocketAddress); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { float interpolateValue(float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setTargetVelocity(float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void computeScrollDelta(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable[] getThrowables(java.lang.Throwable); }
-keepclassmembers class java.text.ChoiceFormat { double nextDouble(double); }
-keepclassmembers class android.view.accessibility.CaptioningManager$2 { void <init>(android.view.accessibility.CaptioningManager); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <clinit>(); }
-keepclassmembers class android.app.LoaderManager { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer access$1400(); }
-keepclassmembers class java.nio.SocketChannelImpl { void implCloseSelectableChannel(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer access$600(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getDeltaX(); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer { java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getVerticalDirection(); }
-keepclassmembers class java.text.ChoiceFormat { void setChoices(double[],java.lang.String[]); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getDeltaY(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getHorizontalDirection(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class javax.xml.namespace.QName { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class java.text.ChoiceFormat { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class javax.xml.namespace.QName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class javax.xml.namespace.QName { void <init>(java.lang.String); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class javax.xml.namespace.QName { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.drawable.Drawable { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { void setLayoutDirection(int); }
-keepclassmembers class android.net.wifi.WifiScanner { void <init>(android.content.Context,android.net.wifi.IWifiScanner); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearColorFilter(); }
-keepclassmembers class javax.xml.namespace.QName { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { void removeCommonFrames(java.util.List,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class javax.xml.namespace.QName { javax.xml.namespace.QName valueOf(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class javax.xml.namespace.QName { int hashCode(); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void setVisibility(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void setup(int,float); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.net.wifi.WifiScanner { void init(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { void <init>(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { java.lang.String[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator { void <init>(float[]); }
-keepclassmembers class android.graphics.drawable.Ripple { void clampStartingPosition(); }
-keepclassmembers class javax.xml.namespace.QName { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.net.wifi.WifiScanner { java.lang.Object getListener(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.net.PacProxySelector { void <init>(); }
-keepclassmembers class javax.xml.namespace.QName { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { java.lang.String[] _deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.net.PacProxySelector { java.util.List select(java.net.URI); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class android.net.wifi.WifiScanner { java.lang.Object removeListener(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { void <init>(com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.net.wifi.WifiScanner { com.android.internal.util.AsyncChannel access$000(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class android.net.wifi.WifiScanner { com.android.internal.util.AsyncChannel access$002(com.android.internal.util.AsyncChannel); }
-keepclassmembers class android.net.wifi.WifiScanner { java.util.concurrent.CountDownLatch access$100(); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean isHardwareAnimating(); }
-keepclassmembers class android.net.wifi.WifiScanner { java.lang.Object access$200(int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.net.wifi.WifiScanner { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.Drawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.net.wifi.WifiScanner { java.lang.Object access$300(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { com.fasterxml.jackson.databind.JavaType parse(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.IterableSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { boolean hasSingleElement(java.lang.Iterable); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class android.net.PacProxySelector { java.net.Proxy proxyFromHostPort(java.net.Proxy$Type,java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$HoneycombManagerFragment { void onResume(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { boolean isEmpty(java.lang.Iterable); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser { java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer); }
-keepclassmembers class android.graphics.drawable.Ripple { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 { void <clinit>(); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Ripple { void move(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { java.lang.String[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.Chunk { void <init>(int,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.drawable.Ripple { void enter(); }
-keepclassmembers class android.net.PacProxySelector { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.Chunk { void <init>(int,java.nio.ByteBuffer); }
-keepclassmembers class com.android.internal.os.IDropBoxManagerService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class android.net.PacProxySelector { java.util.List parseResponse(java.lang.String); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.graphics.drawable.Ripple { void exit(); }
-keepclassmembers class com.android.internal.os.IDropBoxManagerService$Stub$Proxy { void add(android.os.DropBoxManager$Entry); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$5 { void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$5 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.Ripple { void createPendingHardwareExit(int,int); }
-keepclassmembers class android.graphics.drawable.Ripple { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.IterableSerializer { com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.io.FilterReader { void <init>(java.io.Reader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionContextClick(); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$HoneycombManagerFragment { void onEventMainThread(org.greenrobot.eventbus.util.ThrowableFailureEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionScrollDown(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionScrollLeft(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionScrollRight(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionScrollToPosition(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionScrollUp(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl { java.lang.Object getActionShowOnScreen(); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class java.security.spec.DSAPrivateKeySpec { void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void <init>(int); }
-keepclassmembers class com.android.internal.app.IAppOpsService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void <clinit>(); }
-keepclassmembers class android.location.ILocationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void close(); }
-keepclassmembers class android.support.v4.view.ViewPager { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.app.IAppOpsService$Stub$Proxy { int checkOperation(int,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void jump(); }
-keepclassmembers class android.support.v4.view.ViewPager { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.Ripple { void endSoftwareAnimations(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { long contentLength(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void writeToSocket(com.android.okio.BufferedSink); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.support.v7.app.TwilightManager); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(byte[]); }
-keepclassmembers class android.graphics.drawable.Ripple { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void cleanup(); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(int,byte[],int,boolean); }
-keepclassmembers class android.view.animation.Animation$2 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.view.ViewPager { void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo); }
-keepclassmembers class android.view.animation.Animation$2 { void run(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void dispatchTimeChanged(); }
-keepclassmembers class android.graphics.drawable.Ripple { void exitSoftware(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteArrayBuffer copy(java.nio.ByteArrayBuffer,int,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { int getApplyableNightMode(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void setup(); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer asReadOnlyBuffer(); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$HoneycombManagerFragment { void onPause(); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { java.lang.String manglePropertyName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class java.nio.ByteArrayBuffer { boolean isReadOnly(); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte[] protectedArray(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancel(); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelSoftwareAnimations(); }
-keepclassmembers class java.nio.ByteArrayBuffer { boolean protectedHasArray(); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class java.nio.ByteArrayBuffer { int protectedArrayOffset(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { int estimateLength(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void removeSelf(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(int,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Ripple { void invalidateSelf(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer { void serialize(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.util.BeanUtil { java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void access$100(android.graphics.drawable.Ripple); }
-keepclassmembers class com.android.okio.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class android.graphics.drawable.Ripple { void <clinit>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask$1 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$29 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatLollipop { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatLollipop { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class android.content.ContentProviderProxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.content.ContentProviderProxy { android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[],org.apache.harmony.security.x509.EDIPartyName$1); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$100(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(int,int,float,float); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$200(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte get(); }
-keepclassmembers class android.content.res.AssetManager { void close(); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte get(int); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceText(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedBasicPropertyIA$1 { void <clinit>(); }
-keepclassmembers class com.android.okio.Base64 { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$29 { void <init>(); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.media.MediaRouterClientState$1 { void <init>(); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class android.media.MediaRouterClientState$1 { android.media.MediaRouterClientState createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.Editor$PositionListener { boolean onPreDraw(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence[] getResourceTextArray(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { float getGoneX(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(); }
-keepclassmembers class android.media.MediaRouterClientState$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.OverScroller { int getCurrY(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class android.widget.OverScroller { int getCurrX(); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class android.content.res.AssetManager { boolean getThemeValue(long,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout); }
-keepclassmembers class org.greenrobot.eventbus.AsyncPoster { void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class android.widget.OverScroller { float getCurrVelocity(); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class android.support.v4.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandStart { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.OverScroller { int getFinalX(); }
-keepclassmembers class org.greenrobot.eventbus.AsyncPoster { void <init>(org.greenrobot.eventbus.EventBus); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void ensureStringBlocks(); }
-keepclassmembers class java.nio.ByteArrayBuffer { boolean isDirect(); }
-keepclassmembers class android.content.ContentProviderProxy { void <init>(android.os.IBinder); }
-keepclassmembers class org.greenrobot.eventbus.AsyncPoster { void run(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class android.widget.OverScroller { int getFinalY(); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class android.content.res.AssetManager { void <init>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.RenderNodeAnimator { void resume(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void <init>(android.content.Context); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.OverScroller { boolean computeScrollOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getPooledStringForCookie(int,int); }
-keepclassmembers class java.nio.channels.FileChannel$MapMode { void <init>(java.lang.String); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer put(byte[],int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class android.support.v7.widget.SearchView$3 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class java.nio.channels.FileChannel$MapMode { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView$3 { void run(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi23 { java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void addActionBarHideOffset(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LinkedNode { void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class android.content.ContentProviderProxy { java.lang.String getType(android.net.Uri); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isRunning(); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void completeScroll(boolean); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LinkedNode { java.lang.Object value(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$1$1 { void <init>(com.afollestad.materialdialogs.MaterialDialog$1,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LinkedNode { void linkNext(com.fasterxml.jackson.databind.util.LinkedNode); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.os.Trace$1 { void run(); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.util.LinkedNode { com.fasterxml.jackson.databind.util.LinkedNode next(); }
-keepclassmembers class android.support.v4.view.ViewPager { int determineTargetPage(int,float,int,int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$1$1 { void run(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void init(android.content.Context); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams { void <init>(android.support.v4.widget.DrawerLayout$LayoutParams); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer putChar(char); }
-keepclassmembers class android.content.res.AssetManager { java.io.InputStream openNonAsset(int,java.lang.String,int); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class ch.qos.logback.core.util.StringCollectionUtil { void removeMatching(java.util.Collection,java.lang.String[]); }
-keepclassmembers class ch.qos.logback.core.util.StringCollectionUtil { void removeMatching(java.util.Collection,java.util.Collection); }
-keepclassmembers class ch.qos.logback.core.util.StringCollectionUtil { void retainMatching(java.util.Collection,java.util.Collection); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback { void <init>(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.widget.OverScroller { void notifyVerticalEdgeReached(int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean processDelayed(long); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback { boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class ch.qos.logback.core.util.StringCollectionUtil { void retainMatching(java.util.Collection,java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postRemoveActionBarHideOffset(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void doFrame(long); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageScrolled(int,float,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postAddActionBarHideOffset(); }
-keepclassmembers class android.widget.OverScroller { boolean isScrollingInDirection(float,float); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateRevealAnimator(int,int,float,float); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void removeActionBarHideOffset(); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldHideActionBarOnFling(float,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { com.fasterxml.jackson.databind.node.LongNode valueOf(long); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer putInt(int); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageSelected(int); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean access$000(android.view.RenderNodeAnimator,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { java.lang.String asText(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class java.util.zip.Inflater { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class java.util.zip.Inflater { long createStream(boolean); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { void <init>(long); }
-keepclassmembers class java.util.zip.Inflater { void endImpl(long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateAnimator(int,float); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class android.support.v4.view.ViewPager { android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class java.util.zip.Inflater { int getRemaining(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void run(); }
-keepclassmembers class android.support.v4.view.ViewPager { void endDrag(); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class android.content.ContentProviderProxy { android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal); }
-keepclassmembers class java.util.zip.Inflater { int getTotalOut(); }
-keepclassmembers class android.content.res.AssetManager { int addAssetPath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.LongNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.zip.Inflater { long getTotalOutImpl(long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable getFrame(int); }
-keepclassmembers class android.content.res.AssetManager { int addAssetPathNative(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { int addOverlayPath(java.lang.String); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isOneShot(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void enableLayers(boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setOneShot(boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.support.v4.view.ViewPager { int getClientWidth(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void nextFrame(boolean); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition(); }
-keepclassmembers class android.content.res.AssetManager { long openNonAssetNative(int,java.lang.String,int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceTypeName(int); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class android.content.res.AssetManager { long createTheme(); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class java.util.zip.Inflater { int inflateImpl(byte[],int,int,long); }
-keepclassmembers class android.content.res.AssetManager { android.os.ParcelFileDescriptor openNonAssetFdNative(int,java.lang.String,long[]); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getNestedScrollAxes(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class android.content.res.AssetManager { boolean applyStyle(long,int,int,long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { long getAssetLength(long); }
-keepclassmembers class android.content.ContentProviderProxy { android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void haltActionBarHideOffsetAnimations(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[]); }
-keepclassmembers class android.content.res.AssetManager { boolean retrieveAttributes(long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { void destroyAsset(long); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[],int,int); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class android.content.res.AssetManager { boolean resolveAttrs(long,int,int,int[],int[],int[],int[]); }
-keepclassmembers class it.skarafaz.mercury.view.PagerTabStrip { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseInputStream { void <init>(android.os.ParcelFileDescriptor); }
-keepclassmembers class android.app.ContextImpl$46 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.ContextImpl$46 { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class android.content.res.AssetManager { void applyThemeStyle(long,int,boolean); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class android.content.res.AssetManager { void copyTheme(long,long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseInputStream { void close(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getActionBarHideOffset(); }
-keepclassmembers class java.util.zip.Inflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { int loadThemeAttributeValue(long,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.content.res.AssetManager { android.util.SparseArray getAssignedPackageIdentifiers(); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class android.content.res.AssetManager { int[] getArrayStringInfo(int); }
-keepclassmembers class android.content.res.AssetManager { long newTheme(); }
-keepclassmembers class java.util.zip.Inflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class it.skarafaz.mercury.view.PagerTabStrip { int getPixelsFromDps(int); }
-keepclassmembers class android.content.ContentProviderProxy { java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.content.res.AssetManager { long access$100(android.content.res.AssetManager,long); }
-keepclassmembers class java.util.zip.Inflater { int setFileInputImpl(java.io.FileDescriptor,long,int,long); }
-keepclassmembers class java.util.zip.Inflater { int setFileInput(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.hardware.ICameraServiceListener$Stub { void <init>(); }
-keepclassmembers class android.hardware.ICameraServiceListener$Stub { boolean onTransact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class java.lang.Boolean { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class android.content.ContentProviderProxy { android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal); }
-keepclassmembers class java.util.zip.Inflater { void checkOpen(); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class android.content.res.AssetManager { void access$400(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager { void access$500(android.content.res.AssetManager,long); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.AppOpsManager { void <init>(android.content.Context,com.android.internal.app.IAppOpsService); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isDecorView(android.view.View); }
-keepclassmembers class android.net.wifi.IRttManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class android.net.wifi.IRttManager$Stub$Proxy { android.os.Messenger getMessenger(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isGutterDrag(float,float); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class java.lang.Boolean { boolean parseBoolean(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class java.lang.Boolean { boolean getBoolean(java.lang.String); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(boolean); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.media.AudioPortEventHandler$1 { void <init>(android.media.AudioPortEventHandler,android.os.Looper); }
-keepclassmembers class android.content.ContentProviderProxy { android.os.ICancellationSignal createCancellationSignal(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageScrolled(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(java.lang.String); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class libcore.net.MimeUtils { java.io.InputStream getContentTypesPropertiesStream(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean performDrag(float); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString { void <clinit>(); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void recycle(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class libcore.net.MimeUtils { void applyOverrides(); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo$RangeInfo); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(int); }
-keepclassmembers class android.graphics.pdf.PdfDocument { android.graphics.pdf.PdfDocument$Page startPage(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { double doubleValue(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(java.lang.Number); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.AppOpsManager { int strOpToOp(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void finishPage(android.graphics.pdf.PdfDocument$Page); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { float floatValue(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void <init>(int,float,float,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int compareTo(org.apache.commons.lang3.mutable.MutableInt); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void increment(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void recomputeScrollPosition(int,int,int,int); }
-keepclassmembers class android.app.AppOpsManager { int checkOpNoThrow(java.lang.String,int,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { long longValue(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class libcore.util.CollectionUtils$1$1 { void <init>(libcore.util.CollectionUtils$1); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void recycle(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int intValue(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int hashCode(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void writeTo(java.io.OutputStream); }
-keepclassmembers class java.io.NotActiveException { void <init>(java.lang.String); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThrowableHandlingConverter { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void clear(); }
-keepclassmembers class java.io.NotActiveException { void <init>(); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeNonDecorViews(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void dispose(); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void close(); }
-keepclassmembers class android.nfc.INfcAdapter$Stub { android.nfc.INfcAdapter asInterface(android.os.IBinder); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class libcore.util.CollectionUtils$1$1 { java.lang.Object next(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void throwIfClosed(); }
-keepclassmembers class android.support.v4.view.ViewPager { void requestParentDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class libcore.util.CollectionUtils$1$1 { void computeNext(); }
-keepclassmembers class android.support.v4.view.ViewPager { void scrollToItem(int,boolean,int,boolean); }
-keepclassmembers class java.net.MalformedURLException { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean resetTouch(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeFinishPage(long); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class libcore.util.CollectionUtils$1$1 { boolean hasNext(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { long nativeCreateDocument(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void throwIfCurrentPageNotFinished(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeWriteTo(long,java.io.OutputStream,byte[]); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { void <clinit>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument { void nativeClose(long); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat { void <clinit>(); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { void <init>(android.widget.ProgressBar); }
-keepclassmembers class android.graphics.pdf.PdfDocument { long nativeStartPage(long,int,int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.Annotated { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.Annotated { boolean hasAnnotation(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.AppOpsManager { int checkOpNoThrow(int,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void pullChildren(); }
-keepclassmembers class android.view.WindowManager$InvalidDisplayException { void <init>(java.lang.String); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByPositiveInt(java.math.BigInteger,int); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { android.graphics.drawable.shapes.Shape getDrawableShape(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void setActionBarHideOffset(int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByTenPow(java.math.BigInteger,long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.Annotated { com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.support.v4.view.ViewPager { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat { void <init>(int,java.lang.CharSequence); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat { void <init>(java.lang.Object); }
-keepclassmembers class android.app.ActivityThread { java.lang.String currentPackageName(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int); }
-keepclassmembers class android.app.ActivityThread { java.lang.String currentProcessName(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByFivePow(java.math.BigInteger,int); }
-keepclassmembers class android.app.ActivityThread { android.content.pm.IPackageManager getPackageManager(); }
-keepclassmembers class android.view.WindowManager$InvalidDisplayException { void <init>(); }
-keepclassmembers class android.app.ActivityThread { android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.app.LoadedApk); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityThread { android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewPager { void addOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.ActivityThread { android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { android.graphics.Bitmap getSampleTime(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean arrowScroll(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void sortChildDrawingOrder(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP$Config { void <init>(); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.lang.String,org.apache.commons.io.IOCase); }
-keepclassmembers class android.support.v7.widget.AppCompatProgressBarHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.app.AppOpsManager { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers { com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.util.List,org.apache.commons.io.IOCase); }
-keepclassmembers class android.app.ActivityThread { android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int); }
-keepclassmembers class java.security.Provider { void <init>(java.lang.String,double,java.lang.String); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { android.os.Handler getHandler(); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { boolean accept(java.io.File); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.lang.String[]); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void <init>(org.greenrobot.eventbus.EventBusBuilder); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class java.lang.ClassCastException { void <init>(); }
-keepclassmembers class java.security.Provider { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class java.security.Provider { void putAll(java.util.Map); }
-keepclassmembers class java.security.Provider { void myPutAll(java.util.Map); }
-keepclassmembers class java.security.Provider { java.lang.String getName(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class java.security.Provider { java.util.Set entrySet(); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { void <init>(java.lang.String[],org.apache.commons.io.IOCase); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { org.greenrobot.eventbus.EventBusBuilder builder(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void addInterfaces(java.util.List,java.lang.Class[]); }
-keepclassmembers class android.app.ActivityThread { android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class java.security.Provider { java.util.Collection values(); }
-keepclassmembers class android.app.ActivityThread { android.app.LoadedApk peekPackageInfo(java.lang.String,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { int httpMinorVersion(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void checkPostStickyEventToSubscription(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { java.lang.String getStatusLine(); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class java.security.Provider { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.filefilter.SuffixFileFilter { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class java.security.Provider { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void handleSubscriberException(org.greenrobot.eventbus.Subscription,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { int code(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { org.greenrobot.eventbus.EventBus getDefault(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScrollHorizontally(int); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.app.ActivityThread { android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { com.fasterxml.jackson.core.sym.Name1 getEmptyName(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { boolean equals(int[],int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { boolean equals(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name1 { boolean equals(int,int); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { int getBlockSize(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { void init(int,byte[],byte[]); }
-keepclassmembers class android.support.v4.view.ViewPager { void computeScroll(); }
-keepclassmembers class java.nio.channels.Pipe$SourceChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void run(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { int getIVSize(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void interruptIfStarted(); }
-keepclassmembers class android.support.v4.view.ViewPager { void dataSetChanged(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class java.security.Provider { void setProviderNumber(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void lock(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class android.support.graphics.drawable.AndroidResources { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { boolean isCBC(); }
-keepclassmembers class java.util.LinkedList$Link { void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link); }
-keepclassmembers class android.support.v7.widget.OpReorderer { int getLastMoveOutOfOrder(java.util.List); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void postSingleEvent(java.lang.Object,org.greenrobot.eventbus.EventBus$PostingThreadState); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void <init>(android.support.v7.widget.OpReorderer$Callback); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { java.util.List lookupAllEventTypes(java.lang.Class); }
-keepclassmembers class android.app.ActivityThread { void <init>(); }
-keepclassmembers class java.security.Provider { java.util.Set getServices(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCBC { void update(byte[],int,int,byte[],int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$4 { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.TimestampAction { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class ch.qos.logback.core.joran.action.TimestampAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.classic.util.DefaultNestedComponentRules { void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void swapMoveOp(java.util.List,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void <init>(android.support.v7.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class ch.qos.logback.core.joran.action.TimestampAction { void <init>(); }
-keepclassmembers class android.location.ICountryDetector$Stub { android.location.ICountryDetector asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewPager { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread$ApplicationThread getApplicationThread(); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void reorderOps(java.util.List); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void postToSubscription(org.greenrobot.eventbus.Subscription,java.lang.Object,boolean); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { boolean postSingleEventForEventType(java.lang.Object,org.greenrobot.eventbus.EventBus$PostingThreadState,java.lang.Class); }
-keepclassmembers class android.hardware.Camera$EventHandler { void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper); }
-keepclassmembers class android.app.ActivityThread { android.app.Instrumentation getInstrumentation(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$3 { void <init>(int); }
-keepclassmembers class android.app.ActivityThread { android.app.Application getApplication(); }
-keepclassmembers class android.support.v4.view.ViewPager { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List); }
-keepclassmembers class android.app.ActivityThread { void ensureJitEnabled(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector); }
-keepclassmembers class android.support.v4.view.ViewPager { void drawableStateChanged(); }
-keepclassmembers class android.app.ActivityThread { android.os.Looper getLooper(); }
-keepclassmembers class android.app.ActivityThread { void scheduleGcIdler(); }
-keepclassmembers class android.text.ClipboardManager { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void doGcIfNeeded(); }
-keepclassmembers class android.app.ActivityThread { android.app.ContextImpl getSystemContext(); }
-keepclassmembers class android.app.ActivityThread { void unscheduleGcIdler(); }
-keepclassmembers class butterknife.ButterKnife$1 { void <init>(); }
-keepclassmembers class android.app.ResourcesManager { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.TimestampAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.app.ResourcesManager { android.app.ResourcesManager getInstance(); }
-keepclassmembers class android.app.ResourcesManager { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class butterknife.ButterKnife$1 { void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1000(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.app.ResourcesManager { android.util.DisplayMetrics getDisplayMetricsLocked(int,android.view.DisplayAdjustments); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$2 { void <init>(com.android.okhttp.internal.spdy.NameValueBlockReader); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$100(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.app.ResourcesManager { void flushDisplayMetricsLocked(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void subscribe(java.lang.Object,org.greenrobot.eventbus.SubscriberMethod); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1200(android.support.v7.widget.RecyclerView,android.view.View); }
-keepclassmembers class android.content.res.ResourcesKey { void <init>(java.lang.String,int,android.content.res.Configuration,float,android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1100(android.support.v7.widget.RecyclerView,android.view.View); }
-keepclassmembers class android.app.ResourcesManager { void applyNonDefaultDisplayMetricsToConfigurationLocked(android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$302(android.support.v7.widget.RecyclerView,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$3200(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.app.ResourcesManager { android.util.DisplayMetrics getDisplayMetricsLocked(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$200(android.support.v7.widget.RecyclerView); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$2 { int inflate(byte[],int,int); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$Adapter access$3100(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.animation.Interpolator access$3000(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1300(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean executeKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { java.util.ArrayList access$3600(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$3800(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$3700(android.support.v7.widget.RecyclerView,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.util.Converter _createConverter(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class java.security.Provider { void removeFromPropertyServiceTable(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintInfo { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$3300(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$3900(android.support.v7.widget.RecyclerView,int); }
-keepclassmembers class android.content.res.ResourcesKey { boolean hasOverrideConfiguration(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$3400(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.TintInfo { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD { void <init>(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.app.ResourcesManager { android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class android.content.res.ResourcesKey { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD { java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.view.ViewPager { int getCurrentItem(); }
-keepclassmembers class android.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$400(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.OpReorderer { void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void unsubscribeByEventType(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.PagerAdapter getAdapter(); }
-keepclassmembers class android.support.v4.widget.TextViewCompatGingerbread { void setTextAppearance(android.widget.TextView,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$RecyclerListener access$5200(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.app.ResourcesManager { boolean applyCompatConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.ViewPager { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.content.res.ResourcesKey { int hashCode(); }
-keepclassmembers class javax.crypto.spec.SecretKeySpec { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void finish(java.lang.Object); }
-keepclassmembers class android.content.res.ResourcesKey { boolean equals(java.lang.Object); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { java.util.concurrent.ExecutorService getExecutorService(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void <init>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter(); }
-keepclassmembers class java.nio.ShortBuffer { java.nio.ShortBuffer wrap(short[]); }
-keepclassmembers class java.nio.ShortBuffer { java.nio.ShortBuffer wrap(short[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class java.security.Provider { void updatePropertyServiceTable(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$602(android.support.v7.widget.RecyclerView,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForPosition(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$6400(android.support.v7.widget.RecyclerView,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$700(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void invokeSubscriber(org.greenrobot.eventbus.PendingPost); }
-keepclassmembers class android.support.v4.view.ViewPager { void initViewPager(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class java.nio.ShortBuffer { void <init>(int,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean access$900(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void invokeSubscriber(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class android.os.Binder { void restoreCallingIdentity(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$800(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.renderscript.RenderScript { int rsnSystemGetPointerSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean); }
-keepclassmembers class javax.crypto.spec.SecretKeySpec { java.lang.String getFormat(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.os.Binder { int getCallingPid(); }
-keepclassmembers class android.graphics.Interpolator { void setKeyFrame(int,int,float[]); }
-keepclassmembers class android.renderscript.RenderScript { void _nInit(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onAttachedToWindow(); }
-keepclassmembers class android.os.Binder { void flushPendingCommands(); }
-keepclassmembers class android.graphics.Interpolator { void setKeyFrame(int,int,float[],float[]); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDetachedFromWindow(); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Iter { void <init>(java.util.concurrent.ConcurrentSkipListMap); }
-keepclassmembers class android.os.Binder { java.lang.String getInterfaceDescriptor(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.Map findBackReferenceProperties(); }
-keepclassmembers class android.os.Binder { long clearCallingIdentity(); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void post(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDraw(android.graphics.Canvas); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void postSticky(java.lang.Object); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(float[]); }
-keepclassmembers class android.os.Binder { android.os.IInterface queryLocalInterface(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Iter { void advance(); }
-keepclassmembers class android.os.Binder { boolean onTransact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void register(java.lang.Object); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(int,float[]); }
-keepclassmembers class android.graphics.Interpolator { void nativeSetKeyFrame(long,int,int,float[],float[]); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class android.graphics.Interpolator { int nativeTimeToValues(long,int,float[]); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { boolean removeStickyEvent(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.SHA1 { void <init>(); }
-keepclassmembers class android.os.Binder { void dump(java.io.FileDescriptor,java.lang.String[]); }
-keepclassmembers class com.jcraft.jsch.jce.SHA1 { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.jce.SHA1 { void init(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class com.jcraft.jsch.jce.SHA1 { void update(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus { void unregister(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.util.Converter findDeserializationConverter(); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.security.Provider { void servicesChanged(); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void cancelTouch(); }
-keepclassmembers class com.jcraft.jsch.Util { void <clinit>(); }
-keepclassmembers class java.security.Provider { void putProviderInfo(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void considerReleasingGlowsOnScroll(int,int); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class android.app.ResourcesManager { boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.lang.reflect.Method findFactoryMethod(java.lang.Class[]); }
-keepclassmembers class android.os.Binder { void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.os.Binder { boolean transact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class java.security.Provider { java.lang.String key(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String byte2str(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.Map findInjectables(); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String byte2str(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod(); }
-keepclassmembers class java.security.Provider { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String byte2str(byte[],int,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.lang.Class findPOJOBuilder(); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String byte2str(byte[],java.lang.String); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class android.renderscript.RenderScript { void setupDiskCache(java.io.File); }
-keepclassmembers class com.jcraft.jsch.Util { void bzero(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String checkTilde(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.List findProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.util.Converter findSerializationConverter(); }
-keepclassmembers class com.jcraft.jsch.Util { java.net.Socket createSocket(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include); }
-keepclassmembers class android.app.ContextImpl$StaticServiceFetcher { void <init>(); }
-keepclassmembers class android.app.ContextImpl$StaticServiceFetcher { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Iter { boolean hasNext(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void cancel(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.util.Annotations getClassAnnotations(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String diffString(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.List getConstructors(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.List getFactoryMethods(); }
-keepclassmembers class android.accounts.AccountManager$19 { void <init>(android.accounts.AccountManager); }
-keepclassmembers class android.support.v4.view.ViewPager { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.util.Set getIgnoredPropertyNames(); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo(); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] fromBase64(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { boolean hasKnownClassAnnotations(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { java.lang.Object instantiateBean(boolean); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.bluetooth.BluetoothManager { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl { void <init>(android.support.v7.app.AppCompatDelegateImplBase); }
-keepclassmembers class android.os.AsyncTask$3 { void <init>(android.os.AsyncTask,java.util.concurrent.Callable); }
-keepclassmembers class android.os.AsyncTask$3 { void done(); }
-keepclassmembers class android.service.fingerprint.FingerprintManager { void <init>(android.content.Context,android.service.fingerprint.IFingerprintService); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.jcraft.jsch.jce.SHA1 { byte[] digest(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getAccessibilityViewId(long); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] fromFile(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { boolean removeProperty(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicBeanDescription { com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TextStrategy { void <init>(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String getFingerPrint(com.jcraft.jsch.HASH,byte[]); }
-keepclassmembers class android.app.ContextImpl$10 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$10 { java.lang.Object createStaticService(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSource(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TextStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class android.app.SearchManager { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSource(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewPager { void onMeasure(int,int); }
-keepclassmembers class javax.crypto.spec.DESedeKeySpec { void <init>(byte[]); }
-keepclassmembers class android.animation.LayoutTransition { void startChangingAnimations(); }
-keepclassmembers class com.jcraft.jsch.Util { boolean glob(byte[],int,byte[],int); }
-keepclassmembers class android.transition.ChangeTransform$PathAnimatorMatrix { void <init>(android.view.View,float[]); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.animation.LayoutTransition { void endChangingAnimations(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class android.animation.AnimatorSet$1 { void <init>(android.animation.AnimatorSet,java.util.ArrayList); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context); }
-keepclassmembers class android.transition.Explode { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.io.PushbackReader { void <init>(java.io.Reader,int); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class android.transition.Explode { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void <clinit>(); }
-keepclassmembers class android.transition.ChangeTransform$PathAnimatorMatrix { void setAnimationMatrix(); }
-keepclassmembers class android.transition.Explode { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void access$1500(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void access$1600(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.transition.Explode { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean access$4800(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.RelativeLayout { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { android.support.v7.widget.RecyclerView$Recycler access$4902(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.transition.Explode { android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.transition.Explode { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean access$5000(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean access$5002(android.support.v7.widget.RecyclerView$ViewHolder,boolean); }
-keepclassmembers class java.io.PushbackReader { int read(); }
-keepclassmembers class android.widget.RelativeLayout { void queryCompatibilityModes(android.content.Context); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean access$6300(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { int access$6500(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.RelativeLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean didChildRangeChange(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.PushbackReader { void checkNotClosed(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean doesTransientStatePreventRecycling(); }
-keepclassmembers class com.jcraft.jsch.Util { boolean glob0(byte[],int,byte[],int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addChild(android.view.View); }
-keepclassmembers class com.jcraft.jsch.Util { boolean glob(byte[],byte[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void onEnteredHiddenState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void onLeftHiddenState(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addChildUnchecked(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.RelativeLayout { int getBaseline(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.transition.Explode { android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean shouldBeKeptAsChild(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addChildInternal(android.view.View,int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchChildAttached(android.view.View); }
-keepclassmembers class android.widget.RelativeLayout { void requestLayout(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchChildDetached(android.view.View); }
-keepclassmembers class android.widget.RelativeLayout { void sortChildren(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.net.NetworkInterface { void <init>(java.lang.String,int,java.util.List,java.util.List); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void onPageScrolled(int,float,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getActions(); }
-keepclassmembers class com.jcraft.jsch.Util { int skipUTF8Char(byte); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchContentChangedIfNecessary(); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep1(); }
-keepclassmembers class java.net.NetworkInterface { int getIndex(); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.transition.Explode { void calculateOut(android.view.View,android.graphics.Rect,int[]); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addAction(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class java.io.PushbackReader { void unread(int); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] str2byte(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] toBase64(byte[],int,int); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] str2byte(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalBefore(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalBefore(android.view.View,int); }
-keepclassmembers class android.app.ActivityThread { void sendMessage(int,java.lang.Object); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[]); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String[] readIfInet6Lines(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalAfter(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.transition.Explode { float calculateMaxDistance(android.view.View,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.transition.Explode { float calculateDistance(float,float); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalAfter(android.view.View,int); }
-keepclassmembers class android.app.ActivityThread { void sendMessage(int,java.lang.Object,int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer,java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.transition.Explode { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setMovementGranularities(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.animation.LayoutTransition { long access$400(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$314(android.animation.LayoutTransition,long); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv4Address(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$600(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { long access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1000(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(android.animation.LayoutTransition); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String toHex(byte[]); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class com.jcraft.jsch.Util { java.lang.String unquote(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { long access$1200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1400(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep2(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.Util { byte[] unquote(byte[]); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setParent(android.view.View,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$4 { void <init>(android.support.v4.app.FragmentManagerImpl,int,int); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setParent(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep3(); }
-keepclassmembers class com.jcraft.jsch.Util { byte val(byte); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConfigurationAction { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void getBoundsInParent(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$4 { void run(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConfigurationAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class java.lang.TypeNotPresentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBoundsInParent(android.graphics.Rect); }
-keepclassmembers class java.net.NetworkInterface { int readIntFile(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBoundsInScreen(android.graphics.Rect); }
-keepclassmembers class java.net.NetworkInterface { java.net.SocketException rethrowAsSocketException(java.lang.Exception); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConfigurationAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByInetAddress(java.net.InetAddress); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isFocusable(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConfigurationAction { void processScanAttrib(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void getBoundsInScreen(android.graphics.Rect); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setFocused(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setFocusable(boolean); }
-keepclassmembers class java.net.NetworkInterface { java.util.List getNetworkInterfacesList(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class); }
-keepclassmembers class java.util.concurrent.TimeoutException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeoutException { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isFocused(); }
-keepclassmembers class javax.crypto.Cipher { void <init>(java.lang.String,java.lang.String[],java.security.Provider); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isVisibleToUser(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isSelected(); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher getInstance(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setVisibleToUser(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSelected(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isClickable(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isAccessibilityFocused(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setClickable(boolean); }
-keepclassmembers class java.net.NetworkInterface { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setAccessibilityFocused(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouch(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageLeft(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isLongClickable(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLongClickable(boolean); }
-keepclassmembers class android.widget.RelativeLayout { void alignBaseline(android.view.View,android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setEnabled(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isEnabled(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageRight(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class java.net.NetworkInterface { int hashCode(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class javax.crypto.Cipher { java.security.NoSuchAlgorithmException invalidTransformation(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setScrollable(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String toString(); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher getCipher(java.lang.String,java.security.Provider); }
-keepclassmembers class android.widget.RelativeLayout { void measureChild(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void findMinMaxChildLayoutPositions(int[]); }
-keepclassmembers class android.app.ActivityThread { android.content.Context createBaseContextForActivity(android.app.ActivityThread$ActivityClientRecord,android.app.Activity); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class javax.crypto.Cipher { java.lang.String[] checkTransformation(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLiveRegion(int); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouchIntercept(android.view.MotionEvent); }
-keepclassmembers class android.widget.RelativeLayout { void measureChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setClassName(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getPackageName(); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.CipherSpi getSpi(java.security.Key); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getClassName(); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int available(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getDeepestFocusedViewWithId(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabelFor(android.view.View,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabeledBy(android.view.View); }
-keepclassmembers class android.widget.RelativeLayout { int getChildMeasureSpec(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabelFor(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { java.lang.String getFullClassName(android.content.Context,java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { void <clinit>(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(); }
-keepclassmembers class javax.crypto.Cipher { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryCombinations(java.security.Key,java.security.Provider,java.lang.String[]); }
-keepclassmembers class android.app.ActivityThread { void handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.CipherSpi getSpi(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabeledBy(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { float getScrollFactor(); }
-keepclassmembers class java.nio.charset.Charset { void checkCharsetName(java.lang.String); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setViewIdResourceName(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.os.Bundle getExtras(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean getBooleanProperty(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTextSelection(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper(); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNamePart(char); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isSealed(); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNameStart(char); }
-keepclassmembers class android.app.ActivityThread { void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord,java.util.List); }
-keepclassmembers class ch.qos.logback.classic.pattern.MessageConverter { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void <init>(byte[]); }
-keepclassmembers class javax.crypto.Cipher { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryTransform(java.security.Key,java.security.Provider,java.lang.String,java.lang.String[],javax.crypto.Cipher$NeedToSet); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset cacheCharset(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addConditionWaiter(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class javax.crypto.Cipher { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryTransformWithProvider(java.security.Key,java.lang.String[],javax.crypto.Cipher$NeedToSet,java.security.Provider$Service); }
-keepclassmembers class android.app.ActivityThread { void performNewIntents(android.os.IBinder,java.util.List); }
-keepclassmembers class android.app.ActivityThread { void handleNewIntent(android.app.ActivityThread$NewIntentData); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void enforceNotSealed(); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.app.ActivityThread { void handleRequestAssistContextExtras(android.app.ActivityThread$RequestAssistContextExtras); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo obtain(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void onNewActivityOptions(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void unlinkCancelledWaiters(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void recycle(); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean hasUpdatedView(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityThread { void handleCancelVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocus(android.view.View,android.view.View,int); }
-keepclassmembers class android.app.ActivityThread { void handleTranslucentConversionComplete(android.os.IBinder,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void initChildrenHelper(); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class android.widget.RelativeLayout { void applyHorizontalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int[]); }
-keepclassmembers class android.app.ActivityThread { void handleOnBackgroundVisibleBehindChanged(android.os.IBinder,boolean); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSSLSocketServer { void main(java.lang.String[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { int checkInterruptWhileWaiting(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.renderscript.RenderScript { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class android.app.ActivityThread { void handleInstallProvider(android.content.pm.ProviderInfo); }
-keepclassmembers class android.app.ActivityThread { void handleEnterAnimationComplete(android.os.IBinder); }
-keepclassmembers class javax.crypto.Cipher { boolean matchAttribute(java.security.Provider$Service,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { int getWindowLayoutType(android.widget.PopupWindow); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedComplexPropertyIA { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.app.ActivityThread { void handleReceiver(android.app.ActivityThread$ReceiverData); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void await(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void reportInterruptAfterWait(int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void <init>(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedComplexPropertyIA { void <init>(); }
-keepclassmembers class javax.crypto.Cipher { void checkMode(int); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { long awaitNanos(long); }
-keepclassmembers class android.content.res.ColorStateList { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityThread { void handleCreateBackupAgent(android.app.ActivityThread$CreateBackupAgentData); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset getDefaultCharset(); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key); }
-keepclassmembers class android.support.v7.recyclerview.R$styleable { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.content.res.ColorStateList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.RelativeLayout { void applyVerticalSizeRules(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key,java.security.SecureRandom); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { void <init>(java.lang.Object); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { boolean isDup(java.lang.String); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { com.fasterxml.jackson.core.json.DupDetector child(); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { com.fasterxml.jackson.core.json.DupDetector rootDetector(com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onExitLayoutOrScroll(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onEnterLayoutOrScroll(); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { com.fasterxml.jackson.core.JsonLocation findLocation(); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void postAnimationRunner(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onPointerUp(android.view.MotionEvent); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawableBase { void <init>(android.content.Context); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawableBase { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void init(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawableBase { boolean isStarted(); }
-keepclassmembers class com.fasterxml.jackson.core.json.DupDetector { void reset(); }
-keepclassmembers class android.app.ActivityThread { void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor tagSocket(java.io.FileDescriptor); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedComplexPropertyIA { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean predictiveItemAnimationsEnabled(); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void setAdapter(android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void processAdapterUpdatesAndSetAnimationFlags(); }
-keepclassmembers class android.app.ActivityThread { void handleCreateService(android.app.ActivityThread$CreateServiceData); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawableBase { void start(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean access(java.lang.String,int); }
-keepclassmembers class android.widget.RelativeLayout { android.view.View getRelatedView(int[],int); }
-keepclassmembers class libcore.io.BlockGuardOs { void chown(java.lang.String,int,int); }
-keepclassmembers class libcore.io.BlockGuardOs { void chmod(java.lang.String,int); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class android.widget.RelativeLayout { void centerHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedComplexPropertyIA { boolean isApplicable(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class android.widget.RelativeLayout { android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int); }
-keepclassmembers class android.widget.RelativeLayout { int getRelatedViewBaseline(int[],int); }
-keepclassmembers class android.widget.RelativeLayout { void centerVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void pullGlows(float,float,float,float); }
-keepclassmembers class javax.crypto.Cipher { void checkInputOffsetAndCount(int,int,int); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { org.apache.harmony.security.x509.CertificatePolicies decode(byte[]); }
-keepclassmembers class android.view.ViewOverlay { void add(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.RelativeLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.view.ViewOverlay { void remove(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.app.ActivityThread { void handleBindService(android.app.ActivityThread$BindServiceData); }
-keepclassmembers class libcore.io.BlockGuardOs { void ftruncate(java.io.FileDescriptor,long); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class javax.crypto.Cipher { int update(byte[],int,int,byte[],int); }
-keepclassmembers class android.view.ViewOverlay { boolean isEmpty(); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class libcore.io.BlockGuardOs { void link(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.IIntentReceiver$Stub { void <init>(); }
-keepclassmembers class libcore.io.BlockGuardOs { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.widget.RelativeLayout { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CertificatePolicies$1); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.IIntentReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.app.ActivityThread { void handleUnbindService(android.app.ActivityThread$BindServiceData); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class android.widget.RelativeLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class libcore.io.BlockGuardOs { void mkdir(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItem(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItem(int,boolean); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.app.ActivityThread { void handleDumpService(android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class libcore.io.BlockGuardOs { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.app.ActivityThread { void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { void <init>(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.RelativeLayout { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Object[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class javax.crypto.spec.PBEKeySpec { void <init>(char[],byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$4 { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class libcore.io.BlockGuardOs { int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recoverFocusFromState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$4 { void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.app.ActivityThread { void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.lang.Thread getOwner(); }
-keepclassmembers class libcore.io.BlockGuardOs { int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PdfCanvas { void <init>(android.graphics.pdf.PdfDocument,long); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void clear(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$4 { void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.app.ActivityThread { void handleServiceArgs(android.app.ActivityThread$ServiceArgsData); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$100(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$200(android.view.InputDevice$MotionRange); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { void <init>(java.lang.Class); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView$4 { void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.FloatArrayBuffer { void <init>(float[]); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$500(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { java.lang.String getName(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { boolean isOutOfBounds(int,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$400(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$700(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.app.ActivityThread { void handleStopService(android.os.IBinder); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$600(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$800(android.view.InputDevice$MotionRange); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { java.lang.Class getType(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$4 { void unused(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.nio.FloatArrayBuffer { void <init>(int,float[],int,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { boolean hasName(); }
-keepclassmembers class libcore.io.BlockGuardOs { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void releaseGlows(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingleton(int); }
-keepclassmembers class libcore.io.BlockGuardOs { void remove(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { void setName(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { void setBackgroundResource(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.NamedType { java.lang.String toString(); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class android.content.RestrictionsManager { void <init>(android.content.Context,android.content.IRestrictionsManager); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addLegacyStandardActions(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser { double[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder,boolean); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.BlockGuardOs { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean removeAnimatingView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollState(int); }
-keepclassmembers class javax.crypto.Cipher { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$1 { void <init>(java.lang.reflect.Type); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$1 { void <init>(android.widget.Spinner$DropdownPopup,android.widget.Spinner); }
-keepclassmembers class android.support.v4.view.ViewPager { void smoothScrollTo(int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void repositionShadowingViews(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.String getActionSymbolicName(int); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(byte[]); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.view.animation.Animation$1 { void <init>(android.view.animation.Animation); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.io.InputStream); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetFocusInfo(); }
-keepclassmembers class android.view.animation.Animation$1 { void run(); }
-keepclassmembers class com.jcraft.jsch.Util { boolean array_equals(byte[],byte[]); }
-keepclassmembers class android.app.ActivityThread { void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveFocusInfo(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetTouch(); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class android.app.ActivityThread { void handleResumeActivity(android.os.IBinder,boolean,boolean,boolean); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputEncoding(java.io.IOException); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.lang.String,java.util.Map); }
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser { double[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class libcore.io.BlockGuardOs { void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputName(java.io.IOException,java.lang.String); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class android.support.v4.content.WakefulBroadcastReceiver { android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { void setVisibility(int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getCanonicalName(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class android.widget.FrameLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.FrameLayout { void drawableStateChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.greenrobot.eventbus.meta.SubscriberMethodInfo { void <init>(java.lang.String,java.lang.Class,org.greenrobot.eventbus.ThreadMode,int,boolean); }
-keepclassmembers class android.widget.FrameLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.String access$100(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(); }
-keepclassmembers class android.util.PrintWriterPrinter { void <init>(java.io.PrintWriter); }
-keepclassmembers class android.transition.TransitionSet$1 { void <init>(android.transition.TransitionSet,android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setScrollState(int); }
-keepclassmembers class android.util.PrintWriterPrinter { void println(java.lang.String); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.transition.TransitionSet$1 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void absorbGlows(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScrollersInternal(); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { java.io.InputStream getErrStream(); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void init(); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap); }
-keepclassmembers class com.jcraft.jsch.jce.SHA256 { void <init>(); }
-keepclassmembers class android.app.WallpaperManager$Globals { void <init>(android.os.Looper); }
-keepclassmembers class com.jcraft.jsch.jce.SHA256 { byte[] digest(); }
-keepclassmembers class com.jcraft.jsch.jce.SHA256 { int getBlockSize(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { int hashCode(); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void run(); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void setAgentForwarding(boolean); }
-keepclassmembers class android.widget.FrameLayout { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String toString(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer { com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer(); }
-keepclassmembers class android.widget.FrameLayout { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class com.jcraft.jsch.jce.SHA256 { void update(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class com.jcraft.jsch.jce.SHA256 { void init(); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void setCommand(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void consumePendingUpdateOperations(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void handlePauseActivity(android.os.IBinder,boolean,boolean,int,boolean); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void setPty(boolean); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void removeRange(int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { void close(); }
-keepclassmembers class android.util.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.app.ActivityThread { android.os.Bundle performPauseActivity(android.os.IBinder,boolean,boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelExec { void start(); }
-keepclassmembers class android.content.pm.PackageItemInfo { void <init>(); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.util.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class android.view.DisplayAdjustments { void setActivityToken(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String substituteNameFromMap(java.lang.String,java.util.Map); }
-keepclassmembers class android.widget.FrameLayout { void applyForegroundTint(); }
-keepclassmembers class android.content.pm.PackageItemInfo { void <init>(android.content.pm.PackageItemInfo); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.view.DisplayAdjustments { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.app.ActivityThread { android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class android.util.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void clearOldPositions(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { int size(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberOutput { void <clinit>(); }
-keepclassmembers class android.util.PathParser { void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.DisplayAdjustments { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void <clinit>(); }
-keepclassmembers class android.view.DisplayAdjustments { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { void warn(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollExtent(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.impl.StringArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class android.content.pm.PackageItemInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void defaultOnMeasure(int,int); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchUnhandledMove(android.view.View,int); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class android.content.pm.PackageItemInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayout(); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void serializeContentsSlow(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { int getNightMode(); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.app.ActivityThread { void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.ActivityThread$StopInfo,boolean,boolean); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.os.IVibratorService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { void <init>(android.app.LoadedApk$1); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class android.widget.FrameLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandDrop { void <clinit>(); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.widget.FrameLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.app.LoadedApk$WarningContextClassLoader { void <clinit>(); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.os.ParcelableCompat { android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.jcraft.jsch.jce.DH { byte[] getE(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Compiler { void <init>(ch.qos.logback.core.pattern.parser.Node,java.util.Map); }
-keepclassmembers class android.widget.FrameLayout { boolean gatherTransparentRegion(android.graphics.Region); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { void <init>(android.content.Context); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandDrop { java.lang.Object take(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandDrop { void <init>(); }
-keepclassmembers class android.content.ClipDescription { void <init>(android.os.Parcel); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Compiler { void addToList(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.commons.io.filefilter.TrueFileFilter { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { boolean hasSingleElement(java.lang.String[]); }
-keepclassmembers class org.apache.commons.io.filefilter.TrueFileFilter { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$5 { void execute(); }
-keepclassmembers class org.apache.commons.io.filefilter.TrueFileFilter { boolean accept(java.io.File); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class ch.qos.logback.classic.pattern.ClassicConverter { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { boolean isEmpty(java.lang.String[]); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandDrop { void put(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrolled(int,int); }
-keepclassmembers class android.app.ActivityThread { void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatLollipop { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void init(); }
-keepclassmembers class android.support.v4.util.MapCollections { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setF(java.math.BigInteger); }
-keepclassmembers class android.content.pm.IPackageManager$Stub { android.content.pm.IPackageManager asInterface(android.os.IBinder); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setF(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringArraySerializer { void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setG(byte[]); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setP(java.math.BigInteger); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByAccessibilityIdTraversal(int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Compiler { ch.qos.logback.core.pattern.Converter compile(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class com.jcraft.jsch.jce.DH { byte[] getK(); }
-keepclassmembers class android.view.ViewGroup { void dispatchWindowFocusChanged(boolean); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setP(byte[]); }
-keepclassmembers class java.net.ResponseCache { java.net.ResponseCache getDefault(); }
-keepclassmembers class java.net.ResponseCache { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization { void <init>(java.lang.reflect.Method); }
-keepclassmembers class ch.qos.logback.core.util.PropertySetterException { void <init>(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.util.PropertySetterException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.util.PropertySetterException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.FrameLayout { void setMeasureAllChildren(boolean); }
-keepclassmembers class android.view.ViewGroup { void makeOptionalFitsSystemWindows(); }
-keepclassmembers class com.jcraft.jsch.jce.DH { void setG(java.math.BigInteger); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void appendThrowable(java.lang.StringBuilder,java.lang.Throwable); }
-keepclassmembers class android.support.v4.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void <init>(int); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.app.ActivityThread { void handleWindowVisibility(android.os.IBinder,boolean); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$5 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List,boolean); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class android.net.LocalSocketAddress$Namespace { int getId(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Set getEntrySet(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <init>(java.lang.Object,boolean); }
-keepclassmembers class android.net.LocalSocketAddress$Namespace { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void buildStr(java.lang.StringBuilder,java.lang.String,ch.qos.logback.core.status.Status); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.app.ActivityThread { void handleSleeping(android.os.IBinder,boolean); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.support.v4.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchWindowVisibilityChanged(int); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void close(); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void flush(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casItem(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void handleStopActivity(android.os.IBinder,boolean,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Font { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void write(char[],int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void tryCancel(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { void setAccessibilityDelegate(android.view.View,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Compiler { ch.qos.logback.core.pattern.DynamicConverter createConverter(ch.qos.logback.core.pattern.parser.SimpleKeywordNode); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isCancelled(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <init>(org.apache.harmony.security.x509.GeneralName,int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isOffList(); }
-keepclassmembers class android.view.ViewGroup { void dispatchCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Compiler { ch.qos.logback.core.pattern.CompositeConverter createCompositeConverter(ch.qos.logback.core.pattern.parser.CompositeNode); }
-keepclassmembers class android.net.LocalSocketAddress$Namespace { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { boolean isShared(); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void buildStrFromStatusList(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.app.ActivityThread { void onCoreSettingsChange(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.app.ActivityThread { void handleSetCoreSettings(android.os.Bundle); }
-keepclassmembers class android.view.ViewGroup { void bringChildToFront(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { org.apache.harmony.security.x509.GeneralName access$000(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void print(ch.qos.logback.core.Context); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$200(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class android.support.v4.widget.ListViewCompat { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void eatRequestLayout(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { java.lang.Object dispatchApplyWindowInsets(android.view.View,java.lang.Object); }
-keepclassmembers class android.app.ActivityThread { void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread$UpdateCompatibilityData); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberOutput { java.lang.String toString(double); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureBottomGlow(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberOutput { java.lang.String toString(int); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void print(ch.qos.logback.core.status.StatusManager); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void print(ch.qos.logback.core.status.StatusManager,long); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberOutput { java.lang.String toString(long); }
-keepclassmembers class android.app.ActivityThread { void deliverResults(android.app.ActivityThread$ActivityClientRecord,java.util.List); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureLeftGlow(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean { boolean isVisibleToUser(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void print(java.util.List); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean { boolean isAccessibilityFocused(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.renderscript.BaseObj { void <init>(long,android.renderscript.RenderScript); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureRightGlow(); }
-keepclassmembers class android.renderscript.BaseObj { long getID(android.renderscript.RenderScript); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { float getElevation(android.view.View); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.Rect getEmptyTempRect(); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 { void <clinit>(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void printInCaseOfErrorsOrWarnings(ch.qos.logback.core.Context,long); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class android.app.ActivityThread { void handleSendResult(android.app.ActivityThread$ResultData); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$100(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class ch.qos.logback.core.util.StatusPrinter { void print(ch.qos.logback.core.Context,long); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean { void setAccesibilityFocused(java.lang.Object,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureTopGlow(); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat { android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean { void setVisibleToUser(java.lang.Object,boolean); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.widget.ScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class android.widget.ScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.LinkedHashMap { void init(); }
-keepclassmembers class android.net.INetworkScoreService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDrag(android.view.View); }
-keepclassmembers class ch.qos.logback.core.status.InfoStatus { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { void <init>(ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class ch.qos.logback.core.status.InfoStatus { void <init>(java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View findContainingItemView(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void readChunkSize(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.renderscript.BaseObj { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { void dispatchWindowSystemUiVisiblityChanged(int); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { java.net.URL findConfigFileFromSystemProperties(boolean); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.view.ViewGroup { void dispatchSystemUiVisibilityChanged(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean updateLocalSystemUiVisibility(int,int); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { java.lang.Object onApplyWindowInsets(android.view.View,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void close(); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchKeyEventPreIme(android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class); }
-keepclassmembers class android.view.InputChannel$1 { android.view.InputChannel createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.renderscript.BaseObj { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean,int,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class java.util.LinkedHashMap { void makeTail(java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class java.util.LinkedHashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.LinkedHashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { java.io.InputStream findConfigFileURLFromAssets(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setElevation(android.view.View,float); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.res.Configuration { int resetScreenLayout(int); }
-keepclassmembers class android.content.res.Configuration { int reduceScreenLayout(int,int,int); }
-keepclassmembers class java.nio.channels.UnresolvedAddressException { void <init>(); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge); }
-keepclassmembers class android.widget.Editor$1 { void run(); }
-keepclassmembers class android.content.res.Configuration { boolean isLayoutSizeAtLeast(int); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.InputStream); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.text.DateFormat _cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void stopNestedScroll(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.view.InputChannel$1 { void <init>(); }
-keepclassmembers class java.lang.RealToString$1 { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { void autoConfig(); }
-keepclassmembers class android.app.ContextImpl$4 { void <init>(); }
-keepclassmembers class android.content.res.Configuration { java.lang.String toString(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.RealToString initialValue(); }
-keepclassmembers class android.app.ContextImpl$4 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean finishComposingText(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.text.DateFormat getISO8601Format(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean fling(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { com.fasterxml.jackson.databind.util.StdDateFormat clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { boolean hasTimeZone(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.lang.Object clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { boolean looksLikeISO8601(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.content.pm.PathPermission { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value { void <init>(com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder); }
-keepclassmembers class android.content.pm.PathPermission { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.util.Date parse(java.lang.String); }
-keepclassmembers class android.content.pm.PathPermission { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer { com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean access$2000(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { org.apache.harmony.security.asn1.ASN1Enumerated getInstance(); }
-keepclassmembers class it.skarafaz.mercury.EventBusIndex { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void <init>(android.os.Looper,android.view.inputmethod.InputConnection); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean access$2600(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean access$2602(android.support.v7.widget.RecyclerView$LayoutManager,boolean); }
-keepclassmembers class android.view.InputChannel$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class it.skarafaz.mercury.EventBusIndex { void putIndex(org.greenrobot.eventbus.meta.SubscriberInfo); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void addError(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.EventBusIndex { org.greenrobot.eventbus.meta.SubscriberInfo getSubscriberInfo(java.lang.Class); }
-keepclassmembers class java.util.WeakHashMap$3$1 { void <init>(java.util.WeakHashMap$3); }
-keepclassmembers class java.util.WeakHashMap$3$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class android.app.ActivityThread { java.lang.String safeToComponentShortString(android.content.Intent); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class android.app.ActivityThread { void handleDestroyActivity(android.os.IBinder,boolean,int,boolean); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void addWarn(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { ch.qos.logback.core.Context getContext(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { java.io.InputStream getResource(java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.ContextImpl$42 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int chooseSize(int,int,int); }
-keepclassmembers class ch.qos.logback.classic.util.ContextInitializer { void statusOnResourceSearch(java.lang.String,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { java.util.List getOptionList(); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { void <init>(int,java.lang.String,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void addError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void setContext(ch.qos.logback.core.Context); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { void <init>(int,java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.app.ContextImpl$42 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { java.lang.String getFirstOption(); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void start(); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class com.jcraft.jsch.RequestShell { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { void stop(); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.RequestShell { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class ch.qos.logback.core.pattern.DynamicConverter { boolean isStarted(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void createCachedBitmapIfNeeded(int,int); }
-keepclassmembers class it.skarafaz.mercury.EventBusIndex { void <init>(); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { int getEffectiveLevel(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void finishComposingText(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { java.lang.Long getDate(); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseCache(); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { java.lang.String getMessage(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getBaseline(); }
-keepclassmembers class android.view.ViewRootImpl$NativePreImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { java.lang.Throwable getThrowable(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { boolean hasChildren(); }
-keepclassmembers class android.view.ViewRootImpl$NativePreImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.ActivityThread { void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getChildDrawingOrder(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { com.fasterxml.jackson.databind.util.StdDateFormat withLocale(java.util.Locale); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCacheStates(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.app.ActivityThread { void handleRelaunchActivity(android.app.ActivityThread$ActivityClientRecord); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$Adapter getAdapter(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void dispatchMessage(android.os.Message); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { int getLevel(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void executeMessage(android.os.Message); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.content.res.Configuration { int diff(android.content.res.Configuration); }
-keepclassmembers class android.database.DataSetObservable { void notifyInvalidated(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool$1 { void <init>(com.android.okhttp.ConfigAwareConnectionPool); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.StdDateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream { void <init>(java.nio.ByteBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer { void <init>(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.Class); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Traverser { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingPathTransform { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Traverser { java.util.concurrent.ConcurrentHashMap$Node advance(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.TypeSerializer { void <init>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingPathTransform { void <init>(me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$1); }
-keepclassmembers class java.lang.reflect.AbstractMethod { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { void <clinit>(); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { void <init>(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int fixMethodFlags(int); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { int hashCode(); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class java.lang.Byte { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatJB$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { org.slf4j.impl.StaticLoggerBinder getSingleton(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getModifiers(); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { org.slf4j.ILoggerFactory getLoggerFactory(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void onTranslucentConversionComplete(boolean); }
-keepclassmembers class android.widget.FastScroller { void access$000(android.widget.FastScroller,int); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean isBridge(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean isSynthetic(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { java.lang.String getLoggerFactoryClassStr(); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class java.lang.Byte { double doubleValue(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { boolean shouldBeUsed(); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { void callCallActivityOnSaveInstanceState(android.app.ActivityThread$ActivityClientRecord); }
-keepclassmembers class org.slf4j.impl.StaticLoggerBinder { void init(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getAccessFlags(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean hasPendingAdapterUpdates(); }
-keepclassmembers class java.lang.Byte { float floatValue(); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class java.lang.Byte { int intValue(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getDexMethodIndex(); }
-keepclassmembers class java.lang.Byte { long longValue(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void initAdapterManager(); }
-keepclassmembers class java.lang.Byte { byte parseByte(java.lang.String,int); }
-keepclassmembers class java.lang.Byte { byte parseByte(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void invalidateGlows(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable superGetDrawable(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class android.content.res.Configuration { boolean isOtherSeqNewer(android.content.res.Configuration); }
-keepclassmembers class android.app.ActivityThread { java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAccessibilityEnabled(); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class java.lang.Byte { java.lang.String toHexString(byte,boolean); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.reflect.Type[] getGenericParameterTypes(); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(byte); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder { double[] _constructArray(int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAttachedToWindow(); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void <init>(); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isComputingLayout(); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void ensureNext(); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markItemDecorInsetsDirty(); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void clear(int); }
-keepclassmembers class android.content.res.Configuration { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markKnownViewsInvalid(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class ch.qos.logback.core.status.StatusBase { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { int countOnesBefore(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.reflect.AbstractMethod$GenericInfo getMethodOrConstructorGenericInfo(); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { boolean get(int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void insert(int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetPositionRecordsForInsert(int,int); }
-keepclassmembers class android.content.res.Configuration { void readFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCachedBitmap(int,int); }
-keepclassmembers class android.app.ActivityThread { void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { boolean remove(int); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetPositionRecordsForMove(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter); }
-keepclassmembers class android.content.res.Configuration { int compareTo(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void reset(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void <init>(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class android.support.v7.widget.ChildHelper$Bucket { void set(int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetPositionRecordsForRemove(int,int,boolean); }
-keepclassmembers class android.app.ActivityThread { android.content.res.Configuration applyCompatConfiguration(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okio.Sink createRequestBody(com.android.okhttp.Request); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onAttachedToWindow(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildAttachedToWindow(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void flushRequest(); }
-keepclassmembers class android.app.ActivityThread { void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildDetachedFromWindow(android.view.View); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void writeRequestHeaders(com.android.okhttp.Request); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okhttp.Response$Builder readResponseHeaders(); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDetachedFromWindow(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.Configuration { boolean equals(android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { void <init>(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.core.PrettyPrinter,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.core.io.CharacterEscapes); }
-keepclassmembers class android.content.res.Configuration { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { boolean canReuseConnection(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void releaseConnectionOnIdle(); }
-keepclassmembers class android.app.ActivityThread { void freeTextLayoutCachesIfNeeded(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers { com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { android.os.Message obtainMessage(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okio.Source getTransferStream(java.net.CacheRequest); }
-keepclassmembers class android.app.ActivityThread { void handleActivityConfigurationChanged(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void emptyTransferStream(); }
-keepclassmembers class butterknife.internal.DebouncingOnClickListener$1 { void run(); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class android.app.ActivityThread { void handleProfilerControl(boolean,android.app.ProfilerInfo,int); }
-keepclassmembers class butterknife.internal.DebouncingOnClickListener$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class android.app.ActivityThread { void handleDispatchPackageBroadcast(int,java.lang.String[]); }
-keepclassmembers class android.net.nsd.NsdManager$ServiceHandler { void <init>(android.net.nsd.NsdManager,android.os.Looper); }
-keepclassmembers class android.net.nsd.NsdManager$ServiceHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.app.Fragment { android.app.Fragment instantiate(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class android.app.Fragment { android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.animation.Animation$3 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.Animation$3 { void run(); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class android.app.ActivityThread { void handleDumpHeap(boolean,android.app.ActivityThread$DumpHeapData); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class android.app.ActivityThread { void handleTrimMemory(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { void setupGraphicsSupport(android.app.LoadedApk,java.io.File); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.TextUtils { java.lang.String join(java.lang.CharSequence,java.lang.Iterable); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class android.app.ActivityThread { void updateDefaultDensity(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class android.text.TextUtils { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class android.app.ActivityThread { void handleBindApplication(android.app.ActivityThread$AppBindData); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.text.TextUtils { java.lang.String[] split(java.lang.String,java.util.regex.Pattern); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class android.app.ActivityThread { void handleLowMemory(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setEnterTransition(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.TextUtils { int getTrimmedLength(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setHoverListener(android.support.v7.widget.MenuItemHoverListener); }
-keepclassmembers class android.animation.FloatArrayEvaluator { void <init>(float[]); }
-keepclassmembers class com.android.internal.app.AlertController { void setupDecor(); }
-keepclassmembers class android.animation.FloatArrayEvaluator { float[] evaluate(float,float[],float[]); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setTouchModal(boolean); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class android.text.TextUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onMeasure(int,int); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class android.animation.FloatArrayEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$TakenSurfaceHolder { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$As { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { com.fasterxml.jackson.databind.JsonSerializer _prefetchRootSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$TakenSurfaceHolder { void setFormat(int); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$As { com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values(); }
-keepclassmembers class android.view.ViewGroup { boolean isTransitionGroup(); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$NonConfigurationInstances { void <init>(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.Bitmap,int); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView getListView(); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.graphics.Bitmap,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$As { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void <init>(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealIntArraySize(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat alpha(float); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupTitle(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.app.ActionBar { void <init>(); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.String getInternalName(java.lang.Class); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrollStateChanged(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.graphics.Bitmap); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealLongArraySize(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectWriter { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.net.Uri,int); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupButtons(); }
-keepclassmembers class android.support.v7.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v7.app.ActionBar { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.app.ActionBar { void onDestroy(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.support.v7.app.ActionBar { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { void dispatchScreenStateChanged(int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealByteArraySize(int); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class ch.qos.logback.classic.sift.SiftAction { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.sift.SiftAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void cancel(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.net.Uri); }
-keepclassmembers class android.support.v7.app.ActionBar { android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrolled(int,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(boolean); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okhttp.internal.spdy.FrameReader newReader(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okhttp.internal.spdy.FrameWriter newWriter(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.SimpleKeywordNode { void <init>(int,java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { int maxFrameSize(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lockInterruptibly(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.SimpleKeywordNode { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okio.ByteString access$000(); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.io.IOException access$100(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.SimpleKeywordNode { java.util.List getOptions(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class dalvik.system.DalvikLogging { java.lang.String loggerNameToTag(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class android.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.SimpleKeywordNode { void setOptions(java.util.List); }
-keepclassmembers class ch.qos.logback.classic.sift.SiftAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.app.Fragment { void onInflate(android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class ch.qos.logback.classic.sift.SiftAction { void inPlay(ch.qos.logback.core.joran.event.SaxEvent); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class java.io.PipedInputStream { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class java.io.PipedInputStream { void <init>(java.io.PipedOutputStream); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void sendAccessibilityEvent(java.lang.Object,android.view.View,int); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class android.view.ViewGroup { void dispatchFreezeSelfOnly(android.util.SparseArray); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.view.ViewGroup { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class java.io.PipedInputStream { int available(); }
-keepclassmembers class android.view.ViewGroup { void dispatchThawSelfOnly(android.util.SparseArray); }
-keepclassmembers class android.webkit.WebViewClient { void <init>(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void start(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.ViewGroup { void onAnimationStart(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat translationX(float); }
-keepclassmembers class java.io.PipedInputStream { void close(); }
-keepclassmembers class java.io.PipedInputStream { void connect(java.io.PipedOutputStream); }
-keepclassmembers class java.io.PipedInputStream { void establishConnection(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.lang.String toString(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.ViewGroup { void onAnimationEnd(); }
-keepclassmembers class java.io.PipedInputStream { int read(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.ActivityThread { android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,int,boolean); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int,int,int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$1 { void onGlobalLayout(); }
-keepclassmembers class android.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class android.app.Fragment { android.animation.Animator onCreateAnimator(int,boolean,int); }
-keepclassmembers class android.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float); }
-keepclassmembers class android.app.Fragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class android.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class android.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class android.app.ActivityThread { void installContentProviders(android.content.Context,java.util.List); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class android.app.ActivityThread { void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount,boolean); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1200(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1300(com.android.internal.app.AlertController); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.app.Fragment { void onStart(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1400(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1500(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1602(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1702(com.android.internal.app.AlertController,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView access$1102(com.android.internal.app.AlertController,android.widget.ListView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser { void <init>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.view.ViewGroup { void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.app.Fragment { void onResume(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser { char[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class android.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub { com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder); }
-keepclassmembers class android.app.Fragment { void onPause(); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class android.app.Fragment { void onStop(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.app.Fragment { void onTrimMemory(int); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat x(float); }
-keepclassmembers class android.app.Fragment { void onLowMemory(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.support.v4.view.AbsSavedState$1); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat translationY(float); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$1 { void <init>(com.afollestad.materialdialogs.MaterialDialog); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class android.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class android.view.ViewGroup { int sign(int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class android.app.ActivityThread { android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean); }
-keepclassmembers class android.view.ViewGroup { void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal$2 { void <init>(android.hardware.camera2.CameraManager$CameraManagerGlobal,android.hardware.camera2.CameraManager$AvailabilityCallback,java.lang.String); }
-keepclassmembers class android.widget.Spinner { void setEnabled(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { void <init>(int); }
-keepclassmembers class android.view.ViewGroup { int dipsToPixels(int); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal$2 { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { com.fasterxml.jackson.databind.node.IntNode valueOf(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat z(float); }
-keepclassmembers class java.io.PipedInputStream { void receive(int); }
-keepclassmembers class android.app.Fragment { void onDetach(); }
-keepclassmembers class android.view.ViewGroup { void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int); }
-keepclassmembers class java.io.PipedInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.widget.Spinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class android.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setOptional(int); }
-keepclassmembers class android.app.Fragment { void onDestroy(); }
-keepclassmembers class android.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver { void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setDefault(java.lang.Object,int); }
-keepclassmembers class android.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { java.lang.String asText(); }
-keepclassmembers class android.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityThread { boolean releaseProvider(android.content.IContentProvider,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class android.widget.Spinner { int getBaseline(); }
-keepclassmembers class android.view.ViewGroup { void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.PipedInputStream { void done(); }
-keepclassmembers class android.widget.Spinner { void onDetachedFromWindow(); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.ViewGroup { void onDebugDraw(android.graphics.Canvas); }
-keepclassmembers class android.app.SharedElementCallback { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.node.IntNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int); }
-keepclassmembers class android.widget.Spinner { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.Spinner { void layout(int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.app.ActivityThread { void completeRemoveProvider(android.app.ActivityThread$ProviderRefCount); }
-keepclassmembers class android.util.SparseArray { void delete(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void <init>(java.lang.String,java.lang.String,boolean,char,int); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestLayout(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resumeRequestLayout(boolean); }
-keepclassmembers class android.util.SparseArray { void remove(int); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class android.widget.Spinner { android.view.View makeView(int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveOldPositions(); }
-keepclassmembers class android.app.ActivityThread { void handleUnstableProviderDied(android.os.IBinder,boolean); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class android.widget.Spinner { void setUpChild(android.view.View,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver { java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class android.transition.ChangeTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class android.transition.ChangeTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.ActivityThread { void handleUnstableProviderDiedLocked(android.os.IBinder,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void _reportBase64EOF(); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.transition.ChangeTransform { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void _reportInvalidBase64(char,int,java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$ViewHolder$$ViewBinder { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$ViewHolder$$ViewBinder { void bind(butterknife.ButterKnife$Finder,it.skarafaz.mercury.adapter.CommandListAdapter$ViewHolder,java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean scrollByInternal(int,int,android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class android.widget.Spinner { boolean performClick(); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver { java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$ViewHolder$$ViewBinder { void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class android.location.IGpsNavigationMessageListener$Stub { void <init>(); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class android.widget.Spinner { int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class android.transition.ChangeTransform { android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues,android.transition.TransitionValues,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class android.widget.Editor$HandleView { void hideActionPopupWindow(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class android.widget.Editor$HandleView { void showActionPopupWindow(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class android.app.ActivityThread { android.app.IActivityManager$ContentProviderHolder installProvider(android.content.Context,android.app.IActivityManager$ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void <clinit>(); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void <init>(java.lang.Class,java.util.List,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class android.widget.Spinner { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class android.widget.Spinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class android.transition.ChangeTransform { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class android.transition.ChangeTransform { boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup); }
-keepclassmembers class android.widget.Spinner { android.widget.Spinner$SpinnerPopup access$100(android.widget.Spinner); }
-keepclassmembers class android.transition.ChangeTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.Spinner { android.graphics.Rect access$400(android.widget.Spinner); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setClipToPadding(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void <init>(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int); }
-keepclassmembers class android.widget.Spinner { android.content.Context access$500(android.widget.Spinner); }
-keepclassmembers class android.widget.Spinner { void onMeasure(int,int); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { byte[] decode(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[]); }
-keepclassmembers class android.view.ViewGroup { void notifyAnimationListener(); }
-keepclassmembers class android.widget.Editor$HandleView { void updatePosition(int,int,boolean,boolean); }
-keepclassmembers class android.widget.Spinner { boolean access$600(android.widget.Spinner); }
-keepclassmembers class android.transition.ChangeTransform { void createGhostView(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { int decodeBase64Char(int); }
-keepclassmembers class android.app.DownloadManager { void <init>(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchGetDisplayList(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { void <clinit>(); }
-keepclassmembers class android.widget.Editor$HandleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { void <init>(); }
-keepclassmembers class android.transition.ChangeTransform { void setMatricesForParent(android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.view.ViewGroup { void recreateChildDisplayList(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void scrollTo(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isVisible(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue$OutOfOrderException { void <init>(com.jcraft.jsch.ChannelSftp$RequestQueue,long); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[]); }
-keepclassmembers class java.net.ServerSocket { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.ServerSocket { void <init>(int); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { java.lang.String encode(byte[],boolean); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { int decodeBase64Char(char); }
-keepclassmembers class android.transition.ChangeTransform { void setIdentityTransforms(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.json.WriterBasedJsonGenerator { void <clinit>(); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.WriterBasedJsonGenerator { void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer); }
-keepclassmembers class android.transition.ChangeTransform { void setTransforms(android.view.View,float,float,float,float,float,float,float,float); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { org.apache.commons.lang3.text.StrMatcher stringMatcher(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { int isMatch(char[],int); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class android.transition.ChangeTransform { boolean access$000(android.transition.ChangeTransform); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.widget.Spinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.transition.ChangeTransform { void access$100(android.view.View); }
-keepclassmembers class java.net.ServerSocket { void readBackBindState(); }
-keepclassmembers class android.transition.ChangeTransform { void access$200(android.view.View,float,float,float,float,float,float,float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void encodeBase64Chunk(java.lang.StringBuilder,int); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isDragging(); }
-keepclassmembers class android.transition.ChangeTransform { void <clinit>(); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class android.widget.Editor$HandleView { void onHandleMoved(); }
-keepclassmembers class java.net.ServerSocket { void checkListen(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotationMap _emptyAnnotationMap(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean startNestedScroll(int); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopNestedScroll(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void viewRangeUpdate(int,int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { boolean _isAnnotationBundle(java.lang.annotation.Annotation); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Transformation getChildTransformation(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { boolean _isIncludableField(java.lang.reflect.Field); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FailingSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { void encodeBase64Partial(java.lang.StringBuilder,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScroll(); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void resolveClassAnnotations(); }
-keepclassmembers class android.app.ActivityThread { void main(java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { int getMaxLineLength(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { char getPaddingChar(); }
-keepclassmembers class android.app.ActivityThread { android.app.ResourcesManager access$200(android.app.ActivityThread); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class android.app.DownloadManager { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { boolean usesPadding(); }
-keepclassmembers class java.util.EnumMap$EnumMapValueCollection$1 { void <init>(java.util.EnumMap$EnumMapValueCollection); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { boolean usesPaddingChar(char); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void resolveCreators(); }
-keepclassmembers class java.util.EnumMap$EnumMapValueCollection$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class android.app.ActivityThread { void attach(boolean); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variant { boolean usesPaddingChar(int); }
-keepclassmembers class java.net.ServerSocket { void checkOpen(); }
-keepclassmembers class android.app.ActivityThread { void access$800(android.app.ActivityThread,android.app.ActivityThread$ActivityClientRecord,android.content.Intent); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FailingSerializer { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.app.Fragment { android.transition.Transition loadTransition(android.content.Context,android.content.res.TypedArray,android.transition.Transition,android.transition.Transition,int); }
-keepclassmembers class android.app.ActivityThread { void access$1000(android.app.ActivityThread,android.os.IBinder,boolean,boolean,int,boolean); }
-keepclassmembers class android.app.ActivityThread { void access$900(android.app.ActivityThread,android.app.ActivityThread$ActivityClientRecord); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { void access$1100(android.app.ActivityThread,android.os.IBinder,boolean,int); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class android.app.ActivityThread { void access$1300(android.app.ActivityThread,android.app.ActivityThread$ResultData); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class android.app.ActivityThread { void access$1200(android.app.ActivityThread,android.os.IBinder,boolean); }
-keepclassmembers class android.app.ActivityThread { void access$1400(android.app.ActivityThread,android.os.IBinder,boolean,int,boolean); }
-keepclassmembers class android.widget.TextView$Marquee { void tick(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.ActivityThread { void access$1500(android.app.ActivityThread,android.app.ActivityThread$AppBindData); }
-keepclassmembers class android.app.Fragment { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { void access$1600(android.app.ActivityThread,android.app.ActivityThread$NewIntentData); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.ActivityThread { void access$1700(android.app.ActivityThread,android.app.ActivityThread$ReceiverData); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class android.app.ActivityThread { void access$1800(android.app.ActivityThread,android.app.ActivityThread$CreateServiceData); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class android.app.ActivityThread { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void access$1900(android.app.ActivityThread,android.app.ActivityThread$BindServiceData); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityThread { void access$2000(android.app.ActivityThread,android.app.ActivityThread$BindServiceData); }
-keepclassmembers class android.app.ActivityThread { void access$2100(android.app.ActivityThread,android.app.ActivityThread$ServiceArgsData); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class android.app.ActivityThread { void access$400(android.app.ActivityThread,int,java.lang.Object); }
-keepclassmembers class android.app.ActivityThread { void access$2200(android.app.ActivityThread,android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.HashSet); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class android.app.ActivityThread { void access$2300(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.IWindowSessionCallback$Stub { void <init>(); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class android.app.ActivityThread { void access$2400(android.app.ActivityThread,android.app.ActivityThread$CreateBackupAgentData); }
-keepclassmembers class android.app.ActivityThread { void access$2500(android.app.ActivityThread,android.app.ActivityThread$CreateBackupAgentData); }
-keepclassmembers class android.view.IWindowSessionCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class ch.qos.logback.classic.pattern.RootCauseFirstThrowableProxyConverter { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void access$2600(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLSchema { void <init>(); }
-keepclassmembers class android.app.ActivityThread { void access$2900(android.app.ActivityThread,android.os.Bundle); }
-keepclassmembers class android.app.ActivityThread { void access$3000(android.app.ActivityThread,android.app.ActivityThread$UpdateCompatibilityData); }
-keepclassmembers class android.app.ActivityThread { void access$3100(android.app.ActivityThread,android.os.IBinder); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class android.widget.ListView { void addHeaderView(android.view.View,java.lang.Object,boolean); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class android.widget.TextView$Marquee { float getScroll(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,boolean); }
-keepclassmembers class android.widget.TextView$Marquee { float getGhostOffset(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void <init>(java.lang.String[]); }
-keepclassmembers class android.widget.TextView$Marquee { float getMaxFadeScroll(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawLeftFade(); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void addView(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void resolveFields(); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class org.apache.commons.lang3.CharSet { org.apache.commons.lang3.CharSet getInstance(java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawGhost(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { com.android.okhttp.ConnectionPool$CleanMode[] values(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void add(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void resolveMemberMethods(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isRunning(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { void <clinit>(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { void <clinit>(); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$402(android.widget.TextView$Marquee,byte); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { boolean doesImplement(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { android.view.View getChildAt(int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void <clinit>(); }
-keepclassmembers class android.widget.TextView$Marquee { long access$502(android.widget.TextView$Marquee,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { int getChildCount(); }
-keepclassmembers class android.widget.TextView$Marquee { android.view.Choreographer access$600(android.widget.TextView$Marquee); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnknownSerializer { void <init>(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityThread { void access$2700(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$400(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.TextView$Marquee { int access$700(android.widget.TextView$Marquee); }
-keepclassmembers class org.apache.commons.lang3.CharSet { boolean contains(char); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView$Marquee { int access$710(android.widget.TextView$Marquee); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void onLeftHiddenState(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnknownSerializer { void failForEmpty(java.lang.Object); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.app.ActivityThread { void access$2800(android.app.ActivityThread,android.os.IBinder,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void removeAllViews(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { int indexOfChild(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void removeViewAt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { boolean hasInterface(java.lang.Class,java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.CharSet { int hashCode(); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnknownSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.ViewGroup { void bindLayoutAnimation(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$5 { void onEnteredHiddenState(android.view.View); }
-keepclassmembers class org.apache.commons.io.filefilter.OrFileFilter { void <init>(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class org.apache.commons.lang3.CharSet { java.lang.String toString(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnknownSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void viewsReady(android.util.ArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Throwable throwOrReturnThrowable(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { void <init>(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElements(android.util.ArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object call(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object call(java.lang.Object[]); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$902(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isNested(android.view.View,android.util.ArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object call1(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class org.apache.commons.io.filefilter.OrFileFilter { boolean accept(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.reflect.AnnotatedElement getAnnotated(); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { java.lang.Object instantiate(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addConstructorMixIns(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.reflect.Constructor getAnnotated(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object _convertObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.reflect.Type getGenericParameterType(int); }
-keepclassmembers class android.widget.RatingBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.Window getWindow(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void stripOffscreenViews(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class android.widget.RatingBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.reflect.Type getGenericType(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.ViewGroup getDecor(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.reflect.Member getMember(); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { int getParameterCount(); }
-keepclassmembers class android.transition.ChangeBounds$1 { void set(android.graphics.drawable.Drawable,android.graphics.PointF); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher region(int,int); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Class getRawParameterType(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.String getName(); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.RatingBar { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Class getRawType(); }
-keepclassmembers class android.transition.ChangeBounds$1 { android.graphics.PointF get(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class android.widget.RatingBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition setTargets(android.transition.Transition,boolean); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object getValue(java.lang.Object); }
-keepclassmembers class android.widget.RatingBar { void setNumStars(int); }
-keepclassmembers class android.transition.ChangeBounds$1 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.RatingBar { int getNumStars(); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class android.widget.RatingBar { void setRating(float); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object readResolve(); }
-keepclassmembers class java.io.StringReader { void close(); }
-keepclassmembers class android.widget.RatingBar { float getRating(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.OptionalHandlerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.widget.RatingBar { float getProgressPerStar(); }
-keepclassmembers class android.widget.RatingBar { void setStepSize(float); }
-keepclassmembers class java.io.StringReader { boolean isClosed(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addFactoryMixIns(java.lang.Class); }
-keepclassmembers class android.widget.RatingBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class java.io.StringReader { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class java.io.StringReader { void checkNotClosed(); }
-keepclassmembers class java.io.StringReader { int read(); }
-keepclassmembers class android.widget.RatingBar { void updateSecondaryProgress(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { void setValue(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class android.widget.RatingBar { void onMeasure(int,int); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(char[],int,int,int); }
-keepclassmembers class android.widget.RatingBar { void onStartTrackingTouch(); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class android.widget.RatingBar { void onStopTrackingTouch(); }
-keepclassmembers class java.io.StringReader { int read(char[],int,int); }
-keepclassmembers class java.lang.reflect.GenericSignatureFormatError { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition configureTransition(android.transition.Transition,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.String toString(); }
-keepclassmembers class android.widget.RatingBar { void onKeyChange(); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class android.widget.RatingBar { void setMax(int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int[]); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class android.widget.RatingBar { void dispatchRatingChange(boolean); }
-keepclassmembers class android.widget.RatingBar { void setIsIndicator(boolean); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(float[]); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class java.lang.RealToString { java.lang.RealToString getInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object _handleTypedObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.RealToString { java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor { java.lang.Object writeReplace(); }
-keepclassmembers class java.lang.RealToString { java.lang.String doubleToString(double); }
-keepclassmembers class java.lang.RealToString { void appendDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void deleteImpl(int,int,int); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThrowableProxyConverter { void <init>(); }
-keepclassmembers class java.util.regex.Matcher { int regionStart(); }
-keepclassmembers class java.util.regex.Matcher { int regionEnd(); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThrowableProxyConverter { void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class android.widget.RatingBar { android.graphics.drawable.shapes.Shape getDrawableShape(); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void replaceImpl(int,int,int,java.lang.String,int); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int); }
-keepclassmembers class java.lang.RealToString { java.lang.String floatToString(float); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int,int); }
-keepclassmembers class java.lang.RealToString { void appendFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addMethodMixIns(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int,int,int); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int,int,int,int); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class android.hardware.camera2.utils.HashCodeHelpers { int hashCode(int,int,int,int,int); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThrowableProxyConverter { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.widget.RatingBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.regex.Matcher { void closeImpl(long); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElementMatrices(); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class java.lang.RealToString { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveUnwrappedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolvedObjectIdProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReader { com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThrowableProxyConverter { void stop(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class java.lang.RealToString { void freeFormatExponential(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReader { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.annotation.ObjectIdResolver); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReader { com.fasterxml.jackson.databind.JavaType getIdType(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReader { java.lang.Object readObjectReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { void _addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat23 { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { boolean dispatchOnCreate(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.renderscript.Long3 { void <init>(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat23 { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]); }
-keepclassmembers class android.security.AndroidKeyStoreProvider { void <init>(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { void finish(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 add(android.renderscript.Long3,android.renderscript.Long3); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.RealToString { void bigIntDigitGenerator(long,int,boolean,int); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,long); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReader { com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { void invalidate(); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 add(android.renderscript.Long3,long); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class java.net.URI$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.Hashtable$HashIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 sub(android.renderscript.Long3,android.renderscript.Long3); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 sub(android.renderscript.Long3,long); }
-keepclassmembers class java.util.Hashtable$HashIterator { boolean hasNext(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntry(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntryNotFailFast(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$ActionModeImpl { void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class android.view.ViewGroup { boolean canAnimate(); }
-keepclassmembers class java.lang.RealToString { void <init>(java.lang.RealToString$1); }
-keepclassmembers class java.lang.RealToString { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void clearState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class java.lang.RealToString { void longDigitGenerator(long,int,boolean,boolean,int); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedField _constructField(java.lang.reflect.Field); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class java.lang.RealToString { void freeFormat(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer allocate(int); }
-keepclassmembers class ch.qos.logback.core.joran.event.StartEvent { java.lang.String toString(); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { long getFadeDuration(); }
-keepclassmembers class android.view.ViewGroup { boolean isAlwaysDrawnWithCacheEnabled(); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 div(android.renderscript.Long3,android.renderscript.Long3); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showViews(java.util.ArrayList,boolean); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.event.StartEvent { void <init>(ch.qos.logback.core.joran.spi.ElementPath,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.xml.sax.Locator); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingOrderEnabled(boolean); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showView(android.view.View,boolean); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class android.renderscript.Long3 { android.renderscript.Long3 div(android.renderscript.Long3,long); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.util.Map _findFields(java.lang.Class,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { boolean _isIncludableMemberMethod(java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.Iterable fields(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class android.app.Dialog { void setOwnerActivity(android.app.Activity); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.Class getAnnotated(); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class android.app.Dialog { boolean isShowing(); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void startTransition(java.lang.Runnable); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void transitionStarted(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder appendNull(); }
-keepclassmembers class android.content.pm.PermissionInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.content.pm.PermissionInfo { void <init>(android.os.Parcel,android.content.pm.PermissionInfo$1); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.Object getKey(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.util.List getConstructors(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class android.content.pm.PermissionInfo { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { int hashCode(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.view.ViewGroup { void measureChildren(int,int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$3 { void <init>(android.support.v4.widget.MaterialProgressDrawable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$3 { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void moveSharedElementsToOverlay(); }
-keepclassmembers class android.app.Dialog { void dismiss(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { com.fasterxml.jackson.databind.util.Annotations getAnnotations(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Dialog { void dismissDialog(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.Class getRawType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.util.List getStaticMethods(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.String getName(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Iterable,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { boolean hasAnnotations(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.Iterable memberMethods(); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedClass { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void <init>(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializer { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$StringMatcher { void <init>(java.lang.String); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializer { void <init>(); }
-keepclassmembers class libcore.io.HeapBufferIterator { void seek(int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void skip(int); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean access$102(android.app.ActivityTransitionCoordinator,boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { java.lang.Runnable access$200(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$StringMatcher { int isMatch(char[],int,int,int); }
-keepclassmembers class android.app.Dialog { void onStop(); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class libcore.io.HeapBufferIterator { int readInt(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { java.lang.Runnable access$202(android.app.ActivityTransitionCoordinator,java.lang.Runnable); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { void <init>(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class android.app.Dialog { android.os.Bundle onSaveInstanceState(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Dialog { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class libcore.io.HeapBufferIterator { short readShort(); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializer { void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.net.wifi.WifiManager$ServiceHandler { void <init>(android.os.Looper); }
-keepclassmembers class android.net.wifi.WifiManager$ServiceHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class libcore.io.HeapBufferIterator { libcore.io.BufferIterator iterator(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { boolean onForwardingStarted(); }
-keepclassmembers class android.app.Dialog { android.view.View getCurrentFocus(); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { java.lang.String getEventName(ch.qos.logback.core.joran.event.SaxEvent); }
-keepclassmembers class android.app.Dialog { void setContentView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { java.io.InputStream openURL(java.net.URL); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.app.Dialog { void hide(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { void finishAnimatingView(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.app.Dialog { void sendDismissMessage(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { void trimHeadAndTail(ch.qos.logback.core.joran.event.SaxEventRecorder); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.app.Dialog { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object _deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Dialog { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Dialog { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean updateTint(int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { boolean hasKeySerializers(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.app.Dialog { void onBackPressed(); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class android.app.Dialog { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { java.lang.Iterable keySerializers(); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class android.os.Debug { void waitForDebugger(); }
-keepclassmembers class android.view.ViewGroupOverlay { void remove(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { java.lang.Iterable serializerModifiers(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { ch.qos.logback.core.joran.event.SaxEventRecorder createRecorder(java.io.InputStream,java.net.URL); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { java.lang.Iterable serializers(); }
-keepclassmembers class android.app.Dialog { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getChangingConfigurations(); }
-keepclassmembers class android.view.ViewGroup { void suppressLayout(boolean); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL); }
-keepclassmembers class android.app.Dialog { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { void setLabelFor(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspot(float,float); }
-keepclassmembers class android.view.ViewGroup { boolean gatherTransparentRegion(android.graphics.Region); }
-keepclassmembers class android.app.Dialog { void onContentChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig { boolean hasSerializerModifiers(); }
-keepclassmembers class android.app.Dialog { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.Dialog { void onWindowDismissed(); }
-keepclassmembers class android.app.Dialog { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.os.Debug { boolean isDebuggerConnected(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { void setLayoutDirection(android.view.View,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicWidth(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IncludeAction { void setEventOffset(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.os.Debug { void changeDebugPort(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getMinimumHeight(); }
-keepclassmembers class ch.qos.logback.core.subst.Token { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getOpacity(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getMinimumWidth(); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class ch.qos.logback.core.subst.Token { void <init>(ch.qos.logback.core.subst.Token$Type,java.lang.String); }
-keepclassmembers class android.app.Dialog { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.ViewGroup { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int[] getState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getWrappedDrawable(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.app.Dialog { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Dialog { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class ch.qos.logback.core.subst.Token { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.os.Debug { void enableEmulatorTraceOutput(); }
-keepclassmembers class android.os.Debug { void startMethodTracing(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isCompatTintEnabled(); }
-keepclassmembers class android.app.Dialog { void onAttachedToWindow(); }
-keepclassmembers class android.os.Debug { void startMethodTracing(java.lang.String,int); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean isStateful(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Class getBeanClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.util.Collection getKnownPropertyNames(); }
-keepclassmembers class android.os.Debug { void startMethodTracing(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void setSizeParameters(double,double,double,double,float,float); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.app.Dialog { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class ch.qos.logback.core.subst.Token { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.os.Debug { java.lang.String fixTraceName(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader(); }
-keepclassmembers class android.app.Dialog { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void handleIgnoredProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void setupAnimators(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder deleteCharAt(int); }
-keepclassmembers class android.app.Dialog { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.app.Dialog { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator(); }
-keepclassmembers class android.app.Dialog { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.app.Dialog { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class android.service.fingerprint.IFingerprintService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.telephony.SubscriptionManager { void <init>(android.content.Context); }
-keepclassmembers class android.app.Dialog { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.os.Debug { void stopMethodTracing(); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class android.telephony.SubscriptionManager { android.telephony.SubscriptionManager from(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.app.Dialog { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class ch.qos.logback.core.subst.Token { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.app.Dialog { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class android.app.Dialog { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void clearMutated(); }
-keepclassmembers class android.app.Dialog { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class android.app.Dialog { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder ensureCapacity(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setState(int[]); }
-keepclassmembers class android.app.Dialog { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.app.Dialog { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void setProgressRotation(float); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class android.app.Dialog { boolean onSearchRequested(); }
-keepclassmembers class android.app.Dialog { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.app.Dialog { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void start(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.os.Debug { void dumpHprofData(java.lang.String,java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void handleUnknownVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class android.os.Debug { void dumpNativeHeap(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.ListView { boolean canAnimate(); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { boolean isCachable(); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable { void updateSizes(int); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void resolve(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { java.lang.Class handledType(); }
-keepclassmembers class android.app.Dialog { boolean requestWindowFeature(int); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplIcs { void <init>(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplIcs { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { boolean checkTag(int); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void onInvalidated(); }
-keepclassmembers class com.android.internal.os.LoggingPrintStream$1 { void <init>(); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.view.ViewGroup { void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class com.android.internal.os.LoggingPrintStream$1 { void write(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Paint getDebugPaint(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate { void <init>(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.Dialog { void cancel(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <clinit>(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate { void handleMessage(android.os.Message); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { void access$000(android.view.ViewGroup); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate { void clearEvents(); }
-keepclassmembers class android.app.Dialog { void setOnShowListener(android.content.DialogInterface$OnShowListener); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.LayoutAnimationController access$100(android.view.ViewGroup); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { void <init>(android.view.textservice.SpellCheckerInfo,com.android.internal.textservice.ITextServicesManager,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,android.view.textservice.SpellCheckerSubtype); }
-keepclassmembers class android.os.Debug { java.lang.String getCaller(java.lang.StackTraceElement[],int); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <clinit>(); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder$1 { android.app.IActivityManager$ContentProviderHolder createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Animation$AnimationListener access$200(android.view.ViewGroup); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { void close(); }
-keepclassmembers class android.os.Debug { void <clinit>(); }
-keepclassmembers class android.app.Instrumentation { void <init>(); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { void getSentenceSuggestions(android.view.textservice.TextInfo[],int); }
-keepclassmembers class android.app.Instrumentation { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { void getSuggestions(android.view.textservice.TextInfo[],int,boolean); }
-keepclassmembers class android.app.Instrumentation { boolean onException(java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { void access$500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { void <clinit>(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification); }
-keepclassmembers class android.view.textservice.SpellCheckerSession { java.lang.String access$200(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase { void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer { void <clinit>(); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder$1 { void <init>(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void <init>(java.util.AbstractList,int); }
-keepclassmembers class android.system.StructTimeval { android.system.StructTimeval fromMillis(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer { com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void add(java.lang.Object); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEventType { void <clinit>(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEventType { dalvik.system.profiler.HprofData$ThreadEventType[] values(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer { com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEventType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter { void <clinit>(); }
-keepclassmembers class android.system.StructTimeval { void <init>(long,long); }
-keepclassmembers class java.util.AbstractList$FullListIterator { boolean hasPrevious(); }
-keepclassmembers class android.database.BulkCursorProxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter { void <init>(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { int nextIndex(); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class java.util.AbstractList$FullListIterator { java.lang.Object previous(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void set(java.lang.Object); }
-keepclassmembers class android.telephony.SubscriptionManager { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.database.BulkCursorProxy { void onMove(int); }
-keepclassmembers class android.database.BulkCursorProxy { android.database.CursorWindow getWindow(int); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.hardware.SystemSensorManager { void <init>(android.content.Context,android.os.Looper); }
-keepclassmembers class android.hardware.SystemSensorManager { void nativeClassInit(); }
-keepclassmembers class android.hardware.SystemSensorManager { int nativeGetNextSensor(android.hardware.Sensor,int); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class android.app.ContextImpl$20 { void <init>(); }
-keepclassmembers class android.database.StaleDataException { void <init>(); }
-keepclassmembers class android.app.ContextImpl$20 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class android.database.StaleDataException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.Annotations,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBitString(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void run(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.database.BulkCursorProxy { void close(); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { int next(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBoolean(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readOctetString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { int length(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readUTCTime(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.MaterialProgressBar { void onAttachedToWindow(); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readGeneralizedTime(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { void <init>(java.lang.Class,java.lang.Integer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { void <init>(float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { com.fasterxml.jackson.databind.node.FloatNode valueOf(float); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer access$000(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { java.lang.String asText(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer access$800(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException { void <init>(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String validate(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer { java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class libcore.net.UriCodec { void <init>(); }
-keepclassmembers class android.support.v4.animation.AnimatorCompatHelper { android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class android.app.Instrumentation { android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context); }
-keepclassmembers class android.support.v4.animation.AnimatorCompatHelper { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal$1 { void <init>(android.hardware.camera2.CameraManager$CameraManagerGlobal,android.hardware.camera2.CameraManager$AvailabilityCallback,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.FloatNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.os.IVibratorService$Stub { android.os.IVibratorService asInterface(android.os.IBinder); }
-keepclassmembers class android.app.Instrumentation { void callApplicationOnCreate(android.app.Application); }
-keepclassmembers class android.hardware.SystemSensorManager { void <clinit>(); }
-keepclassmembers class android.support.v4.animation.AnimatorCompatHelper { void clearInterpolator(android.view.View); }
-keepclassmembers class android.os.ParcelFileDescriptor$ListenerBridge$1 { void <init>(android.os.ParcelFileDescriptor$ListenerBridge,android.os.Looper,android.os.ParcelFileDescriptor$OnCloseListener); }
-keepclassmembers class android.os.ICancellationSignal$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal$1 { void run(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.os.ICancellationSignal$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class android.app.Instrumentation { android.app.Application newApplication(java.lang.Class,android.content.Context); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class android.app.Instrumentation { android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent); }
-keepclassmembers class libcore.net.UriCodec { void validateSimple(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.app.Instrumentation { void prePerformCreate(android.app.Activity); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class java.nio.channels.ClosedChannelException { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void <init>(android.widget.AbsSpinner); }
-keepclassmembers class android.media.projection.MediaProjectionManager { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStarted(); }
-keepclassmembers class libcore.net.UriCodec { void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { android.view.View get(int); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void put(int,android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class java.nio.PipeImpl { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.os.Debug { java.lang.String getCallers(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ClassSerializer { void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ClassSerializer { void <init>(); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ClassSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.app.Instrumentation { void postPerformCreate(android.app.Activity); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl { void <init>(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.net.Uri$PathSegments { void <init>(java.lang.String[],int); }
-keepclassmembers class android.location.CountryDetector { void <init>(android.location.ICountryDetector); }
-keepclassmembers class ch.qos.logback.core.spi.LogbackLock { void <init>(); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.String get(int); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$1 { void run(); }
-keepclassmembers class libcore.net.UriCodec { int hexToInt(char); }
-keepclassmembers class com.android.okio.Deadline { void throwIfReached(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnCreate(android.app.Activity,android.os.Bundle); }
-keepclassmembers class com.android.okio.Deadline { void <init>(); }
-keepclassmembers class android.net.Uri$PathSegments { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.Object get(int); }
-keepclassmembers class android.net.Uri$PathSegments { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class com.android.okio.Deadline { void <clinit>(); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,byte); }
-keepclassmembers class android.support.v7.widget.RecyclerView$1 { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnDestroy(android.app.Activity); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { boolean tryAcquire(int); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { void <init>(); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { int validateRange(int,int); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { void lock(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase { com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer { void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onInputEvent(android.view.InputEvent,int); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnNewIntent(android.app.Activity,com.android.internal.content.ReferrerIntent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase { void <init>(java.lang.Class); }
-keepclassmembers class android.nfc.INfcTag$Stub { android.nfc.INfcTag asInterface(android.os.IBinder); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onKeyEvent(android.view.KeyEvent,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { void <init>(int,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { int getKeyCode(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { java.lang.String getQueryActionMsg(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel,android.app.SearchableInfo$1); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumValues { void <init>(java.lang.Class,java.util.Map); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumValues { com.fasterxml.jackson.databind.util.EnumValues construct(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnNewIntent(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnPause(android.app.Activity); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnPostCreate(android.app.Activity,android.os.Bundle); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTrackballEvent(android.view.MotionEvent,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumValues { com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.app.Instrumentation { void callActivityOnUserLeaving(android.app.Activity); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.app.Activity,android.content.Context,android.os.Handler,int); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.FileSerializer { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void doLoaderStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.reflect.Constructor); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumValues { com.fasterxml.jackson.databind.util.EnumValues constructFromToString(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.FileSerializer { void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void doLoaderStop(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.app.Instrumentation { android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.FileSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.text.AttributedString$Range { void <init>(int,int,java.lang.Object); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.app.Activity getActivity(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.InnerClassProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.os.Handler getHandler(); }
-keepclassmembers class android.media.IMediaRouterClient$Stub { void <init>(); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class android.nfc.INfcAdapter$Stub$Proxy { android.nfc.INfcTag getNfcTagInterface(); }
-keepclassmembers class android.net.NetworkScoreManager { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_ESCAPE(); }
-keepclassmembers class java.nio.ByteOrder { boolean isLittleEndian(); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumValues { com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum); }
-keepclassmembers class android.media.IMediaRouterClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.LoaderManagerImpl getLoaderManagerImpl(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_UNESCAPE(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { boolean getRetainLoaders(); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class android.nfc.INfcAdapter$Stub$Proxy { android.nfc.INfcCardEmulation getNfcCardEmulationInterface(); }
-keepclassmembers class android.view.WindowManager$BadTokenException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromDouble(); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void inactivateFragment(java.lang.String); }
-keepclassmembers class android.view.WindowManager$BadTokenException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromLong(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromBoolean(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromInt(); }
-keepclassmembers class ch.qos.logback.classic.spi.StackTraceElementProxy { void <init>(java.lang.StackTraceElement); }
-keepclassmembers class ch.qos.logback.classic.joran.JoranConfigurator { void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry); }
-keepclassmembers class ch.qos.logback.classic.joran.JoranConfigurator { void <init>(); }
-keepclassmembers class android.content.ContentResolver$OpenResourceIdResult { void <init>(android.content.ContentResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromString(); }
-keepclassmembers class android.nfc.INfcAdapter$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateFromObjectWith(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateUsingDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canInstantiate(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { boolean canCreateUsingDelegate(); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void print(ch.qos.logback.core.status.Status); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class ch.qos.logback.classic.spi.StackTraceElementProxy { void setClassPackagingData(ch.qos.logback.classic.spi.ClassPackagingData); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] invert(java.lang.String[][]); }
-keepclassmembers class ch.qos.logback.classic.joran.JoranConfigurator { void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object); }
-keepclassmembers class android.os.UserManager { void <init>(android.content.Context,android.os.IUserManager); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class javax.net.DefaultSocketFactory { void <init>(); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void addStatusEvent(ch.qos.logback.core.status.Status); }
-keepclassmembers class android.os.UserManager { android.os.UserManager get(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { com.fasterxml.jackson.databind.deser.impl.InnerClassProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void reportLoaderStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[]); }
-keepclassmembers class org.apache.commons.io.CopyUtils { int copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.util.SimpleArrayMap retainLoaderNonConfig(); }
-keepclassmembers class javax.net.DefaultSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper$MyHandler { void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void retrospectivePrint(); }
-keepclassmembers class android.hardware.ISerialManager$Stub { android.hardware.ISerialManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { boolean hasSingleElement(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void start(); }
-keepclassmembers class dalvik.system.profiler.HprofData { void <init>(java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { boolean isStarted(); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class org.apache.commons.io.CopyUtils { int copy(java.io.Reader,java.io.Writer); }
-keepclassmembers class dalvik.system.profiler.HprofData { long getStartMillis(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(java.io.InputStream,java.io.Writer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { boolean isUnwrappingSerializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.InnerClassProperty { com.fasterxml.jackson.databind.deser.impl.InnerClassProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class ch.qos.logback.core.status.OnPrintStreamStatusListenerBase { void stop(); }
-keepclassmembers class android.app.Instrumentation { void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper$MyHandler { void handleMessage(android.os.Message); }
-keepclassmembers class dalvik.system.profiler.HprofData { int getFlags(); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(java.io.InputStream,java.io.Writer,java.lang.String); }
-keepclassmembers class dalvik.system.profiler.HprofData { int getDepth(); }
-keepclassmembers class dalvik.system.profiler.HprofData { void setStartMillis(long); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(java.io.Reader,java.io.OutputStream); }
-keepclassmembers class dalvik.system.profiler.HprofData { void setFlags(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class dalvik.system.profiler.HprofData { void setDepth(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(java.lang.String,java.io.OutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class dalvik.system.profiler.HprofData { java.util.List getThreadHistory(); }
-keepclassmembers class dalvik.system.profiler.HprofData { java.util.Set getSamples(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.database.ContentObserver$Transport { void <init>(android.database.ContentObserver); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(byte[],java.io.OutputStream); }
-keepclassmembers class android.media.MediaRouter$Static$1 { void <init>(android.media.MediaRouter$Static); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(java.lang.String,java.io.Writer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer(); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(byte[],java.io.Writer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void <init>(); }
-keepclassmembers class android.nfc.NfcManager { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ListView { void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { boolean isEmpty(char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.widget.ListView { void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.io.CopyUtils { void copy(byte[],java.io.Writer,java.lang.String); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.Fragment$SavedState$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$CharSetMatcher { void <init>(char[]); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher$InnerReceiver { void <init>(android.app.LoadedApk$ReceiverDispatcher,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.app.ContextImpl$62 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$62 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class android.widget.ListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void addKeyState(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withIgnorals(java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi21 { java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(org.xml.sax.Attributes); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.ValueInstantiator { java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { void addLiteralToken(java.util.List,java.lang.StringBuilder); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getLength(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getLocalName(int); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { void handleDefaultValueState(char,java.util.List,java.lang.StringBuilder); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getQName(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean cancelExitingRipples(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getType(int); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { void handleLiteralState(char,java.util.List,java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.os.StrictMode$InstanceCountViolation { void <init>(java.lang.Class,long,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setAlpha(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getURI(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$IteratorImpl { void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getIndex(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(int); }
-keepclassmembers class android.os.StrictMode$InstanceCountViolation { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { java.util.List tokenize(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer { void handleStartState(char,java.util.List,java.lang.StringBuilder); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$4 { void execute(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$IteratorImpl { boolean hasNext(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$4 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$IteratorImpl { com.fasterxml.jackson.databind.deser.SettableBeanProperty next(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl$1 { void <init>(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class butterknife.internal.DebouncingOnClickListener { boolean access$002(boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void post(java.lang.Runnable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser { byte[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$IteratorImpl { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow$1 { void <init>(java.lang.reflect.Field,android.widget.PopupWindow,android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttributes(org.xml.sax.Attributes); }
-keepclassmembers class butterknife.internal.DebouncingOnClickListener { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.KeyCharacterMap { void nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { boolean nativeGetFallbackAction(long,int,int,android.view.KeyCharacterMap$FallbackAction); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow$1 { void onScrollChanged(); }
-keepclassmembers class butterknife.internal.DebouncingOnClickListener { void onClick(android.view.View); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void executeActions(android.os.Handler); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser { byte[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] nativeGetEvents(long,char[]); }
-keepclassmembers class ch.qos.logback.core.subst.Node { void <init>(ch.qos.logback.core.subst.Node$Type,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class ch.qos.logback.core.subst.Node { void <init>(ch.qos.logback.core.subst.Node$Type,java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.subst.Node { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class ch.qos.logback.core.subst.Node { void append(ch.qos.logback.core.subst.Node); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { void <init>(com.fasterxml.jackson.annotation.JsonFormat); }
-keepclassmembers class android.widget.ListView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.widget.ListView { android.graphics.drawable.Drawable getDivider(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.ListView { void drawDivider(android.graphics.Canvas,android.graphics.Rect,int); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ListView { int getDividerHeight(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing { void <clinit>(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompatJellybeanMr1 { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.subst.Node { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { void <init>(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat$Shape,java.util.Locale,java.lang.String,java.util.TimeZone); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void removeAttribute(int); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void ensureCapacity(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void badIndex(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class ch.qos.logback.core.subst.Node { void recursive(ch.qos.logback.core.subst.Node,java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { java.util.Locale getLocale(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { java.lang.String getPattern(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] getEvents(char[]); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.util.MutableInt { void <init>(int); }
-keepclassmembers class ch.qos.logback.core.subst.Node { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { boolean hasPattern(); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { boolean hasLocale(); }
-keepclassmembers class android.os.UserManager { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { java.lang.String toString(); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.CertificateList$1); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.TBSCertList access$100(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { byte[] access$300(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <clinit>(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void removeRipple(android.graphics.drawable.Ripple); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class ch.qos.logback.classic.util.StatusListenerConfigHelper { void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder { void <init>(); }
-keepclassmembers class android.app.Instrumentation { void init(android.app.ActivityThread,android.content.Context,android.content.Context,android.content.ComponentName,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { com.fasterxml.jackson.annotation.JsonFormat$Shape getShape(); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class ch.qos.logback.classic.util.StatusListenerConfigHelper { ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.classic.LoggerContext,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Value { java.util.TimeZone getTimeZone(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void clickPressedItem(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder { short[] _constructArray(int); }
-keepclassmembers class ch.qos.logback.classic.util.StatusListenerConfigHelper { void installIfAsked(ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.support.v7.widget.ActionMenuView$LayoutParams); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getRippleIndex(android.graphics.drawable.Ripple); }
-keepclassmembers class ch.qos.logback.classic.util.StatusListenerConfigHelper { void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void clearPressedItem(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void setPressedItem(android.view.View,int,float,float); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class java.lang.System { void setOut(java.io.PrintStream); }
-keepclassmembers class android.util.ExceptionUtils { java.lang.RuntimeException wrap(java.io.IOException); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Instrumentation { java.lang.Object access$200(android.app.Instrumentation); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void <init>(android.content.Context); }
-keepclassmembers class android.view.ThreadedRenderer$AtlasInitializer { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class java.lang.System { void setErr(java.io.PrintStream); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class android.app.Instrumentation { java.util.List access$300(android.app.Instrumentation); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class android.view.ThreadedRenderer$AtlasInitializer { void init(android.content.Context,long); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isFocused(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean access$000(android.webkit.WebView); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { org.apache.harmony.security.asn1.ASN1Any getInstance(); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean access$502(android.widget.ListPopupWindow$DropDownListView,boolean); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean access$102(com.afollestad.materialdialogs.internal.MDRootLayout,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <clinit>(); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasFocus(); }
-keepclassmembers class android.view.ThreadedRenderer$AtlasInitializer { void validateMap(android.content.Context,long[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void access$300(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.ViewGroup,boolean,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean access$202(com.afollestad.materialdialogs.internal.MDRootLayout,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class ch.qos.logback.classic.spi.STEUtil { int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void access$500(com.afollestad.materialdialogs.internal.MDRootLayout,android.webkit.WebView,boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void <init>(int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { com.afollestad.materialdialogs.internal.MDButton[] access$400(com.afollestad.materialdialogs.internal.MDRootLayout); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class android.view.ThreadedRenderer$AtlasInitializer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class dalvik.system.profiler.PortableThreadSampler { void setDepth(int); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class dalvik.system.profiler.PortableThreadSampler { void <init>(); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.text.style.ReplacementSpan { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void access$600(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.ViewGroup,boolean,boolean,boolean); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.os.StrictMode { void setCloseGuardEnabled(boolean); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void addScrollListener(android.view.ViewGroup,boolean,boolean); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void populate(int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskWrites(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { int getSelectedPosition(); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class android.os.StrictMode { boolean amTheSystemServerProcess(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean canAdapterViewScroll(android.widget.AdapterView); }
-keepclassmembers class com.android.internal.view.IInputMethodClient$Stub { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void initializeFromState(); }
-keepclassmembers class java.util.AbstractMap$2$1 { boolean hasNext(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { int getAmountToScroll(); }
-keepclassmembers class android.os.StrictMode { boolean conditionallyEnableDebugLogging(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxyVO { void <init>(); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class java.util.AbstractMap$2$1 { void <init>(java.util.AbstractMap$2); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxyVO { ch.qos.logback.classic.spi.ThrowableProxyVO build(ch.qos.logback.classic.spi.IThrowableProxy); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { int estimateLength(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean canRecyclerViewScroll(android.support.v7.widget.RecyclerView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class java.util.AbstractMap$2$1 { java.lang.Object next(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.util.concurrent.atomic.AtomicReference deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isHighTextContrastEnabled(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.os.StrictMode { void enableDeathOnNetwork(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.GeneralNames$1); }
-keepclassmembers class com.android.internal.view.IInputMethodClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { java.util.List access$100(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean canWebViewScroll(android.webkit.WebView); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.lang.Object getNullValue(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { android.view.View getBottomView(android.view.ViewGroup); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addDependency(android.animation.AnimatorSet$Dependency); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean canScrollViewScroll(android.widget.ScrollView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { java.util.concurrent.atomic.AtomicReference getNullValue(); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { android.view.View getTopView(android.view.ViewGroup); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(); }
-keepclassmembers class android.os.StrictMode { void conditionallyCheckInstanceCounts(); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class android.os.StrictMode { boolean hasGatheredViolations(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(int); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$202(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$200(android.animation.AnimatorSet$Node); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1 { void <clinit>(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class android.nfc.INfcCardEmulation$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void invalidateDividersForScrollingView(android.view.ViewGroup,boolean,boolean,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean removeHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void init(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void handleKeywordState(char,java.util.List,java.lang.StringBuffer); }
-keepclassmembers class java.net.InetSocketAddress { boolean equals(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void handleFormatModifierState(char,java.util.List,java.lang.StringBuffer); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer { com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection); }
-keepclassmembers class java.net.InetSocketAddress { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void addValuedToken(int,java.lang.StringBuffer,java.util.List); }
-keepclassmembers class android.os.StrictMode { boolean vmClosableObjectLeaksEnabled(); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$VmPolicy getVmPolicy(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void invalidateDividersForWebView(android.webkit.WebView,boolean,boolean,boolean); }
-keepclassmembers class java.net.InetSocketAddress { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.os.StrictMode { void setVmPolicy(android.os.StrictMode$VmPolicy); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void handleLiteralState(char,java.util.List,java.lang.StringBuffer); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void handleRightParenthesisState(char,java.util.List,java.lang.StringBuffer); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean addHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener); }
-keepclassmembers class java.lang.System { void arraycopy(double[],int,double[],int,int); }
-keepclassmembers class android.os.StrictMode { void onWebViewMethodCalledOnWrongThread(java.lang.Throwable); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class android.service.fingerprint.IFingerprintServiceReceiver$Stub { void <init>(); }
-keepclassmembers class android.os.StrictMode { void onFileUriExposed(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void escape(java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { boolean isVisible(android.view.View); }
-keepclassmembers class java.lang.System { void arraycopyDoubleUnchecked(double[],int,double[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class android.media.MediaRouter$Static { void <init>(android.content.Context); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyAccessibilityStateChanged(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { void processOption(char,java.util.List,java.lang.StringBuffer); }
-keepclassmembers class android.os.StrictMode { void onVmPolicyViolation(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.media.AudioManager { void <init>(android.content.Context); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void setUpDividersVisibility(android.view.View,boolean,boolean); }
-keepclassmembers class android.support.v4.content.ContentResolverCompatJellybean { android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object); }
-keepclassmembers class android.media.AudioManager { android.media.IAudioService getService(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void removeAccessibilityInteractionConnection(android.view.IWindow); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream { java.util.List tokenize(); }
-keepclassmembers class android.renderscript.RSInvalidStateException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.ContentResolverCompatJellybean { boolean isFrameworkOperationCanceledException(java.lang.Exception); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void noTitleNoPadding(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyTouchExplorationStateChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void onFinishInflate(); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$100(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.location.GpsStatus { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void <init>(boolean); }
-keepclassmembers class android.media.MediaRouter$Static { void startMonitoringRoutes(android.content.Context); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$200(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$000(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { java.lang.Object access$300(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BooleanSerializer { void <init>(boolean); }
-keepclassmembers class java.lang.System { void gc(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyHighTextContrastStateChanged(); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BooleanSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BooleanSerializer { void serialize(java.lang.Boolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.os.StrictMode { void writeGatheredViolationsToParcel(android.os.Parcel); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.media.MediaRouter$Static { void updateAudioRoutes(android.media.AudioRoutesInfo); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void <clinit>(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$400(android.view.accessibility.AccessibilityManager,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.lang.System { java.util.Properties getProperties(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { int estimateLength(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable { void run(); }
-keepclassmembers class java.util.Collections$SynchronizedSet { void <init>(java.util.Set); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable { void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.System { void setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.media.MediaRouter$Static { void updateDiscoveryRequest(); }
-keepclassmembers class java.util.Collections$SynchronizedSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion(); }
-keepclassmembers class android.media.MediaRouter$Static { boolean isBluetoothA2dpOn(); }
-keepclassmembers class com.android.internal.app.AlertController$5 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer { java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.System { java.lang.String setProperty(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class java.util.Collections$SynchronizedSet { int hashCode(); }
-keepclassmembers class android.support.v4.view.MenuItemCompatIcs { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class java.lang.System { java.util.Properties createSystemProperties(); }
-keepclassmembers class java.lang.System { java.lang.String clearProperty(java.lang.String); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void drawableStateChanged(); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.support.v4.view.MenuItemCompatIcs { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { boolean hasOverlappingRendering(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class); }
-keepclassmembers class java.lang.System { java.io.Console console(); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.CursorFilter { void <init>(android.widget.CursorFilter$CursorFilterClient); }
-keepclassmembers class java.lang.System { void checkPropertyName(java.lang.String); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.System { java.lang.SecurityManager getSecurityManager(); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider { void <init>(); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider { void clearInterpolator(android.view.View); }
-keepclassmembers class java.lang.System { void loadLibrary(java.lang.String); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider { android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator(); }
-keepclassmembers class android.support.v7.widget.SearchView$4 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class java.lang.System { void logW(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAccelerateDecelerateInterpolator(); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createDecelerateInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createBounceInterpolator(); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAnticipateInterpolator(float); }
-keepclassmembers class android.media.MediaRouter$Static { android.view.Display[] getAllPresentationDisplays(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createCycleInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createOvershootInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAnticipateOvershootInterpolator(float); }
-keepclassmembers class android.widget.CursorFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class android.view.ViewRootImpl$TrackballAxis { float collect(float,long,java.lang.String); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAccelerateInterpolator(float); }
-keepclassmembers class android.view.ViewRootImpl$TrackballAxis { void reset(int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.view.ViewRootImpl$TrackballAxis { void <init>(); }
-keepclassmembers class android.renderscript.Allocation$MipmapControl { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.System { void runFinalization(); }
-keepclassmembers class android.media.MediaRouter$Static { void setSelectedRoute(android.media.MediaRouter$RouteInfo,boolean); }
-keepclassmembers class android.renderscript.Allocation$MipmapControl { void <clinit>(); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class java.lang.System { java.lang.String mapLibraryName(java.lang.String); }
-keepclassmembers class android.media.MediaRouter$Static { void rebindAsUser(int); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class java.lang.System { void setFieldImpl(java.lang.String,java.lang.String,java.lang.Object); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1Exception { void <init>(com.jcraft.jsch.KeyPair); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl { int getNestedScrollAxes(android.view.ViewGroup); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl { void <init>(); }
-keepclassmembers class android.graphics.Shader { void copyLocalMatrix(android.graphics.Shader); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <init>(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class android.media.MediaRouter$Static { void publishClientSelectedRoute(boolean); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.OutputStream,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap$Bucket { void <init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap$Bucket,com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl { void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class java.util.TreeMap$MapIterator { void <init>(java.util.TreeMap,java.util.TreeMap$Node); }
-keepclassmembers class android.graphics.Shader { boolean getLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.media.MediaRouter$Static { void publishClientDiscoveryRequest(); }
-keepclassmembers class android.view.ViewRootImpl$TrackballAxis { int generate(); }
-keepclassmembers class android.media.MediaRouter$Static { void updateClientState(); }
-keepclassmembers class java.util.TreeMap$MapIterator { boolean hasNext(); }
-keepclassmembers class android.graphics.Shader { void nativeSetLocalMatrix(long,long); }
-keepclassmembers class android.os.StrictMode { void decrementExpectedActivityCount(java.lang.Class); }
-keepclassmembers class android.os.StrictMode { void incrementExpectedActivityCount(java.lang.Class); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationFactory { int hashCode(); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle loadResourceBundle(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class android.os.StrictMode { long access$1502(long); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class java.util.logging.Logger { void initResourceBundle(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.media.AudioManager { void playSoundEffect(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class android.media.MediaRouter$Static { android.media.MediaRouter$RouteInfo makeGlobalRoute(android.media.MediaRouterClientState$RouteInfo); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.StrictMode { long access$1500(); }
-keepclassmembers class java.util.TreeMap$MapIterator { java.util.TreeMap$Node stepForward(); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { void <init>(); }
-keepclassmembers class java.util.logging.Logger { void updateDalvikLogHandler(); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void <init>(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void reset(); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void startTracking(android.view.KeyEvent,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection); }
-keepclassmembers class java.util.logging.Logger { void setManager(java.util.logging.LogManager); }
-keepclassmembers class android.media.MediaRouter$Static { void updateGlobalRoute(android.media.MediaRouter$RouteInfo,android.media.MediaRouterClientState$RouteInfo); }
-keepclassmembers class java.util.logging.Logger { void addHandler(java.util.logging.Handler); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void reset(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { boolean isTracking(android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class android.media.AudioManager { boolean querySoundEffectsEnabled(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingRotation { void <init>(me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$1); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void performedLongPress(android.view.KeyEvent); }
-keepclassmembers class android.view.KeyEvent$DispatcherState { void handleUpEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl { void <init>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingRotation { float access$200(me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingRotation); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable$RingRotation { void <init>(); }
-keepclassmembers class android.media.session.ISessionManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void endSection(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void applyFixedSizeWindow(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.media.MediaRouter$Static { android.media.MediaRouter$RouteInfo findGlobalRoute(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void beginSection(java.lang.String); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { java.lang.IllegalArgumentException wrongBuf(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator { void add(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.view.ViewGroup createSubDecor(); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator { com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void _verifyRelease(char[],char[]); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void _verifyAlloc(java.lang.Object); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void _verifyRelease(byte[],byte[]); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator { void resolveForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { char[] allocNameCopyBuffer(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { java.lang.Class getDefaultImpl(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { byte[] allocReadIOBuffer(); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { char[] allocTokenBuffer(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.SearchView { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.support.v7.widget.SearchView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.SearchView { void <init>(android.content.Context); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator { void <init>(java.lang.Class,java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { byte[] allocBase64Buffer(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { com.fasterxml.jackson.core.JsonEncoding getEncoding(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { boolean isResourceManaged(); }
-keepclassmembers class android.support.v7.widget.SearchView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.logging.Logger { boolean internalIsLoggable(java.util.logging.Level); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer(); }
-keepclassmembers class java.util.logging.Logger { void setResourceBundle(java.util.logging.LogRecord); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void releaseTokenBuffer(char[]); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void releaseNameCopyBuffer(char[]); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonInclude$Include { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { java.lang.Object getSourceReference(); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void releaseReadIOBuffer(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$1 { java.lang.String transform(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void <init>(android.support.v7.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void releaseBase64Buffer(byte[]); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonInclude$Include { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As); }
-keepclassmembers class com.fasterxml.jackson.core.io.IOContext { void setEncoding(com.fasterxml.jackson.core.JsonEncoding); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void checkAndFixAccess(java.lang.reflect.Member); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonInclude$Include { com.fasterxml.jackson.annotation.JsonInclude$Include[] values(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { void <init>(android.support.v4.widget.DrawerLayout); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void onClick(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void ensureSubDecor(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.String canBeABeanType(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization { void <init>(java.lang.reflect.Field); }
-keepclassmembers class android.net.wifi.IWifiScanner$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean); }
-keepclassmembers class android.net.wifi.IWifiScanner$Stub$Proxy { android.os.Messenger getMessenger(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Object defaultValue(java.lang.Class); }
-keepclassmembers class android.os.IUserManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.jackson.ValidationException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Object createInstance(java.lang.Class,boolean); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.os.Bundle { void <init>(int); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentState$1 { void <init>(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.os.Bundle { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.shapes.OvalShape { void <init>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void addOnLayoutChangeListenerToDropDownAnchorBase(); }
-keepclassmembers class android.graphics.drawable.shapes.OvalShape { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.shapes.OvalShape { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.PersistableBundle); }
-keepclassmembers class android.support.v7.widget.SearchView { android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat { android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal); }
-keepclassmembers class android.os.Bundle { void clear(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void invalidatePanelMenu(int); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onKeyUpPanel(int,android.view.KeyEvent); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class android.os.Bundle { void putAll(android.os.Bundle); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void addOnLayoutChangeListenerToDropDownAnchorSDK11(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.net.LocalSocketImpl$SocketOutputStream { void <init>(android.net.LocalSocketImpl); }
-keepclassmembers class android.net.LocalSocketImpl$SocketOutputStream { void close(); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class findEnumType(java.lang.Class); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class android.net.LocalSocketImpl$SocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onKeyDownPanel(int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class findEnumType(java.util.EnumMap); }
-keepclassmembers class android.support.v7.widget.SearchView { android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class findEnumType(java.lang.Enum); }
-keepclassmembers class android.app.IAlarmManager$Stub { android.app.IAlarmManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class findEnumType(java.util.EnumSet); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { boolean add(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class android.net.LocalSocketImpl$SocketOutputStream { void flush(); }
-keepclassmembers class android.os.Bundle { void putSparseParcelableArray(java.lang.String,android.util.SparseArray); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.util.List findSuperTypes(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class android.view.GLES20Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.support.v7.widget.SearchView { android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.os.Bundle { void putParcelableArray(java.lang.String,android.os.Parcelable[]); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class getOuterClass(java.lang.Class); }
-keepclassmembers class android.os.Bundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class android.support.v7.widget.SearchView { void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.SearchView { void dismissSuggestions(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { void <init>(java.lang.Object,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Throwable getRootCause(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean hasGetterSignature(java.lang.reflect.Method); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.SearchView { java.lang.CharSequence getDecoratedHint(java.lang.CharSequence); }
-keepclassmembers class android.os.Bundle { void putBundle(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.util.Iterator iterator(); }
-keepclassmembers class org.greenrobot.eventbus.BackgroundPoster { void <init>(org.greenrobot.eventbus.EventBus); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class android.support.v7.widget.SearchView { int getPreferredHeight(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked access$000(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class org.greenrobot.eventbus.BackgroundPoster { void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isBogusClass(java.lang.Class); }
-keepclassmembers class android.os.Bundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.support.v7.widget.SearchView { int getPreferredWidth(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isCollectionMapOrArray(java.lang.Class); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.lang.String toString(); }
-keepclassmembers class org.greenrobot.eventbus.BackgroundPoster { void run(); }
-keepclassmembers class android.os.Bundle { android.os.Bundle getBundle(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isConcrete(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isJacksonStdImpl(java.lang.Class); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,int,android.view.KeyEvent,int); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable[] getParcelableArray(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$102(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isJacksonStdImpl(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.String isLocalType(java.lang.Class,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FailingDeserializer { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getParcelableArrayList(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class android.support.v7.widget.SearchView { void postUpdateFocusedState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FailingDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { boolean isProxyType(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object); }
-keepclassmembers class android.os.Bundle { android.util.SparseArray getSparseParcelableArray(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.SearchView { boolean isSubmitAreaEnabled(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean offer(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void throwAsIAE(java.lang.Throwable,java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void reset(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object take(); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateCloseButton(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void throwAsIAE(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored(); }
-keepclassmembers class android.os.Bundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateQueryHint(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.util.logging.Logger { java.lang.String access$000(java.util.logging.Logger); }
-keepclassmembers class java.util.logging.Logger { void access$100(java.util.logging.Logger,java.util.logging.LogRecord); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNext(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void unwrapAndThrowAsIAE(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class android.renderscript.RSIllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object poll(); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getIBinder(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible(); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil { java.lang.Class wrapperType(java.lang.Class); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context); }
-keepclassmembers class java.util.Collections$EmptyList { boolean contains(java.lang.Object); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateSubmitButton(boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { int drainTo(java.util.Collection); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateSubmitArea(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateViewsVisibility(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.animation.BounceInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void drawableStateChanged(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateVoiceButton(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.SearchView { void adjustDropDownSizeAndPosition(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class android.media.AudioManager { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.SearchView { void clearFocus(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndSet(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi { void <init>(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class android.support.v7.widget.SearchView { void forceSuggestionQuery(); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerator { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi { com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat { android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean); }
-keepclassmembers class android.media.session.MediaSession$Callback { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.SearchView { java.lang.CharSequence getQueryHint(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorCompatBase { android.view.animation.Interpolator create(android.graphics.Path); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { boolean isActive(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int addAndGet(int); }
-keepclassmembers class android.support.v7.widget.SearchView { boolean isIconified(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStarted(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void deactivate(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.SearchView { void launchQuerySearch(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { long longValue(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int intValue(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { float floatValue(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { double doubleValue(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.LayoutInflater makeNewLayoutInflater(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat { int getNestedScrollAxes(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { int sanitizeWindowFeatureId(int); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.widget.Toolbar$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.SearchView { void onCloseClicked(); }
-keepclassmembers class android.hardware.camera2.CameraManager { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context); }
-keepclassmembers class android.support.v7.widget.SearchView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupColorAnimator(android.animation.Animator); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.Window makeNewWindow(android.content.Context); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void throwFeatureRequestIfSubDecorInstalled(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat { void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void clearColorFilter(); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { android.content.pm.ServiceInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.security.DigestException { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu); }
-keepclassmembers class org.kxml2.io.KXmlParser { void keepNamespaceAttributes(); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { android.content.pm.ServiceInfo[] newArray(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class java.security.DigestException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.DigestException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.security.DigestException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.WeakHashMap$1 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class com.android.internal.policy.PolicyManager { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.WeakHashMap$1 { int size(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.widget.SearchView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void closePanel(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void closePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean); }
-keepclassmembers class java.util.WeakHashMap$1 { java.util.Iterator iterator(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getLayoutDirection(); }
-keepclassmembers class android.support.v7.widget.SearchView { void onSubmitQuery(); }
-keepclassmembers class android.os.ICancellationSignal$Stub { android.os.ICancellationSignal asInterface(android.os.IBinder); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getMinimumHeight(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getMinimumWidth(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.SearchView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonGeneratorImpl { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonGeneratorImpl { void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class android.support.v7.widget.SearchView { void onSearchClicked(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getImportantForAccessibility(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { android.view.ViewParent getParentForAccessibility(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumHeight(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonGeneratorImpl { com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.SearchView { void onVoiceClicked(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { java.lang.Object getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonGeneratorImpl { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int[] getState(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextToken(); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.SearchView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.v7.widget.SearchView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class android.support.v7.widget.SearchView { void setIconifiedByDefault(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.SearchView { void setInputType(int); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.content.ClipboardManager$2 { void <init>(android.content.ClipboardManager); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void doInvalidatePanelMenu(int); }
-keepclassmembers class android.support.v7.widget.SearchView { void setMaxWidth(int); }
-keepclassmembers class java.net.PlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { void <init>(java.lang.Class,java.lang.Long); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer access$200(); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void endOnGoingFadeAnimation(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer access$1000(); }
-keepclassmembers class java.net.PlainSocketImpl { void checkNotClosed(); }
-keepclassmembers class java.net.PlainSocketImpl { boolean usingSocks(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.net.PlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.widget.SearchView { void setImeOptions(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState findMenuPanel(android.view.Menu); }
-keepclassmembers class android.support.v7.widget.SearchView { void setImeVisibility(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int,int); }
-keepclassmembers class android.app.ContextImpl$27 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.view.View findViewById(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState getPanelState(int,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer { java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.widget.SearchView { void updateFocusedState(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int); }
-keepclassmembers class android.view.DisplayInfo { java.lang.String toString(); }
-keepclassmembers class org.greenrobot.eventbus.EventBusBuilder { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.String capitalizeFirstLetter(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void initWindowDecorActionBar(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void <init>(java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { int available(); }
-keepclassmembers class java.net.PlainSocketImpl { void create(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class org.greenrobot.eventbus.EventBusBuilder { void <init>(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class android.app.ContextImpl$27 { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.EventBusBuilder { org.greenrobot.eventbus.EventBus build(); }
-keepclassmembers class java.net.PlainSocketImpl { void listen(int); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void installViewFactory(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { ch.qos.logback.core.util.AggregationType computeRawAggregationType(java.lang.reflect.Method); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.reflect.Method findSetterMethod(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void close(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.reflect.Method findAdderMethod(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void invalidateOptionsMenu(); }
-keepclassmembers class java.net.PlainSocketImpl { int socksGetServerPort(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class org.greenrobot.eventbus.EventBusBuilder { org.greenrobot.eventbus.EventBusBuilder addIndex(org.greenrobot.eventbus.meta.SubscriberInfoIndex); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { void socksConnect(java.net.InetAddress,int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onBackPressed(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { boolean isSanityCheckSuccessful(java.lang.String,java.lang.reflect.Method,java.lang.Class[],java.lang.Object); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.net.PlainSocketImpl { void socksRequestConnection(java.net.InetAddress,int); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.view.DisplayInfo { java.lang.String flagsToString(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.InetAddress socksGetServerAddress(); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(android.graphics.Path,boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onLevelChange(int); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class java.net.PlainSocketImpl { void socksAccept(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getPosTan(float,float[],float[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.Class getParameterClassForMethod(java.lang.reflect.Method); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller { void access$3500(android.support.v7.widget.RecyclerView$SmoothScroller,int,int); }
-keepclassmembers class java.nio.PipeImpl$PipeSourceChannel { void implCloseSelectableChannel(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class java.nio.PipeImpl$PipeSourceChannel { void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class java.nio.PipeImpl$PipeSourceChannel { void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor,java.nio.PipeImpl$1); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getPosTan(long,float,float[],float[]); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.net.PlainSocketImpl { void socksSendRequest(int,java.net.InetAddress,int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter { void <init>(java.lang.String[]); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.net.PlainSocketImpl { void socksBind(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { boolean isUnequivocallyInstantiable(java.lang.Class); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.Socks4Message socksReadReply(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void addBasicProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void addComplexProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class java.net.PlainSocketImpl { int read(byte[],int,int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter { boolean checkEnd(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void write(byte[],int,int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter { void reset(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <init>(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler,org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.net.PlainSocketImpl { int access$000(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter { boolean checkStart(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void init(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class java.net.PlainSocketImpl { void access$100(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.annotation.Annotation getAnnotation(java.lang.String,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { ch.qos.logback.core.util.AggregationType computeAggregationType(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder$StatePassFilter { boolean passed(); }
-keepclassmembers class android.app.RemoteServiceException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onStop(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onSubDecorInstalled(android.view.ViewGroup); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void run(); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void setAgentForwarding(boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void setPty(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean requestWindowFeature(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { android.text.Spanned convert(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.Class getByConcreteType(java.lang.String,java.lang.reflect.Method); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void stop(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void start(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.Class getClassNameViaImplicitRules(java.lang.String,ch.qos.logback.core.util.AggregationType,ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry); }
-keepclassmembers class com.jcraft.jsch.ChannelShell { void start(); }
-keepclassmembers class android.service.media.MediaBrowserService { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleStartTag(java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onTitleChanged(java.lang.CharSequence); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setContentView(android.view.View); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setContentView(int); }
-keepclassmembers class ch.qos.logback.core.joran.action.DefinePropertyAction { void <init>(); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.reflect.Method getMethod(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.action.DefinePropertyAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isDefault(); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isPrecisionSet(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setSupportActionBar(android.support.v7.widget.Toolbar); }
-keepclassmembers class java.util.Formatter$FormatToken { int getArgIndex(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.Class getDefaultClassNameByAnnonation(java.lang.String,java.lang.reflect.Method); }
-keepclassmembers class android.telephony.JapanesePhoneNumberFormatter { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Packet { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean shouldAnimateActionModeView(); }
-keepclassmembers class com.jcraft.jsch.Packet { void <init>(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class android.telephony.JapanesePhoneNumberFormatter { void format(android.text.Editable); }
-keepclassmembers class com.jcraft.jsch.Packet { void setRandom(com.jcraft.jsch.Random); }
-keepclassmembers class java.util.Formatter$FormatToken { void setArgIndex(int); }
-keepclassmembers class com.jcraft.jsch.Packet { com.jcraft.jsch.Buffer getBuffer(); }
-keepclassmembers class com.android.org.conscrypt.ChainStrengthAnalyzer { void check(java.security.cert.X509Certificate[]); }
-keepclassmembers class java.util.Formatter$FormatToken { int getPrecision(); }
-keepclassmembers class java.util.Formatter$FormatToken { int getWidth(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setPrecision(int); }
-keepclassmembers class com.jcraft.jsch.Packet { void padding(int); }
-keepclassmembers class java.util.Formatter$FormatToken { void setWidth(int); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { ch.qos.logback.core.joran.util.PropertyDescriptor getPropertyDescriptor(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean setFlag(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class com.android.org.conscrypt.ChainStrengthAnalyzer { void checkModulusLength(java.security.cert.X509Certificate); }
-keepclassmembers class com.android.org.conscrypt.ChainStrengthAnalyzer { void checkNotMD5(java.security.cert.X509Certificate); }
-keepclassmembers class ch.qos.logback.core.joran.action.DefinePropertyAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.Object getObj(); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class java.util.Formatter$FormatToken { char getConversionType(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setConversionType(char); }
-keepclassmembers class java.util.Formatter$FormatToken { char getDateSuffix(); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { java.lang.reflect.Method getRelevantMethod(java.lang.String,ch.qos.logback.core.util.AggregationType); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid$1 { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatToken { void checkFlags(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void introspect(); }
-keepclassmembers class com.jcraft.jsch.Packet { int shift(int,int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleEndTag(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatToken { void setDateSuffix(char); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean requireArgument(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class android.support.v4.text.ICUCompat { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.support.v4.text.ICUCompat { void <clinit>(); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class com.jcraft.jsch.Packet { void reset(); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void invokeMethodWithSingleParameterOnThisObject(java.lang.reflect.Method,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatKK$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class com.android.org.conscrypt.ChainStrengthAnalyzer { void checkCert(java.security.cert.X509Certificate); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Packet { void unshift(byte,int,int,int); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void <init>(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.android.org.conscrypt.ChainStrengthAnalyzer { void <clinit>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleBr(android.text.SpannableStringBuilder); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void setComplexProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class java.util.Formatter$FormatToken { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class android.text.HtmlToSpannedConverter { java.lang.Object getLast(android.text.Spanned,java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void setProperty(ch.qos.logback.core.joran.util.PropertyDescriptor,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startImg(android.text.SpannableStringBuilder,org.xml.sax.Attributes,android.text.Html$ImageGetter); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(java.util.Formatter$1); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleP(android.text.SpannableStringBuilder); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { org.w3c.dom.NodeList getChildNodes(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void start(android.text.SpannableStringBuilder,java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startFont(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.hardware.display.WifiDisplay$1 { void <init>(); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class java.security.SignatureException { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class org.slf4j.helpers.Util$ClassContextSecurityManager { void <init>(org.slf4j.helpers.Util$1); }
-keepclassmembers class org.slf4j.helpers.Util$ClassContextSecurityManager { java.lang.Class[] getClassContext(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { org.w3c.dom.Node appendChild(org.w3c.dom.Node); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startA(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter { void setProperty(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { void appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { int updateStatusGuard(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endFont(android.text.SpannableStringBuilder); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { org.w3c.dom.Node getLastChild(); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { void bindItem(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endA(android.text.SpannableStringBuilder); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onTouchModeChanged(boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void stopSelecting(android.view.View,android.text.Spannable); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class org.slf4j.helpers.Util$ClassContextSecurityManager { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey getKey(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { boolean hasReferringProperties(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void showWithActionPopup(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { java.util.Iterator referringProperties(); }
-keepclassmembers class libcore.util.Objects { int hashCode(java.lang.Object); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endDocument(); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { boolean isParentOf(org.w3c.dom.Node); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <clinit>(); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class libcore.util.Objects { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endPrefixMapping(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.InnerNodeImpl { void refreshIndices(int); }
-keepclassmembers class android.net.INetworkPolicyManager$Stub { android.net.INetworkPolicyManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endHeader(android.text.SpannableStringBuilder); }
-keepclassmembers class android.net.Uri$AbstractPart { void writeTo(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { java.lang.Object resolve(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId { void setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void characters(char[],int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase { void <init>(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class android.support.v4.app.Fragment$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase { boolean isEmpty(java.util.Collection); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startDocument(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class android.support.v4.app.Fragment$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { boolean includeAuthorityInRequestLine(com.android.okhttp.Request,java.net.Proxy$Type); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String get(com.android.okhttp.Request,java.net.Proxy$Type,int); }
-keepclassmembers class android.app.ContextImpl$2 { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$2 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String version(int); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String requestPath(java.net.URL); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void <init>(java.io.ObjectOutputStream,java.io.ObjectStreamClass); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { java.io.EmulatedFields emulatedFields(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,byte); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,char); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[]); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,float); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void <clinit>(); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[]); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,long); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void sendRequest(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { org.apache.harmony.security.x509.NameConstraints decode(byte[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response); }
-keepclassmembers class android.support.v4.app.Fragment$SavedState { void <clinit>(); }
-keepclassmembers class java.io.EmulatedFieldsForDumping { void put(java.lang.String,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeActive(android.app.Fragment); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl { android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment$SavedState { void <init>(android.os.Bundle); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { java.lang.String _customTypeId(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <init>(int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void addFragment(android.app.Fragment,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Response stripBody(com.android.okhttp.Response); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { void doFinal(byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { int getBlockSize(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void connect(com.android.okhttp.Request); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { void init(byte[]); }
-keepclassmembers class ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter { void <init>(); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 add(android.renderscript.Float2,android.renderscript.Float2); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 add(android.renderscript.Float2,float); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.renderscript.Float2 { void <init>(); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 sub(android.renderscript.Float2,float); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { void update(int); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.classic.selector.DefaultContextSelector { ch.qos.logback.classic.LoggerContext getDefaultLoggerContext(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 sub(android.renderscript.Float2,android.renderscript.Float2); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD5 { void update(byte[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout$2 { void <init>(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.ViewGroup,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$2 { void <init>(int); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int hashCode(java.lang.Object); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout$2 { void onScrollChanged(); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { void init(int,byte[],byte[]); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int hashCodeMulti(java.lang.Object[]); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { int getBlockSize(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void writingRequestHeaders(); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { int getIVSize(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[],org.apache.harmony.security.x509.NameConstraints$1); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 div(android.renderscript.Float2,android.renderscript.Float2); }
-keepclassmembers class ch.qos.logback.classic.selector.DefaultContextSelector { ch.qos.logback.classic.LoggerContext getLoggerContext(); }
-keepclassmembers class ch.qos.logback.classic.selector.DefaultContextSelector { void <init>(ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okio.Sink getRequestBody(); }
-keepclassmembers class android.renderscript.Float2 { android.renderscript.Float2 div(android.renderscript.Float2,float); }
-keepclassmembers class android.support.v4.app.FragmentContainer { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String identityToString(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasRequestBody(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasResponse(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Response getResponse(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.Appendable,java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$49 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { boolean isCBC(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.app.ContextImpl$49 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okio.Source getResponseBody(); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CTR { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class android.bluetooth.IBluetooth$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.internal.http.HttpEngine recover(java.io.IOException); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Connection getConnection(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.StringBuilder,java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Request getRequest(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.support.v4.widget.TextViewCompatApi23 { void setTextAppearance(android.widget.TextView,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment findFragmentById(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.io.InputStream getResponseBodyBytes(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Route getRoute(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean isRecoverable(java.io.IOException); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Object mode(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void maybeCache(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment findFragmentByTag(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Connection close(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void releaseConnection(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void close(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatKitKat { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { void checkSingleton(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { boolean isClipPath(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String toString(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getRootElementName(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class java.net.SocketException { void <init>(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { int normalizeMetaState(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getSystemId(); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser { long[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasResponseBody(); }
-keepclassmembers class android.renderscript.Element$DataKind { android.renderscript.Element$DataKind[] values(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { void <init>(android.view.View,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void initContentStream(com.android.okio.Source); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPublicId(); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class android.app.ContextImpl$6 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.renderscript.Element$DataKind { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class android.app.ContextImpl$6 { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Request networkRequest(com.android.okhttp.Request); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring { void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object); }
-keepclassmembers class android.widget.CursorAdapter { void changeCursor(android.database.Cursor); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { boolean onPreDraw(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring { void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,com.fasterxml.jackson.databind.deser.std.MapDeserializer$1); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser { long[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder alwaysCallInputCallback(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring { void handleResolvedForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.renderscript.Element$DataKind { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.lang.String hostHeader(java.net.URL); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel); }
-keepclassmembers class com.jcraft.jsch.RequestExec { void <init>(byte[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CursorAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void readResponse(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.print.PrintManager { void <init>(android.content.Context,android.print.IPrintManager,int,int); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.RequestExec { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EmptyIterator { java.util.Iterator instance(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog build(); }
-keepclassmembers class android.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EmptyIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor swapCursor(android.database.Cursor); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EmptyIterator { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EmptyIterator { boolean hasNext(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EmptyIterator { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class android.os.storage.StorageVolume { java.lang.String getPath(); }
-keepclassmembers class libcore.net.url.FtpHandler { void <init>(); }
-keepclassmembers class android.hardware.Camera { int getNumberOfCameras(); }
-keepclassmembers class android.hardware.Camera { void getCameraInfo(int,android.hardware.Camera$CameraInfo); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.os.storage.StorageVolume { java.io.File getPathFile(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class android.hardware.Camera { android.hardware.Camera open(); }
-keepclassmembers class android.hardware.Camera { void _getCameraInfo(int,android.hardware.Camera$CameraInfo); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.hardware.Camera { android.hardware.Camera open(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPrefix(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.lang.String getDefaultUserAgent(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getAttributeCount(); }
-keepclassmembers class android.media.IRemoteVolumeObserver$Stub { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder cancelable(boolean); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder content(int); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollLast(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeNamespace(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder content(java.lang.CharSequence); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { void <init>(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeName(int); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { android.database.IContentObserver getObserver(); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { void throwIfCursorIsClosed(); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { void initialize(android.database.BulkCursorDescriptor); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributePrefix(int); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.hardware.Camera { int cameraInitVersion(int,int); }
-keepclassmembers class android.hardware.Camera { int cameraInitNormal(int); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { int getCount(); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { boolean onMove(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.hardware.Camera { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.MapDeserializer,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,java.util.HashSet); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.hardware.Camera { int native_setup(java.lang.Object,int,int,java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { boolean add(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void <clinit>(); }
-keepclassmembers class android.database.BulkCursorToCursorAdaptor { void close(); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference); }
-keepclassmembers class android.hardware.Camera { boolean checkInitErrors(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { void fixCanvasScalingWhenHardwareAccelerated(android.widget.ProgressBar); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Headers combine(com.android.okhttp.Headers,com.android.okhttp.Headers); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void resolve(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { int getInflateLayout(com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.support.v7.view.menu.MenuBuilder getAdapterMenu(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean isEndToEnd(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { int getCount(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.TunnelRequest getTunnelConfig(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.support.v7.view.menu.MenuItemImpl getItem(int); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel,android.os.storage.StorageVolume$1); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { long getItemId(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { void init(com.afollestad.materialdialogs.MaterialDialog); }
-keepclassmembers class android.os.storage.StorageVolume { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { int getTheme(com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.ArrayDeque { void clear(); }
-keepclassmembers class android.content.BroadcastReceiver { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl { void <init>(); }
-keepclassmembers class android.view.inputmethod.EditorInfo$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void setForceShowIcon(boolean); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl { android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.IBinder peekService(android.content.Context,android.content.Intent); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultCode(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult goAsync(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void receiveHeaders(com.android.okhttp.Headers); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <init>(java.math.BigInteger,java.util.Date,org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { java.lang.Object getValueHandler(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String nextText(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { int hashCode(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultExtras(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { java.lang.Object getTypeHandler(); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultData(java.lang.String); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class android.content.BroadcastReceiver { java.lang.String getResultData(); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBase { java.lang.String toCanonical(); }
-keepclassmembers class android.content.BroadcastReceiver { int getResultCode(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getAbortBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.Bundle getResultExtras(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void setResult(int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isInitialStickyBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { void clearAbortBroadcast(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.hardware.SensorManager { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.util.Date access$100(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.content.BroadcastReceiver { void abortBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { void setPendingResult(android.content.BroadcastReceiver$PendingResult); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder input(int,int,boolean,com.afollestad.materialdialogs.MaterialDialog$InputCallback); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { org.apache.harmony.security.x509.Extensions access$200(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.content.BroadcastReceiver { void setOrderedHint(boolean); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isOrderedBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { int getSendingUserId(); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { void setDebugUnregister(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.math.BigInteger access$000(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getDebugUnregister(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult getPendingResult(); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder input(java.lang.CharSequence,java.lang.CharSequence,boolean,com.afollestad.materialdialogs.MaterialDialog$InputCallback); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.pattern.MarkerConverter { void <clinit>(); }
-keepclassmembers class java.util.TimeZone { int getDSTSavings(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.content.ContextCompat { int checkSelfPermission(android.content.Context,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.pattern.MarkerConverter { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { void <init>(); }
-keepclassmembers class android.support.v4.content.ContextCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder inputType(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.BeanSerializerBase { boolean usesObjectId(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { int getIVSize(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { void init(int,byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { int getBlockSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { com.fasterxml.jackson.databind.JsonNode get(int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { com.fasterxml.jackson.core.TreeNode get(int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class ch.qos.logback.classic.pattern.LevelConverter { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.TimeZone { void setDefault(java.util.TimeZone); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { com.fasterxml.jackson.databind.JsonNode get(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.UserAuthPublicKey { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.jcraft.jsch.UserAuthPublicKey { void <init>(); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v4.content.IntentCompatHoneycomb { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { boolean isCBC(); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR128 { void update(byte[],int,int,byte[],int); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class java.lang.InternalError { void <init>(java.lang.String); }
-keepclassmembers class android.os.storage.StorageManager { void <init>(android.content.ContentResolver,android.os.Looper); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void <init>(float[],android.graphics.RectF,float[]); }
-keepclassmembers class android.support.v4.content.ContextCompat { boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void _readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ValueNode { com.fasterxml.jackson.core.TreeNode get(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { java.lang.String buildCanonicalName(); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType containedType(int); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { int containedTypeCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { java.lang.String containedTypeName(int); }
-keepclassmembers class android.support.v4.app.BundleCompatGingerbread { android.os.IBinder getBinder(android.os.Bundle,java.lang.String); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean hasGenericTypes(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType getContentType(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean isArrayType(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void <init>(android.widget.SpinnerAdapter); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void onResize(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean isAbstract(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean isContainerType(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getCount(); }
-keepclassmembers class android.media.session.MediaController$CallbackStub { void <init>(android.media.session.MediaController); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { boolean isConcrete(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { long getItemId(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.os.storage.StorageManager { android.os.storage.StorageManager from(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { android.graphics.drawable.shapes.RoundRectShape clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder negativeText(int); }
-keepclassmembers class java.lang.InternalError { void <init>(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean hasStableIds(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder negativeText(java.lang.CharSequence); }
-keepclassmembers class android.transition.TransitionManager$MultiListener$1 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class android.transition.TransitionManager$MultiListener$1 { void <init>(android.transition.TransitionManager$MultiListener,android.util.ArrayMap); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { void <clinit>(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { void <init>(com.jcraft.jsch.JSch,byte[],byte[],byte[],byte[],byte[]); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getViewTypeCount(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <init>(int,java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object); }
-keepclassmembers class android.transition.ChangeTransform$GhostListener { void <init>(android.view.View,android.view.View,android.view.GhostView); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getItemViewType(int); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { com.jcraft.jsch.KeyPair fromSSHAgent(com.jcraft.jsch.JSch,com.jcraft.jsch.Buffer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { boolean _inIntRange(long); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { int getId(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { int hashCode(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean isEmpty(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder onNegative(com.afollestad.materialdialogs.MaterialDialog$SingleButtonCallback); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchLowMemory(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { void dispose(); }
-keepclassmembers class android.transition.ChangeTransform$GhostListener { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { void <init>(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] forSSHAgent(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder onPositive(com.afollestad.materialdialogs.MaterialDialog$SingleButtonCallback); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.ArrayNode arrayNode(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { void generate(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { android.util.ArraySet access$000(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class android.transition.ChangeTransform$GhostListener { void onTransitionResume(android.transition.Transition); }
-keepclassmembers class android.widget.SearchView$10 { void <init>(android.widget.SearchView); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchTrimMemory(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ArrayType { com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder positiveText(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float); }
-keepclassmembers class android.net.LocalSocketAddress { void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace); }
-keepclassmembers class android.net.LocalSocketAddress { android.net.LocalSocketAddress$Namespace getNamespace(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NullNode nullNode(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(double); }
-keepclassmembers class android.net.LocalSocketAddress { java.lang.String getName(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getBegin(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getEnd(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder positiveText(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getKeyTypeName(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(long); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog show(); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean modifiesAlpha(android.view.animation.Animation); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean dispatchOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigDecimal); }
-keepclassmembers class java.math.Division { int divideArrayByInt(int[],int[],int,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getPrivateKey(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.lang.Class getMapClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean dispatchPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder title(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigInteger); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getPublicKeyBlob(); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { byte[] getSignature(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setFromIndex(java.lang.Object,int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder title(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void resolve(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean dispatchContextItemSelected(android.view.MenuItem); }
-keepclassmembers class com.android.internal.view.IInputContext$Stub { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$Builder { com.afollestad.materialdialogs.MaterialDialog$Builder typeface(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context); }
-keepclassmembers class com.jcraft.jsch.KeyPairDSA { boolean parse(byte[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setItemCount(java.lang.Object,int); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setScrollY(java.lang.Object,int); }
-keepclassmembers class android.net.nsd.INsdManager$Stub { android.net.nsd.INsdManager asInterface(android.os.IBinder); }
-keepclassmembers class com.afollestad.materialdialogs.DialogInit { void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation); }
-keepclassmembers class com.android.internal.view.IInputContext$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setScrollX(java.lang.Object,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.ValueNode pojoNode(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setToIndex(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.ObjectNode objectNode(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.JsonNodeFactory { com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { com.fasterxml.jackson.databind.introspect.AnnotatedMethod remove(java.lang.reflect.Method); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { java.util.Iterator iterator(); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,boolean); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.util.HashSet); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addBackStackState(android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addFragment(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.SearchView$1 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void setIgnorableProperties(java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[]); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class ch.qos.logback.classic.pattern.MethodOfCallerConverter { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int allocBackStackIndex(android.support.v4.app.BackStackRecord); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CRLDistributionPoints$1); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer { void wrapAndThrow(java.lang.Throwable,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.SearchView$1 { void run(); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { android.content.pm.ProviderInfo[] newArray(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(com.android.internal.widget.AutoScrollHelper,com.android.internal.widget.AutoScrollHelper$1); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void run(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.Future submit(java.lang.Runnable); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback21Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void loadUrl(java.lang.String); }
-keepclassmembers class android.net.IConnectivityManager$Stub { android.net.IConnectivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { android.content.pm.ProviderInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { java.lang.Object writeReplace(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachFragment(android.support.v4.app.Fragment,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ISO8601Utils { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.view.textservice.TextServicesManager { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { java.lang.String getPassword(); }
-keepclassmembers class com.jcraft.jsch.Session { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Session { void <init>(com.jcraft.jsch.JSch,java.lang.String,java.lang.String,int); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { boolean promptPassphrase(java.lang.String); }
-keepclassmembers class android.view.textservice.TextServicesManager { java.lang.String parseLanguageFromLocaleString(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { java.lang.String getPassphrase(); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback21Impl { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.view.textservice.TextServicesManager { android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { boolean promptPassword(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ISO8601Utils { java.lang.String format(java.util.Date,boolean,java.util.TimeZone); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ISO8601Utils { java.lang.String format(java.util.Date); }
-keepclassmembers class android.view.textservice.TextServicesManager { android.view.textservice.TextServicesManager getInstance(); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { boolean promptYesNo(java.lang.String); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandUserInfo { void showMessage(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.FragmentTransaction beginTransaction(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$2 { void <init>(int); }
-keepclassmembers class android.os.DropBoxManager$Entry$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.webkit.WebView { float getScale(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$3 { void run(); }
-keepclassmembers class com.jcraft.jsch.Session { int _setPortForwardingR(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { void compileNode(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void detachFragment(android.support.v4.app.Fragment,int,int); }
-keepclassmembers class android.hardware.SensorManager { void <clinit>(); }
-keepclassmembers class java.util.Timer$FinalizerHelper { void <init>(java.util.Timer$TimerImpl); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$3 { void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { void <init>(ch.qos.logback.core.subst.Node,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.jcraft.jsch.RequestX11 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { java.lang.String constructRecursionErrorMessage(java.util.Stack); }
-keepclassmembers class android.webkit.WebView { int getContentHeight(); }
-keepclassmembers class com.jcraft.jsch.RequestX11 { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean dispatchContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchActivityCreated(); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.webkit.WebView { void onResume(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { boolean equalNodes(ch.qos.logback.core.subst.Node,ch.qos.logback.core.subst.Node); }
-keepclassmembers class android.webkit.WebView { void onPause(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ISO8601Utils { void padInt(java.lang.StringBuilder,int,int); }
-keepclassmembers class android.content.ClipboardManager$1 { void <init>(android.content.ClipboardManager); }
-keepclassmembers class android.app.ContextImpl$13 { java.lang.Object createStaticService(); }
-keepclassmembers class com.jcraft.jsch.Session { void applyConfig(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { void handleLiteral(ch.qos.logback.core.subst.Node,java.lang.StringBuilder); }
-keepclassmembers class android.app.ContextImpl$13 { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { void handleVariable(ch.qos.logback.core.subst.Node,java.lang.StringBuilder,java.util.Stack); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ISO8601Utils { java.lang.String format(java.util.Date,boolean); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroy(); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroyView(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getHintLayout(); }
-keepclassmembers class com.jcraft.jsch.Session { void _write(com.jcraft.jsch.Packet); }
-keepclassmembers class android.view.textservice.TextServicesManager { android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean); }
-keepclassmembers class android.webkit.WebView { void setWebViewClient(android.webkit.WebViewClient); }
-keepclassmembers class android.view.textservice.TextServicesManager { boolean isSpellCheckerEnabled(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { java.lang.String lookupKey(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { java.lang.String substituteVariable(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchMultiWindowModeChanged(boolean); }
-keepclassmembers class java.io.InputStream { int available(); }
-keepclassmembers class android.view.textservice.TextServicesManager { void <clinit>(); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class java.io.InputStream { void close(); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { boolean haveVisitedNodeAlready(ch.qos.logback.core.subst.Node,java.util.Stack); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean dispatchOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { ch.qos.logback.core.subst.Node tokenizeAndParseString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class java.io.InputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchLowMemory(); }
-keepclassmembers class com.android.internal.textservice.ISpellCheckerSessionListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.webkit.WebView { void onGlobalFocusChanged(android.view.View,android.view.View); }
-keepclassmembers class android.webkit.WebView { void onChildViewRemoved(android.view.View,android.view.View); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { java.lang.String transform(); }
-keepclassmembers class com.jcraft.jsch.Session { void applyConfigChannel(com.jcraft.jsch.ChannelSession); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class com.android.internal.textservice.ISpellCheckerSessionListener$Stub { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchPause(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { void <init>(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchPictureInPictureModeChanged(boolean); }
-keepclassmembers class com.jcraft.jsch.Session { boolean checkCipher(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { int getChangingConfigurations(); }
-keepclassmembers class android.net.ProxyInfo { void <init>(android.net.Uri,int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(android.support.v7.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class android.net.ProxyInfo { void <init>(java.lang.String,int,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class com.jcraft.jsch.Session { java.lang.String[] checkCiphers(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void ensureProviderCreated(); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { void updateHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchReallyStop(); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.net.ProxyInfo { android.net.Uri getPacFileUrl(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchResume(); }
-keepclassmembers class android.net.ProxyInfo { int getPort(); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class android.webkit.WebView { void onChildViewAdded(android.view.View,android.view.View); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer { java.lang.String variableNodeValue(ch.qos.logback.core.subst.Node); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStart(); }
-keepclassmembers class android.net.ProxyInfo { java.lang.String getExclusionListAsString(); }
-keepclassmembers class android.net.ProxyInfo { void setExclusionList(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onAttachedToWindow(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStop(); }
-keepclassmembers class android.webkit.WebView { void onDetachedFromWindowInternal(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void doPendingDeferredStart(); }
-keepclassmembers class android.webkit.WebView { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.webkit.WebView { void setOverScrollMode(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.PackageVersion { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.PackageVersion { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.PackageVersion { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollRange(); }
-keepclassmembers class android.webkit.WebView { void computeScroll(); }
-keepclassmembers class android.webkit.WebView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.webkit.WebView { void checkThread(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { java.lang.Object poll(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean dispatchPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class android.webkit.WebView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.jcraft.jsch.Session { void checkConfig(com.jcraft.jsch.ConfigRepository$Config,java.lang.String); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class android.net.ProxyInfo { java.lang.String getHost(); }
-keepclassmembers class android.webkit.WebView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.net.ConnectivityManager { void <init>(android.net.IConnectivityManager); }
-keepclassmembers class com.jcraft.jsch.Session { void checkHost(java.lang.String,int,com.jcraft.jsch.KeyExchange); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.webkit.WebView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class android.net.ConnectivityManager { android.net.ConnectivityManager from(android.content.Context); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class android.webkit.WebView { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.webkit.WebView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.net.ProxyInfo { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.webkit.WebView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void addState(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.webkit.WebView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { void onWindowVisibilityChanged(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator { void <init>(java.lang.Class,java.util.Map); }
-keepclassmembers class android.webkit.WebView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void setDefaultUserDirectory(java.io.File); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.webkit.WebView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.webkit.WebView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.webkit.WebView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.webkit.WebView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.webkit.WebView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator { com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.net.ProxyInfo { void <init>(java.lang.String,int,java.lang.String,java.lang.String[],android.net.ProxyInfo$1); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator { void resolveForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.UserHandle { boolean isSameApp(int,int); }
-keepclassmembers class android.webkit.WebView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.webkit.WebView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void markViewHoldersUpdated(int,int,java.lang.Object); }
-keepclassmembers class android.webkit.WebView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void offsetPositionsForMove(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void offsetPositionsForRemovingInvisible(int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void offsetPositionsForRemovingLaidOutOrNewView(int,int); }
-keepclassmembers class android.webkit.WebView { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void offsetPositionsForAdd(int,int); }
-keepclassmembers class android.os.UserHandle { int getAppId(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.webkit.WebView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.RecyclerView$6 { void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.webkit.WebView { void onMeasure(int,int); }
-keepclassmembers class android.webkit.WebView { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEvent { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class android.webkit.WebView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEvent { void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Throwable,java.lang.Object[]); }
-keepclassmembers class android.webkit.WebView { void setBackgroundColor(int); }
-keepclassmembers class android.os.UserHandle { boolean isSameUser(int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation getAnnotation(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.webkit.WebView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.webkit.WebView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isInherited(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateCount(); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEvent { java.lang.Throwable extractThrowableAnRearrangeArguments(java.lang.Object[]); }
-keepclassmembers class android.webkit.WebView { void onStartTemporaryDetach(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable getStateDrawable(int); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateDrawableIndex(int[]); }
-keepclassmembers class android.hardware.hdmi.IHdmiControlService$Stub { android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] getStateSet(int); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class android.os.UserHandle { int getIdentifier(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class ch.qos.logback.core.spi.FilterReply { void <clinit>(); }
-keepclassmembers class java.net.Socket { void tryAllAddresses(java.lang.String,int,java.net.InetAddress,int,boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnnotationPresent(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver { void onChanged(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class ch.qos.logback.core.spi.FilterReply { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.util.List getDeclaredAnnotations(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { boolean casTail(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void enqueueAction(java.lang.Runnable,boolean); }
-keepclassmembers class java.net.Socket { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.Socket { void <init>(java.lang.String,int,java.net.InetAddress,int); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { void checkNotNull(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class com.jcraft.jsch.Session { boolean checkKex(com.jcraft.jsch.Session,java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSink { void <init>(com.android.okio.Sink,com.android.okio.OkBuffer); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean expandActionView(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { boolean casHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Session { java.lang.String[] checkKexes(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class com.android.okio.RealBufferedSink { void <init>(com.android.okio.Sink); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEvent { void setMarker(org.slf4j.Marker); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.graphics.drawable.Drawable getIcon(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void <init>(android.widget.Spinner); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { char getAlphabeticShortcut(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { boolean isShowing(); }
-keepclassmembers class com.android.okio.RealBufferedSink { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink write(com.android.okio.ByteString); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.OkBuffer buffer(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getGroupId(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void dismiss(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { char getNumericShortcut(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getItemId(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class java.net.Socket { void checkDestination(java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.View getActionView(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getOrdering(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void setPromptText(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { char getShortcut(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.String getShortcutLabel(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void show(int,int); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink write(byte[]); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.SubMenu getSubMenu(); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getInetAddress(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.view.ActionProvider getSupportActionProvider(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.FormattingNode { void <init>(int,java.lang.Object); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Session { byte[] expandKey(com.jcraft.jsch.Buffer,byte[],byte[],byte[],com.jcraft.jsch.HASH,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void execSingleAction(java.lang.Runnable,boolean); }
-keepclassmembers class android.net.ConnectivityManager { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentById(int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.FormattingNode { ch.qos.logback.core.pattern.FormatInfo getFormatInfo(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.FormattingNode { void setFormatInfo(ch.qos.logback.core.pattern.FormatInfo); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.widget.ProgressBar$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView); }
-keepclassmembers class android.text.Html { java.lang.String escapeHtml(java.lang.CharSequence); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class java.net.Socket { int getPort(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeShort(int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean invoke(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean hasCollapsibleActionView(); }
-keepclassmembers class com.jcraft.jsch.Session { void initDeflater(java.lang.String); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(float); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean hasSubMenu(); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void <init>(android.widget.Spinner,android.widget.Spinner$1); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeInt(int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isActionViewExpanded(); }
-keepclassmembers class java.net.Socket { int getSoTimeout(); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment$$ViewBinder { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isCheckable(); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment$$ViewBinder { void bind(butterknife.ButterKnife$Finder,it.skarafaz.mercury.fragment.ProgressDialogFragment,java.lang.Object); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Session { void initInflater(java.lang.String); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentByTag(java.lang.String); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isEnabled(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isExclusiveCheckable(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isVisible(); }
-keepclassmembers class java.net.URLConnection { boolean getDoInput(); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void <init>(java.lang.Throwable); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment$$ViewBinder { void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink emitCompleteSegments(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isActionButton(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isChecked(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void <clinit>(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.Session$Forwarding parseForwarding(java.lang.String); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void printStackTrace0(java.io.PrintWriter); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object getDefaultValue(java.lang.reflect.Method); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionProvider(android.view.ActionProvider); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.database.CursorWindow$1 { void <init>(); }
-keepclassmembers class com.android.okio.RealBufferedSink { void close(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntrySet { void <init>(java.util.concurrent.ConcurrentNavigableMap); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.net.URLConnection { void checkNotConnected(); }
-keepclassmembers class com.android.okio.RealBufferedSink { void flush(); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void initCauseByReflection(java.lang.Throwable); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setActionView(int); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getEnclosingClass(java.lang.Class); }
-keepclassmembers class java.net.Socket { void setTcpNoDelay(boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void <init>(android.support.v4.widget.DrawerLayout,int); }
-keepclassmembers class android.app.ContextImpl { void registerService(java.lang.String,android.app.ContextImpl$ServiceFetcher); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializer$1 { void <clinit>(); }
-keepclassmembers class javax.xml.datatype.DatatypeConfigurationException { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionView(int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void closeOtherDrawer(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.net.Socket { void startupSocket(java.net.InetAddress,int,java.net.InetAddress,int,boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionView(android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntrySet { int size(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { int clampViewPositionHorizontal(android.view.View,int,int); }
-keepclassmembers class android.app.ContextImpl { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.app.ContextImpl { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class android.database.CursorWindow$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setAlphabeticShortcut(char); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setCheckable(boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getSignature(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.app.ContextImpl { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { int clampViewPositionVertical(android.view.View,int,int); }
-keepclassmembers class android.app.ContextImpl { android.content.Context getApplicationContext(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setChecked(boolean); }
-keepclassmembers class android.database.CursorWindow$1 { android.database.CursorWindow createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onEdgeDragStarted(int,int); }
-keepclassmembers class android.app.ContextImpl { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.app.ContextImpl { android.os.Looper getMainLooper(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { int getViewHorizontalDragRange(android.view.View); }
-keepclassmembers class java.net.URLConnection { java.net.URL getURL(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setCheckedInt(boolean); }
-keepclassmembers class android.app.ContextImpl { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer { void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.app.ContextImpl { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setEnabled(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setExclusiveCheckable(boolean); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class android.app.ContextImpl { java.lang.String getPackageName(); }
-keepclassmembers class java.net.Socket { java.lang.String toString(); }
-keepclassmembers class android.app.ContextImpl { java.lang.String getBasePackageName(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setIcon(int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onViewDragStateChanged(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { boolean onEdgeLock(int); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void hideFragment(android.support.v4.app.Fragment,int,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onEdgeTouched(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer { void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.app.ContextImpl { java.lang.String getOpPackageName(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.view.LayoutInflater getInflater(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getInnerClassName(java.lang.Class); }
-keepclassmembers class java.net.Socket { boolean usingSocks(); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.app.ContextImpl { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onViewPositionChanged(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertCheckBox(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setNumericShortcut(char); }
-keepclassmembers class java.net.Socket { void checkOpenAndCreate(boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnonymousClass(java.lang.Class); }
-keepclassmembers class android.app.ContextImpl { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertIconView(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertRadioButton(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.app.ContextImpl { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setMenuInfo(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.os.SystemProperties { void native_set(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { long native_get_long(java.lang.String,long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean isStateAtLeast(int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onViewReleased(android.view.View,float,float); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setSubMenuArrowVisible(boolean); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.support.v7.view.menu.MenuItemImpl getItemData(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void initialize(android.support.v7.view.menu.MenuItemImpl,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setShowAsAction(int); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setSubMenu(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class java.net.Socket { java.net.SocketAddress getRemoteSocketAddress(); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void onViewCaptured(android.view.View,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { void <init>(com.android.okhttp.OkHttpClient,java.lang.String); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.os.SystemProperties { void set(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ContextImpl { java.io.File getPreferencesDir(); }
-keepclassmembers class android.os.SystemProperties { long getLong(java.lang.String,long); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class com.jcraft.jsch.Session { void receive_newkeys(com.jcraft.jsch.Buffer,com.jcraft.jsch.KeyExchange); }
-keepclassmembers class com.jcraft.jsch.Session { void requestPortForwarding(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void peekDrawer(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getInnerClassFlags(java.lang.Class,int); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorGingerbread { void <init>(android.graphics.Path); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMSerializer { void <init>(); }
-keepclassmembers class android.text.Html { void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setTitleCondensed(java.lang.CharSequence); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl { java.io.File createFilesDirLocked(java.io.File); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setVisible(boolean); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMSerializer { void serialize(org.w3c.dom.Node,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void setDragger(android.support.v4.widget.ViewDragHelper); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { void removeCallbacks(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean setVisibleInt(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean shouldShowIcon(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator$1 { void <init>(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class com.jcraft.jsch.Session { void send_kexinit(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getAnnotationClass(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean shouldShowShortcut(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator$1 { void run(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback { boolean tryCaptureView(android.view.View,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { void <init>(); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setCheckable(boolean); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.net.wifi.WifiScanner$ServiceHandler { void <init>(android.os.Looper); }
-keepclassmembers class com.jcraft.jsch.UserAuthNone { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean showsTextAsAction(); }
-keepclassmembers class com.android.internal.telephony.PhoneConstants$State { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { boolean prefersCondensedTitle(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeActive(android.support.v4.app.Fragment); }
-keepclassmembers class android.net.wifi.WifiScanner$ServiceHandler { void handleMessage(android.os.Message); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { void <init>(java.util.List); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { boolean equals(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.UserAuthNone { java.lang.String getMethods(); }
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorGingerbread { float getInterpolation(float); }
-keepclassmembers class com.jcraft.jsch.Session { void send_newkeys(); }
-keepclassmembers class java.net.URLConnection { void setUseCaches(boolean); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.pattern.ThreadConverter { void <init>(); }
-keepclassmembers class com.android.internal.telephony.PhoneConstants$State { void <clinit>(); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class com.jcraft.jsch.UserAuthNone { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class java.util.Arrays$ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { boolean equalityCheck(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.util.List annotationSetToAnnotations(java.lang.Class,int); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawables(); }
-keepclassmembers class java.net.URLConnection { int getConnectTimeout(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.net.URLConnection { int getReadTimeout(); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord$2 { void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,java.lang.Object,java.lang.Object,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setForceShowIcon(boolean); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { int getPrefixMatchLength(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,java.lang.Class,com.android.dex.Annotation); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class java.net.Socket { void accepted(); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.app.ContextImpl { java.io.File getCacheDir(); }
-keepclassmembers class java.net.Socket { java.io.FileDescriptor getFileDescriptor$(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeInactive(android.support.v4.app.Fragment); }
-keepclassmembers class java.net.Socket { void cacheLocalAddress(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord$2 { boolean onPreDraw(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { int getTailMatchLength(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void setPadding(int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.Session { void updateKeys(com.jcraft.jsch.KeyExchange); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader); }
-keepclassmembers class ch.qos.logback.core.util.ExecutorServiceUtil { java.util.concurrent.ExecutorService newExecutorService(); }
-keepclassmembers class ch.qos.logback.core.util.ExecutorServiceUtil { void shutdown(java.util.concurrent.ExecutorService); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { int hashCode(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { boolean isContainedIn(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void <init>(); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { void <init>(); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class java.net.SocketImpl { int getPort(); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class com.jcraft.jsch.Session { void start_discard(com.jcraft.jsch.Buffer,com.jcraft.jsch.Cipher,com.jcraft.jsch.MAC,int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementSelector { boolean fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class java.net.SocketImpl { java.lang.String toString(); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void <clinit>(); }
-keepclassmembers class com.android.okio.Deadline$1 { boolean reached(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment); }
-keepclassmembers class android.app.IUiModeManager$Stub { android.app.IUiModeManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setShortcut(boolean,char); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment,int,int,int,boolean); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void <clinit>(); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void <init>(android.support.v7.widget.ChildHelper$Callback); }
-keepclassmembers class android.support.v7.widget.ChildHelper { int getOffset(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { java.util.HashSet arrayToSet(java.lang.Object[]); }
-keepclassmembers class java.beans.PropertyChangeEvent { void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { com.jcraft.jsch.MAC access$000(com.jcraft.jsch.KnownHosts); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { int estimateLength(); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { java.lang.String deleteSubString(java.lang.String,java.lang.String); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getNewValue(); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void addInvalidLine(java.lang.String); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.String getPropertyName(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getOldValue(); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class com.android.okio.Deadline$1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { java.lang.Object getArrayComparator(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ChildHelper { boolean unhideViewInternal(android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue$Node { boolean casItem(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { com.jcraft.jsch.MAC getHMACSHA1(); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void hideViewInternal(android.view.View); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue$Node { boolean casNext(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue$Node { void lazySetNext(java.util.concurrent.ConcurrentLinkedQueue$Node); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { int hashCode(); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void addView(android.view.View,int,boolean); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void addView(android.view.View,boolean); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class android.app.ContextImpl { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { int getType(byte[]); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { java.util.HashSet setAndArray(java.util.Set,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class java.util.concurrent.ConcurrentLinkedQueue$Node { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder(); }
-keepclassmembers class android.graphics.Point { void set(int,int); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { void <init>(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder(); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ChildHelper { android.view.View getChildAt(int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void add(com.jcraft.jsch.HostKey,com.jcraft.jsch.UserInfo); }
-keepclassmembers class android.app.ContextImpl { void startActivity(android.content.Intent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder(); }
-keepclassmembers class android.support.v7.widget.ChildHelper { android.view.View getUnfilteredChildAt(int); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class android.widget.TextView { android.content.res.ColorStateList getTextColors(); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.TextView { int getCurrentTextColor(); }
-keepclassmembers class android.support.v7.widget.ChildHelper { int getUnfilteredChildCount(); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int releaseMemory(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getDefaultPageSize(); }
-keepclassmembers class android.app.ContextImpl { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int nativeReleaseMemory(); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultSyncMode(); }
-keepclassmembers class android.support.v7.widget.ChildHelper { boolean isHidden(android.view.View); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void hide(android.view.View); }
-keepclassmembers class android.support.v7.widget.ChildHelper { void removeAllViewsUnfiltered(); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getJournalSizeLimit(); }
-keepclassmembers class android.text.format.DateFormat { java.lang.CharSequence format(java.lang.CharSequence,java.util.Date); }
-keepclassmembers class android.text.format.DateFormat { java.lang.CharSequence format(java.lang.CharSequence,long); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getWALSyncMode(); }
-keepclassmembers class com.jcraft.jsch.Session { void addChannel(com.jcraft.jsch.Channel); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { int check(java.lang.String,byte[]); }
-keepclassmembers class com.jcraft.jsch.Session { void connect(int); }
-keepclassmembers class android.support.v7.widget.ChildHelper { boolean removeViewIfHidden(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALAutoCheckpoint(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$RecyclerViewDataObserver { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALConnectionPoolSize(); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { void <init>(int,int,int); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { void <init>(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder,android.view.inputmethod.SparseRectFArray$1); }
-keepclassmembers class android.widget.CheckedTextView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.CheckedTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray { void <clinit>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { android.graphics.pdf.PdfDocument$PageInfo$Builder setContentRect(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { void <init>(java.util.HashMap); }
-keepclassmembers class android.widget.CheckedTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders { com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultJournalMode(); }
-keepclassmembers class android.support.v7.widget.ChildHelper { int getChildCount(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class android.text.format.DateFormat { java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class android.widget.CheckedTextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { com.jcraft.jsch.HostKey createHashedHostKey(java.lang.String,byte[]); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo$Builder { android.graphics.pdf.PdfDocument$PageInfo create(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void dump(java.io.OutputStream); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class android.widget.TextView { int getGravity(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$RecyclerViewDataObserver { void <init>(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$1); }
-keepclassmembers class android.transition.Visibility { int getMode(); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues,int); }
-keepclassmembers class android.transition.Visibility { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { java.lang.Object itemAt(int); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class android.transition.Visibility { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { void checkNotNull(java.lang.Object); }
-keepclassmembers class android.widget.CheckedTextView { void setChecked(boolean); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class android.widget.CheckedTextView { boolean isChecked(); }
-keepclassmembers class android.widget.AbsoluteLayout { void onMeasure(int,int); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { void enqueue(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { int inc(int); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String getMonthString(libcore.icu.LocaleData,int,int,int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { void <init>(int); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { void _add(java.lang.annotation.Annotation); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class android.transition.Visibility { void forceVisibility(int,boolean); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String getDayOfWeekString(libcore.icu.LocaleData,int,int,int); }
-keepclassmembers class android.widget.CheckedTextView { void setCheckMarkDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { com.jcraft.jsch.HostKey[] getHostKey(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { void add(java.lang.annotation.Annotation); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String getTimeZoneString(java.util.Calendar,int); }
-keepclassmembers class android.widget.CheckedTextView { void applyCheckMarkTint(); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class android.widget.AbsoluteLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String formatZoneOffset(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { java.lang.annotation.Annotation get(java.lang.Class); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { boolean add(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { void <init>(int,boolean,java.util.Collection); }
-keepclassmembers class android.widget.AbsoluteLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.CheckedTextView { void setVisibility(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { int size(); }
-keepclassmembers class android.app.Instrumentation$ActivityGoing { void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsoluteLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String getYearString(int,int); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class android.app.Instrumentation$ActivityGoing { boolean queueIdle(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { void <init>(int,boolean); }
-keepclassmembers class android.widget.CheckedTextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { java.lang.String getKnownHostsRepositoryID(); }
-keepclassmembers class android.widget.CheckedTextView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.text.format.DateFormat { int appendQuotedText(android.text.SpannableStringBuilder,int,int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void remove(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class android.widget.CheckedTextView { void updatePadding(); }
-keepclassmembers class android.widget.CheckedTextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { void <init>(); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String zeroPad(int,int); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class android.widget.CheckedTextView { void setBasePadding(boolean); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class android.transition.Visibility { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyMap(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.widget.CheckedTextView { boolean isCheckMarkAtStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotationMap { void addIfNotPresent(java.lang.annotation.Annotation); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.CheckedTextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.format.DateFormat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddPrimarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.transition.Visibility { android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class android.widget.CheckedTextView { int[] onCreateDrawableState(int); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { int size(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { void <init>(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { com.android.okhttp.ConfigAwareConnectionPool getInstance(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableStateChanged(); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { com.android.okhttp.ConnectionPool get(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { boolean hasNext(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { java.lang.Object next(); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { void <clinit>(); }
-keepclassmembers class android.widget.CheckedTextView { void <clinit>(); }
-keepclassmembers class android.transition.Visibility { android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean alwaysSupportsScreen(); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void setKnownHosts(java.io.InputStream); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean neverSupportsScreen(); }
-keepclassmembers class com.jcraft.jsch.SftpATTRS { void <init>(); }
-keepclassmembers class com.jcraft.jsch.SftpATTRS { com.jcraft.jsch.SftpATTRS getATTR(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { void <init>(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class android.content.res.CompatibilityInfo { android.content.res.CompatibilityInfo$Translator getTranslator(); }
-keepclassmembers class java.nio.LongArrayBuffer { void <init>(long[]); }
-keepclassmembers class java.nio.LongArrayBuffer { void <init>(int,long[],int,boolean); }
-keepclassmembers class android.transition.Visibility { android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.SftpATTRS { boolean isType(int); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void init(); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void run(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.content.res.CompatibilityInfo { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { java.lang.String getParentActivityName(android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class com.jcraft.jsch.SftpATTRS { long getSize(); }
-keepclassmembers class com.jcraft.jsch.SftpATTRS { boolean isDir(); }
-keepclassmembers class android.content.res.CompatibilityInfo { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean isStateful(); }
-keepclassmembers class android.content.pm.PackageManager$NameNotFoundException { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.content.pm.PackageManager$NameNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void remove(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.content.ContentProviderClient { void releaseQuietly(android.content.ContentProviderClient); }
-keepclassmembers class android.transition.Visibility { boolean areValuesChanged(android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers { void addAll(java.util.Map); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.transition.Visibility { android.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.app.ContextImpl { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setAlpha(int); }
-keepclassmembers class android.app.ContextImpl { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$7 { void <init>(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void onHotspotBoundsChanged(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getSignerInfos(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getCertificates(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void noteStateNotSaved(); }
-keepclassmembers class android.transition.Visibility { android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { int access$000(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.ContextImpl { android.content.Intent registerReceiverInternal(android.content.BroadcastReceiver,int,android.content.IntentFilter,java.lang.String,android.os.Handler,android.content.Context); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void checkCacheVersion(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(com.android.okhttp.Response); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void setup(int,float); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String map2AlgName(java.lang.String); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder statusLine(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$100(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List,org.apache.harmony.security.pkcs7.SignedData$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$400(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$500(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void selectEntries(java.security.Provider); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { org.apache.harmony.security.pkcs7.ContentInfo access$200(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean shouldDraw(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder request(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setText(char[],int,int); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder handshake(com.android.okhttp.Handshake); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$300(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder removeHeader(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder setResponseSource(com.android.okhttp.ResponseSource); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { java.io.Reader autoDetectingReader(java.io.InputStream); }
-keepclassmembers class android.app.ContextImpl { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper { void <init>(android.service.media.MediaBrowserService$Result); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { void <init>(org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder networkResponse(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { void <init>(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener); }
-keepclassmembers class android.database.DataSetObserver { void onChanged(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { boolean isOID(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { void handleServiceResponse(android.net.wifi.p2p.nsd.WifiP2pServiceResponse); }
-keepclassmembers class android.database.DataSetObserver { void onInvalidated(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { org.apache.harmony.security.asn1.ASN1UTCTime getInstance(); }
-keepclassmembers class com.android.okhttp.Response$Builder { void checkSupportResponse(java.lang.String,com.android.okhttp.Response); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <init>(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String normalize(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void getBounds(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.KeyguardManager { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { void handleUpnpServiceResponse(android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse); }
-keepclassmembers class android.widget.TextView { void setText(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class android.widget.TextView { void setText(int,android.widget.TextView$BufferType); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { void <init>(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { boolean casRight(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response build(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exit(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$1 { void <init>(android.support.v7.app.ToolbarActionBar); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { boolean indexesDeletedNode(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { boolean link(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.internal.http.StatusLine access$100(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$1 { void run(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Request access$000(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Headers$Builder access$300(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { void handleDnsSdServiceResponse(android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void setKnownHosts(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void enter(boolean); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$500(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$600(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(com.android.okhttp.Response,com.android.okhttp.Response$1); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { java.net.URL peekPath(ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { java.lang.Object access$000(android.net.wifi.p2p.WifiP2pManager$Channel,int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void sync(); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { android.net.wifi.p2p.WifiP2pManager$ChannelListener access$100(android.net.wifi.p2p.WifiP2pManager$Channel); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void createPendingHardwareExit(int,int,int); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { android.net.wifi.p2p.WifiP2pManager$ChannelListener access$102(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ChannelListener); }
-keepclassmembers class com.jcraft.jsch.KnownHosts { void sync(java.lang.String); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { void access$200(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceResponse); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { java.net.URL pushPath(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL); }
-keepclassmembers class android.view.ViewGroup$2 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler access$300(android.net.wifi.p2p.WifiP2pManager$Channel); }
-keepclassmembers class android.view.ViewGroup$2 { void run(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void performPendingDeferredStart(android.support.v4.app.Fragment); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void clearMutated(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { void handleError(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Body access$400(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void popBackStack(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompatICS { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { void processInclude(ch.qos.logback.core.joran.spi.InterpretationContext,java.net.URL); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.io.Charsets { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class org.apache.commons.io.Charsets { java.nio.charset.Charset toCharset(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.Charsets { java.nio.charset.Charset toCharset(java.nio.charset.Charset); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Handshake access$200(com.android.okhttp.Response$Builder); }
-keepclassmembers class java.lang.SecurityManager { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean isPasswordInputType(int); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void <init>(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 { void setLabelFor(java.lang.Object,android.view.View,int); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel { java.lang.Object getListener(int); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Index { boolean unlink(java.util.concurrent.ConcurrentSkipListMap$Index); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void <init>(java.lang.Object); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$700(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.InvalidFormatException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.InvalidFormatException { void <init>(java.lang.String,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jump(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void endSoftwareAnimations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.os.ParcelableCompat$CompatCreator { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.InvalidFormatException { com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran { java.util.List removeSiftElement(java.util.List); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exitSoftware(int,int,int); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void addAction(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.SecurityManager { java.lang.Class[] getClassContext(); }
-keepclassmembers class android.app.ContextImpl { android.os.DropBoxManager createDropBoxManager(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void addChild(android.view.View); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class android.app.ContextImpl { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancel(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$5$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV9$5); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelSoftwareAnimations(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class libcore.io.MemoryMappedFile { long size(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 { void setLabelFor(java.lang.Object,android.view.View); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void onTransitionStart(android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void invalidateSelf(); }
-keepclassmembers class android.app.ContextImpl { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.sift.AbstractAppenderFactoryUsingJoran { void <init>(java.util.List,java.lang.String,java.util.Map); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.TimeInterpolator access$000(); }
-keepclassmembers class android.support.v7.widget.ViewUtils { int combineMeasuredStates(int,int); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.Channel$PassiveInputStream { void close(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV11 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.AnimatorListenerAdapter access$100(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean access$302(android.graphics.drawable.RippleBackground,boolean); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ViewUtils { boolean isLayoutRtl(android.view.View); }
-keepclassmembers class android.app.StatusBarManager { void <init>(android.content.Context); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void makeOptionalFitsSystemWindows(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.media.MediaRouter { java.lang.String typesToString(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.ObjectAnimator access$202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void getBoundsInParent(android.graphics.Rect); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { int getActions(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void removeFragment(android.support.v4.app.Fragment,int,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void getBoundsInScreen(android.graphics.Rect); }
-keepclassmembers class android.media.MediaRouter { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isTouchSelecting(boolean,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { java.lang.CharSequence getClassName(); }
-keepclassmembers class android.view.ViewRootImpl$CalledFromWrongThreadException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { void <init>(com.fasterxml.jackson.annotation.JsonAutoDetect); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.Channel$PassiveInputStream { void <init>(com.jcraft.jsch.Channel,java.io.PipedOutputStream,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class javax.crypto.Mac { void <init>(javax.crypto.MacSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isFieldVisible(java.lang.reflect.Field); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class javax.crypto.Mac { java.lang.String getAlgorithm(); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isGetterVisible(java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class javax.crypto.Mac { javax.crypto.Mac getInstance(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isIsGetterVisible(java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { java.lang.CharSequence getPackageName(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void invalidateCursorPath(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isCreatorVisible(java.lang.reflect.Member); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { java.lang.Object getInfo(); }
-keepclassmembers class javax.crypto.Mac { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect); }
-keepclassmembers class android.media.MediaRouter { void selectRouteStatic(int,android.media.MediaRouter$RouteInfo,boolean); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.view.MenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class android.app.ContextImpl { void warnIfCallingFromSystemProcess(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class javax.crypto.Mac { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { boolean isSetterVisible(java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class javax.crypto.Mac { javax.crypto.MacSpi getSpi(java.security.Key); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class android.app.ContextImpl { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isClickable(); }
-keepclassmembers class android.app.ContextImpl { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi21Impl { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isFocusable(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.media.MediaRouter { void selectDefaultRouteStatic(); }
-keepclassmembers class javax.crypto.Mac { javax.crypto.MacSpi getSpi(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isFocused(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.TypeFactory defaultInstance(); }
-keepclassmembers class javax.crypto.Mac { javax.crypto.Mac getMac(java.lang.String,java.security.Provider); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType unknownType(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isLongClickable(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.app.ContextImpl { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi21Impl { boolean isConsumed(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _arrayListSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType); }
-keepclassmembers class android.media.MediaRouter { boolean matchesDeviceAddress(android.hardware.display.WifiDisplay,android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.view.MenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class javax.crypto.Mac { void init(java.security.Key); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class java.io.Console$ConsoleWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std { com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility); }
-keepclassmembers class android.app.ContextImpl { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.app.ContextImpl { int getDisplayId(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isVisibleToUser(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isSelected(); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean isAccessibilityFocused(); }
-keepclassmembers class android.app.ContextImpl { boolean isRestricted(); }
-keepclassmembers class javax.crypto.Mac { void update(byte[],int,int); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.app.ContextImpl { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class android.renderscript.Long2 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { void <init>(); }
-keepclassmembers class android.app.ContextImpl { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult { void <init>(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap); }
-keepclassmembers class android.widget.TextView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class android.app.ContextImpl { int getUserId(); }
-keepclassmembers class android.widget.TextView { int getLeftPaddingOffset(); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 add(android.renderscript.Long2,android.renderscript.Long2); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.MenuItem,android.util.AttributeSet); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.widget.TextView { int getTopPaddingOffset(); }
-keepclassmembers class android.app.ContextImpl { java.io.File getDataDirFile(); }
-keepclassmembers class android.media.MediaRouter { void addRouteStatic(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.SubMenu,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void recycle(); }
-keepclassmembers class android.app.ContextImpl { android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode[] values(); }
-keepclassmembers class android.widget.TextView { int getFudgedPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getBottomPaddingOffset(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.ContextImpl { android.app.ContextImpl createSystemContext(android.app.ActivityThread); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 add(android.renderscript.Long2,long); }
-keepclassmembers class android.widget.TextView { int getRightPaddingOffset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class android.app.ContextImpl { android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.os.IBinder); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class javax.crypto.Mac { void doFinal(byte[],int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.media.MediaRouter { void removeRouteStatic(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setAccessibilityFocused(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 sub(android.renderscript.Long2,android.renderscript.Long2); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.view.MenuInflater { android.content.Context access$100(android.view.MenuInflater); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromHttp2(int); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$300(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object access$400(android.view.MenuInflater); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setBoundsInParent(android.graphics.Rect); }
-keepclassmembers class android.app.ContextImpl { void <init>(android.app.ContextImpl,android.app.ActivityThread,android.app.LoadedApk,android.os.IBinder,android.os.UserHandle,boolean,android.view.Display,android.content.res.Configuration); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$200(); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromSpdyGoAway(int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setBoundsInScreen(android.graphics.Rect); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$500(); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 sub(android.renderscript.Long2,long); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$600(android.view.MenuInflater); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromSpdy3Rst(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setClassName(java.lang.CharSequence); }
-keepclassmembers class javax.crypto.Mac { void <clinit>(); }
-keepclassmembers class android.renderscript.Short2 { void <init>(); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setClickable(boolean); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 div(android.renderscript.Long2,android.renderscript.Long2); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 add(android.renderscript.Short2,android.renderscript.Short2); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.renderscript.Long2 { android.renderscript.Long2 div(android.renderscript.Long2,long); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.FragmentManagerNonConfig retainNonConfig(); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteSelected(int,android.media.MediaRouter$RouteInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 add(android.renderscript.Short2,short); }
-keepclassmembers class android.media.MediaRouter { void updateRoute(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo$Builder setSelectionRange(int,int); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setEnabled(boolean); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo$Builder setInsertionMarkerLocation(float,float,float,float,int); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteUnselected(int,android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo$Builder setComposingText(int,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setFocused(boolean); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteChanged(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 sub(android.renderscript.Short2,android.renderscript.Short2); }
-keepclassmembers class android.widget.TextView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteChanged(android.media.MediaRouter$RouteInfo,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setFocusable(boolean); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo$Builder setMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo$Builder addCharacterBounds(int,float,float,float,float,int); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 sub(android.renderscript.Short2,short); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.CursorAnchorInfo build(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteAdded(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.app.ContextImpl { void setFilePermissionsFromMode(java.lang.String,int,int); }
-keepclassmembers class android.app.ContextImpl { android.content.Context getOuterContext(); }
-keepclassmembers class android.widget.TextView { android.graphics.Path getUpdatedHighlightPath(); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteRemoved(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setLongClickable(boolean); }
-keepclassmembers class android.renderscript.Byte4 { void <init>(); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteGrouped(android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { int access$100(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { int access$200(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setParent(android.view.View); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { int access$300(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { java.lang.CharSequence access$400(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { float access$700(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { int access$500(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { float access$600(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 add(android.renderscript.Byte4,android.renderscript.Byte4); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { float access$900(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { float access$800(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.graphics.Matrix access$1100(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder access$1000(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 div(android.renderscript.Short2,android.renderscript.Short2); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromParameterizedClass(java.lang.Class,java.util.List); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setScrollable(boolean); }
-keepclassmembers class android.app.ContextImpl { void setOuterContext(android.content.Context); }
-keepclassmembers class android.widget.TextView { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.media.MediaRouter { void dispatchRouteVolumeChanged(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class com.jcraft.jsch.Session { void disconnect(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.TextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 add(android.renderscript.Byte4,byte); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class android.media.MediaRouter { void dispatchRoutePresentationDisplayChanged(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class java.text.DateFormat { java.lang.Object clone(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getOpacity(); }
-keepclassmembers class com.jcraft.jsch.Session { void encode(com.jcraft.jsch.Packet); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class android.renderscript.Short2 { android.renderscript.Short2 div(android.renderscript.Short2,short); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void reset(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { void <clinit>(); }
-keepclassmembers class java.text.DateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { void <init>(); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 sub(android.renderscript.Byte4,android.renderscript.Byte4); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { java.lang.String read(java.io.BufferedReader); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { void setHostPortUser(java.lang.String); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromVariable(java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setVisibleToUser(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromParamType(java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.media.MediaRouter { void updateWifiDisplayStatus(android.hardware.display.WifiDisplayStatus); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 sub(android.renderscript.Byte4,byte); }
-keepclassmembers class android.webkit.CookieSyncManager { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { java.lang.String formatCmd(java.lang.String); }
-keepclassmembers class android.app.ContextImpl { int access$000(); }
-keepclassmembers class android.app.ContextImpl { android.view.Display access$100(android.app.ContextImpl); }
-keepclassmembers class android.app.ContextImpl { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { boolean beforeExecute(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { java.util.Properties getSessionConfig(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { com.jcraft.jsch.UserInfo getUserInfo(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _fromWildcard(java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.webkit.CookieSyncManager { void setGetInstanceIsAllowed(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.jcraft.jsch.Session { java.lang.String getConfig(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { boolean initConnection(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandPubKey { boolean waitForChannelClosed(com.jcraft.jsch.ChannelExec,java.io.InputStream,java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.HostKeyRepository getHostKeyRepository(); }
-keepclassmembers class com.jcraft.jsch.Session { java.lang.String getHost(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setSource(android.view.View); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { void <init>(java.util.EnumMap); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateInstance(int,java.util.Locale); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateTimeInstance(int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat { void setSelected(boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.app.ContextImpl { java.io.File makeFilename(java.io.File,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment); }
-keepclassmembers class android.media.MediaRouter { boolean shouldShowWifiDisplay(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay); }
-keepclassmembers class com.jcraft.jsch.Session { byte[] getSessionId(); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 div(android.renderscript.Byte4,android.renderscript.Byte4); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.HierarchicType _hashMapSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.media.MediaRouter { int getWifiDisplayStatusCode(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus); }
-keepclassmembers class com.jcraft.jsch.Session { int getTimeout(); }
-keepclassmembers class com.jcraft.jsch.Session { java.lang.String getUserName(); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.UserInfo getUserInfo(); }
-keepclassmembers class java.text.DateFormat { void set24HourTimePref(boolean); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.IdentityRepository getIdentityRepository(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale); }
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment); }
-keepclassmembers class com.jcraft.jsch.Session { boolean isConnected(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getInstance(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { int size(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getTimeInstance(int,java.util.Locale); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.Buffer read(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.jcraft.jsch.Session { com.jcraft.jsch.Channel openChannel(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void saveFragmentViewState(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType _unknownType(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setBackStackIndex(int,android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.renderscript.Byte4 { android.renderscript.Byte4 div(android.renderscript.Byte4,byte); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class java.text.DateFormat { int hashCode(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.app.ContextImpl$32 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.database.AbstractWindowedCursor { java.lang.String getString(int); }
-keepclassmembers class android.app.ContextImpl$32 { void <init>(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback { void <init>(); }
-keepclassmembers class android.media.MediaRouter { android.media.MediaRouter$RouteInfo makeWifiDisplayRoute(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus); }
-keepclassmembers class java.text.DateFormat { java.util.Date parse(java.lang.String); }
-keepclassmembers class android.media.MediaRouter { boolean isWifiDisplayEnabled(android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus); }
-keepclassmembers class android.database.AbstractWindowedCursor { void <init>(); }
-keepclassmembers class android.media.MediaRouter { void updateWifiDisplayRoute(android.media.MediaRouter$RouteInfo,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplayStatus,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback { int getOrderedChildIndex(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void clear(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class android.database.AbstractWindowedCursor { long getLong(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.text.DateFormat { void checkDateStyle(int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$Callback { int getViewVerticalDragRange(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v7.app.TwilightManager { void <init>(android.content.Context,android.location.LocationManager); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void showFragment(android.support.v4.app.Fragment,int,int); }
-keepclassmembers class android.media.MediaRouter { android.hardware.display.WifiDisplay findWifiDisplay(android.hardware.display.WifiDisplay[],java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void recycle(); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.support.v7.app.TwilightManager getInstance(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class); }
-keepclassmembers class android.media.MediaRouter { android.media.MediaRouter$RouteInfo findWifiDisplayRoute(android.hardware.display.WifiDisplay); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.text.DateFormat { void checkTimeStyle(int); }
-keepclassmembers class android.database.AbstractWindowedCursor { void checkPosition(); }
-keepclassmembers class android.content.pm.PackageInfo$1 { android.content.pm.PackageInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.AbstractWindowedCursor { void closeWindow(); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.location.Location getLastKnownLocation(); }
-keepclassmembers class android.database.AbstractWindowedCursor { void setWindow(android.database.CursorWindow); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String); }
-keepclassmembers class android.content.pm.PackageInfo$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void clearMutated(); }
-keepclassmembers class com.jcraft.jsch.JSchPartialAuthException { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class com.jcraft.jsch.JSchPartialAuthException { void <init>(java.lang.String); }
-keepclassmembers class android.database.AbstractWindowedCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.media.MediaRouter { void <clinit>(); }
-keepclassmembers class android.media.MediaRouter { boolean access$000(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.JSchPartialAuthException { java.lang.String getMethods(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.location.Location getLastKnownLocationForProvider(java.lang.String); }
-keepclassmembers class android.support.v7.app.TwilightManager { boolean isStateValid(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void onResize(float,float); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { android.graphics.RectF rect(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.content.pm.PackageInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleThread { void register(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { android.content.pm.ApplicationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi24$MediaBrowserServiceAdaptor { void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$$ViewBinder { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$$ViewBinder { void bind(butterknife.ButterKnife$Finder,it.skarafaz.mercury.activity.MainActivity,java.lang.Object); }
-keepclassmembers class java.util.TreeMap$Bound { java.util.TreeMap$Bound[] values(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { android.graphics.drawable.shapes.RectShape clone(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntrySetView { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v7.app.TwilightManager { void updateState(android.location.Location); }
-keepclassmembers class java.math.BigInteger { void <init>(int,java.util.Random); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class java.util.TreeMap$Bound { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Session { void run(); }
-keepclassmembers class java.math.BigInteger { boolean isSmallPrime(int); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,java.util.Random); }
-keepclassmembers class android.support.v7.app.TwilightManager { boolean isNight(); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean); }
-keepclassmembers class android.widget.TextView { int getFadeTop(boolean); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$$ViewBinder { void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { void finish(); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void dispose(); }
-keepclassmembers class android.widget.TextView { int getFadeHeight(boolean); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { android.view.Menu getMenu(); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.content.IntentCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl { void <init>(); }
-keepclassmembers class android.support.v4.content.IntentCompat { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl { void checkIfLegalArg(android.view.View); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { void invalidate(); }
-keepclassmembers class android.support.v4.content.IntentCompat { android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String); }
-keepclassmembers class java.math.BigInteger { void <init>(int,byte[]); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi24$MediaBrowserServiceAdaptor { void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int,java.util.TreeMap$1); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntrySetView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.graphics.BitmapShader { android.graphics.Shader copy(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentUtils { java.lang.Throwable checkedException(java.lang.Throwable); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class android.support.v7.view.StandaloneActionMode { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD596 { void doFinal(byte[],int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD596 { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(long,int,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD596 { int getBlockSize(); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$3 { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$Chained { void <init>(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isFinal(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl { void setSearchableInfo(android.view.View,android.content.ComponentName); }
-keepclassmembers class android.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isInterface(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isNative(int); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class android.transition.AutoTransition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPrivate(int); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger negate(); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentUtils { java.lang.Object initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class android.net.EthernetManager$2 { void <init>(android.net.EthernetManager); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger subtract(java.math.BigInteger); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentUtils { java.lang.Object initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class android.util.SparseBooleanArray { android.util.SparseBooleanArray clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$3 { void <init>(android.support.v7.widget.ActionBarOverlayLayout); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStrict(int); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftRight(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isTransient(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isSynchronized(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isConstructor(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.lang.reflect.Modifier { java.lang.String toString(int); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class android.view.WindowId { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class); }
-keepclassmembers class android.widget.ListPopupWindow { void setPromptPosition(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void <init>(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SearchView$UpdatableTouchDelegate { void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isDropDownAlwaysVisible(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { int estimateLength(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.widget.ListPopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.widget.ListPopupWindow { void setSoftInputMode(int); }
-keepclassmembers class com.fasterxml.jackson.core.Version { void <init>(int,int,int,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void setListSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.SearchView$UpdatableTouchDelegate { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.WindowId { void <init>(android.view.IWindowId); }
-keepclassmembers class android.view.WindowId { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { int getLowestSetBit(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.widget.ListPopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.Version { void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$Chained { java.lang.String transform(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { com.fasterxml.jackson.core.Version unknownVersion(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow { void setHorizontalOffset(int); }
-keepclassmembers class java.nio.NioUtils { void freeDirectBuffer(java.nio.ByteBuffer); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteFullException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { int compareTo(com.fasterxml.jackson.core.Version); }
-keepclassmembers class java.nio.NioUtils { byte[] unsafeArray(java.nio.ByteBuffer); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class java.nio.NioUtils { int unsafeArrayOffset(java.nio.ByteBuffer); }
-keepclassmembers class java.nio.NioUtils { java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class android.widget.ListPopupWindow { int getWidth(); }
-keepclassmembers class android.widget.ScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class android.database.sqlite.SQLiteFullException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class android.widget.ListPopupWindow { void setHeight(int); }
-keepclassmembers class android.widget.ScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class android.widget.ScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class java.math.BigInteger { float floatValue(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class android.widget.ScrollView { int getMaxScrollAmount(); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class android.widget.ListPopupWindow { void setPromptView(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.SearchView$UpdatableTouchDelegate { void setBounds(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.ListPopupWindow { void show(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.math.BigInteger { double doubleValue(); }
-keepclassmembers class android.widget.ScrollView { void initScrollView(); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier$KeyState { android.view.InputEventConsistencyVerifier$KeyState obtain(int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.view.InputEventConsistencyVerifier$KeyState { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.Version { int hashCode(); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata); }
-keepclassmembers class android.widget.TextView { void resetErrorChangedFlag(); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(int); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeFactory { com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class com.fasterxml.jackson.core.Version { boolean isSnapshot(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger gcd(java.math.BigInteger); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class com.fasterxml.jackson.core.Version { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier$KeyState { void recycle(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { void <init>(com.android.okhttp.internal.spdy.NameValueBlockReader,com.android.okio.BufferedSource); }
-keepclassmembers class android.widget.ScrollView { boolean canScroll(); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier$KeyState { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.util.MapCollections$MapIterator { void <init>(android.util.MapCollections); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Segment { void <init>(float); }
-keepclassmembers class android.util.MapCollections$MapIterator { boolean hasNext(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.widget.ListPopupWindow { void dismiss(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.ScrollView { void setFillViewport(boolean); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void run(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { void close(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <init>(android.os.Parcel,android.content.pm.ConfigurationInfo$1); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.widget.ScrollView { void onMeasure(int,int); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow { void removePromptView(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.Grego { boolean isLeapYear(int); }
-keepclassmembers class java.util.Grego { int monthLength(int,int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger modInverse(java.math.BigInteger); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object getKey(); }
-keepclassmembers class android.widget.ListPopupWindow { void setSelection(int); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object getValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class android.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean canScroll(); }
-keepclassmembers class android.util.MapCollections$MapIterator { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { com.fasterxml.jackson.databind.PropertyName getWrapperName(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanProperty$Std { com.fasterxml.jackson.databind.BeanProperty$Std withType(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { ch.qos.logback.classic.selector.ContextSelector getContextSelector(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { ch.qos.logback.classic.selector.ContextSelector dynamicalContextSelector(ch.qos.logback.classic.LoggerContext,java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int clamp(int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void doScrollY(int); }
-keepclassmembers class android.widget.ScrollView { boolean executeKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.widget.ScrollView { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { void init(ch.qos.logback.classic.LoggerContext,java.lang.Object); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger mod(java.math.BigInteger); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter { void <init>(com.fasterxml.jackson.core.SerializableString); }
-keepclassmembers class android.widget.ListPopupWindow { java.lang.Object getSelectedItem(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void endDrag(); }
-keepclassmembers class ch.qos.logback.classic.util.ContextSelectorStaticBinder { ch.qos.logback.classic.util.ContextSelectorStaticBinder getSingleton(); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void ensureGlows(); }
-keepclassmembers class android.widget.ListPopupWindow { int getSelectedItemPosition(); }
-keepclassmembers class android.widget.ListPopupWindow { long getSelectedItemId(); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.util.MapCollections$MapIterator { int hashCode(); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { android.view.View findFocusableViewInBounds(boolean,int,int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream); }
-keepclassmembers class android.widget.ListPopupWindow { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.util.Grego { int[] dayToFields(long,int[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformHeight(int,int); }
-keepclassmembers class android.widget.ScrollView { boolean inChild(int,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { void <init>(com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class java.util.Grego { long floorDivide(long,long,long[]); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformWidth(int,int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class android.widget.ScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.util.Grego { int[] timeToFields(long,int[]); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.ScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Grego { void <clinit>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.util.AbstractList$SubAbstractListRandomAccess { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean); }
-keepclassmembers class android.widget.ScrollView { void recycleVelocityTracker(); }
-keepclassmembers class android.graphics.BitmapFactory { boolean nativeIsSeekable(java.io.FileDescriptor); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.ListPopupWindow { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getVerticalScrollFactorCompat(); }
-keepclassmembers class android.widget.ScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { void <clinit>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.math.BigInteger { int multiplyByInt(int[],int[],int,int); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getSelectedView(); }
-keepclassmembers class android.widget.ListPopupWindow { void setListItemExpandMax(int); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class java.math.BigInteger { int inplaceAdd(int[],int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initScrollView(); }
-keepclassmembers class android.graphics.Rect { java.lang.String flattenToString(); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatLollipop { void z(android.view.View,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.app.ContextImpl$54 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$54 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,boolean); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class android.graphics.Rect { int centerY(); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void recycleVelocityTracker(); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.widget.ScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean scrollAndFocus(int,int,int); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.math.BigInteger { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl { void <init>(); }
-keepclassmembers class android.graphics.Rect { void offsetTo(int,int); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.graphics.Rect { void inset(int,int); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class java.math.BigInteger { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { boolean isAccessible(); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doDestroy(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void <init>(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void _serializeUnwrapped(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.jcraft.jsch.Session { void sendKeepAliveMsg(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(java.lang.reflect.AccessibleObject[],boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class android.graphics.Rect { boolean contains(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.jcraft.jsch.Session { void setConfig(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$DropDownListView access$600(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.PopupWindow access$1100(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportNextStart(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.jcraft.jsch.Session { void setConfig(java.util.Hashtable); }
-keepclassmembers class android.widget.ListPopupWindow { android.os.Handler access$1300(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean arrowScroll(int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportStart(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.graphics.Rect { boolean intersect(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void doFrame(long); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { void configureApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doRetain(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void <init>(com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getBaseline(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { void dispatchChildInsets(android.view.View,java.lang.Object,int); }
-keepclassmembers class java.util.Formatter { libcore.icu.NativeDecimalFormat getDecimalFormat(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int); }
-keepclassmembers class com.jcraft.jsch.Session { void setConfig(java.util.Properties); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 { int getTopInset(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class com.jcraft.jsch.Session { void setHostKeyAlias(java.lang.String); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class android.graphics.Rect { boolean intersects(int,int,int,int); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class android.support.v7.widget.TintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class com.jcraft.jsch.Session { void setHostKeyRepository(com.jcraft.jsch.HostKeyRepository); }
-keepclassmembers class android.util.MapCollections$EntrySet { void <init>(android.util.MapCollections); }
-keepclassmembers class com.jcraft.jsch.Session { void setIdentityRepository(com.jcraft.jsch.IdentityRepository); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]); }
-keepclassmembers class android.support.v7.widget.TintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class com.jcraft.jsch.Session { void setPassword(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStop(); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getDividerWidth(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void computeScroll(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getLocationOffset(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla { void <init>(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getNextLocationOffset(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla { boolean canCreateUsingDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addIncompeteParameter(com.fasterxml.jackson.databind.introspect.AnnotatedParameter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla { boolean canInstantiate(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla { java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getVirtualChildCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.util.MapCollections$EntrySet { boolean isEmpty(); }
-keepclassmembers class com.jcraft.jsch.Session { int setPortForwardingL(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class android.util.MapCollections$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class com.jcraft.jsch.Session { int setPortForwardingL(java.lang.String,int,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector$Vanilla { java.lang.String getValueTypeDesc(); }
-keepclassmembers class android.util.MapCollections$EntrySet { int size(); }
-keepclassmembers class android.graphics.Rect { void readFromParcel(android.os.Parcel); }
-keepclassmembers class com.jcraft.jsch.Session { int setPortForwardingL(java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class android.graphics.Rect { void scale(float); }
-keepclassmembers class java.util.Formatter { void checkNotClosed(); }
-keepclassmembers class com.jcraft.jsch.Session { int setPortForwardingL(java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory,int); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView$CheckForLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.AbsListView$CheckForLongPress { void run(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void nativeFinishInit(); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.internal.os.RuntimeInit { int Clog_e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class com.jcraft.jsch.Session { int setPortForwardingR(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.AbsListView$CheckForLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void finishRetain(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void commonInit(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.Formatter { void doFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.internal.os.RuntimeInit { java.lang.String getDefaultUserAgent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer { void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.JsonParser createParser(java.io.File); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { boolean hasRunningLoaders(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.widget.ScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class java.util.Formatter { void outputCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class java.util.Formatter { java.lang.Object getArgument(java.lang.Object[],int,java.util.Formatter$FormatSpecifierParser,java.lang.Object,boolean); }
-keepclassmembers class android.widget.ScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transform(java.util.Formatter$FormatToken,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.Session { void setServerAliveInterval(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$1 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void main(java.lang.String[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath); }
-keepclassmembers class com.jcraft.jsch.Session { void setTimeout(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.ScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$1 { void execute(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.jcraft.jsch.Session { void setUserInfo(com.jcraft.jsch.UserInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { boolean isClipPath(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void redirectLogStreams(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.jcraft.jsch.Session { void write(com.jcraft.jsch.Packet); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureHorizontal(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean executeKeyEvent(android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double { com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void setApplicationObject(android.os.IBinder); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class java.util.Formatter { java.util.IllegalFormatConversionException badArgumentType(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { boolean access$000(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { boolean hasDefaultCreator(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { boolean access$002(boolean); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder access$100(); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class com.android.internal.os.RuntimeInit { int access$200(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence localizeDigits(java.lang.CharSequence); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Session { void write(com.jcraft.jsch.Packet,com.jcraft.jsch.Channel,int); }
-keepclassmembers class org.apache.harmony.xml.dom.DOMImplementationImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.CreatorCollector { com.fasterxml.jackson.databind.introspect.AnnotatedWithParams verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence insertGrouping(java.lang.CharSequence); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void fling(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean fullScroll(int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBoolean(); }
-keepclassmembers class android.widget.ScrollView { int getScrollRange(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue$Request { void <init>(com.jcraft.jsch.ChannelSftp$RequestQueue); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromHashCode(); }
-keepclassmembers class android.widget.ScrollView { android.view.View findFocusableViewInBounds(boolean,int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class org.apache.harmony.xml.dom.DOMImplementationImpl { org.apache.harmony.xml.dom.DOMImplementationImpl getInstance(); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getMaxScrollAmount(); }
-keepclassmembers class android.support.v4.media.VolumeProviderCompatApi21$1 { void <init>(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getNestedScrollAxes(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void updateHostController(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromCharacter(); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getScrollRange(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean hasNestedScrollingParent(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { boolean requiresPropertyOrdering(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromPercent(); }
-keepclassmembers class android.widget.ScrollView { boolean pageScroll(int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence padding(java.lang.CharSequence,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void <init>(java.lang.Class); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getDisabledThemeAttrColor(android.content.Context,int); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void <init>(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$2 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePattern(java.lang.String); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$2 { void onAnimationEnd(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer { void serialize(java.lang.Float,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$7 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandMessage); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onAttachedToWindow(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.ScrollView { boolean fullScroll(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$7 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int,float); }
-keepclassmembers class ch.qos.logback.core.pattern.FormattingConverter { void <init>(); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int); }
-keepclassmembers class android.widget.ScrollView { boolean scrollAndFocus(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder toStringBuilder(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.util.TypedValue getTypedValue(); }
-keepclassmembers class java.io.ObjectInputStream$GetField { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePatternCharacter(char); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder wrapParentheses(java.lang.StringBuilder); }
-keepclassmembers class android.database.ContentObserver { android.database.IContentObserver getContentObserver(); }
-keepclassmembers class android.view.inputmethod.CompletionInfo$1 { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.text.DateFormatSymbols); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { void <init>(com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { boolean couldDeserialize(); }
-keepclassmembers class android.widget.ScrollView { boolean arrowScroll(int); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.util.Locale); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder { void <init>(android.content.pm.ProviderInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromInteger(); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { java.lang.Class[] findViews(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder { void <init>(android.os.Parcel); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Object clone(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String defaultPattern(); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder { void <init>(android.os.Parcel,android.app.IActivityManager$1); }
-keepclassmembers class java.text.SimpleDateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.IActivityManager$ContentProviderHolder { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(); }
-keepclassmembers class com.android.internal.os.RuntimeInit$1 { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class com.android.internal.os.RuntimeInit$1 { java.lang.String getId(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition { boolean isTypeId(); }
-keepclassmembers class java.text.SimpleDateFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void run(); }
-keepclassmembers class android.widget.Filter { void setDelayer(android.widget.Filter$Delayer); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class java.text.SimpleDateFormat { java.text.AttributedCharacterIterator formatToCharacterIteratorImpl(java.util.Date); }
-keepclassmembers class android.widget.ScrollView { void doScrollY(int); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.ScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { int getIndex(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer formatImpl(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromNull(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBigInteger(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onMeasure(int,int); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$200(android.widget.Filter); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.widget.Filter { java.lang.Object access$300(android.widget.Filter); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$400(android.widget.Filter); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$402(android.widget.Filter,android.os.Handler); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { boolean hasSingleElement(float[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromDateTime(); }
-keepclassmembers class android.widget.ScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void append(java.lang.StringBuffer,java.text.FieldPosition,java.util.List,char,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { boolean isEmpty(float[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer { void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.ViewConfiguration { int getKeyRepeatTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getKeyRepeatDelay(); }
-keepclassmembers class java.util.Formatter { boolean appendT(java.lang.StringBuilder,char,java.util.Calendar); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class android.widget.ScrollView { void computeScroll(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledPagingTouchSlop(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class android.widget.ScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumDrawingCacheSize(); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat { void setSearchableInfo(android.view.View,android.content.ComponentName); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl { void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class java.util.Collections { void copy(java.util.List,java.util.List); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class android.view.ViewConfiguration { boolean hasPermanentMenuKey(); }
-keepclassmembers class android.widget.ScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { int getIVSize(); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { void init(int,byte[],byte[]); }
-keepclassmembers class java.util.Collections { void fill(java.util.List,java.lang.Object); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.os.Trace { void nativeTraceCounter(long,java.lang.String,int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeSetAppTracingAllowed(boolean); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.os.Trace { void traceCounter(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void setAppTracingAllowed(boolean); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void appendDayOfWeek(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int measureNullChild(int); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.widget.ScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureVertical(int,int); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.widget.ScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.os.Trace { void beginSection(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { boolean isCBC(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMonth(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.os.Trace { void endSection(); }
-keepclassmembers class com.jcraft.jsch.jce.TripleDESCTR { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.os.Trace { long access$000(); }
-keepclassmembers class java.util.Collections { void reverse(java.util.List); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { void <init>(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class android.widget.ScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { void setInstance(org.apache.harmony.luni.internal.util.TimezoneGetter); }
-keepclassmembers class java.util.Formatter { int to12Hour(int); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class java.util.Formatter { void appendLocalized(java.lang.StringBuilder,long,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void access$000(java.util.ArrayList,android.view.View); }
-keepclassmembers class android.widget.ScrollView { void requestLayout(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void access$100(android.transition.Transition,android.transition.Transition,java.util.ArrayList,boolean); }
-keepclassmembers class android.widget.ScrollView { void onDetachedFromWindow(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromSpecialNumber(double); }
-keepclassmembers class android.widget.ScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumericTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTargets(java.lang.Object,java.util.ArrayList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMilliseconds(java.lang.StringBuffer,int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromFloat(); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class java.util.Collections { java.util.List singletonList(java.lang.Object); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumber(java.lang.StringBuffer,int,int); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTransitionTargets(java.lang.Object,java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList); }
-keepclassmembers class android.widget.ScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date error(java.text.ParsePosition,int,java.util.TimeZone); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,java.lang.String); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.widget.ScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class java.text.SimpleDateFormat { int hashCode(); }
-keepclassmembers class java.util.Formatter { boolean startsWithMinusSign(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void fling(int); }
-keepclassmembers class java.text.SimpleDateFormat { int parse(java.lang.String,int,char,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class java.util.Formatter { void transformE(java.lang.StringBuilder); }
-keepclassmembers class android.widget.ScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class android.app.PendingIntent { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.ORAddress); }
-keepclassmembers class java.util.Collections { void rotate(java.util.List,int); }
-keepclassmembers class android.app.PendingIntent { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.app.PendingIntent { java.lang.String toString(); }
-keepclassmembers class android.widget.ScrollView { void endDrag(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.widget.ScrollView { void scrollTo(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(byte[]); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,byte[]); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.widget.ScrollView { void setOverScrollMode(int); }
-keepclassmembers class java.util.Formatter { void transformG(java.lang.StringBuilder); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.widget.ScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void beginDelayedTransition(android.view.ViewGroup,java.lang.Object); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.os.IBinder); }
-keepclassmembers class android.util.Slog { int v(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void bfsAddViewChildren(java.util.List,android.view.View); }
-keepclassmembers class android.widget.ScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.util.Slog { int v(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.ScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object getName(); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.SimpleDateFormat { int parseFractionalSeconds(java.lang.String,int,int); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.ScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.util.Slog { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.util.Slog { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseDayOfWeek(java.lang.String,int,boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class android.util.Slog { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View); }
-keepclassmembers class android.util.Slog { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { int hashCode(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseMonth(java.lang.String,int,int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class android.widget.ScrollView { int clamp(int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void captureTransitioningViews(java.util.ArrayList,android.view.View); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.widget.ScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean pageScroll(int); }
-keepclassmembers class android.widget.ScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.ArrayList list(java.util.Enumeration); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <init>(); }
-keepclassmembers class java.util.Formatter { void transformF(java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertyDescriptor { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertyDescriptor { java.lang.Class getPropertyType(); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertyDescriptor { void setPropertyType(java.lang.Class); }
-keepclassmembers class java.util.Collections { java.util.Set synchronizedSet(java.util.Set); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void putString(java.nio.ByteBuffer,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertyDescriptor { void setReadMethod(java.lang.reflect.Method); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertyDescriptor { void setWriteMethod(java.lang.reflect.Method); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { int type(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { android.content.Context getContext(); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { boolean isExternalStorageReadable(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(); }
-keepclassmembers class java.util.Formatter { void transformA(java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class java.util.Collections { java.util.Collection unmodifiableCollection(java.util.Collection); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object cloneTransition(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { boolean isExternalStorageWritable(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.shapes.Shape); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { java.lang.String name(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestLayout(); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { boolean storagePermissionGranted(); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { void <init>(android.content.res.AssetFileDescriptor); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean containedBeforeIndex(java.util.List,android.view.View,int); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class it.skarafaz.mercury.MercuryApplication { void onCreate(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollTo(int,int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <clinit>(); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { int available(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Number parseNumber(int,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void excludeSharedElementViews(java.lang.Object,java.lang.Object,java.lang.Object,java.util.ArrayList,boolean); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class android.widget.Spinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setPadding(int,int,int,int); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcel,android.widget.Spinner$1); }
-keepclassmembers class java.util.Formatter { void <clinit>(); }
-keepclassmembers class android.widget.Spinner$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void setFillViewport(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void excludeTarget(java.lang.Object,android.view.View,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void excludeViews(android.transition.Transition,android.transition.Transition,java.util.ArrayList,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { int parseNumber(int,java.lang.String,int,int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$4 { void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setIntrinsicWidth(int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setIntrinsicHeight(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseText(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int modulateAlpha(int,int); }
-keepclassmembers class java.util.Collections { java.util.Set emptySet(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void findNamedViews(java.util.Map,android.view.View); }
-keepclassmembers class java.util.Collections { java.util.Map emptyMap(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class java.util.Collections { java.util.Enumeration emptyEnumeration(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread { void <init>(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread { void fallbackConfiguration(ch.qos.logback.classic.LoggerContext,java.util.List,java.net.URL); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.TextView { void computeScroll(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerAction { void <init>(); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class java.text.SimpleDateFormat { int parseTimeZone(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] getEncoded(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { android.graphics.Rect getBoundsOnScreen(android.view.View); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean startNestedScroll(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkDNS(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread { void performXMLConfiguration(ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getAlpha(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void stopNestedScroll(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry,java.util.LinkedHashMap$LinkedEntry,java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setBaselineAligned(boolean); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getOpacity(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread { void run(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkURI(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setDither(boolean); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class java.text.SimpleDateFormat { void set2DigitYearStart(java.util.Date); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setGravity(int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.util.Collections { int secondaryHash(java.lang.Object); }
-keepclassmembers class java.nio.channels.AlreadyConnectedException { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int[] oidStrToInts(java.lang.String); }
-keepclassmembers class java.util.Collections { int secondaryIdentityHash(java.lang.Object); }
-keepclassmembers class java.util.Collections { int secondaryHash(int); }
-keepclassmembers class android.widget.TextView { void setSingleLine(); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void removeTargets(java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class android.widget.ScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class java.util.Collections { int roundUpToPowerOfTwo(int); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class java.util.Collections { java.util.Iterator access$000(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$2 { void <init>(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setOrientation(int); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void <clinit>(); }
-keepclassmembers class android.view.View$2 { boolean apply(android.view.View); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setEpicenter(java.lang.Object,android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.View$2 { boolean apply(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] ipStrToBytes(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$DisallowIntercept { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$DisallowIntercept { void run(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String toPattern(); }
-keepclassmembers class java.text.SimpleDateFormat { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String ipBytesToStr(byte[]); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { java.lang.String getAllInput(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { java.lang.String getRemainingInput(); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void drawableStateChanged(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object wrapSharedElementTransition(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int access$100(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { java.lang.String nextToken(); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$5 { void <init>(int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi21 { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class java.text.SimpleDateFormat { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer { void pushBack(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void updateShape(); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class com.jcraft.jsch.JSch { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$6 { void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi21 { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(com.fasterxml.jackson.core.Version); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] getEncoded(); }
-keepclassmembers class it.skarafaz.mercury.activity.LogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(java.lang.String,com.fasterxml.jackson.core.Version); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int hashCode(); }
-keepclassmembers class it.skarafaz.mercury.activity.LogActivity { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.Certificate$1); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.TBSCertificate access$100(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void clearMutated(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.List); }
-keepclassmembers class java.lang.StackTraceElement { void <init>(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.nfc.NfcEvent { void <init>(android.nfc.NfcAdapter); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring { void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void initializeWithState(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] access$300(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources,android.graphics.drawable.ShapeDrawable$1); }
-keepclassmembers class java.lang.StackTraceElement { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring { void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$1); }
-keepclassmembers class java.lang.StackTraceElement { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { boolean checkTag(int); }
-keepclassmembers class android.transition.Slide$2 { void <init>(); }
-keepclassmembers class android.widget.TextView { void addTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { void <init>(java.lang.String,com.fasterxml.jackson.core.Version,java.util.Map,java.util.List); }
-keepclassmembers class java.lang.StackTraceElement { java.lang.String getClassName(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.transition.Slide$2 { float getGoneX(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring { void handleResolvedForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.StackTraceElement { java.lang.String getFileName(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertList$1); }
-keepclassmembers class java.lang.StackTraceElement { int getLineNumber(); }
-keepclassmembers class java.lang.StackTraceElement { java.lang.String getMethodName(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class com.jcraft.jsch.JSch { void <init>(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class java.lang.StackTraceElement { int hashCode(); }
-keepclassmembers class com.jcraft.jsch.JSch { java.lang.String getConfig(java.lang.String); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.lang.StackTraceElement { boolean isNativeMethod(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int access$400(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class java.lang.StackTraceElement { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.JSch { com.jcraft.jsch.Logger getLogger(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$700(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$800(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.List access$900(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { java.util.EnumSet constructSet(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class com.jcraft.jsch.JSch { void addIdentity(com.jcraft.jsch.Identity,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 { java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.net.Network$NetworkBoundSocketFactory { void <init>(android.net.Network,int); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { void <init>(java.lang.String); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { void <init>(android.util.MapCollections); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void <init>(int,com.android.okhttp.internal.spdy.SpdyConnection,boolean,boolean,int,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder { long[] _constructArray(int); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatApi20 { android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class com.jcraft.jsch.JSch { void addIdentity(java.lang.String); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class com.jcraft.jsch.JSch { void addIdentity(java.lang.String,byte[]); }
-keepclassmembers class android.widget.TextView { void handleTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { void <init>(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { boolean checkAddWithMethodSignature(java.lang.reflect.Method,java.lang.Class); }
-keepclassmembers class android.view.animation.AlphaAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { boolean isCachable(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer { com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.jcraft.jsch.JSch { void addSession(com.jcraft.jsch.Session); }
-keepclassmembers class android.text.style.CharacterStyle$Passthrough { void <init>(android.text.style.CharacterStyle); }
-keepclassmembers class com.jcraft.jsch.JSch { com.jcraft.jsch.ConfigRepository getConfigRepository(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class com.jcraft.jsch.JSch { com.jcraft.jsch.HostKeyRepository getHostKeyRepository(); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean hasAlpha(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX { void <init>(float,float); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { boolean checkAdd(java.lang.reflect.Method,java.lang.Class); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX { void <init>(me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean isOpen(); }
-keepclassmembers class com.jcraft.jsch.JSch { com.jcraft.jsch.IdentityRepository getIdentityRepository(); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(float,float); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { void initForSubscriber(java.lang.Class); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean isLocallyInitiated(); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { void moveToSuperclass(); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field,int); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.JSch { com.jcraft.jsch.Session getSession(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.text.FieldPosition { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { java.util.List getResponseHeaders(); }
-keepclassmembers class android.support.v4.app.BackStackRecord$1 { void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder$FindState { void recycle(); }
-keepclassmembers class java.text.FieldPosition { int getBeginIndex(); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class android.support.v4.app.BackStackRecord$1 { android.view.View getView(); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class java.text.FieldPosition { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(byte[]); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class com.jcraft.jsch.JSch { boolean removeSession(com.jcraft.jsch.Session); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[]); }
-keepclassmembers class java.text.FieldPosition { java.lang.String toString(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class java.lang.Throwable { void setStackTrace(java.lang.StackTraceElement[]); }
-keepclassmembers class android.webkit.WebView$PrivateAccess { void <init>(android.webkit.WebView); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class com.jcraft.jsch.JSch { void setIdentityRepository(com.jcraft.jsch.IdentityRepository); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.lang.Throwable { int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class com.jcraft.jsch.JSch { void setKnownHosts(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void setReadTimeout(long); }
-keepclassmembers class android.widget.TextView { void onFinishTemporaryDetach(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { long getReadTimeoutMillis(); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getInternalStackTrace(); }
-keepclassmembers class android.widget.TextView { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onStartTemporaryDetach(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okio.Source getSource(); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okio.Sink getSink(); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[],org.apache.harmony.security.x509.PolicyConstraints$1); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { int getStreamVolume(int); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void close(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void closeLater(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Appendable,java.lang.String,java.lang.StackTraceElement[]); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.net.Uri$1 { android.net.Uri createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean closeInternal(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.HashMap,java.util.HashMap); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { int getStreamMaxVolume(int); }
-keepclassmembers class android.widget.TextView { void clearComposingText(); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void <init>(android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ClassIntrospector { void <init>(); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { boolean getBoolean(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { java.lang.String _defaultTypeId(java.lang.Class); }
-keepclassmembers class android.net.Uri$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getColor(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveHeaders(java.util.List,com.android.okhttp.internal.spdy.HeadersMode); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File,boolean,java.io.File,dalvik.system.DexFile); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { float getDimension(int); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class android.app.QueuedWork { void add(java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$Transferer { void <init>(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getDimensionPixelSize(int); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.app.QueuedWork { void waitToFinish(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class android.app.QueuedWork { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable[] getSuppressed(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveData(com.android.okio.BufferedSource,int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.style.CharacterStyle { android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle); }
-keepclassmembers class java.lang.Throwable { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveFin(); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class java.lang.Throwable { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveRstStream(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getInteger(int); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleModule { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void cancelStreamIfNecessary(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Animators { void <clinit>(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class dalvik.system.DexPathList$Element { dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { java.lang.String getSimpleName(); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.reflect.Field { void <init>(java.lang.reflect.ArtField); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { boolean hasSimpleName(); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceEntryName(int); }
-keepclassmembers class java.lang.reflect.Field { int getModifiers(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void addBytesToWriteWindow(long); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { boolean hasSimpleName(java.lang.String); }
-keepclassmembers class android.widget.TextView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceName(int); }
-keepclassmembers class java.lang.reflect.Field { boolean isSynthetic(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.util.SparseIntArray { void removeAt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { int hashCode(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceTypeName(int); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { com.fasterxml.jackson.databind.PropertyName internSimpleName(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getType(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Field { int getDexFieldIndex(); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { int access$600(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class java.lang.reflect.Field { int getOffset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { long access$700(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { boolean isEmpty(); }
-keepclassmembers class java.lang.reflect.Field { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okhttp.internal.spdy.ErrorCode access$800(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { java.lang.String idFromValue(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void access$900(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence getText(int); }
-keepclassmembers class java.lang.reflect.Field { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { java.lang.Object readResolve(); }
-keepclassmembers class android.widget.SearchView$1 { void <init>(android.widget.SearchView); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void <clinit>(); }
-keepclassmembers class android.widget.SearchView$1 { void run(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Animators { android.animation.Animator createIndeterminate(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { com.fasterxml.jackson.core.SerializableString simpleAsEncoded(com.fasterxml.jackson.databind.cfg.MapperConfig); }
-keepclassmembers class android.util.SparseIntArray { int indexOfKey(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest); }
-keepclassmembers class android.widget.TextView { float getRightFadingEdgeStrength(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.reflect.Type getGenericType(); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { java.lang.String toString(); }
-keepclassmembers class android.util.SparseIntArray { void clear(); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void cacheWrite(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class java.lang.reflect.Field { java.lang.annotation.Annotation[] getDeclaredAnnotations(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void endOfInput(boolean); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyName { com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Animators { android.animation.Animator createIndeterminateHorizontalRect1(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object,boolean); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { void <init>(int,java.lang.String[]); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void unexpectedEndOfInput(); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getAlpha(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { void <init>(); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigToNative(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class org.slf4j.MDC { void <clinit>(); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { void playSoundEffect(int); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object,boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { long getFrameTime(); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { int estimateLength(); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object,boolean); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Animators { android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.slf4j.MDC { org.slf4j.spi.MDCAdapter bwCompatibleGetMDCAdapterFromBinder(); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver { com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class org.apache.harmony.xml.dom.EntityReferenceImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.ObjectCodec { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object); }
-keepclassmembers class org.slf4j.MDC { void clear(); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object); }
-keepclassmembers class org.apache.harmony.xml.dom.EntityReferenceImpl { short getNodeType(); }
-keepclassmembers class org.slf4j.MDC { java.lang.String get(java.lang.String); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void <init>(java.util.ServiceLoader,java.util.ServiceLoader); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Animators { android.animation.Animator createIndeterminateRotation(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte,boolean); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getTranslationX(android.view.View); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { boolean hasNext(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.ObjectCodec { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double,boolean); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { java.lang.Object next(); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float,boolean); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer { void <clinit>(); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void debug(java.lang.String,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void readClass(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short,boolean); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer { java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setActivated(android.view.View,boolean); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void error(java.lang.String); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleLocked(); }
-keepclassmembers class java.nio.SelectorImpl { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setAlpha(android.view.View,float); }
-keepclassmembers class java.lang.reflect.Field { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void error(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { java.lang.String getName(); }
-keepclassmembers class org.slf4j.helpers.NOPLogger { void info(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.pm.ActivityInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { void <init>(); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void <init>(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void failed(com.android.okhttp.Route); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { void setBluetoothA2dpOn(boolean); }
-keepclassmembers class com.android.okhttp.RouteDatabase { boolean shouldPostpone(com.android.okhttp.Route); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void connected(com.android.okhttp.Route); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class android.content.pm.ActivityInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { boolean isBluetoothA2dpOn(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.content.pm.ActivityInfo { void <init>(android.os.Parcel,android.content.pm.ActivityInfo$1); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationX(android.view.View,float); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void checkValidJavaClassName(java.lang.String); }
-keepclassmembers class android.net.wifi.IRttManager$Stub { android.net.wifi.IRttManager asInterface(android.os.IBinder); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.spi.EventPlayer { void <init>(ch.qos.logback.core.joran.spi.Interpreter); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.EventPlayer { void addEventsDynamically(java.util.List,int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void doFinal(byte[],int); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.logging.LogManager { void checkAccess(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.EventPlayer { java.util.List getCopyOfPlayerEventList(); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class com.android.internal.telephony.ITelephonyRegistry$Stub { com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.BufferedSource buffer(com.android.okio.Source); }
-keepclassmembers class ch.qos.logback.core.joran.spi.EventPlayer { void play(java.util.List); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$4 { void <init>(int); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.BufferedSink buffer(com.android.okio.Sink); }
-keepclassmembers class com.android.okio.Okio { void copy(com.android.okio.OkBuffer,long,long,java.io.OutputStream); }
-keepclassmembers class java.net.URL { void fixURL(boolean); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void init(byte[]); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { int getBlockSize(); }
-keepclassmembers class android.view.ViewRootImpl$TraversalRunnable { void run(); }
-keepclassmembers class java.util.logging.LogManager { void addToFamilyTree(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$QueuedInputEvent { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$TraversalRunnable { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.ViewRootImpl$QueuedInputEvent { boolean shouldSkipIme(); }
-keepclassmembers class android.net.NetworkPolicyManager { void <init>(android.net.INetworkPolicyManager); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.Sink sink(java.io.OutputStream); }
-keepclassmembers class android.net.NetworkPolicyManager { android.net.NetworkPolicyManager from(android.content.Context); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.Source source(java.io.InputStream); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$QueuedInputEvent { boolean shouldSendToSynthesizer(); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void setH(java.security.MessageDigest); }
-keepclassmembers class android.app.ContextImpl$57 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$57 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.app.ContextImpl$26 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void update(int); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup$MapStrLookup { void <init>(java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup$MapStrLookup { java.lang.String lookup(java.lang.String); }
-keepclassmembers class android.app.ContextImpl$26 { void <init>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMAC { void update(byte[],int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { void finish(java.lang.Object); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean isFinished(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.Random { void <init>(); }
-keepclassmembers class java.net.URL { void setupStreamHandler(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class com.jcraft.jsch.jce.Random { void fill(byte[],int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.app.usage.UsageEvents$1 { void <init>(); }
-keepclassmembers class java.nio.channels.spi.AbstractSelector { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP$ConfigLHost { void <init>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onRelease(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEvent(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean { java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View); }
-keepclassmembers class java.util.logging.LogManager { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory { com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean inChild(int,int); }
-keepclassmembers class java.nio.SelectorImpl { void setPollFd(int,java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Object getInstanceByClass(java.lang.String); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class android.view.ViewRootImpl$QueuedInputEvent { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { void <init>(java.lang.String,ch.qos.logback.core.pattern.util.IEscapeUtil); }
-keepclassmembers class java.net.URL { java.net.URI toURI(); }
-keepclassmembers class android.widget.TextView { boolean performLongClick(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.net.URL { java.net.URI toURILenient(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class java.util.logging.LogManager { void readConfigurationImpl(java.io.InputStream); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { void <init>(java.lang.String); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class java.net.URL { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String getMessage(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle { void <init>(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.FormattingNode COMPOSITE(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$1 { void <init>(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { int _objectIdIndex(int); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.Exception); }
-keepclassmembers class android.widget.TextView { void stopSelectionActionMode(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.FormattingNode C(); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.Exception getException(); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void assignNativeIds(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class ch.qos.logback.classic.android.AndroidManifestPropertiesUtil { void setAndroidProperties(ch.qos.logback.core.Context); }
-keepclassmembers class java.net.URL { int getEffectivePort(); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Node E(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$1 { android.graphics.Rect onGetEpicenter(android.transition.Transition); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class com.android.okhttp.Response { void <init>(com.android.okhttp.Response$Builder); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Node Eopt(); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { int _typeIdIndex(int); }
-keepclassmembers class java.net.URL { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Request request(); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String statusLine(); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class android.widget.SearchView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Response { int code(); }
-keepclassmembers class android.widget.SearchView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.okhttp.Response { int httpMinorVersion(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Node T(); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Handshake handshake(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.FormattingNode SINGLE(); }
-keepclassmembers class android.widget.SearchView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.SearchView { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void set(int,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String header(java.lang.String); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String header(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void setParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.widget.TextView { void paste(int,int); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Headers headers(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Body body(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { void advanceTokenPointer(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Builder newBuilder(); }
-keepclassmembers class java.util.logging.LogManager { void setLevelRecursively(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.Converter compile(ch.qos.logback.core.pattern.parser.Node,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { void expectNotNull(ch.qos.logback.core.pattern.parser.Token,java.lang.String); }
-keepclassmembers class android.media.tv.TvInputInfo$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class android.media.tv.TvInputInfo$1 { android.media.tv.TvInputInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Token getCurentToken(); }
-keepclassmembers class android.media.tv.TvInputInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.Response { boolean validate(com.android.okhttp.Response); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Token getNextToken(); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Parser { ch.qos.logback.core.pattern.parser.Node parse(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.CacheControl cacheControl(); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.internal.http.StatusLine access$1200(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Handshake access$1300(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Headers access$1400(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Body access$1500(com.android.okhttp.Response); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$ParsedHeaders parsedHeaders(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1700(com.android.okhttp.Response); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Values { void <init>(java.util.concurrent.ConcurrentNavigableMap); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1800(com.android.okhttp.Response); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Request access$1100(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { void <init>(com.android.okhttp.Response$Builder,com.android.okhttp.Response$1); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class android.widget.TextView { boolean isInBatchEditMode(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1600(com.android.okhttp.Response); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class android.media.IAudioService$Stub$Proxy { boolean isCameraSoundForced(); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder); }
-keepclassmembers class java.util.TreeMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { java.lang.Object findTypeId(int); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { java.lang.Object findObjectId(int); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { boolean hasIds(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.databind.util.TokenBuffer$Segment next(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { java.lang.Object get(int); }
-keepclassmembers class java.util.logging.Handler { void <init>(); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Segment { com.fasterxml.jackson.core.JsonToken type(int); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { int count(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void sendChunk(org.apache.harmony.dalvik.ddmc.Chunk); }
-keepclassmembers class android.widget.TextView { void setSpan_internal(java.lang.Object,int,int,int); }
-keepclassmembers class android.view.animation.CycleInterpolator { long createNativeInterpolator(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object fromToken(android.content.Context,java.lang.Object); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void nativeSendChunk(int,byte[],int,int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registrationComplete(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.TextView { void setCursorPosition_internal(int,int); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { boolean deepEmpty(java.lang.String[]); }
-keepclassmembers class android.widget.SearchView { void setSearchableInfo(android.app.SearchableInfo); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { java.lang.String delete(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { void <init>(com.fasterxml.jackson.databind.BeanProperty,java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void <clinit>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class android.widget.SearchView { int getSuggestionRowLayout(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { android.app.PendingIntent getSessionActivity(java.lang.Object); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.app.ContextImpl$22 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawable { void <init>(android.support.v7.widget.ActionBarContainer); }
-keepclassmembers class android.app.ContextImpl$22 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.widget.SearchView { int getSuggestionCommitIconResId(); }
-keepclassmembers class android.widget.SearchView { void setImeOptions(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { java.lang.String getClassName(); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.widget.SearchView { void setInputType(int); }
-keepclassmembers class android.widget.SearchView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { java.lang.String modify(java.lang.String,java.lang.String[],boolean); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawable { void setAlpha(int); }
-keepclassmembers class java.util.Date { void <init>(int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class android.widget.SearchView { void clearFocus(); }
-keepclassmembers class java.util.Date { void <init>(int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { void addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder); }
-keepclassmembers class android.widget.TextView { void access$200(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$800(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { android.content.Context access$900(android.widget.TextView); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class android.widget.TextView { boolean access$1100(android.widget.TextView); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.util.Locale,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountry(java.util.Locale,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.TextView { boolean access$1200(android.widget.TextView); }
-keepclassmembers class java.util.Date { void <init>(int,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean access$1000(int); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class android.widget.TextView { void access$1300(android.widget.TextView,java.lang.CharSequence,int,int,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguage(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.widget.TextView { android.content.Context access$1400(android.widget.TextView); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class java.util.Date { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Date { java.lang.Object clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String); }
-keepclassmembers class android.widget.SearchView { void setQueryHint(java.lang.CharSequence); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariant(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScript(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class java.util.Date { int compareTo(java.util.Date); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean _findSortAlpha(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScriptNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.util.Locale addLikelySubtags(java.util.Locale); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { void <init>(); }
-keepclassmembers class android.widget.SearchView { void setIconifiedByDefault(boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class _classIfExplicit(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class java.util.logging.Handler { void internalSetFormatter(java.util.logging.Formatter); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class _classIfExplicit(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { com.fasterxml.jackson.databind.BeanProperty getProperty(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String addLikelySubtags(java.lang.String); }
-keepclassmembers class java.util.Date { int getDate(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { boolean hasValueDeserializer(); }
-keepclassmembers class android.os.Process$ProcessStartResult { void <init>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getScript(java.lang.String); }
-keepclassmembers class java.util.logging.Handler { void setFormatter(java.util.logging.Formatter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { void set(java.lang.Object,java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class java.util.Date { int getHours(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Date { int getMinutes(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class libcore.icu.ICU { void setDefaultLocale(java.lang.String); }
-keepclassmembers class android.widget.SearchView { boolean isIconified(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder(); }
-keepclassmembers class java.util.Date { int getMonth(); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { java.lang.Object getBridge(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class java.util.Date { int getSeconds(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object _findFilterId(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class java.util.logging.Handler { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty { com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class android.view.ViewGroup$3 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { int getInputType(); }
-keepclassmembers class android.view.ViewGroup$3 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class java.util.Date { int getYear(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup$3 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.SearchView { void setMaxWidth(int); }
-keepclassmembers class java.util.Date { int parse(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.widget.SearchView { void onMeasure(int,int); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class java.util.Date { java.lang.IllegalArgumentException parseError(java.lang.String); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class android.view.View$PerformClick { void run(); }
-keepclassmembers class org.slf4j.impl.StaticMDCBinder { void <clinit>(); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.slf4j.impl.StaticMDCBinder { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class org.slf4j.impl.StaticMDCBinder { org.slf4j.impl.StaticMDCBinder getSingleton(); }
-keepclassmembers class org.slf4j.impl.StaticMDCBinder { org.slf4j.spi.MDCAdapter getMDCA(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.SearchView { int getPreferredWidth(); }
-keepclassmembers class android.widget.SearchView { void updateViewsVisibility(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup$1 { void <init>(android.support.v7.view.menu.StandardMenuPopup); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class java.util.Date { long parse(java.lang.String); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$FragmentTag { void <clinit>(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup$1 { void onGlobalLayout(); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.SetterlessProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(java.lang.String); }
-keepclassmembers class android.widget.SearchView { boolean hasVoiceSearch(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { boolean hasNoModifiers(android.view.KeyEvent); }
-keepclassmembers class android.widget.SearchView { boolean isSubmitAreaEnabled(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { boolean hasModifiers(android.view.KeyEvent,int); }
-keepclassmembers class android.widget.SearchView { void updateSubmitButton(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberExceptionEvent { void <init>(org.greenrobot.eventbus.EventBus,java.lang.Throwable,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class android.widget.SearchView { void updateSubmitArea(); }
-keepclassmembers class java.util.jar.Manifest$Chunk { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.widget.SearchView { void updateCloseButton(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.SftpException { void <init>(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs { void <init>(); }
-keepclassmembers class com.jcraft.jsch.SftpException { java.lang.Throwable getCause(); }
-keepclassmembers class com.jcraft.jsch.SftpException { void <init>(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.SearchView { void postUpdateFocusedState(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs { void setSingleLineAllCaps(android.widget.TextView); }
-keepclassmembers class android.widget.SearchView { void updateFocusedState(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.jcraft.jsch.SftpException { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.widget.SearchView { void onDetachedFromWindow(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitDexPath(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(); }
-keepclassmembers class android.widget.SearchView { void setImeVisibility(boolean); }
-keepclassmembers class dalvik.system.DexPathList { java.io.File[] splitLibraryPath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.widget.SearchView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.app.ContextImpl$33 { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class android.app.ContextImpl$33 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setAlpha(float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { void <clinit>(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitPaths(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { void <init>(java.lang.Class,java.lang.Byte); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { float getAlpha(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer access$1300(); }
-keepclassmembers class dalvik.system.DexPathList { void splitAndAdd(java.lang.String,boolean,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer access$500(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.app.ContextImpl$59 { void <init>(); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$1 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[],com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class android.app.ContextImpl$59 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.ArrayList,java.io.File,java.util.ArrayList); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$1 { void execute(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class java.nio.channels.DatagramChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.nio.channels.DatagramChannel { java.nio.channels.DatagramChannel open(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.util.Formatter$1 { java.util.Formatter$CachedDecimalFormat initialValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { com.fasterxml.jackson.databind.deser.impl.SetterlessProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.ViewRootImpl$4 { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.Formatter$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.SetterlessProperty { com.fasterxml.jackson.databind.deser.impl.SetterlessProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.ViewRootImpl$4 { void run(); }
-keepclassmembers class android.widget.SearchView { java.lang.CharSequence getDecoratedHint(java.lang.CharSequence); }
-keepclassmembers class java.util.Formatter$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.android.internal.os.BinderInternal { long getLastGcTime(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.internal.os.BinderInternal { void addGcWatcher(java.lang.Runnable); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class java.util.AbstractMap$2 { void <init>(java.util.AbstractMap); }
-keepclassmembers class android.widget.SearchView { void updateQueryHint(); }
-keepclassmembers class com.android.internal.os.BinderInternal { void forceGc(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class java.net.Authenticator { java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File); }
-keepclassmembers class android.widget.SearchView { void updateSearchAutoComplete(); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void <init>(); }
-keepclassmembers class android.media.AudioPortEventHandler { void init(); }
-keepclassmembers class java.util.AbstractMap$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class android.media.AudioPortEventHandler { void <init>(); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.media.AudioPortEventHandler { void native_setup(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.MappingJsonFactory { void <init>(com.fasterxml.jackson.databind.ObjectMapper); }
-keepclassmembers class com.fasterxml.jackson.databind.MappingJsonFactory { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.EventBusException { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class org.greenrobot.eventbus.EventBusException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.SearchView { void updateVoiceButton(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { void <init>(java.lang.String); }
-keepclassmembers class org.greenrobot.eventbus.EventBusException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { java.lang.String getDefaultTypeId(); }
-keepclassmembers class com.android.internal.util.AsyncChannel { int connectSync(android.content.Context,android.os.Handler,android.os.Messenger); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.MappingJsonFactory { com.fasterxml.jackson.core.ObjectCodec getCodec(); }
-keepclassmembers class java.util.Date { void setTime(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.MappingJsonFactory { com.fasterxml.jackson.databind.ObjectMapper getCodec(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String nextAT(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { java.lang.String getTypePropertyName(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { boolean hasDefaultType(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty getProperty(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty { boolean hasTypePropertyName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.widget.SearchView { void onSubmitQuery(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class android.media.projection.IMediaProjectionManager$Stub { android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class android.widget.SearchView { void dismissSuggestions(); }
-keepclassmembers class android.widget.SearchView { void onCloseClicked(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node { int copyData(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node { java.lang.Object getData(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.widget.SearchView { void onSearchClicked(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node { void <init>(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node { void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class android.widget.SearchView { void onVoiceClicked(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class java.util.Date { void appendTwoDigits(java.lang.StringBuilder,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node { com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next(); }
-keepclassmembers class java.util.Date { long UTC(int,int,int,int,int,int); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void connect(android.content.Context,android.os.Handler,android.os.Messenger); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class java.util.Date { int zone(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void connected(android.content.Context,android.os.Handler,android.os.Messenger); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.Date { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class android.widget.SearchView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { void releaseSomeActivities(android.app.IApplicationThread); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.JsonNode _fromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class android.widget.SearchView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class java.util.Date { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean willActivityBeVisible(android.os.IBinder); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class java.util.Date { int compareTo(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.JsonNode _fromFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.widget.SearchView { void adjustDropDownSizeAndPosition(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.JsonNode _fromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String quotedAV(); }
-keepclassmembers class java.util.MiniEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class org.w3c.dom.DOMException { void <init>(short,java.lang.String); }
-keepclassmembers class java.util.MiniEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void sendMessage(android.os.Message); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.MiniEnumSet { int size(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void unregisterReceiver(android.content.IIntentReceiver); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void sendMessage(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { void _handleDuplicateField(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationFeature { void <clinit>(); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class java.util.MiniEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <clinit>(); }
-keepclassmembers class java.util.MiniEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent,boolean); }
-keepclassmembers class java.util.MiniEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String hexAV(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { void _handleDuplicateField(java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { void _reportProblem(com.fasterxml.jackson.core.JsonParser,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class android.widget.SearchView { void launchQuerySearch(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.JsonNode deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationFeature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.SearchView { android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationFeature { com.fasterxml.jackson.databind.SerializationFeature[] values(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.MiniEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.node.ArrayNode deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationFeature { boolean enabledByDefault(); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class java.util.MiniEnumSet { void complement(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationFeature { int getMask(); }
-keepclassmembers class android.widget.SearchView { android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class java.util.MiniEnumSet { void setRange(java.lang.Enum,java.lang.Enum); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String escapedAV(); }
-keepclassmembers class android.app.ActivityManagerProxy { void attachApplication(android.app.IApplicationThread); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { java.lang.reflect.Type getGenericPropertyType(); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.SearchView { android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo); }
-keepclassmembers class android.app.ActivityManagerProxy { void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class java.util.MiniEnumSet { long access$000(java.util.MiniEnumSet); }
-keepclassmembers class java.util.MiniEnumSet { java.lang.Enum[] access$100(java.util.MiniEnumSet); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void replyHalfConnected(int); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void replyDisconnected(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { com.fasterxml.jackson.databind.node.ObjectNode deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.app.ActivityManagerProxy { void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { void <init>(int,dalvik.system.profiler.SamplingProfiler$ThreadSet); }
-keepclassmembers class android.app.ActivityManagerProxy { void activityResumed(android.os.IBinder); }
-keepclassmembers class com.android.internal.util.AsyncChannel { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void activityPaused(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.JavaType getSerializationType(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void activitySlept(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { java.lang.Class[] getViews(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class android.support.v7.widget.SearchView$AutoCompleteTextViewReflector { void <init>(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { boolean hasNullSerializer(); }
-keepclassmembers class android.app.ActivityManagerProxy { void activityDestroyed(android.os.IBinder); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getScheme(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getEscaped(); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void appendSspTo(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { boolean hasSerializer(); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { dalvik.system.profiler.ThreadSampler findDefaultThreadSampler(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getUTF8(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeSchemeSpecificPart(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getEncodedPath(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getPath(); }
-keepclassmembers class android.support.v4.app.NavUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getEncodedFragment(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getAuthority(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { dalvik.system.profiler.SamplingProfiler$ThreadSet newThreadGroupThreadSet(java.lang.ThreadGroup); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.util.List getPathSegments(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeUriString(); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { void start(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { int getByte(int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.SearchView$AutoCompleteTextViewReflector { void doAfterTextChanged(android.widget.AutoCompleteTextView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v7.widget.SearchView$AutoCompleteTextViewReflector { void doBeforeTextChanged(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { void stop(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.util.List parse(); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.app.Activity); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$2 { void <init>(com.jcraft.jsch.ChannelSftp,long,com.jcraft.jsch.SftpProgressMonitor,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.SearchView { void forceSuggestionQuery(); }
-keepclassmembers class android.support.v7.widget.SearchView$AutoCompleteTextViewReflector { void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler { dalvik.system.profiler.HprofData getHprofData(); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.app.NavUtils { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.support.v4.app.NavUtils { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.text.style.URLSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class java.lang.InheritableThreadLocal { void <init>(); }
-keepclassmembers class android.widget.SearchView { void access$000(android.widget.SearchView); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$2 { void close(); }
-keepclassmembers class android.widget.SearchView { android.widget.CursorAdapter access$100(android.widget.SearchView); }
-keepclassmembers class java.lang.InheritableThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class java.lang.InheritableThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.widget.SearchView { void access$300(android.widget.SearchView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.widget.SearchView { android.widget.ImageView access$400(android.widget.SearchView); }
-keepclassmembers class android.app.ActivityThread$3 { void <init>(android.app.ActivityThread); }
-keepclassmembers class android.widget.SearchView { void access$700(android.widget.SearchView); }
-keepclassmembers class android.content.pm.ServiceInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.SearchView { void access$500(android.widget.SearchView); }
-keepclassmembers class android.widget.SearchView { android.widget.ImageView access$600(android.widget.SearchView); }
-keepclassmembers class android.widget.SearchView { android.widget.ImageView access$800(android.widget.SearchView); }
-keepclassmembers class android.content.pm.ServiceInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.ActivityThread$3 { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.SearchView { android.widget.ImageView access$1000(android.widget.SearchView); }
-keepclassmembers class android.widget.SearchView { void access$1100(android.widget.SearchView); }
-keepclassmembers class android.widget.SearchView { void access$900(android.widget.SearchView); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.CompositeNode { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.SearchView { android.widget.SearchView$SearchAutoComplete access$1200(android.widget.SearchView); }
-keepclassmembers class android.content.pm.ServiceInfo { void <clinit>(); }
-keepclassmembers class android.content.pm.ServiceInfo { void <init>(android.os.Parcel,android.content.pm.ServiceInfo$1); }
-keepclassmembers class android.widget.SearchView { void access$1300(android.widget.SearchView); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$2 { int read(byte[],int,int); }
-keepclassmembers class android.app.ActivityThread$3 { void onTrimMemory(int); }
-keepclassmembers class android.app.ActivityThread$3 { void onLowMemory(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class java.util.AbstractCollection { boolean add(java.lang.Object); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.util.AbstractCollection { boolean contains(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.CompositeNode { ch.qos.logback.core.pattern.parser.Node getChildNode(); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.CompositeNode { void setChildNode(ch.qos.logback.core.pattern.parser.Node); }
-keepclassmembers class android.transition.ChangeImageTransform { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class java.util.AbstractCollection { boolean remove(java.lang.Object); }
-keepclassmembers class android.transition.ChangeImageTransform { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Include); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.app.AlertController$2 { void <init>(com.android.internal.app.AlertController,android.view.View); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class java.util.AbstractCollection { boolean removeAll(java.util.Collection); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class ch.qos.logback.core.joran.action.ConversionRuleAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.util.AbstractCollection { java.util.ArrayList toArrayList(); }
-keepclassmembers class android.transition.ChangeImageTransform { android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.joran.action.ConversionRuleAction { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { boolean retainAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.transition.ChangeImageTransform { android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class ch.qos.logback.core.joran.action.ConversionRuleAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.transition.ChangeImageTransform { void <clinit>(); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.widget.TextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.android.okhttp.internal.http.HttpMethod { boolean hasRequestBody(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.app.ContextImpl$43 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer findOptionalStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.okhttp.internal.http.HttpMethod { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class org.apache.commons.io.FileUtils { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { void <init>(org.apache.harmony.xml.dom.DOMImplementationImpl,java.lang.String,java.lang.String,org.w3c.dom.DocumentType,java.lang.String); }
-keepclassmembers class android.widget.TextView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil { void setProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.util.Properties,ch.qos.logback.core.joran.action.ActionUtil$Scope); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil { void setProperty(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,java.lang.String,ch.qos.logback.core.joran.action.ActionUtil$Scope); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcel,android.widget.TextView$1); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil { ch.qos.logback.core.joran.action.ActionUtil$Scope stringToScope(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.ddm.DdmHandleHeap { void register(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanPropertyWriter { boolean willSuppressNulls(); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { boolean isXMLIdentifierStart(char); }
-keepclassmembers class android.app.ContextImpl$43 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.app.ActivityManagerProxy { void publishContentProviders(android.app.IApplicationThread,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD { java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { void <init>(com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { boolean isXMLIdentifierPart(char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class,java.util.Map); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { boolean isXMLIdentifier(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { boolean isPotentialBeanType(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class org.apache.commons.io.FileUtils { void checkDirectory(java.io.File); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.android.internal.appwidget.IAppWidgetService$Stub { com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getLayoutDirection(); }
-keepclassmembers class android.app.ActivityManagerProxy { void removeContentProvider(android.os.IBinder,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean refContentProvider(android.os.IBinder,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.app.ActivityManagerProxy { void unstableProviderDied(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { com.fasterxml.jackson.databind.deser.AbstractDeserializer constructForNonPOJO(com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class org.apache.commons.io.FileUtils { boolean contentEquals(java.io.File,java.io.File); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isLayoutRtl(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean isAnnotationBundle(java.lang.annotation.Annotation); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerFactory { com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.io.FileUtils { boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder from(android.content.Context); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <clinit>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { int compareTo(it.skarafaz.mercury.model.Server); }
-keepclassmembers class android.content.ContentResolver$ParcelFileDescriptorInner { void <init>(android.content.ContentResolver,android.os.ParcelFileDescriptor,android.content.IContentProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { int compareTo(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getHost(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.util.List getCommands(); }
-keepclassmembers class android.graphics.Bitmap { void setDefaultDensity(int); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class android.content.ContentResolver$ParcelFileDescriptorInner { void releaseResources(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getName(); }
-keepclassmembers class android.app.ActivityThread$EventLoggingReporter { void report(int,java.lang.Object[]); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getPassword(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getNohupPath(); }
-keepclassmembers class android.app.ActivityThread$EventLoggingReporter { void <init>(android.app.ActivityThread$1); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getUser(); }
-keepclassmembers class android.app.ActivityThread$EventLoggingReporter { void <init>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setCommands(java.util.List); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.Integer getPort(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.Serializers$Base { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setPassword(java.lang.String); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class it.skarafaz.mercury.model.Server { java.lang.String getSudoPath(); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setName(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setPort(java.lang.Integer); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setNohupPath(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.AttrImpl createAttribute(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.AttrImpl createAttributeNS(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.ElementImpl createElement(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class it.skarafaz.mercury.model.Server { void setSudoPath(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.EntityReferenceImpl createEntityReference(java.lang.String); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.ElementImpl createElementNS(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.CommentImpl createComment(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.w3c.dom.DocumentType getDoctype(); }
-keepclassmembers class android.telephony.TelephonyManager { void <init>(); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.apache.harmony.xml.dom.ProcessingInstructionImpl createProcessingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class android.telephony.TelephonyManager { void <init>(android.content.Context); }
-keepclassmembers class android.telephony.TelephonyManager { android.telephony.TelephonyManager from(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { java.lang.Class handledType(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { boolean isCachable(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.DHGEX { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.AbstractDeserializer { com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader(); }
-keepclassmembers class android.app.ActivityManagerProxy { void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.w3c.dom.Element getDocumentElement(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.DHGEX { void <init>(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.DHGEX { java.lang.String getKeyType(); }
-keepclassmembers class com.jcraft.jsch.DHGEX { void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[]); }
-keepclassmembers class android.transition.ChangeBounds$2 { android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds); }
-keepclassmembers class com.jcraft.jsch.DHGEX { int getState(); }
-keepclassmembers class android.app.ActivityManagerProxy { void unbindFinished(android.os.IBinder,android.content.Intent,boolean); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$2 { void set(android.transition.ChangeBounds$ViewBounds,android.graphics.PointF); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class android.app.ActivityThread$StopInfo { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class android.app.ActivityThread$StopInfo { void run(); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { short getNodeType(); }
-keepclassmembers class android.transition.ChangeBounds$2 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { void serviceDoneExecuting(android.os.IBinder,int,int,int); }
-keepclassmembers class android.app.ActivityThread$StopInfo { void <init>(android.app.ActivityThread$1); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer { java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl { void <init>(); }
-keepclassmembers class libcore.io.EventLogger { void setReporter(libcore.io.EventLogger$Reporter); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder peekService(android.content.Intent,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class libcore.io.EventLogger { libcore.io.EventLogger$Reporter getReporter(); }
-keepclassmembers class libcore.io.EventLogger { void writeEvent(int,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.io.FileUtils { void copyFile(java.io.File,java.io.File); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CodePointTranslator { void <init>(); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl { void setTextAppearance(android.widget.TextView,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void backupAgentCreated(java.lang.String,android.os.IBinder); }
-keepclassmembers class org.apache.commons.io.FileUtils { void copyFile(java.io.File,java.io.File,boolean); }
-keepclassmembers class com.jcraft.jsch.DHGEX { boolean next(com.jcraft.jsch.Buffer); }
-keepclassmembers class libcore.io.EventLogger { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 { java.lang.Object newAccessibilityAction(int,java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { void <init>(long,com.android.okhttp.Request,com.android.okhttp.Response); }
-keepclassmembers class android.widget.SearchView$3 { void <init>(android.widget.SearchView); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 { boolean removeAction(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { com.android.okhttp.internal.http.CacheStrategy get(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException incompatibleType(java.lang.Object); }
-keepclassmembers class android.telephony.TelephonyManager { java.lang.String getProcCmdLine(); }
-keepclassmembers class android.widget.SearchView$3 { void run(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException notAnArray(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { java.lang.RuntimeException badArray(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { com.android.okhttp.internal.http.CacheStrategy getCandidate(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentImpl { void setDocumentURI(java.lang.String); }
-keepclassmembers class org.greenrobot.eventbus.meta.SimpleSubscriberInfo { void <init>(java.lang.Class,boolean,org.greenrobot.eventbus.meta.SubscriberMethodInfo[]); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.meta.SimpleSubscriberInfo { org.greenrobot.eventbus.SubscriberMethod[] getSubscriberMethods(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { boolean getBoolean(java.lang.Object,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Constructor { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.widget.ScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Constructor { int getModifiers(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { void <init>(); }
-keepclassmembers class android.content.Intent { int getFlags(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.reflect.Constructor { int hashCode(); }
-keepclassmembers class java.lang.reflect.Constructor { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class java.net.ProxySelector { void setDefault(java.net.ProxySelector); }
-keepclassmembers class java.net.ProxySelector { void <init>(); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.annotation.Annotation[] getDeclaredAnnotations(); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void <init>(java.lang.String,int,int[],byte[]); }
-keepclassmembers class java.io.BufferedOutputStream { void flush(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.reflect.Type[] getGenericParameterTypes(); }
-keepclassmembers class java.io.BufferedOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.BufferedOutputStream { void checkNotClosed(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { long computeFreshnessLifetime(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.annotation.Annotation[][] getParameterAnnotations(); }
-keepclassmembers class java.io.BufferedOutputStream { void close(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { boolean hasSingleElement(boolean[]); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class java.io.BufferedOutputStream { void write(int); }
-keepclassmembers class java.lang.reflect.Array { int getLength(java.lang.Object); }
-keepclassmembers class java.io.BufferedOutputStream { void flushInternal(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[],boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { void <init>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { boolean isEmpty(boolean[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { long cacheResponseAge(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { byte[] decode(byte[]); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { boolean isFreshnessLifetimeHeuristic(); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { boolean hasConditions(com.android.okhttp.Request); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer { void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { com.android.okio.ByteString decode(com.android.okio.ByteString); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NodeCursor$RootValue { void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class android.content.Intent { android.content.Intent setData(android.net.Uri); }
-keepclassmembers class android.os.ParcelFileDescriptor$ListenerBridge { void <init>(java.io.FileDescriptor,android.os.Looper,android.os.ParcelFileDescriptor$OnCloseListener); }
-keepclassmembers class java.lang.reflect.Constructor { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void buildTree(int[],byte[]); }
-keepclassmembers class org.apache.commons.io.filefilter.DirectoryFileFilter { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void addCode(int,int,byte); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter { void <init>(android.content.Context,java.util.List); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createMultiArray(java.lang.Class,int[]); }
-keepclassmembers class org.apache.commons.io.filefilter.DirectoryFileFilter { void <init>(); }
-keepclassmembers class org.apache.commons.io.filefilter.DirectoryFileFilter { boolean accept(java.io.File); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$CharMatcher { void <init>(char); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { void doFinal(byte[],int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { int getBlockSize(); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { void init(byte[]); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { void update(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA1 { void update(byte[],int,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void <clinit>(); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.Intent { void setSelector(android.content.Intent); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException { com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.jcraft.jsch.JSchException { void <init>(); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class com.jcraft.jsch.JSchException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.lang.reflect.Array { void setBoolean(java.lang.Object,int,boolean); }
-keepclassmembers class com.jcraft.jsch.JSchException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl { boolean isVisibleToUser(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.util.ArrayMap { void <init>(boolean); }
-keepclassmembers class android.widget.AbsSpinner { void initAbsSpinner(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl { boolean isAccessibilityFocused(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.widget.AbsSpinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class java.lang.reflect.Array { void setByte(java.lang.Object,int,byte); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl { void setAccessibilityFocused(java.lang.Object,boolean); }
-keepclassmembers class android.content.pm.PackageManager { void <init>(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class com.jcraft.jsch.JSchException { java.lang.Throwable getCause(); }
-keepclassmembers class android.app.ActivityManagerProxy { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.widget.AbsSpinner { void resetList(); }
-keepclassmembers class java.lang.reflect.Array { void setChar(java.lang.Object,int,char); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl { void setVisibleToUser(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.AbsSpinner { void onMeasure(int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class java.lang.reflect.Array { void setDouble(java.lang.Object,int,double); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.reflect.Array { void setFloat(java.lang.Object,int,float); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class javax.crypto.Cipher$NeedToSet { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class javax.crypto.Cipher$NeedToSet { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_SCALE_X { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { void setInt(java.lang.Object,int,int); }
-keepclassmembers class android.util.ArrayMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.util.ArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class java.lang.reflect.Array { void setLong(java.lang.Object,int,long); }
-keepclassmembers class android.support.v4.media.MediaBrowserCompatApi21 { boolean isConnected(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsSpinner { int getChildHeight(android.view.View); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { void setShort(java.lang.Object,int,short); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.widget.AbsSpinner { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.AbsSpinner { int getChildWidth(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { void <init>(java.lang.reflect.Type); }
-keepclassmembers class java.lang.reflect.Method { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.ArtMethod getArtMethod(); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { void <init>(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.HierarchicType,com.fasterxml.jackson.databind.type.HierarchicType); }
-keepclassmembers class android.widget.AbsSpinner { void recycleAllViews(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Parcelable); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.lang.reflect.Method { boolean isBridge(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String getName(); }
-keepclassmembers class org.apache.commons.io.FileUtils { void doCopyFile(java.io.File,java.io.File,boolean); }
-keepclassmembers class android.widget.AbsSpinner { void setSelection(int); }
-keepclassmembers class java.lang.reflect.Method { boolean isSynthetic(); }
-keepclassmembers class java.lang.reflect.Method { int getModifiers(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypesNative(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { com.fasterxml.jackson.databind.type.HierarchicType deepCloneWithoutSubtype(); }
-keepclassmembers class android.widget.AbsSpinner { android.view.View getSelectedView(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { java.lang.reflect.ParameterizedType asGeneric(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getReturnType(); }
-keepclassmembers class java.lang.reflect.Method { int hashCode(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { android.content.pm.FeatureGroupInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { java.lang.Class getRawClass(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Method { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.SpinnerAdapter getAdapter(); }
-keepclassmembers class android.widget.AbsSpinner { void requestLayout(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { com.fasterxml.jackson.databind.type.HierarchicType getSuperType(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.widget.AbsSpinner { int getCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { void setSubType(com.fasterxml.jackson.databind.type.HierarchicType); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { android.content.pm.FeatureGroupInfo[] newArray(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { void setSuperType(com.fasterxml.jackson.databind.type.HierarchicType); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { boolean isAnnotationPresent(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger); }
-keepclassmembers class java.lang.reflect.Method { boolean equalNameAndParameters(java.lang.reflect.Method); }
-keepclassmembers class android.widget.AbsSpinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.AbsSpinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.type.HierarchicType { boolean isGeneric(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[]); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi20 { int getSystemWindowInsetBottom(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi20 { int getSystemWindowInsetLeft(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.Type[] getGenericParameterTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.Type getGenericReturnType(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.annotation.Annotation[] getDeclaredAnnotations(); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments$Support { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments$Support { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi20 { int getSystemWindowInsetRight(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi20 { int getSystemWindowInsetTop(java.lang.Object); }
-keepclassmembers class android.os.IUserManager$Stub { android.os.IUserManager asInterface(android.os.IBinder); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi20 { java.lang.Object replaceSystemWindowInsets(java.lang.Object,int,int,int,int); }
-keepclassmembers class java.lang.reflect.Method { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class android.widget.AbsSpinner { void access$000(android.widget.AbsSpinner,android.view.View,boolean); }
-keepclassmembers class java.lang.reflect.Method { java.lang.annotation.Annotation[][] getParameterAnnotations(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$100(android.os.Parcel); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.Adapter getAdapter(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { int getIVSize(); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { void init(int,byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { void <init>(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[],boolean); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object getDefaultValue(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { int getBlockSize(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void showWaitingForDebugger(android.app.IApplicationThread,boolean); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { boolean isCBC(); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$3 { void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout$1 { void <init>(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.View,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.ContainerSerializer { void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CBC { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.content.pm.PackageManager { java.lang.String getDataDirForUser(int,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.ContainerSerializer { void <init>(java.lang.Class); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.ContainerSerializer { boolean hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void onClick(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.ContainerSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.ContainerSerializer { void <init>(java.lang.Class,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDRootLayout$1 { boolean onPreDraw(); }
-keepclassmembers class android.media.session.MediaSessionManager { void <init>(android.content.Context); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class org.apache.commons.io.FileUtils { void innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Element$DataType validateObjectIsPrimitiveArray(java.lang.Object,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { android.view.View$OnClickListener access$302(android.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int,int); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { boolean checkTag(int); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class android.content.Intent { android.content.Intent setFlags(int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$ChangeInfo { void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class android.util.ArrayMap { void putAll(java.util.Map); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class android.renderscript.Allocation { long getIDSafe(); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$ChangeInfo { void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$ChangeInfo { void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int,android.support.v7.widget.DefaultItemAnimator$1); }
-keepclassmembers class android.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class android.util.ArrayMap { java.util.Set entrySet(); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class android.renderscript.Type$Builder { void <init>(android.renderscript.RenderScript,android.renderscript.Element); }
-keepclassmembers class android.renderscript.Allocation { void updateCacheInfo(android.renderscript.Type); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$ChangeInfo { java.lang.String toString(); }
-keepclassmembers class android.renderscript.Type$Builder { android.renderscript.Type$Builder setX(int); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class android.renderscript.Type$Builder { android.renderscript.Type$Builder setY(int); }
-keepclassmembers class android.renderscript.Allocation { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.renderscript.Type$Builder { android.renderscript.Type$Builder setMipmaps(boolean); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class android.media.IAudioService$Stub { android.media.IAudioService asInterface(android.os.IBinder); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class android.renderscript.Allocation { void <init>(long,android.renderscript.RenderScript,android.renderscript.Type,int); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ContextNameAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ContextNameAction { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void <init>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.renderscript.Type$Builder { android.renderscript.Type create(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void addAction(java.lang.Object,int); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ContextNameAction { void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void addChild(java.lang.Object,android.view.View); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { int getActions(java.lang.Object); }
-keepclassmembers class com.afollestad.materialdialogs.util.RippleHelper { void applyColor(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void getBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.os.HandlerThread { void run(); }
-keepclassmembers class org.apache.commons.io.FileUtils { boolean isSymlink(java.io.File); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class android.renderscript.Allocation { void validateIsInt64(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { java.lang.CharSequence getClassName(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void getBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { java.lang.CharSequence getContentDescription(java.lang.Object); }
-keepclassmembers class android.os.HandlerThread { void onLooperPrepared(); }
-keepclassmembers class android.renderscript.Allocation { void validateIsInt32(); }
-keepclassmembers class ch.qos.logback.classic.pattern.PropertyConverter { void start(); }
-keepclassmembers class android.renderscript.Allocation { void validateIsInt8(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isClickable(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ContextNameAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { java.lang.CharSequence getPackageName(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.pattern.PropertyConverter { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isFocusable(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isEnabled(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isFocused(java.lang.Object); }
-keepclassmembers class android.renderscript.Allocation { void validateIsInt16(); }
-keepclassmembers class android.renderscript.Allocation { void validateIsFloat64(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { java.lang.Object obtain(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class android.renderscript.Allocation { void validateIsFloat32(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isSelected(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { boolean isLongClickable(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setClassName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.util.Collection listFiles(java.io.File,java.lang.String[],boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void recycle(java.lang.Object); }
-keepclassmembers class java.security.SecureRandom { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setEnabled(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setClickable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setFocusable(java.lang.Object,boolean); }
-keepclassmembers class android.renderscript.Allocation { void ioSend(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setContentDescription(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.core.JsonEncoding { void <clinit>(); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setPackageName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setFocused(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setSelected(java.lang.Object,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonEncoding { void <init>(java.lang.String,int,java.lang.String,boolean,int); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class java.security.SecureRandom { void setSeed(byte[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setParent(java.lang.Object,android.view.View); }
-keepclassmembers class java.security.SecureRandom { void setSeed(long); }
-keepclassmembers class com.fasterxml.jackson.core.JsonEncoding { int bits(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonEncoding { java.lang.String getJavaName(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setSource(java.lang.Object,android.view.View); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class com.fasterxml.jackson.core.JsonEncoding { boolean isBigEndian(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView$1 { void <init>(android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode); }
-keepclassmembers class java.security.SecureRandom { void nextBytes(byte[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl { void setLongClickable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateDefaultImpl(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentSkipListMap$Node); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void addPackageDependency(java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { void <init>(java.util.concurrent.ConcurrentSkipListMap$Node); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { boolean casValue(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { void <init>(); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.Exception); }
-keepclassmembers class java.security.SecureRandom { void <clinit>(); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { boolean casNext(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Node); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void advanceRunState(int); }
-keepclassmembers class com.android.okio.GzipSource { void <init>(com.android.okio.Source); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { void sendAccessibilityEvent(java.lang.Object,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { boolean appendMarker(java.util.concurrent.ConcurrentSkipListMap$Node); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListenerAdapter { void <init>(); }
-keepclassmembers class java.net.URI { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { void serialize(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { void helpDelete(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Node); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggerContextVO { void <init>(ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class com.android.okio.GzipSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.app.ActivityCompat$1 { void <init>(java.lang.String[],android.app.Activity,int); }
-keepclassmembers class com.android.okio.GzipSource { void consumeHeader(); }
-keepclassmembers class android.support.v4.app.ActivityCompat$1 { void run(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptWorkers(); }
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorCompat { android.view.animation.Interpolator create(android.graphics.Path); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { java.lang.Object getValidValue(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { com.android.okhttp.internal.spdy.FrameReader newReader(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { com.android.okhttp.internal.spdy.FrameWriter newWriter(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$Node { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { void serializeWithType(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { int maxFrameSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.Intent { java.lang.String toUri(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void checkShutdownAccess(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okio.GzipSource { void consumeTrailer(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.media.MediaRouter$RouteCategory { void <init>(int,int,boolean); }
-keepclassmembers class android.media.MediaRouter$RouteCategory { void <init>(java.lang.CharSequence,int,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.List drainQueue(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performFiltering(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatJB { void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okio.GzipSource { void close(); }
-keepclassmembers class com.android.okio.GzipSource { void updateCrc(com.android.okio.OkBuffer,long,long); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.media.MediaRouter$RouteCategory { boolean isGroupable(); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.io.FileInputStream openInputStream(java.io.File); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getProviderMimeType(android.net.Uri,int); }
-keepclassmembers class android.media.MediaRouter$RouteCategory { java.lang.String toString(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class com.android.okio.GzipSource { void checkEqual(java.lang.String,int,int); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.lang.Double { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate { void <init>(android.support.v4.widget.DrawerLayout); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class android.net.Proxy { int validate(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performValidation(); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ch.qos.logback.core.joran.util.Introspector { java.lang.String decapitalize(java.lang.String); }
-keepclassmembers class java.net.URI { void parseURI(java.lang.String,boolean); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class android.content.Intent { void toUriFragment(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.io.FileOutputStream openOutputStream(java.io.File,boolean); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean); }
-keepclassmembers class java.lang.Double { float floatValue(); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.io.FileOutputStream openOutputStream(java.io.File); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performFiltering(java.lang.CharSequence,int,int,int); }
-keepclassmembers class ch.qos.logback.core.joran.util.Introspector { ch.qos.logback.core.joran.util.MethodDescriptor[] getMethodDescriptors(java.lang.Class); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { void <init>(); }
-keepclassmembers class android.net.Proxy { void setHttpProxySystemProperty(android.net.ProxyInfo); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void clear(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class java.lang.Double { int intValue(); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { android.content.pm.ConfigurationInfo[] newArray(int); }
-keepclassmembers class ch.qos.logback.core.joran.util.Introspector { ch.qos.logback.core.joran.util.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { android.content.pm.ConfigurationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { com.android.okhttp.internal.spdy.Settings set(int,int,int); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void <clinit>(); }
-keepclassmembers class java.net.URI { java.lang.String validateScheme(java.lang.String,int); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class android.net.Proxy { void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String,android.net.Uri); }
-keepclassmembers class android.content.Intent { void toUriInner(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class java.lang.Double { long longValue(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.renderscript.Allocation { void data1DChecks(int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean isSet(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.Runnable getTask(); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class java.net.URI { void parseAuthority(boolean); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BaseJsonNode { void <init>(); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int get(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int flags(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int getHeaderTableSize(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int size(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class android.net.Proxy { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFromUnchecked(int,int,java.lang.Object,android.renderscript.Element$DataType,int); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.lang.String readFileToString(java.io.File,java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.String,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class java.net.URI { void validateUserInfo(java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.lang.String readFileToString(java.io.File); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int getInitialWindowSize(int); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void <init>(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase { android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,int[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.util.List readLines(java.io.File,java.lang.String); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class java.net.URI { boolean isValidHost(boolean,java.lang.String); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.util.List readLines(java.io.File,java.nio.charset.Charset); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okio.Sink createRequestBody(com.android.okhttp.Request); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,short[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean persistValue(int); }
-keepclassmembers class org.apache.commons.io.FileUtils { org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,float[]); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void writeRequestHeaders(com.android.okhttp.Request); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean isPersisted(int); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,android.renderscript.Allocation,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void merge(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class android.renderscript.Allocation { void copy1DRangeFrom(int,int,byte[]); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okhttp.Response$Builder readResponseHeaders(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue); }
-keepclassmembers class java.net.URI { boolean isValidDomainName(java.lang.String); }
-keepclassmembers class org.apache.commons.io.FileUtils { long sizeOf(java.io.File); }
-keepclassmembers class ch.qos.logback.classic.pattern.SyslogStartConverter { void <init>(); }
-keepclassmembers class org.apache.commons.io.FileUtils { org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { java.util.List writeNameValueBlock(com.android.okhttp.Request,com.android.okhttp.Protocol,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void flushRequest(); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.math.BigInteger sizeOfAsBigInteger(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.PropertyName getFullName(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class java.net.URI { int compareTo(java.net.URI); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.introspect.AnnotatedField getField(); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class org.apache.commons.io.FileUtils { long sizeOfDirectory(java.io.File); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File); }
-keepclassmembers class ch.qos.logback.classic.pattern.SyslogStartConverter { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter(); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator(); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.content.Intent { void readFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.PropertyMetadata getMetadata(); }
-keepclassmembers class android.content.Intent { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition { com.fasterxml.jackson.databind.PropertyName getWrapperName(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.List shutdownNow(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okhttp.Response$Builder readNameValueBlock(java.util.List,com.android.okhttp.Protocol); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { java.lang.String joinOnNull(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.core.Base64Variant getBase64Variant(); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { java.text.DateFormat getDateFormat(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { java.util.Locale getLocale(); }
-keepclassmembers class java.net.URI { java.lang.String convertHexToLowerCase(java.lang.String); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void install(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { java.util.TimeZone getTimeZone(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$2 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$2 { void execute(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void <init>(); }
-keepclassmembers class java.net.URI { boolean escapedEquals(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.BaseSettings { com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker(); }
-keepclassmembers class org.apache.commons.io.FileUtils { java.lang.String[] toSuffixes(java.lang.String[]); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void tagSocketFd(java.io.FileDescriptor,int,int); }
-keepclassmembers class org.apache.commons.io.FileUtils { void touch(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void tag(java.io.FileDescriptor); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void unTagSocketFd(java.io.FileDescriptor); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void untag(java.io.FileDescriptor); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer { void serialize(java.lang.Short,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.io.FileUtils { void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class java.net.URI { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void emptyTransferStream(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okio.Source getTransferStream(java.net.CacheRequest); }
-keepclassmembers class java.lang.HexStringParser { void <init>(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { boolean canReuseConnection(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { boolean isProhibitedHeader(com.android.okhttp.Protocol,com.android.okio.ByteString); }
-keepclassmembers class ch.qos.logback.core.util.EnvUtil { boolean isAndroidOS(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.util.EnvUtil { boolean isJDK5(); }
-keepclassmembers class java.lang.HexStringParser { double parseDouble(java.lang.String); }
-keepclassmembers class android.telephony.TelephonyManager { void <clinit>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class java.lang.HexStringParser { long parse(java.lang.String,boolean); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void releaseConnectionOnIdle(); }
-keepclassmembers class java.lang.HexStringParser { float parseFloat(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.util.EnvUtil { boolean isJDK_N_OrHigher(int); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class ch.qos.logback.core.util.EnvUtil { boolean isWindows(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void <clinit>(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { int native_tagSocketFd(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class org.apache.commons.io.FileUtils { void write(java.io.File,java.lang.CharSequence); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { int native_untagSocketFd(java.io.FileDescriptor); }
-keepclassmembers class java.lang.HexStringParser { void parseHexSign(java.lang.String); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class libcore.reflect.ListOfVariables { void <init>(); }
-keepclassmembers class ch.qos.logback.core.encoder.LayoutWrappingEncoder { void <init>(); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class java.lang.HexStringParser { void parseExponent(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class libcore.reflect.ListOfVariables { void add(java.lang.reflect.TypeVariable); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class libcore.reflect.ListOfVariables { java.lang.reflect.TypeVariable[] getArray(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int); }
-keepclassmembers class org.apache.commons.io.FileUtils { void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatRatingBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.AppCompatRatingBar { void <init>(android.content.Context); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatRatingBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.HexStringParser { void parseMantissa(java.lang.String); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class java.net.URI { int getPort(); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.encoder.LayoutWrappingEncoder { boolean isStarted(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[]); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$1 { float getInterpolation(float); }
-keepclassmembers class java.net.URI { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class java.lang.HexStringParser { void setInfinite(); }
-keepclassmembers class android.support.v7.widget.AppCompatRatingBar { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$1 { void <init>(); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,long); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class java.lang.HexStringParser { void checkedAddExponent(long); }
-keepclassmembers class java.lang.HexStringParser { void setZero(); }
-keepclassmembers class ch.qos.logback.core.encoder.LayoutWrappingEncoder { void stop(); }
-keepclassmembers class ch.qos.logback.core.encoder.LayoutWrappingEncoder { void start(); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class java.nio.ByteBuffer { int compareTo(java.nio.ByteBuffer); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class java.lang.HexStringParser { void fitMantissaInDesiredWidth(int); }
-keepclassmembers class java.net.URI { int hashCode(); }
-keepclassmembers class java.lang.HexStringParser { void processSubNormalNumber(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class java.lang.HexStringParser { void processNormalNumber(); }
-keepclassmembers class android.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class java.lang.HexStringParser { void discardTrailingBits(long); }
-keepclassmembers class java.lang.HexStringParser { void round(); }
-keepclassmembers class java.nio.ByteBuffer { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer get(byte[]); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class java.lang.HexStringParser { java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportAssistContextExtras(android.os.IBinder,android.os.Bundle); }
-keepclassmembers class android.util.MapCollections { java.util.Set getEntrySet(); }
-keepclassmembers class android.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class java.lang.HexStringParser { int getOffset(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class java.nio.ByteBuffer { boolean hasArray(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <clinit>(); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void beforeExecute(java.lang.Thread,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class java.nio.ByteBuffer { int hashCode(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class java.util.logging.Formatter { void <init>(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteOrder order(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { java.lang.String toString(); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class java.lang.HexStringParser { int countBitsLength(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <init>(); }
-keepclassmembers class java.lang.HexStringParser { void <clinit>(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer put(byte[],int,int); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer order(java.nio.ByteOrder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.text.ICUCompatApi23 { void <clinit>(); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation$MipmapControl,int); }
-keepclassmembers class android.support.v4.text.ICUCompatApi23 { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer { void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.io.FileUtils { void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityThread$GcIdler { void <init>(android.app.ActivityThread); }
-keepclassmembers class android.app.ActivityThread$GcIdler { boolean queueIdle(); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { void <init>(); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionInflater from(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <clinit>(); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type); }
-keepclassmembers class com.android.internal.logging.AndroidConfig { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetAddressSerializer { void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition inflateTransition(int); }
-keepclassmembers class android.transition.TransitionInflater { void <init>(android.content.Context); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int); }
-keepclassmembers class java.nio.ByteBuffer { java.lang.Object array(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NodeCursor$Array { void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { void <clinit>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toNanos(long); }
-keepclassmembers class android.service.fingerprint.FingerprintManager$2 { void <init>(android.service.fingerprint.FingerprintManager); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toMillis(long); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { void <init>(java.math.BigInteger); }
-keepclassmembers class android.app.ActivityManagerProxy { int getActivityDisplayId(android.os.IBinder); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class java.net.URI { java.lang.String getHashString(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { java.lang.String asText(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class java.nio.ByteBuffer { int compareTo(java.lang.Object); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Element elementFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { android.content.pm.InstrumentationInfo[] newArray(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { boolean hasSingleElement(short[]); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { void <init>(); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseCorruptException { void <init>(); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { android.content.pm.InstrumentationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseCorruptException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { boolean isEmpty(short[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Type typeFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.net.URI { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { android.hardware.camera2.CameraManager$CameraManagerGlobal get(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URI { int compareTo(java.lang.Object); }
-keepclassmembers class java.net.URI { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { int hashCode(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$1 { void <init>(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer { void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer { java.lang.Class handledType(); }
-keepclassmembers class android.renderscript.Float4 { void <init>(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$1 { void run(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.content.IRestrictionsManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.animation.LayoutTransition$6 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class android.animation.LayoutTransition$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BigIntegerNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 add(android.renderscript.Float4,android.renderscript.Float4); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { boolean isAvailable(int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { boolean validStatus(int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class android.app.ActivityManagerProxy { void backgroundResourcesReleased(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.util.RootNameLookup { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds$9 { void <init>(android.transition.ChangeBounds,android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.util.RootNameLookup { com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 add(android.renderscript.Float4,float); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { void postSingleUpdate(android.hardware.camera2.CameraManager$AvailabilityCallback,android.os.Handler,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility { void <clinit>(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.RootNameLookup { com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int hashCode(); }
-keepclassmembers class android.transition.ChangeBounds$9 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.renderscript.Allocation { android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { void onStatusChangedLocked(int,java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.util.ListIterator listIterator(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 sub(android.renderscript.Float4,float); }
-keepclassmembers class android.transition.ChangeBounds$9 { void onTransitionResume(android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object readResolve(); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility { com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object remove(int); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.transition.TransitionInflater { java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 sub(android.renderscript.Float4,android.renderscript.Float4); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility { boolean isVisible(java.lang.reflect.Member); }
-keepclassmembers class java.nio.DoubleArrayBuffer { void <init>(int,double[],int,boolean); }
-keepclassmembers class java.nio.DoubleArrayBuffer { void <init>(double[]); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { com.android.server.NetworkManagementSocketTagger$SocketTags initialValue(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void clearPressedItem(); }
-keepclassmembers class android.app.ContextImpl$58 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v4.view.PagerTitleStripIcs { void setSingleLineAllCaps(android.widget.TextView); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { void onStatusChanged(int,int); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void clickPressedItem(android.view.View,int); }
-keepclassmembers class android.app.ContextImpl$58 { void <init>(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.renderscript.Type$CubemapFace { void <clinit>(); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getDefault(); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 div(android.renderscript.Float4,android.renderscript.Float4); }
-keepclassmembers class android.transition.TransitionInflater { void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class android.renderscript.Type$CubemapFace { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.renderscript.Float4 { android.renderscript.Float4 div(android.renderscript.Float4,float); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean hasFocus(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean isFocused(); }
-keepclassmembers class android.hardware.camera2.CameraManager$CameraManagerGlobal { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void setPressedItem(android.view.View,int,float,float); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$PendingEvent { void <init>(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$PendingEvent { void recycle(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$PendingEvent { void run(); }
-keepclassmembers class javax.net.ssl.SSLContext { void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class java.text.BreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.Protocol getProtocol(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream getStream(int); }
-keepclassmembers class android.database.IContentObserver$Stub { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream removeStream(int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$PendingEvent { void <init>(android.view.inputmethod.InputMethodManager,android.view.inputmethod.InputMethodManager$1); }
-keepclassmembers class javax.net.ssl.SSLContext { void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompatIcs$MySearchView { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean isIdle(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { long getIdleStartTimeNs(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void setIdle(boolean); }
-keepclassmembers class android.database.IContentObserver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$DisallowIntercept { void <init>(android.widget.ListPopupWindow$ForwardingListener,android.widget.ListPopupWindow$1); }
-keepclassmembers class javax.net.ssl.SSLContext { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$DisallowIntercept { void <init>(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void setListSelectionHidden(boolean); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean touchModeDrawsInPressedStateCompat(); }
-keepclassmembers class java.text.BreakIterator { java.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$DisallowIntercept { void run(); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.net.SocketNode { void <init>(ch.qos.logback.classic.net.SimpleSocketServer,java.net.Socket,ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void <init>(); }
-keepclassmembers class java.text.BreakIterator { void setText(java.lang.String); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class ch.qos.logback.classic.net.SocketNode { void run(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class ch.qos.logback.classic.net.SocketNode { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream newStream(int,java.util.List,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[],int,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.widget.AbsSpinner$SavedState$1 { void <init>(); }
-keepclassmembers class android.renderscript.Allocation { void <clinit>(); }
-keepclassmembers class com.android.okio.Okio$2 { void <init>(java.io.InputStream); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void gc(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class com.android.okio.Okio$2 { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { void <clinit>(); }
-keepclassmembers class android.transition.TransitionInflater { void <clinit>(); }
-keepclassmembers class com.android.okio.Okio$2 { void close(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { java.lang.String _addSymbol(char[],int,int,int,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream { void <init>(java.nio.ByteBuffer); }
-keepclassmembers class com.android.okio.Okio$2 { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForBasicProperty { void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$NoMatcher { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$NoMatcher { int isMatch(char[],int,int,int); }
-keepclassmembers class ch.qos.logback.classic.net.SocketNode { java.lang.String toString(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers { java.util.Collection all(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeData(int,boolean,com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void clear(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList inflateColorStateList(android.content.Context,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { boolean isColorInt(android.content.Context,int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { boolean hasSingleElement(double[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { boolean isEmpty(double[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { java.lang.String _findSymbol2(char[],int,int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void delete(long); }
-keepclassmembers class java.text.DecimalFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$SocketTags { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class android.app.Service { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeSynResetLater(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class ch.qos.logback.core.LifeCycleManager { void register(ch.qos.logback.core.spi.LifeCycle); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.LifeCycleManager { void reset(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.app.Service { void onDestroy(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void addBytesToWriteWindow(long); }
-keepclassmembers class ch.qos.logback.core.LifeCycleManager { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeWindowUpdateLater(int,long); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void stopExecutorService(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void elementType(java.lang.String,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void attribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int _thresholdSize(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType rootElementType(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { long getBirthTime(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void <init>(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.lang.Object getConfigurationLock(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writePingLater(boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void copyArrays(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.util.Map getCopyOfPropertyMap(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { ch.qos.logback.core.LifeCycleManager getLifeCycleManager(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void parent(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeSynReset(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.util.concurrent.ExecutorService getExecutorService(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(); }
-keepclassmembers class ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writePing(boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.lang.String getName(); }
-keepclassmembers class android.app.ContextImpl$30 { void <init>(); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void initTables(int); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.lang.Object getObject(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.Ping removePing(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeOrphan(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String); }
-keepclassmembers class android.app.ContextImpl$30 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { void <init>(); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void entity(java.lang.String,int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class ch.qos.logback.core.ContextBase { ch.qos.logback.core.status.StatusManager getStatusManager(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void shutdown(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void flush(); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { int getEntity(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void putObject(java.lang.String,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.ContextBase { boolean isStarted(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void mergeChild(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMinusSign(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getURI(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getPrefix(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setPrefix(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void putProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setURI(java.lang.String); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$MenuBuilderCallback { void <init>(android.support.v7.app.ToolbarActionBar); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void register(ch.qos.logback.core.spi.LifeCycle); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void reset(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void setName(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class org.apache.commons.io.filefilter.NotFileFilter { void <init>(org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void close(com.android.okhttp.internal.spdy.ErrorCode,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$MenuBuilderCallback { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPercent(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$TrimMatcher { void <init>(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void start(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class org.apache.commons.io.filefilter.NotFileFilter { boolean accept(java.io.File); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class org.apache.commons.io.filefilter.NotFileFilter { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { int size(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { void stop(); }
-keepclassmembers class ch.qos.logback.core.ContextBase { java.lang.String toString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { int hashCode(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void rehash(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { int getCount(); }
-keepclassmembers class android.app.ActivityThread$ActivityClientRecord { void <init>(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.app.ActivityThread$ActivityClientRecord { boolean isPreHoneycomb(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void setEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { boolean setState(int[]); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { long getItemId(int); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void setHotspot(float,float); }
-keepclassmembers class android.app.ActivityThread$ActivityClientRecord { boolean isPersistable(); }
-keepclassmembers class android.app.ActivityThread$ActivityClientRecord { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { int getIVSize(); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setDigit(char); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { int getItemViewType(int); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { void init(int,byte[],byte[]); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setDecimalSeparator(char); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setGroupingSeparator(char); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setMonetaryDecimalSeparator(char); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setMinusSign(char); }
-keepclassmembers class java.nio.channels.Selector { java.nio.channels.Selector open(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPatternSeparator(char); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { boolean hasStableIds(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { int getViewTypeCount(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { boolean isEmpty(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { boolean isEnabled(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPercent(char); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void sendConnectionHeader(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean pushedStream(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver { com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setExponentSeparator(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setZeroDigit(char); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropDownAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.nio.channels.Selector { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.text.DecimalFormatSymbols { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int _hashToIndex(int); }
-keepclassmembers class android.view.Surface { long nativeLockCanvas(long,android.graphics.Canvas,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushRequestLater(int,java.util.List); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPerMill(char); }
-keepclassmembers class android.view.Surface { void nativeRelease(long); }
-keepclassmembers class android.view.Surface { void nativeUnlockCanvasAndPost(long,android.graphics.Canvas); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { boolean closeMenuOnSubMenuOpened(); }
-keepclassmembers class android.view.Surface { void nativeAllocateBuffers(long); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayIterator { boolean hasNext(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.view.Surface { long nativeReadFromParcel(long,android.os.Parcel); }
-keepclassmembers class android.view.Surface { boolean nativeIsValid(long); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayIterator { void <init>(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver { java.lang.String idFromValue(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushHeadersLater(int,java.util.List,boolean); }
-keepclassmembers class android.view.Surface { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int calcHash(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int calcHash(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { android.graphics.Rect getEpicenterBounds(); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { boolean isCBC(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayIterator { java.util.Iterator iterator(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushDataLater(int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CTR { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplApi24 { void <init>(); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { java.lang.String findSymbol(char[],int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushResetLater(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.Surface { void release(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void <init>(); }
-keepclassmembers class javax.crypto.SecretKeyFactory { void <init>(javax.crypto.SecretKeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$800(com.android.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder,com.android.okhttp.internal.spdy.SpdyConnection$1); }
-keepclassmembers class javax.crypto.SecretKeyFactory { javax.crypto.SecretKeyFactory getInstance(java.lang.String); }
-keepclassmembers class android.view.Surface { void destroy(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext); }
-keepclassmembers class android.view.Surface { boolean isValid(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void <init>(com.fasterxml.jackson.core.JsonFactory); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1100(com.android.okhttp.internal.spdy.SpdyConnection,com.android.okhttp.internal.spdy.ErrorCode,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.view.Surface { int getGenerationId(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { boolean maybeDirty(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.lang.String access$1000(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1200(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int hashSeed(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1300(com.android.okhttp.internal.spdy.SpdyConnection,int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void reportTooManyCollisions(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1400(com.android.okhttp.internal.spdy.SpdyConnection,int,java.util.List,boolean); }
-keepclassmembers class android.view.Surface { android.graphics.Canvas lockCanvas(android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1600(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1602(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { void release(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.Map access$1800(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1700(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1500(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.concurrent.ExecutorService access$2000(); }
-keepclassmembers class android.view.Surface { void unlockCanvasAndPost(android.graphics.Canvas); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2100(com.android.okhttp.internal.spdy.SpdyConnection,int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class javax.crypto.SecretKeyFactory { javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer { int size(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$NumberType { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$2200(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class android.view.Surface { void unlockSwCanvasAndPost(android.graphics.Canvas); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.Ping access$2300(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1502(com.android.okhttp.internal.spdy.SpdyConnection,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2400(com.android.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.IncomingStreamHandler access$1900(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2500(com.android.okhttp.internal.spdy.SpdyConnection,int,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$NumberType { com.fasterxml.jackson.core.JsonParser$NumberType[] values(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$2202(com.android.okhttp.internal.spdy.SpdyConnection,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$NumberType { void <init>(java.lang.String,int); }
-keepclassmembers class javax.crypto.SecretKeyFactory { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.PushObserver access$2600(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandPassword { it.skarafaz.mercury.ssh.SshCommandDrop getDrop(); }
-keepclassmembers class android.view.Surface { void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator); }
-keepclassmembers class ch.qos.logback.core.rolling.helper.IntegerTokenConverter { void <init>(); }
-keepclassmembers class android.text.Layout$1 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.Set access$2700(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForComplexProperty { void <init>(ch.qos.logback.core.joran.util.PropertySetter,ch.qos.logback.core.util.AggregationType,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForComplexProperty { ch.qos.logback.core.util.AggregationType getAggregationType(); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForComplexProperty { java.lang.String getComplexPropertyName(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandPassword { void <init>(java.lang.String,it.skarafaz.mercury.ssh.SshCommandDrop); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForComplexProperty { java.lang.Object getNestedComplexProperty(); }
-keepclassmembers class android.app.ContextImpl$28 { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandPassword { java.lang.String getMessage(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void <init>(com.fasterxml.jackson.databind.ObjectMapper); }
-keepclassmembers class ch.qos.logback.core.joran.action.IADataForComplexProperty { void setNestedComplexProperty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.app.ContextImpl$28 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$3 { boolean onForwardingStarted(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class java.nio.charset.MalformedInputException { void <init>(int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$3 { void <init>(android.support.v7.widget.ActivityChooserView,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { void <init>(); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$3 { boolean onForwardingStopped(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$3 { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeAlpha(int,int); }
-keepclassmembers class android.view.Surface { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$2 { void <init>(android.support.v4.widget.ViewDragHelper); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper$2 { void run(); }
-keepclassmembers class java.nio.charset.MalformedInputException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeColors(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeComponent(int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { int getSystemWindowInsetBottom(java.lang.Object); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class android.view.Surface { void setNativeObjectLocked(long); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { boolean isConsumed(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { int getSystemWindowInsetTop(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { int getSystemWindowInsetLeft(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback$1 { void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { int getSystemWindowInsetRight(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatBaseImpl { android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(java.lang.Object,int,int,int,int); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$ViewDragCallback$1 { void run(); }
-keepclassmembers class android.view.Surface { void allocateBuffers(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <init>(java.lang.Object); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class android.view.Surface { void checkNotReleasedLocked(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int setAlphaComponent(int,int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { void <init>(int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { java.lang.Object getToken(); }
-keepclassmembers class java.io.FileInputStream { java.nio.channels.FileChannel getChannel(); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLSerializers { void <init>(); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLSerializers { com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.view.Surface { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class android.transition.Fade$FadeAnimatorListener { void <init>(android.view.View); }
-keepclassmembers class android.transition.Fade$FadeAnimatorListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder addNextIntent(android.content.Intent); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { java.text.DateFormat _dateFormat(); }
-keepclassmembers class android.transition.Fade$FadeAnimatorListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.nio.ServerSocketChannelImpl$ServerSocketAdapter { void <init>(java.nio.ServerSocketChannelImpl); }
-keepclassmembers class ch.qos.logback.core.net.SyslogAppenderBase { int facilityStringToint(java.lang.String); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder addParentStack(android.app.Activity); }
-keepclassmembers class android.transition.Fade$FadeAnimatorListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class android.app.job.IJobScheduler$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder addParentStack(android.content.ComponentName); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class org.greenrobot.eventbus.meta.AbstractSubscriberInfo { void <init>(java.lang.Class,java.lang.Class,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SubscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.Fade$FadeAnimatorListener { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class java.nio.ServerSocketChannelImpl$ServerSocketAdapter { void close(); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void <init>(java.net.URL,com.android.okhttp.OkHttpClient); }
-keepclassmembers class org.greenrobot.eventbus.meta.AbstractSubscriberInfo { org.greenrobot.eventbus.SubscriberMethod createSubscriberMethod(java.lang.String,java.lang.Class,org.greenrobot.eventbus.ThreadMode,int,boolean); }
-keepclassmembers class brut.androlib.res.decoder.ResAttrDecoder { void <init>(); }
-keepclassmembers class brut.androlib.res.decoder.ResAttrDecoder { java.lang.String decode(int,int,java.lang.String,int); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class org.greenrobot.eventbus.meta.AbstractSubscriberInfo { java.lang.Class getSubscriberClass(); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.greenrobot.eventbus.meta.AbstractSubscriberInfo { org.greenrobot.eventbus.meta.SubscriberInfo getSuperSubscriberInfo(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void <init>(com.android.okhttp.internal.http.HttpURLConnectionImpl); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcel,android.widget.ProgressBar$1); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { void <init>(); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class java.lang.ref.Reference { void <init>(); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.ref.Reference { void clear(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class ch.qos.logback.classic.pattern.NamedConverter { void start(); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class ch.qos.logback.classic.pattern.NamedConverter { void <init>(); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class android.view.Surface$1 { void <init>(); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { void <init>(android.media.MediaRouterClientState$RouteInfo); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setUseCaches(boolean); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.text.style.StyleSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { com.fasterxml.jackson.databind.JsonNode getNullValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { boolean sendMultichoiceCallback(); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void <init>(int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void await(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void countDown(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer { java.lang.Object getNullValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.view.animation.LayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(java.lang.StringToReal$1); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { float specialValue(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.util.WeakHashMap initialValue(); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void checkIfListInitScroll(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { boolean sendSingleChoiceCallback(android.view.View); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void edgeReached(int); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { android.view.View inflate(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void dismiss(); }
-keepclassmembers class android.view.ViewRootImpl$3 { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.ViewRootImpl$3 { void doFrame(long); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void run(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean); }
-keepclassmembers class libcore.net.event.NetworkEventListener { void <init>(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { com.afollestad.materialdialogs.internal.MDButton getActionButton(com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo { void <clinit>(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object getValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void connect(); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void setVisibility(int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <init>(java.util.Date,java.util.Date); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotAfter(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object getKey(); }
-keepclassmembers class android.app.ContextImpl$25 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.app.ContextImpl$25 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$100(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotBefore(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$000(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { boolean isBackReference(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.io.ObjectOutputStream { void computePutField(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty { boolean isManagedReference(); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteObject(); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class java.io.ObjectOutputStream { void drain(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onClickImpl(); }
-keepclassmembers class java.io.ObjectOutputStream { void checkWritePrimitiveTypes(); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class java.io.ObjectOutputStream { int dumpCycle(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$TriggerLongPress { void <init>(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { android.widget.OverScroller access$1600(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$TriggerLongPress { void run(); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$TriggerLongPress { void <init>(android.widget.ListPopupWindow$ForwardingListener,android.widget.ListPopupWindow$1); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.io.ObjectOutputStream { int nextHandle(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setCompletionHint(java.lang.CharSequence); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void <init>(com.jcraft.jsch.Session,java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectOutputStream$PutField putFields(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { android.widget.EditText getInputEditText(); }
-keepclassmembers class java.io.ObjectOutputStream { int registerObjectWritten(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void removeUnsharedReference(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { android.graphics.drawable.Drawable getListSelector(); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationFeature { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.RuleStore,ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void <clinit>(); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void resetState(); }
-keepclassmembers class java.io.ObjectOutputStream { void resetSeenObjects(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void callEndAction(java.util.List,java.lang.String); }
-keepclassmembers class java.util.AbstractList { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void callBodyAction(java.util.List,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.AbstractList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { java.lang.Class getActiveView(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.Bitmap); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void invalidateInputMinMaxIndicator(int,boolean); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { com.jcraft.jsch.PortWatcher addPort(com.jcraft.jsch.Session,java.lang.String,int,java.lang.String,int,com.jcraft.jsch.ServerSocketFactory); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.SerializationConfig getConfig(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.cfg.MapperConfig getConfig(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void pushEmptyActionList(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { int getThreshold(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { android.view.View getView(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { java.util.Locale getLocale(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeChar(int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeCyclicReference(int); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void delPort(com.jcraft.jsch.Session); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { java.util.TimeZone getTimeZone(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldDescriptors(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class java.util.AbstractList { java.lang.Object remove(int); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(java.io.InputStream); }
-keepclassmembers class java.util.AbstractList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,java.io.InputStream); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFields(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void addImplicitAction(ch.qos.logback.core.joran.action.ImplicitAction); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationFeature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void invalidateList(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.io.EmulatedFieldsForDumping); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { void <init>(com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationFeature { com.fasterxml.jackson.databind.DeserializationFeature[] values(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationFeature { boolean enabledByDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationFeature { int getMask(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializerProvider { boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.lang.String,org.apache.commons.io.IOCase); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void characters(ch.qos.logback.core.joran.event.BodyEvent); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void endElement(ch.qos.logback.core.joran.event.EndEvent); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(int); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { com.jcraft.jsch.PortWatcher getPort(com.jcraft.jsch.Session,java.lang.String,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.util.List); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { java.util.List getApplicableActionList(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.util.AbstractList { java.util.List subList(int,int); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.util.List,org.apache.commons.io.IOCase); }
-keepclassmembers class android.location.ILocationManager$Stub { android.location.ILocationManager asInterface(android.os.IBinder); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { ch.qos.logback.core.joran.spi.EventPlayer getEventPlayer(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { ch.qos.logback.core.joran.spi.InterpretationContext getInterpretationContext(); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.lang.String[]); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { org.xml.sax.Locator getLocator(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void doBeforeTextChanged(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { ch.qos.logback.core.joran.spi.RuleStore getRuleStore(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void doAfterTextChanged(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { java.lang.String getTagName(java.lang.String,java.lang.String); }
-keepclassmembers class android.location.GpsSatellite { void <init>(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { java.util.List lookupImplicitAction(ch.qos.logback.core.joran.spi.ElementPath,org.xml.sax.Attributes,ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class java.nio.FileChannelImpl$1 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.nio.channels.FileLock,java.nio.channels.FileLock); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig(); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { void <init>(java.lang.String[],org.apache.commons.io.IOCase); }
-keepclassmembers class android.widget.AutoCompleteTextView { void clearListSelection(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean isPopupShowing(); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { boolean accept(java.io.File); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performFiltering(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(); }
-keepclassmembers class android.widget.AutoCompleteTextView { java.lang.CharSequence convertSelectionToString(java.lang.Object); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(android.view.View,int,long); }
-keepclassmembers class ch.qos.logback.core.joran.spi.Interpreter { void startElement(ch.qos.logback.core.joran.event.StartEvent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class org.apache.commons.io.filefilter.NameFileFilter { java.lang.String toString(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.util.PathParser$PathDataNode { void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { java.util.Collection properties(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFloat(float); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setText(java.lang.CharSequence,boolean); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.util.PathParser$PathDataNode { void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator { com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class android.widget.AutoCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.Collections$1 { void <init>(); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer { void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateMirrorMatrix(float); }
-keepclassmembers class java.util.Collections$1 { void remove(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void <init>(); }
-keepclassmembers class java.lang.LinkageError { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer { void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewArray(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,java.lang.Class,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onAttachedToWindow(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onDetachedFromWindow(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void dismissDropDown(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void run(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.app.SharedElementCallback getListener(android.app.Activity,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void ensureImeVisible(boolean); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void delete(); }
-keepclassmembers class android.transition.ChangeBounds$8 { void <init>(android.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { org.apache.commons.lang3.text.translate.UnicodeEscaper between(int,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeLong(long); }
-keepclassmembers class android.transition.ChangeBounds$8 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.widget.AutoCompleteTextView { void showDropDown(); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { org.w3c.dom.Document parse(org.xml.sax.InputSource); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stopCancel(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void onShow(android.content.DialogInterface); }
-keepclassmembers class android.net.IConnectivityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void access$001(android.support.v7.widget.AppCompatSpinner$DropdownPopup); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void delayCancel(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void computeContentWidth(); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void parse(org.kxml2.io.KXmlParser,org.apache.harmony.xml.dom.DocumentImpl,org.w3c.dom.Node,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.AutoCompleteTextView$Validator getValidator(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void buildImeCompletions(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performValidation(); }
-keepclassmembers class android.transition.ChangeBounds$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.jcraft.jsch.PortWatcher { void setConnectTimeout(int); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$SupportManagerFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.widget.AutoCompleteTextView { void access$500(android.widget.AutoCompleteTextView,android.view.View,int,long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.Filter getFilter(); }
-keepclassmembers class android.widget.FastScroller$1 { void run(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void access$600(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class org.greenrobot.eventbus.EventBus$1 { void <init>(org.greenrobot.eventbus.EventBus); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getAlpha(); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$SupportManagerFragment { void onEventMainThread(org.greenrobot.eventbus.util.ThrowableFailureEvent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.view.ViewPropertyAnimator$1 { void run(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$SupportManagerFragment { void onPause(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus$1 { org.greenrobot.eventbus.EventBus$PostingThreadState initialValue(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager$SupportManagerFragment { void onResume(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonGeneratorDelegate { void <init>(com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stop(); }
-keepclassmembers class android.view.ViewPropertyAnimator$1 { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExit(int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewClass(java.lang.Class,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,long); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonGeneratorDelegate { void <init>(com.fasterxml.jackson.core.JsonGenerator,boolean); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase { void calculateXYValues(android.graphics.Path,float[],float[]); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void fadeOutBackground(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { java.lang.Object readValue(java.io.File,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { boolean isVisibleToUser(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExitTransition(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewClassDesc(java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.content.res.ColorStateList getTint(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$1 { void <init>(android.support.v7.widget.ActionBarOverlayLayout); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.PorterDuff$Mode getTintMode(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewException(java.lang.Exception); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getExitTransition(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void show(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup { void setPromptText(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewObject(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyState(android.content.res.TypedArray); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean isReadyToNotify(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatBase { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void exitTransitionComplete(); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void setInternalInputCallback(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void waitUntilReadable(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void notifyComplete(); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewString(java.lang.String,boolean); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void receive(com.android.okio.BufferedSource,long); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUnshared(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { int writeObjectInternal(java.lang.Object,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void appendText(org.apache.harmony.xml.dom.DocumentImpl,org.w3c.dom.Node,int,java.lang.String); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void setIgnoreComments(boolean); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void setIgnoreElementContentWhitespace(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finish(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finishIfNecessary(); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { java.lang.String resolvePredefinedOrCharacterEntity(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void setCoalescing(boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getViewsTransition(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonGeneratorDelegate { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void setNamespaceAware(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean moveSharedElementWithParent(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void setTypeface(android.widget.TextView,android.graphics.Typeface); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void checkNotClosed(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$200(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void initializeWithState(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.util.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { java.lang.String resolveCharacterReference(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,long,com.android.okhttp.internal.spdy.SpdyStream$1); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void <init>(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$502(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$600(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog { void show(); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask { boolean isCancelled(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$100(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$500(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandConfirm(it.skarafaz.mercury.event.SshCommandConfirm); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$700(android.app.ExitTransitionCoordinator); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { boolean access$000(it.skarafaz.mercury.activity.MainEventSubscriber,java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$800(android.app.ExitTransitionCoordinator); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { boolean isConnectionStringValid(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$102(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean); }
-keepclassmembers class com.android.okio.RealBufferedSource { void <init>(com.android.okio.Source,com.android.okio.OkBuffer); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderImpl { void <clinit>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.animation.ObjectAnimator access$902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1200(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1002(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class com.android.okio.RealBufferedSource { void <init>(com.android.okio.Source); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$1100(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.os.Bundle access$1300(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.android.okio.RealBufferedSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.android.okio.RealBufferedSource { com.android.okio.OkBuffer buffer(); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectStreamClass writeEnumDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.content.ClipData$1 { android.content.ClipData createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandEnd(it.skarafaz.mercury.event.SshCommandEnd); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ClipData$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.CoreConstants { void <clinit>(); }
-keepclassmembers class com.android.okio.RealBufferedSource { boolean exhausted(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandMessage(it.skarafaz.mercury.event.SshCommandMessage); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { it.skarafaz.mercury.manager.LoadConfigFilesStatus doInBackground(java.lang.Void[]); }
-keepclassmembers class android.app.ActivityThread$ApplicationThread { void <init>(android.app.ActivityThread); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandPassword(it.skarafaz.mercury.event.SshCommandPassword); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { void <init>(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.android.okio.RealBufferedSource { void require(long); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewEnum(java.lang.Object,java.lang.Class,boolean); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class com.android.okio.RealBufferedSource { byte readByte(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { void onPostExecute(it.skarafaz.mercury.manager.LoadConfigFilesStatus); }
-keepclassmembers class android.text.method.Touch { boolean isActivelySelecting(android.text.Spannable); }
-keepclassmembers class android.database.sqlite.SQLiteDiskIOException { void <init>(); }
-keepclassmembers class com.android.okio.RealBufferedSource { com.android.okio.ByteString readByteString(long); }
-keepclassmembers class android.database.sqlite.SQLiteDiskIOException { void <init>(java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.lang.String readUtf8LineStrict(); }
-keepclassmembers class android.text.method.Touch { boolean isSelectionStarted(android.text.Spannable); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean beginBatchEdit(); }
-keepclassmembers class java.util.ResourceBundle { java.util.MissingResourceException missingResourceException(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { void <init>(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandPubKeyInput(it.skarafaz.mercury.event.SshCommandPubKeyInput); }
-keepclassmembers class com.android.okio.RealBufferedSource { int readIntLe(); }
-keepclassmembers class com.android.okio.RealBufferedSource { int readInt(); }
-keepclassmembers class com.android.okio.RealBufferedSource { short readShortLe(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class com.android.okio.RealBufferedSource { short readShort(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandStart(it.skarafaz.mercury.event.SshCommandStart); }
-keepclassmembers class com.android.okio.RealBufferedSource { void skip(long); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean endBatchEdit(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void reportFinish(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber { void onSshCommandYesNo(it.skarafaz.mercury.event.SshCommandYesNo); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.util.ResourceBundle { java.lang.ClassLoader getLoader(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$2 { void onPreExecute(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { void doFinal(byte[],int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.io.InputStream inputStream(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSource { long indexOf(byte); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okio.RealBufferedSource { void close(); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { void init(byte[]); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { void update(byte[],int,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { int getBlockSize(); }
-keepclassmembers class android.util.PathParser$PathDataNode { char access$100(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.util.PathParser$PathDataNode { float[] access$200(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs { android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[],android.util.PathParser$1); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA1 { void update(int); }
-keepclassmembers class android.app.NotificationManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class com.android.okio.RealBufferedSource { boolean access$000(com.android.okio.RealBufferedSource); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParseException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable); }
-keepclassmembers class android.app.NotificationManager { android.app.NotificationManager from(android.content.Context); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimation(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParseException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getOrder(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void <init>(android.content.Context,android.view.View,int,int,boolean); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimationForView(android.view.View); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void start(); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2$1 { void <init>(android.support.v7.view.menu.CascadingMenuPopup$2,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class java.util.TreeMap$1 { void <init>(); }
-keepclassmembers class java.security.KeyException { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2$1 { void run(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean isDone(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.view.animation.LayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$4 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.support.v7.widget.MenuPopupWindow createPopupWindow(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.Executors$FinalizableDelegatedExecutorService { void <init>(java.util.concurrent.ExecutorService); }
-keepclassmembers class com.android.okhttp.internal.Platform { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class com.android.okhttp.internal.Platform { com.android.okhttp.internal.Platform get(); }
-keepclassmembers class com.android.okhttp.internal.Platform { void logW(java.lang.String); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.Platform { java.net.URI toUriLenient(java.net.URL); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener { android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets); }
-keepclassmembers class com.android.okhttp.internal.Platform { void untagSocket(java.net.Socket); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle handleGetBundle(boolean,java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class android.hardware.SerialManager { void <init>(android.content.Context,android.hardware.ISerialManager); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.android.okhttp.internal.Platform { void tagSocket(java.net.Socket); }
-keepclassmembers class com.android.okhttp.internal.Platform { void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { void supportTlsIntolerantServer(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.text.Html$HtmlParser { org.ccil.cowan.tagsoup.HTMLSchema access$000(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers { com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class); }
-keepclassmembers class android.text.Html$HtmlParser { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat { void <init>(android.animation.Animator); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { boolean isEnabled(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void <init>(long,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void start(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void writeSnapshot(java.lang.String,android.content.pm.PackageInfo); }
-keepclassmembers class android.app.NotificationManager { void <clinit>(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int following(int); }
-keepclassmembers class com.android.okhttp.internal.Platform { com.android.okio.ByteString getNpnSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class libcore.icu.NativeBreakIterator { java.text.CharacterIterator getText(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { int getInitialMenuPosition(); }
-keepclassmembers class android.net.IConnectivityManager$Stub$Proxy { android.net.ProxyInfo getDefaultProxy(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { int getNextMenuPosition(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String,java.text.CharacterIterator); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class java.util.ResourceBundle { java.util.Hashtable getLoaderCache(java.lang.Object); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { void setNpnProtocols(javax.net.ssl.SSLSocket,java.util.List); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean hasText(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectMapper { void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void showMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class com.android.okhttp.internal.Platform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundary(int); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream); }
-keepclassmembers class com.android.okhttp.internal.Platform { byte[] concatLengthPrefixed(java.util.List); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int preceding(int); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale strip(java.util.Locale); }
-keepclassmembers class com.android.okhttp.internal.Platform { java.lang.String getPrefix(); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class android.app.SearchableInfo { java.lang.String getSuggestAuthority(); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,long); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.String); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.Object[]); }
-keepclassmembers class libcore.icu.NativeBreakIterator { libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class android.app.SearchableInfo { android.content.ComponentName getSearchActivity(); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void <clinit>(); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { void access$000(java.lang.String,android.content.pm.PackageInfo); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setTextImpl(long,java.lang.String); }
-keepclassmembers class java.util.ResourceBundle { void setLocale(java.util.Locale); }
-keepclassmembers class libcore.icu.NativeBreakIterator { long getWordInstanceImpl(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int currentImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int precedingImpl(long,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ToStringSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ToStringSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundaryImpl(long,java.lang.String,int); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int followingImpl(long,java.lang.String,int); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context getActivityContext(android.content.Context); }
-keepclassmembers class android.app.SearchableInfo { int getSuggestThreshold(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ToStringSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration { java.util.concurrent.atomic.AtomicBoolean access$100(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getOSMatchesName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ToStringSerializer { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context createActivityContext(android.content.Context,android.content.ComponentName); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ToStringSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getOSMatches(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getJavaVersionMatches(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { java.lang.String getSystemProperty(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { void <init>(); }
-keepclassmembers class android.support.v4.widget.ListViewCompatGingerbread { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { long getFrameDelay(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context getProviderContext(android.content.Context,android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { void addToWatchList(java.net.URL); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isJavaVersionMatch(java.lang.String,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { void addAsFileToWatch(java.net.URL); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { boolean changeDetected(); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void computeHash(int[]); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticInputStage { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { void clear(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void addMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { void <init>(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { java.io.File convertToFile(java.net.URL); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean closeMenuOnSubMenuOpened(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isOSNameMatch(java.lang.String,java.lang.String); }
-keepclassmembers class android.telephony.Rlog { int v(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void dismiss(); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.telephony.Rlog { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.telephony.Rlog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticInputStage { void onDeliverToNext(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.database.sqlite.SQLiteConstraintException { void <init>(); }
-keepclassmembers class android.telephony.Rlog { int v(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class android.telephony.Rlog { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.widget.ListView getListView(); }
-keepclassmembers class android.view.Choreographer { void removeCallbacks(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { java.util.List getCopyOfFileWatchList(); }
-keepclassmembers class android.database.sqlite.SQLiteConstraintException { void <init>(java.lang.String); }
-keepclassmembers class android.telephony.Rlog { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean isShowing(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { void setMainURL(java.net.URL); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ConfigurationWatchList { java.net.URL getMainURL(); }
-keepclassmembers class android.os.ParcelUuid$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void <init>(com.fasterxml.jackson.databind.util.Converter); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.String _calcName(java.lang.Class); }
-keepclassmembers class android.telephony.Rlog { int e(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.telephony.Rlog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void updateHash(int[],byte[],int,int); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.app.SearchableInfo { void addActionKey(android.app.SearchableInfo$ActionKeyInfo); }
-keepclassmembers class android.app.SearchableInfo { android.app.SearchableInfo$ActionKeyInfo findActionKey(int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.String _desc(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void <init>(java.lang.Class,com.fasterxml.jackson.databind.util.Converter); }
-keepclassmembers class android.view.Choreographer { long getFrameTime(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,com.fasterxml.jackson.databind.PropertyMetadata); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.String _valueDesc(); }
-keepclassmembers class android.view.Choreographer { long getFrameTimeNanos(); }
-keepclassmembers class android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { java.lang.Object convertValue(java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.ISessionController); }
-keepclassmembers class android.support.v4.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.util.Calendar constructCalendar(java.util.Date); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.jcraft.jsch.jce.MD5 { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class com.jcraft.jsch.jce.MD5 { byte[] digest(); }
-keepclassmembers class com.jcraft.jsch.jce.MD5 { int getBlockSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.MD5 { void update(byte[],int,int); }
-keepclassmembers class com.jcraft.jsch.jce.MD5 { void init(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.Choreographer { void doFrame(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(com.fasterxml.jackson.databind.deser.CreatorProperty,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void onDismiss(); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.MediaSession$Token); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,int,java.lang.Object,boolean); }
-keepclassmembers class android.app.AlarmManager { long legacyExactLength(); }
-keepclassmembers class android.view.Choreographer { void doCallbacks(int,long); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.app.AlarmManager { void <init>(android.app.IAlarmManager,android.content.Context); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.app.AlarmManager { void set(int,long,android.app.PendingIntent); }
-keepclassmembers class android.app.AlarmManager { void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.app.AlarmManager { void setImpl(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.lang.Class getActiveView(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.RawSerializer { void <init>(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.core.Base64Variant getBase64Variant(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.DeserializationConfig getConfig(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.text.DateFormat getDateFormat(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void resolve(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.cfg.MapperConfig getConfig(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.Choreographer { void doScheduleVsync(); }
-keepclassmembers class android.app.SearchableInfo { int getHintId(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.RawSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.util.Locale getLocale(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.RawSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { int getCreatorIndex(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { java.lang.Object getInjectableValueId(); }
-keepclassmembers class android.app.AlarmManager { void setTime(long); }
-keepclassmembers class android.app.SearchableInfo { boolean getVoiceSearchLaunchWebSearch(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setGravity(int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.core.JsonParser getParser(); }
-keepclassmembers class android.app.SearchableInfo { boolean getVoiceSearchEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.util.TimeZone getTimeZone(); }
-keepclassmembers class android.transition.VisibilityPropagation { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class android.transition.VisibilityPropagation { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.Choreographer { void doScheduleCallback(int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonDeserializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory(); }
-keepclassmembers class android.app.SearchableInfo { boolean getVoiceSearchLaunchRecognizer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.SearchableInfo { int getVoiceLanguageId(); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class android.app.SearchableInfo { int getVoiceMaxResults(); }
-keepclassmembers class android.app.SearchableInfo { int getVoiceLanguageModeId(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class android.app.SearchableInfo { int getInputType(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class android.app.SearchableInfo { int getVoicePromptTextId(); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.UserAuth { void <init>(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.UserAuth { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void show(); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer { com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.transition.VisibilityPropagation { int getViewVisibility(android.transition.TransitionValues); }
-keepclassmembers class android.transition.VisibilityPropagation { java.lang.String[] getPropagationProperties(); }
-keepclassmembers class android.app.SearchableInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Matrix$1 { void oops(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.deser.CreatorProperty withFallbackSetter(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { java.lang.String toString(); }
-keepclassmembers class android.transition.VisibilityPropagation { int getViewY(android.transition.TransitionValues); }
-keepclassmembers class android.app.SearchableInfo { int getImeOptions(); }
-keepclassmembers class android.graphics.Matrix$1 { void set(android.graphics.Matrix); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.deser.CreatorProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.transition.VisibilityPropagation { int getViewX(android.transition.TransitionValues); }
-keepclassmembers class android.transition.VisibilityPropagation { int getViewCoordinate(android.transition.TransitionValues,int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class java.security.spec.RSAPrivateKeySpec { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.transition.VisibilityPropagation { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi23 { int getWindowLayoutType(android.widget.PopupWindow); }
-keepclassmembers class android.view.Choreographer { java.lang.Object access$400(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.CreatorProperty { com.fasterxml.jackson.databind.deser.CreatorProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable); }
-keepclassmembers class android.os.MessageQueue { long nativeInit(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi23 { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.os.MessageQueue { void nativePollOnce(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer { void <init>(java.lang.reflect.Method); }
-keepclassmembers class android.os.MessageQueue { void nativeWake(long); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi23 { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class android.os.MessageQueue { void nativeDestroy(long); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer { java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.os.MessageQueue { void addIdleHandler(android.os.MessageQueue$IdleHandler); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { android.support.v7.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class android.os.MessageQueue { void removeIdleHandler(android.os.MessageQueue$IdleHandler); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer(); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { int getMaxActionButtons(); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class android.app.SearchableInfo { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class); }
-keepclassmembers class android.os.MessageQueue { void <init>(boolean); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { int getEmbeddedMenuWidthLimit(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Void doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature); }
-keepclassmembers class android.os.MessageQueue { void dispose(); }
-keepclassmembers class android.os.MessageQueue { android.os.Message next(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException failedVerification(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String); }
-keepclassmembers class android.graphics.Matrix$1 { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class android.widget.SearchView$4 { void <init>(android.widget.SearchView); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean showsOverflowMenuButton(); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(java.lang.String,java.util.jar.Manifest,java.util.HashMap); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket { java.lang.String access$200(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket { void <init>(java.lang.String,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class android.location.LocationManager { void <init>(android.content.Context,android.location.ILocationManager); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$NotImplementedException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket { int access$000(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket { java.lang.String has(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket { com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket access$100(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket); }
-keepclassmembers class android.os.MessageQueue { void quit(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { void reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.jar.JarVerifier { void verifyCertificate(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { java.util.Date parseDate(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]); }
-keepclassmembers class android.os.MessageQueue { int enqueueSyncBarrier(long); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { boolean readCertificates(); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.ValueNode booleanNode(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.core.TreeNode get(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String); }
-keepclassmembers class android.os.MessageQueue { void removeSyncBarrier(int); }
-keepclassmembers class javax.xml.datatype.FactoryFinder$ConfigurationError { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.content.ContentProvider$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel$DefaultSorter { void <init>(android.support.v7.widget.ActivityChooserModel); }
-keepclassmembers class android.os.MessageQueue { boolean enqueueMessage(android.os.Message,long); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String); }
-keepclassmembers class javax.xml.datatype.FactoryFinder$ConfigurationError { java.lang.Exception getException(); }
-keepclassmembers class android.transition.SidePropagation { long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NullNode nullNode(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.core.TreeNode get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NumericNode numberNode(double); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NumericNode numberNode(float); }
-keepclassmembers class android.transition.SidePropagation { void setSide(int); }
-keepclassmembers class android.transition.SidePropagation { void <init>(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NumericNode numberNode(long); }
-keepclassmembers class java.util.jar.JarVerifier { boolean isSignedJar(); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.content.Context,int); }
-keepclassmembers class java.util.jar.JarVerifier { boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NumericNode numberNode(int); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigDecimal); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow { void dismiss(); }
-keepclassmembers class java.util.jar.JarVerifier { void removeMetaEntries(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationContext { com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.os.MessageQueue { boolean hasMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.IgnoredPropertyException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection); }
-keepclassmembers class android.transition.SidePropagation { int distance(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeCollation { int next(long); }
-keepclassmembers class android.app.IWallpaperManager$Stub { android.app.IWallpaperManager asInterface(android.os.IBinder); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class libcore.icu.NativeCollation { void setText(long,java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { void <init>(java.lang.String); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(long,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.IgnoredPropertyException { com.fasterxml.jackson.databind.exc.IgnoredPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDTintHelper { android.content.res.ColorStateList createEditTextColorStateList(android.content.Context,int); }
-keepclassmembers class android.app.ActivityThread$ApplicationThread { void <init>(android.app.ActivityThread,android.app.ActivityThread$1); }
-keepclassmembers class org.apache.harmony.security.x509.Time { void <clinit>(); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class libcore.icu.Transliterator { long create(java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDTintHelper { void setCursorTint(android.widget.EditText,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NodeCursor$Object { void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void <clinit>(); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class android.transition.SidePropagation { int getMaxDistance(android.view.ViewGroup); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$1 { void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.util.DisplayMetrics { boolean equals(android.util.DisplayMetrics); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class org.apache.commons.io.filefilter.AbstractFileFilter { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void dispatchPresenterUpdate(boolean); }
-keepclassmembers class android.util.DisplayMetrics { boolean equalsPhysical(android.util.DisplayMetrics); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.WritableObjectId { java.lang.Object generateId(java.lang.Object); }
-keepclassmembers class android.util.DisplayMetrics { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.filefilter.AbstractFileFilter { boolean accept(java.io.File,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$1 { void run(); }
-keepclassmembers class org.apache.commons.io.filefilter.AbstractFileFilter { boolean accept(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.WritableObjectId { void <init>(com.fasterxml.jackson.annotation.ObjectIdGenerator); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.WritableObjectId { void writeAsField(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class android.os.OperationCanceledException { void <init>(java.lang.String); }
-keepclassmembers class android.os.OperationCanceledException { void <init>(); }
-keepclassmembers class org.apache.commons.io.filefilter.AbstractFileFilter { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.app.SharedPreferencesImpl$1 { void <init>(android.app.SharedPreferencesImpl,java.lang.String); }
-keepclassmembers class android.os.MessageQueue { void removeCallbacksAndMessages(android.os.Handler,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.WritableObjectId { boolean writeAsId(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class android.util.DisplayMetrics { int hashCode(); }
-keepclassmembers class android.util.DisplayMetrics { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ContainerNode { com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class android.app.ContextImpl$19 { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDTintHelper { void setTint(android.widget.EditText,int); }
-keepclassmembers class android.app.ContextImpl$19 { java.lang.Object createStaticService(); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class android.os.MessageQueue { void removeAllMessagesLocked(); }
-keepclassmembers class android.support.v4.media.VolumeProviderCompatApi21 { java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDTintHelper { void setTint(android.widget.ProgressBar,int,boolean); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDTintHelper { void setTint(android.widget.ProgressBar,int); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void run(); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.content.Intent$1 { android.content.Intent createFromParcel(android.os.Parcel); }
-keepclassmembers class ch.qos.logback.core.subst.Node$1 { void <clinit>(); }
-keepclassmembers class android.os.MessageQueue { void removeAllFutureMessagesLocked(); }
-keepclassmembers class android.content.Intent$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.emoji.EmojiFactory { android.emoji.EmojiFactory newAvailableInstance(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathSegments getPathSegments(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { byte[] getEncoded(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base { void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { java.util.List getExtendedKeyUsage(); }
-keepclassmembers class android.app.Dialog$1 { void <init>(android.app.Dialog); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.app.Dialog$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] split(java.util.regex.Pattern,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int findInsertIndex(java.util.ArrayList,int); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendDecodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void setLabelFor(android.view.View,int); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <init>(byte[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void setLayoutDirection(android.view.View,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int getOrdering(int); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromDecoded(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$AccessibilityInteractionConnectionManager { void onAccessibilityStateChanged(boolean); }
-keepclassmembers class android.view.ViewRootImpl$AccessibilityInteractionConnectionManager { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart readFrom(android.os.Parcel); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.media.projection.IMediaProjectionManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name2 { void <init>(java.lang.String,int,int,int); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.NativeNormalizer$1 { void <clinit>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void showWithActionPopup(); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$AccessibilityInteractionConnectionManager { void ensureConnection(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name2 { boolean equals(int); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl { int getNestedScrollAxes(android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name2 { boolean equals(int[],int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name2 { boolean equals(int,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewRootImpl$AccessibilityInteractionConnectionManager { void ensureNoConnection(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { void <init>(); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void <init>(com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$HeadIndex { void <init>(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator); }
-keepclassmembers class android.content.ComponentName { java.lang.String getClassName(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setShortcutsVisibleInner(boolean); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper { void <init>(android.service.media.MediaBrowserService$Result); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void <init>(java.util.AbstractList); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(org.xml.sax.InputSource); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readConnectionHeader(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { boolean hasNext(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { java.lang.Object next(); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { boolean nextFrame(com.android.okhttp.internal.spdy.FrameReader$Handler); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.internal.view.BaseSurfaceHolder { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void remove(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.util.Collection deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem add(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void informContextOfURLUsedForConfiguration(ch.qos.logback.core.Context,java.net.URL); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler$1 { void <init>(android.view.ViewRootImpl$SyntheticTouchNavigationHandler); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onHandleMoved(); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void buildInterpreter(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { void <init>(java.lang.String,boolean,java.net.Socket); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler$1 { void run(); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class android.hardware.IConsumerIrService$Stub { android.hardware.IConsumerIrService asInterface(android.os.IBinder); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager getInstance(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { boolean isNumber(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.SpdyConnection$Builder protocol(com.android.okhttp.Protocol); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void <init>(com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(java.io.File); }
-keepclassmembers class com.android.internal.view.BaseSurfaceHolder { android.view.SurfaceHolder$Callback[] getCallbacks(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.JsonSerializer build(); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.SpdyConnection build(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.Protocol access$000(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readHeaders(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.PushObserver access$100(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { com.android.internal.view.IInputMethodClient getClient(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { com.android.internal.view.IInputContext getInputContext(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.IncomingStreamHandler access$300(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.android.internal.view.BaseSurfaceHolder { void ungetCallbacks(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { java.lang.String access$400(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okio.BufferedSource access$500(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.BeanDescription getBeanDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter(); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okio.BufferedSink access$600(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(java.net.URL); }
-keepclassmembers class android.transition.Visibility$2 { void <init>(android.transition.Visibility,boolean,android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { java.lang.Object getFilterId(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { java.util.List readHeaderBlock(short,byte,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { boolean access$200(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class android.transition.Visibility$2 { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.transition.Visibility$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void doConfigure(java.util.List); }
-keepclassmembers class ch.qos.logback.core.pattern.FormatInfo { void <init>(); }
-keepclassmembers class android.content.ComponentName { java.lang.String toShortString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { java.util.List getProperties(); }
-keepclassmembers class android.content.ComponentName { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readData(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.transition.Visibility$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setFilterId(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { java.util.List recallSafeConfiguration(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setConfig(com.fasterxml.jackson.databind.SerializationConfig); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { ch.qos.logback.core.joran.spi.ElementPath initialElementPath(); }
-keepclassmembers class ch.qos.logback.core.pattern.FormatInfo { ch.qos.logback.core.pattern.FormatInfo valueOf(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setProperties(java.util.List); }
-keepclassmembers class ch.qos.logback.core.joran.GenericConfigurator { void registerSafeConfiguration(); }
-keepclassmembers class org.xml.sax.SAXParseException { void <init>(java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void addMenuPresenter(android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder { void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class org.xml.sax.SAXParseException { void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception); }
-keepclassmembers class android.content.ComponentName { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.xml.sax.SAXParseException { void <init>(java.lang.String,java.lang.String,java.lang.String,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPriority(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.view.ViewRootImpl$ViewPreImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class android.content.ComponentName { int compareTo(android.content.ComponentName); }
-keepclassmembers class android.content.ComponentName { int hashCode(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void run(); }
-keepclassmembers class android.view.ViewRootImpl$ViewPreImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readRstStream(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class org.xml.sax.SAXParseException { void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.Exception); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void <init>(libcore.net.url.JarURLConnectionImpl,java.io.InputStream,java.util.jar.JarFile); }
-keepclassmembers class android.view.ViewRootImpl$ViewPreImeInputStage { int processKeyEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void close(); }
-keepclassmembers class org.xml.sax.SAXParseException { void init(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean isFullscreenMode(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$4 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean isActive(android.view.View); }
-keepclassmembers class android.support.v4.widget.ListViewCompatKitKat { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class com.android.internal.view.BaseSurfaceHolder { void setSurfaceFrameSize(int,int); }
-keepclassmembers class org.xml.sax.SAXParseException { int getColumnNumber(); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <init>(); }
-keepclassmembers class org.xml.sax.SAXParseException { int getLineNumber(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void register(); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl { void <init>(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void changeMenuMode(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void <init>(android.content.Context,int,int); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { void <clinit>(); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void addItemView(android.view.View,int); }
-keepclassmembers class android.content.ComponentName { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$4 { java.lang.String transform(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readSettings(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void clearBindingLocked(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void clear(); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer { com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void setInputChannelLocked(android.view.InputChannel); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { void scrollTargetBy(int,int); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class android.content.ComponentName { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.event.EndEvent { void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void clearConnectionLocked(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void close(boolean); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class ch.qos.logback.core.joran.event.EndEvent { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.support.v7.view.menu.MenuPresenter$Callback getCallback(); }
-keepclassmembers class android.view.View$1 { void onClick(android.view.View); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { boolean canTargetScrollVertically(int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void finishInputLocked(); }
-keepclassmembers class android.renderscript.Int4 { void <init>(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { boolean canTargetScrollHorizontally(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPushPromise(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[]); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[]); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void reportFinishInputConnection(android.view.inputmethod.InputConnection); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,boolean); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void notifyInputConnectionFinished(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void <init>(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPing(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 add(android.renderscript.Int4,android.renderscript.Int4); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 add(android.renderscript.Int4,int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouchForwarded(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.widget.AbsListView$1 { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter$1 { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readGoAway(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[]); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void clearCallbacks(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,java.util.HashSet); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean showSoftInput(android.view.View,int,android.os.ResultReceiver); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 sub(android.renderscript.Int4,android.renderscript.Int4); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouchObserved(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer,boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean showSoftInput(android.view.View,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem findItem(int); }
-keepclassmembers class com.google.android.collect.Maps { java.util.HashMap newHashMap(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void showSoftInputUnchecked(int,android.os.ResultReceiver); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 sub(android.renderscript.Int4,int); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readWindowUpdate(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean hideSoftInputFromWindow(android.os.IBinder,int); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void removeStartMessage(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class android.view.animation.Transformation { void set(android.view.animation.Transformation); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class android.view.animation.Transformation { int getTransformationType(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.view.animation.Transformation { void compose(android.view.animation.Transformation); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void close(); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void defer(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean pointInView(android.view.View,float,float,float); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void forward(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { java.lang.String getKeyType(); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { int getState(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[]); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Matrix getMatrix(); }
-keepclassmembers class java.security.KeyPairGeneratorSpi { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { void setAlpha(float); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState { void <clinit>(); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent); }
-keepclassmembers class android.app.JobSchedulerImpl { void <init>(android.app.job.IJobScheduler); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Rect getClipRect(); }
-keepclassmembers class android.view.animation.Transformation { float getAlpha(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 div(android.renderscript.Int4,android.renderscript.Int4); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void enqueue(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void restartInput(android.view.View); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onForwardingStopped(); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void apply(android.view.ViewRootImpl$QueuedInputEvent,int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void onLongPress(); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[]); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewRootImpl$AsyncInputStage { void dequeue(android.view.ViewRootImpl$QueuedInputEvent,android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.app.IAlarmManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void flagActionItems(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean startInputInner(android.os.IBinder,int,int,int); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class org.apache.commons.io.filefilter.FileFilterUtils { java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[]); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class android.app.IAlarmManager$Stub$Proxy { void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getActionItems(); }
-keepclassmembers class android.renderscript.Int4 { android.renderscript.Int4 div(android.renderscript.Int4,int); }
-keepclassmembers class android.app.IAlarmManager$Stub$Proxy { boolean setTime(long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class ch.qos.logback.core.joran.util.PropertySetter$1 { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.content.Context getContext(); }
-keepclassmembers class com.jcraft.jsch.DHGEX256 { boolean next(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuItemImpl getExpandedItem(); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { java.util.List getAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem getItem(int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.lang.CharSequence getHeaderTitle(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List,org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getNonActionItems(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { void <init>(com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean getOptionalIconsVisible(); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getVisibleItems(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap instance(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.content.res.Resources getResources(); }
-keepclassmembers class android.widget.SearchView$8 { void <init>(android.widget.SearchView); }
-keepclassmembers class android.support.v4.util.LogWriter { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.util.LogWriter { void flushBuilder(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class android.support.v4.util.LogWriter { void close(); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean hasVisibleItems(); }
-keepclassmembers class android.support.v4.util.LogWriter { void flush(); }
-keepclassmembers class android.transition.Transition$1 { android.graphics.Path getPath(float,float,float,float); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean isQwertyMode(); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class android.support.v4.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean isShortcutsVisible(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemsChanged(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { void <init>(); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap { com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer asArrayDeserializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void <init>(android.support.v4.util.ArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { java.util.Map colGetMap(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader,com.fasterxml.jackson.databind.PropertyMetadata); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void windowDismissed(android.os.IBinder); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusIn(android.view.View); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusInLocked(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colIndexOfValue(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusOut(android.view.View); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performShortcut(int,android.view.KeyEvent,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void scheduleCheckFocusLocked(android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty,java.lang.String); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void checkFocus(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfStreamAbsent(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfHeadersAbsent(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfHeadersPresent(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean checkFocusNoStartInput(boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfStreamPresent(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void restoreActionViewStates(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void saveActionViewStates(android.os.Bundle); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void closeCurrentInput(); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.content.IntentCompatIcsMr1 { android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void startGettingWindowFocus(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { void <init>(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setCallback(android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void updateSelection(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void onWindowFocus(android.view.View,android.view.View,int,boolean,int); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.KeyDeserializer _createEnumKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuBuilder setDefaultShowAsAction(int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setExclusiveItemChecked(android.view.MenuItem); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty { com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 { java.lang.Boolean withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void viewClicked(android.view.View); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { com.android.okhttp.Request processAuthHeader(com.android.okhttp.OkAuthenticator,com.android.okhttp.Response,java.net.Proxy); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { boolean decrypt(byte[]); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { android.support.v7.view.menu.MenuPopup createPopup(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { java.lang.String _buildMessage(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.deser.ValueInstantiator _findStdValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean isCursorAnchorInfoEnabled(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void _appendPathDesc(java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { java.lang.String getLocalizedMessage(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { java.lang.String getMessage(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JavaType _mapAbstractType2(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionIndex(android.view.MotionEvent); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler { void <init>(android.net.wifi.p2p.WifiP2pManager$Channel,android.os.Looper); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionMasked(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int findPointerIndex(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { java.lang.StringBuilder getPathReference(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setOverrideVisibleItems(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { void _addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { java.util.List parseChallenges(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setQwertyMode(boolean); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { void <init>(android.content.Context,android.app.ActivityThread,android.os.UserHandle); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getPointerId(android.view.MotionEvent,int); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void showPopup(int,int,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void drawableStateChanged(); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { void prependPath(java.lang.Object,java.lang.String); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getSource(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getY(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int size(); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.sql.Timestamp { void <init>(int,int,int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { void <init>(com.fasterxml.jackson.core.json.JsonReadContext,com.fasterxml.jackson.core.json.DupDetector,int,int,int); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { boolean releaseProvider(android.content.IContentProvider); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getX(android.view.MotionEvent,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void startDispatchingItemsChanged(); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void dismiss(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { android.support.v7.view.menu.MenuPopup getPopup(); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { boolean releaseUnstableProvider(android.content.IContentProvider); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void stopDispatchingItemsChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void onDismiss(); }
-keepclassmembers class java.sql.Timestamp { void <init>(long); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { void unstableProviderDied(android.content.IContentProvider); }
-keepclassmembers class java.sql.Timestamp { int compareTo(java.sql.Timestamp); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean isShowing(); }
-keepclassmembers class android.app.ContextImpl$ApplicationContentResolver { int resolveUserIdFromAuthority(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatMultiAutoCompleteTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.slf4j.helpers.Util { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.net.URL); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.net.URI); }
-keepclassmembers class java.sql.Timestamp { int compareTo(java.util.Date); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class org.slf4j.helpers.Util { java.lang.Class getCallingClass(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setForceShowIcon(boolean); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setGravity(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.sql.Timestamp { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback { boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class java.nio.PipeImpl$PipeSinkChannel { void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor); }
-keepclassmembers class java.sql.Timestamp { boolean equals(java.sql.Timestamp); }
-keepclassmembers class java.sql.Timestamp { long getTime(); }
-keepclassmembers class java.sql.Timestamp { int getNanos(); }
-keepclassmembers class com.android.okhttp.internal.Util { int getDefaultPort(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Util { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { byte[] forSSHAgent(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean tryShow(); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { com.jcraft.jsch.Cipher getCipher(byte[]); }
-keepclassmembers class java.sql.Timestamp { void setNanos(int); }
-keepclassmembers class java.nio.PipeImpl$PipeSinkChannel { void implCloseSelectableChannel(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int); }
-keepclassmembers class com.android.okhttp.internal.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean tryShow(int,int); }
-keepclassmembers class org.slf4j.helpers.Util { void report(java.lang.String); }
-keepclassmembers class java.sql.Timestamp { void setTime(long); }
-keepclassmembers class android.transition.ChangeBounds$7 { void <init>(android.transition.ChangeBounds,android.transition.ChangeBounds$ViewBounds); }
-keepclassmembers class java.sql.Timestamp { java.lang.String toString(); }
-keepclassmembers class org.slf4j.helpers.Util { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.sql.Timestamp { void setTimeImpl(long); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { com.fasterxml.jackson.core.json.JsonReadContext createRootContext(com.fasterxml.jackson.core.json.DupDetector); }
-keepclassmembers class java.nio.PipeImpl$PipeSinkChannel { void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor,java.nio.PipeImpl$1); }
-keepclassmembers class org.slf4j.helpers.Util { org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager(); }
-keepclassmembers class org.slf4j.helpers.Util { org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager(); }
-keepclassmembers class com.android.okhttp.internal.Util { void closeAll(java.io.Closeable,java.io.Closeable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int); }
-keepclassmembers class it.skarafaz.mercury.activity.HelpActivity { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.activity.HelpActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler); }
-keepclassmembers class org.slf4j.helpers.Util { java.lang.String safeGetSystemProperty(java.lang.String); }
-keepclassmembers class org.slf4j.helpers.Util { boolean safeGetBooleanSystemProperty(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { boolean expectComma(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.sql.Timestamp { void format(int,int,java.lang.StringBuilder); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { com.fasterxml.jackson.core.json.JsonReadContext getParent(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { java.lang.String getCurrentName(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getColor(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { byte[] getKeyTypeName(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { void reset(int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void sendInputEventAndReportResultOnMainLooper(android.view.inputmethod.InputMethodManager$PendingEvent); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { byte[] getPublicKeyBlob(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerationException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerationException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonReadContext { void setCurrentName(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { byte[] getSignature(byte[]); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.okhttp.internal.Util { boolean skipAll(com.android.okio.Source,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairPKCS8 { boolean parse(byte[]); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager$PendingEvent); }
-keepclassmembers class java.sql.Timestamp { int compareTo(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { int collectDefaults(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void finishedInputEvent(int,boolean,boolean); }
-keepclassmembers class com.android.okhttp.internal.Util { int copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$Id { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { boolean enabledByDefault(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.List immutableList(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { com.fasterxml.jackson.core.JsonFactory$Feature[] values(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void <init>(); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void addAction(java.lang.Object,int); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.List immutableList(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { int getMask(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonFactory$Feature { boolean enabledIn(int); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$Id { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$Id { com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void addChild(java.lang.Object,android.view.View); }
-keepclassmembers class com.android.okhttp.internal.Util { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void invokeFinishedInputEventCallback(android.view.inputmethod.InputMethodManager$PendingEvent,boolean); }
-keepclassmembers class java.util.Hashtable { void <init>(int,float); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplKitKat { void <init>(); }
-keepclassmembers class java.io.CharConversionException { void <init>(java.lang.String); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void flushPendingEventsLocked(); }
-keepclassmembers class java.io.CharConversionException { void <init>(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class java.util.Hashtable { void <init>(java.util.Map); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { boolean canApplyTheme(); }
-keepclassmembers class java.util.Hashtable { void constructorPutAll(java.util.Map); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager$PendingEvent obtainPendingEventLocked(android.view.InputEvent,java.lang.Object,java.lang.String,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonTypeInfo$Id { java.lang.String getDefaultPropertyName(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.util.Hashtable { int capacityForInitSize(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void computeContentWidth(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionContextClick(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void recyclePendingEventLocked(android.view.inputmethod.InputMethodManager$PendingEvent); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void setPromptText(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionScrollLeft(); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionScrollDown(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { void _addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void showInputMethodPickerLocked(); }
-keepclassmembers class android.hardware.display.WifiDisplay { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionScrollRight(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionScrollUp(); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionScrollToPosition(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionSetProgress(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { int getActions(java.lang.Object); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void <init>(int,long); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object getActionShowOnScreen(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.os.DropBoxManager { void <init>(com.android.internal.os.IDropBoxManagerService); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void getBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void getBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class java.util.Hashtable { boolean containsValue(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void show(int,int); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void access$701(android.widget.Spinner$DropdownPopup); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.CharSequence getClassName(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { java.lang.String toString(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { android.widget.ListAdapter access$300(android.widget.Spinner$DropdownPopup); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.ConnectionPool getDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.os.DropBoxManager { void <init>(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.lang.String[]); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void notifyUserAction(); }
-keepclassmembers class android.os.DropBoxManager { void addText(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.CharSequence getContentDescription(java.lang.Object); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.Connection get(com.android.okhttp.Address); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializer { com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.app.ShareCompat$IntentReader { android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity); }
-keepclassmembers class java.lang.Enum { java.lang.String name(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void <init>(int); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class android.support.v4.app.ShareCompat$IntentReader { void <init>(android.app.Activity); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void recycle(com.android.okhttp.Connection); }
-keepclassmembers class java.util.Hashtable { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.CharSequence getPackageName(java.lang.Object); }
-keepclassmembers class java.lang.Enum { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { java.lang.Object getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerCache { com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void share(com.android.okhttp.Connection); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Hashtable { void putAll(java.util.Map); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isAccessibilityFocused(java.lang.Object); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class java.util.Hashtable { void ensureCapacity(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isClickable(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void scheduleCleanupAsRequired(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] makeTable(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.lang.Runnable access$000(com.android.okhttp.ConnectionPool); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] doubleCapacity(); }
-keepclassmembers class com.fasterxml.jackson.databind.Module { void <init>(); }
-keepclassmembers class android.view.InflateException { void <init>(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.util.LinkedList access$100(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { void <init>(java.util.TimeZone,boolean,int,java.util.Locale); }
-keepclassmembers class com.android.okhttp.ConnectionPool { long access$200(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.util.concurrent.ExecutorService access$300(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isEnabled(java.lang.Object); }
-keepclassmembers class android.media.session.ISessionManager$Stub { android.media.session.ISessionManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.ConnectionPool$CleanMode access$402(com.android.okhttp.ConnectionPool,com.android.okhttp.ConnectionPool$CleanMode); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isFocusable(java.lang.Object); }
-keepclassmembers class com.android.okhttp.ConnectionPool { int access$500(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { float getElevation(android.view.View); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isFocused(java.lang.Object); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isLongClickable(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { int hashCode(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { java.lang.Throwable getDetail(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { int getLineNumber(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class java.util.Hashtable { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { int getColumnNumber(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isSelected(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompat { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.okhttp.Dispatcher { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean isVisibleToUser(java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$12 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ContextImpl$12 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object newAccessibilityAction(int,java.lang.CharSequence); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$2 { void <init>(android.widget.ListPopupWindow$DropDownListView,android.view.View,int,long); }
-keepclassmembers class java.util.Hashtable { java.util.Set keySet(); }
-keepclassmembers class java.math.BigInteger { void parseFromString(java.math.BigInteger,java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatLollipop { void translationZ(android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class android.os.Looper { void prepare(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { java.lang.Object obtain(java.lang.Object); }
-keepclassmembers class android.content.pm.ILauncherApps$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.os.Looper { void prepare(boolean); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int); }
-keepclassmembers class java.net.Inet4Address { void <init>(byte[],java.lang.String); }
-keepclassmembers class java.util.Hashtable { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { void <clinit>(); }
-keepclassmembers class android.os.Looper { void loop(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { void <init>(int); }
-keepclassmembers class android.os.Looper { void prepareMainLooper(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { void <init>(int,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void stopNestedScroll(android.view.View); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.SearchView$5 { void <init>(android.widget.SearchView); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void removeAccessibilityInteractionConnection(android.view.IWindow); }
-keepclassmembers class android.widget.SearchView$5 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void recycle(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class java.util.Hashtable { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { boolean removeAction(java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { int getType(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { java.lang.Object getValue(); }
-keepclassmembers class android.os.Looper { android.os.MessageQueue myQueue(); }
-keepclassmembers class android.os.Looper { void <init>(boolean); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class android.os.Looper { boolean isCurrentThread(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Token { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setAccessibilityFocused(java.lang.Object,boolean); }
-keepclassmembers class java.net.Inet4Address { java.lang.Object writeReplace(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionScrollDown(); }
-keepclassmembers class java.util.Hashtable { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionContextClick(); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.os.Looper { void quit(); }
-keepclassmembers class java.util.Hashtable { int hashCode(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionScrollLeft(); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionScrollRight(); }
-keepclassmembers class android.os.Looper { int postSyncBarrier(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionScrollUp(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionScrollToPosition(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi23 { java.lang.Object getActionShowOnScreen(); }
-keepclassmembers class android.os.Looper { android.os.MessageQueue getQueue(); }
-keepclassmembers class android.os.Looper { void removeSyncBarrier(int); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class ch.qos.logback.classic.pattern.EnsureExceptionHandling { boolean chainHandlesThrowable(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean access$100(android.view.inputmethod.InputMethodManager,boolean,boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { int access$002(android.view.inputmethod.InputMethodManager,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$1 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandConfirm); }
-keepclassmembers class ch.qos.logback.classic.pattern.EnsureExceptionHandling { void process(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { int access$202(android.view.inputmethod.InputMethodManager,int); }
-keepclassmembers class android.text.method.TextKeyListener { void clear(android.text.Editable); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class ch.qos.logback.classic.pattern.EnsureExceptionHandling { void <init>(); }
-keepclassmembers class android.os.Looper { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setClassName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$1 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class java.util.Hashtable { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setClickable(java.lang.Object,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection { void <init>(com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setContentDescription(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class java.util.Hashtable { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void access$400(android.view.inputmethod.InputMethodManager,android.view.inputmethod.InputMethodManager$PendingEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setEnabled(java.lang.Object,boolean); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.PersistableBundle); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class android.os.PersistableBundle { void <init>(int); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setFocusable(java.lang.Object,boolean); }
-keepclassmembers class brut.util.DataInputDelegate { void readFully(byte[]); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$600(java.util.Hashtable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setFocused(java.lang.Object,boolean); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class java.util.Hashtable { boolean access$1100(java.util.Hashtable,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.PersistableBundle { void <init>(java.util.Map); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatApi23 { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class brut.util.DataInputDelegate { int readInt(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$2 { void <init>(android.support.v7.widget.ActivityChooserView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.PropertyName _findParamName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatApi23 { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { void <clinit>(); }
-keepclassmembers class android.os.PersistableBundle { void putPersistableBundle(java.lang.String,android.os.PersistableBundle); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$2 { void onGlobalLayout(); }
-keepclassmembers class brut.util.DataInputDelegate { int skipBytes(int); }
-keepclassmembers class java.util.Hashtable { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.Deserializers$Base { void <init>(); }
-keepclassmembers class com.jcraft.jsch.RequestPtyReq { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { boolean _handleSingleArgumentConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean,boolean,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.jcraft.jsch.RequestPtyReq { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setLongClickable(java.lang.Object,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { void <init>(java.lang.Object,long,long,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { void <init>(java.lang.Object,long,int,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int,char); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void <init>(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer { java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.RequestPtyReq { void setTSize(int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.RequestPtyReq { void setTerminalMode(byte[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setPackageName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setParent(java.lang.Object,android.view.View); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixVectorDrawableTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class android.hardware.ConsumerIrManager { void <init>(android.content.Context); }
-keepclassmembers class com.jcraft.jsch.RequestPtyReq { void setTType(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean updateBackgroundTint(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setSelected(java.lang.Object,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { long getByteOffset(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { int hashCode(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void applySupportBackgroundTint(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonLocation { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setSource(java.lang.Object,android.view.View); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class ch.qos.logback.core.encoder.EncoderBase { boolean isStarted(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$1 { void <clinit>(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class ch.qos.logback.core.encoder.EncoderBase { void stop(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl { void setVisibleToUser(java.lang.Object,boolean); }
-keepclassmembers class ch.qos.logback.core.encoder.EncoderBase { void <init>(); }
-keepclassmembers class ch.qos.logback.core.encoder.EncoderBase { void start(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class android.util.Rational { int gcd(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void onSetBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { boolean _handleSingleArgumentFactory(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setInternalBackgroundTint(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void addItem(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { java.lang.String[] guess(byte[],byte[]); }
-keepclassmembers class brut.util.DataInputDelegate { void <init>(java.io.DataInput); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { void <init>(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class android.graphics.FontFamily { void <init>(); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getTypeInternal(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontFromAsset(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getType(); }
-keepclassmembers class java.io.ObjectStreamField { char typeCodeOf(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontFromAsset(long,android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsListView$2 { void run(); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String defaultString(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.CharSequence defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String defaultString(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(int[],int,int); }
-keepclassmembers class javax.xml.parsers.ParserConfigurationException { void <init>(java.lang.String); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteAbortException { void <init>(); }
-keepclassmembers class java.io.ObjectStreamField { boolean writeField(java.io.DataOutputStream); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { java.lang.String getFingerPrint(); }
-keepclassmembers class android.widget.TextView$1 { void run(); }
-keepclassmembers class ch.qos.logback.core.joran.util.MethodDescriptor { void <init>(java.lang.String,java.lang.reflect.Method); }
-keepclassmembers class android.database.sqlite.SQLiteAbortException { void <init>(java.lang.String); }
-keepclassmembers class javax.xml.parsers.ParserConfigurationException { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { com.jcraft.jsch.HASH getHash(); }
-keepclassmembers class android.support.v4.app.Fragment { void <init>(); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { byte[] getH(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { byte[] getHostKey(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$7 { void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(int[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.type.CollectionType _mapAbstractCollectionType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class java.io.ObjectStreamField { void resolve(java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class android.media.AudioRoutesInfo { void <init>(); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { byte[] getK(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void <init>(java.util.LinkedList,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.media.AudioRoutesInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { void validate(int[]); }
-keepclassmembers class com.jcraft.jsch.KeyExchange { byte[] normalize(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { java.lang.String toString(int[]); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void add(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { boolean defaultResolve(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class android.media.AudioRoutesInfo { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamField { void setUnshared(boolean); }
-keepclassmembers class android.app.ContextImpl$ServiceFetcher { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasNext(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.app.ContextImpl$ServiceFetcher { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { boolean isOID(java.lang.String); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String,boolean); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasPrevious(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isSupportFragmentClass(android.content.Context,java.lang.String); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.app.ContextImpl$ServiceFetcher { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplBase { void <init>(); }
-keepclassmembers class java.util.MapEntry { void <init>(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.deser.CreatorProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.PropertyName,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.Object); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void remove(); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class java.util.MapEntry { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { int getItemId(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void set(java.lang.Object); }
-keepclassmembers class java.util.MapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object previous(); }
-keepclassmembers class android.support.v4.app.Fragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.app.ContextImpl$35 { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.util.TypefaceHelper { void <clinit>(); }
-keepclassmembers class android.support.v4.view.PagerTabStrip$1 { void <init>(android.support.v4.view.PagerTabStrip); }
-keepclassmembers class com.afollestad.materialdialogs.util.TypefaceHelper { android.graphics.Typeface get(android.content.Context,java.lang.String); }
-keepclassmembers class android.app.ContextImpl$35 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.util.MapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.support.v4.view.PagerTabStrip$1 { void onClick(android.view.View); }
-keepclassmembers class libcore.net.url.FileURLConnection$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ValueInjector { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object); }
-keepclassmembers class java.util.MapEntry { java.lang.Object getValue(); }
-keepclassmembers class dalvik.system.VMDebug { long lastDebuggerActivity(); }
-keepclassmembers class android.support.v4.app.BackStackState$1 { void <init>(); }
-keepclassmembers class dalvik.system.VMDebug { boolean isDebuggingEnabled(); }
-keepclassmembers class java.util.MapEntry { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.rolling.helper.DateTokenConverter { void start(); }
-keepclassmembers class dalvik.system.VMDebug { boolean isDebuggerConnected(); }
-keepclassmembers class java.util.MapEntry { java.lang.String toString(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.String); }
-keepclassmembers class dalvik.system.VMDebug { void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int,boolean,int); }
-keepclassmembers class dalvik.system.VMDebug { void startMethodTracing(java.lang.String,int,int,boolean,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ValueInjector { java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class dalvik.system.VMDebug { void startMethodTracingFd(java.lang.String,java.io.FileDescriptor,int,int,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ValueInjector { void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object); }
-keepclassmembers class dalvik.system.VMDebug { int checkBufferSize(int); }
-keepclassmembers class dalvik.system.VMDebug { void startMethodTracingFilename(java.lang.String,int,int,boolean,int); }
-keepclassmembers class dalvik.system.VMDebug { void startEmulatorTracing(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ValueInjector { void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.lang.ThreadGroup { int activeCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void <init>(); }
-keepclassmembers class dalvik.system.VMDebug { void stopMethodTracing(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class dalvik.system.VMDebug { void dumpHprofData(java.lang.String,java.io.FileDescriptor); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void <init>(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class dalvik.system.VMDebug { long countInstancesOfClass(java.lang.Class,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { float getGoneY(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void _serializeUnwrapped(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplBase { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(android.transition.Slide$1); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$2 { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$2 { void run(); }
-keepclassmembers class android.transition.Visibility$1 { void <init>(android.transition.Visibility,android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$ValueIterator { void <init>(java.util.concurrent.ConcurrentSkipListMap); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(android.support.v4.widget.AutoScrollHelper); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable { void run(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.Visibility$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentActivity getActivity(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowEnterTransitionOverlap(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowReturnTransitionOverlap(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { android.os.Bundle getArguments(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.content.pm.LauncherApps$1 { void <init>(android.content.pm.LauncherApps); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.hardware.hdmi.IHdmiControlService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean arrayContains(int[],int); }
-keepclassmembers class android.hardware.hdmi.IHdmiControlService$Stub$Proxy { int[] getSupportedTypes(); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void checkVectorDrawableSetup(android.content.Context); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getExitTransition(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getEnterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { android.content.Context getContext(); }
-keepclassmembers class ch.qos.logback.core.rolling.helper.DateTokenConverter { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getChildFragmentManager(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer$TokenizerState { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer$TokenizerState { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReenterTransition(); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer$TokenizerState { ch.qos.logback.core.subst.Tokenizer$TokenizerState[] values(); }
-keepclassmembers class android.support.v4.app.Fragment { android.content.res.Resources getResources(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer { void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReturnTransition(); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementEnterTransition(); }
-keepclassmembers class java.lang.ThreadGroup { int getMaxPriority(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { long createCacheKey(android.util.TypedValue); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long); }
-keepclassmembers class android.support.v4.app.Fragment { void instantiateChildFragmentManager(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View getView(); }
-keepclassmembers class android.support.v4.app.Fragment { void initState(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isAdded(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementReturnTransition(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.support.v7.widget.AppCompatDrawableManager get(); }
-keepclassmembers class android.support.v4.app.Fragment { int hashCode(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDaemon(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$3 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDestroyed(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]); }
-keepclassmembers class libcore.io.DropBox { libcore.io.DropBox$Reporter getReporter(); }
-keepclassmembers class java.lang.ThreadGroup { void list(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isInBackStack(); }
-keepclassmembers class libcore.io.DropBox { void addText(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void list(int); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isHidden(); }
-keepclassmembers class libcore.io.DropBox { void setReporter(libcore.io.DropBox$Reporter); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class libcore.io.DropBox { void <clinit>(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintListFromCache(android.content.Context,int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 createCallback23(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAffinity(android.app.Activity); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuff$Mode getTintMode(int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void requestPermissions(android.app.Activity,java.lang.String[],int); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class java.lang.ThreadGroup { void indent(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean isVectorDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyWriter { void <init>(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.content.Context); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.animation.Animation onCreateAnimation(int,boolean,int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroy(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class java.lang.ThreadGroup { void setDaemon(boolean); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(char[]); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.View onFindViewById(int); }
-keepclassmembers class java.lang.ThreadGroup { void setMaxPriority(int); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.LayoutInflater onGetLayoutInflater(); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(char[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { int onGetWindowAnimations(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDetach(); }
-keepclassmembers class android.widget.SuggestionsAdapter$1 { void <init>(android.widget.SuggestionsAdapter); }
-keepclassmembers class android.support.v4.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasWindowAnimations(); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onShouldSaveFragmentState(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.app.Fragment { void onLowMemory(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { com.fasterxml.jackson.databind.node.NullNode getInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { java.lang.String asText(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasView(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onPause(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NullNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void onResume(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.Fragment { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(char[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onSupportInvalidateOptionsMenu(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onStart(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.renderscript.Element$1 { void <clinit>(); }
-keepclassmembers class android.graphics.Rect$1 { android.graphics.Rect createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Rect$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v4.app.Fragment { void performActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onStop(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { boolean isEmpty(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.ThreadGroup { void addThread(java.lang.Thread); }
-keepclassmembers class android.support.v4.app.Fragment { void performConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.support.v4.app.Fragment { boolean performContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void performCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isBlank(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State { java.net.URL getUrl(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State { void setUrl(java.net.URL); }
-keepclassmembers class java.lang.ThreadGroup { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer { void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isNotEmpty(java.lang.CharSequence); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class android.support.v4.app.Fragment { boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.content.IRestrictionsManager$Stub { android.content.IRestrictionsManager asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroy(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ConditionalIncludeAction$State { void <init>(ch.qos.logback.classic.joran.action.ConditionalIncludeAction); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { void <init>(); }
-keepclassmembers class java.io.OutputStream { boolean checkError(); }
-keepclassmembers class android.app.ContextImpl$36 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$36 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Iterable,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void bindTempDetach(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroyView(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { java.lang.String getValidationErrorMessage(java.io.File,java.util.Map); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std { void <init>(java.lang.Class,int); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std { java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.util.Iterator,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { java.util.Map validateCommand(it.skarafaz.mercury.model.Command,int); }
-keepclassmembers class android.support.v4.app.Fragment { void performLowMemory(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.app.Fragment { void performDetach(); }
-keepclassmembers class java.io.OutputStream { void close(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class java.io.OutputStream { void write(byte[],int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void performMultiWindowModeChanged(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.app.Fragment { void performPause(); }
-keepclassmembers class android.support.v4.app.Fragment { void performOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { boolean performOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { void add(com.jcraft.jsch.Identity); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { boolean add(byte[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void dispatchFinishTemporaryDetach(android.view.View); }
-keepclassmembers class android.support.v4.app.Fragment { boolean performPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void performPictureInPictureModeChanged(boolean); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { java.util.Map validateServer(it.skarafaz.mercury.model.Server); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { java.util.Vector getIdentities(); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { java.lang.String getString(int); }
-keepclassmembers class android.support.v4.app.Fragment { void performReallyStop(); }
-keepclassmembers class it.skarafaz.mercury.jackson.ServerMapper { it.skarafaz.mercury.model.Server readValue(java.io.File); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void dispatchStartTemporaryDetach(android.view.View); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.TypefaceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.Fragment { void performResume(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getAlpha(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { boolean remove(byte[]); }
-keepclassmembers class android.support.v4.app.Fragment { void performSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer findDefaultDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std { java.lang.Object _deserializeFromEmptyString(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <init>(com.android.okhttp.Request,com.android.okhttp.Response,com.android.okhttp.ResponseSource); }
-keepclassmembers class java.util.UnsafeArrayList { boolean add(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { void performStart(); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getImportantForAccessibility(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { boolean isCacheable(com.android.okhttp.Response,com.android.okhttp.Request); }
-keepclassmembers class android.support.v4.app.Fragment { void performStop(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.UnsafeArrayList { void <init>(java.lang.Class,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getElevation(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { java.lang.String getType(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class com.jcraft.jsch.LocalIdentityRepository { void removeAll(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { com.android.okhttp.Response$Body access$000(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { com.android.okhttp.internal.http.StatusLine access$100(); }
-keepclassmembers class android.support.v4.content.ContextCompatHoneycomb { void startActivities(android.content.Context,android.content.Intent[]); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <init>(com.android.okhttp.Request,com.android.okhttp.Response,com.android.okhttp.ResponseSource,com.android.okhttp.internal.http.CacheStrategy$1); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreChildFragmentState(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class butterknife.ButterKnife { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler { void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreViewState(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler { java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler { void <init>(java.util.List); }
-keepclassmembers class java.util.UnsafeArrayList { java.lang.Object get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v4.app.Fragment { void setArguments(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler { com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler renameAll(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void execute(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationX(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { java.lang.Object writeReplace(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub { android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.app.ContextImpl$53 { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void onConfigurationChanged(android.content.Context); }
-keepclassmembers class android.app.ContextImpl$53 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v4.app.Fragment { void setIndex(int,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.view.ViewParent getParentForAccessibility(android.view.View); }
-keepclassmembers class butterknife.ButterKnife { void bind(java.lang.Object,android.view.View); }
-keepclassmembers class android.support.v4.app.Fragment { void setHasOptionsMenu(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void setInitialSavedState(android.support.v4.app.Fragment$SavedState); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void <init>(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class butterknife.ButterKnife { void bind(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.support.v4.app.Fragment { void setMenuVisibility(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class butterknife.ButterKnife { void bind(android.app.Activity); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { android.graphics.pdf.PdfDocument$PageInfo getInfo(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void data(boolean,int,com.android.okio.BufferedSource,int); }
-keepclassmembers class android.app.ContextImpl$50 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.lang.reflect.Field$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.app.ContextImpl$50 { void <init>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { android.graphics.Canvas getCanvas(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void headers(boolean,boolean,int,int,int,java.util.List,com.android.okhttp.internal.spdy.HeadersMode); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.service.persistentdata.IPersistentDataBlockService$Stub { android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { void setUserVisibleHint(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { int getIndex(java.lang.Object); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void <init>(android.graphics.Canvas,android.graphics.pdf.PdfDocument$PageInfo,android.graphics.pdf.PdfDocument$1); }
-keepclassmembers class butterknife.ButterKnife { butterknife.ButterKnife$ViewBinder findViewBinderForClass(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void access$400(android.graphics.pdf.PdfDocument$Page); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.commons.io.EndianUtils { int read(java.io.InputStream); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { void finish(); }
-keepclassmembers class org.apache.commons.io.EndianUtils { int readSwappedInteger(java.io.InputStream); }
-keepclassmembers class org.apache.commons.io.EndianUtils { int readSwappedInteger(byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setAlpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.pdf.PdfDocument$Page { boolean isFinished(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { void <init>(java.util.EnumMap$EnumMapKeySet); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setActivated(android.view.View,boolean); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { java.lang.Enum get(java.util.MapEntry); }
-keepclassmembers class ch.qos.logback.core.subst.Node$Type { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum { void <init>(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.subst.Node$Type { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void settings(boolean,com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$1 { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String left(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 { java.lang.Integer withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String toString(); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum { com.afollestad.materialdialogs.GravityEnum[] values(); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum { int getGravityInt(); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { void <init>(int,java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class ch.qos.logback.core.subst.Node$Type { ch.qos.logback.core.subst.Node$Type[] values(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum { int getTextAlignment(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$6 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLabelFor(android.view.View,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String leftPad(java.lang.String,int,char); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String leftPad(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLayoutDirection(android.view.View,int); }
-keepclassmembers class org.apache.commons.io.EndianUtils { long readSwappedUnsignedInteger(java.io.InputStream); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class org.apache.commons.io.EndianUtils { long readSwappedUnsignedInteger(byte[],int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { ch.qos.logback.classic.spi.IThrowableProxy getCause(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { ch.qos.logback.classic.spi.StackTraceElementProxy[] getStackTraceElementProxyArray(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { ch.qos.logback.classic.spi.PackagingDataCalculator getPackagingDataCalculator(); }
-keepclassmembers class org.apache.commons.io.EndianUtils { int swapInteger(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ackSettingsLater(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String mid(java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ackSettings(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { ch.qos.logback.classic.spi.IThrowableProxy[] getSuppressed(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxy { void calculatePackagingData(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ping(boolean,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { double _parseDouble(java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { int _parseInt(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { long _parseLong(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setParameters(int,int,int,boolean); }
-keepclassmembers class org.slf4j.helpers.FormattingTuple { void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class org.apache.commons.io.EndianUtils { void writeSwappedInteger(java.io.OutputStream,int); }
-keepclassmembers class org.slf4j.helpers.FormattingTuple { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.EndianUtils { void writeSwappedInteger(byte[],int,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.transition.Slide$4 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,com.android.okio.ByteString); }
-keepclassmembers class android.transition.Slide$4 { float getGoneX(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BasicDeserializerFactory { com.fasterxml.jackson.databind.JavaType resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void windowUpdate(int,long); }
-keepclassmembers class org.slf4j.helpers.FormattingTuple { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer { java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void stopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.ScrollBarDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String overlay(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void pushPromise(int,int,java.util.List); }
-keepclassmembers class brut.androlib.res.xml.ResXmlEncoders { java.lang.String escapeXmlChars(java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void priority(int,int); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,com.android.okhttp.internal.spdy.SpdyConnection$1); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase { void <init>(android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void <clinit>(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.zip.ZipFile { void checkNotClosed(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map { void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void addInfo(ch.qos.logback.core.Context,java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map { void assign(java.lang.Object); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { android.view.ViewGroup wrap(android.view.View); }
-keepclassmembers class com.android.net.IProxyService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.Choreographer$2 { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void addStatus(ch.qos.logback.core.Context,ch.qos.logback.core.status.Status); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer { void <init>(); }
-keepclassmembers class com.android.net.IProxyService$Stub$Proxy { java.lang.String resolvePacFile(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.view.KeyCharacterMap$FallbackAction { android.view.KeyCharacterMap$FallbackAction obtain(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase { java.lang.Object getMediaController(); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void addToWatchList(ch.qos.logback.core.Context,java.net.URL); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.widget.ScrollBarDrawable mutate(); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void addWarn(ch.qos.logback.core.Context,java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { ch.qos.logback.core.joran.spi.ConfigurationWatchList getConfigurationWatchList(ch.qos.logback.core.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer { void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getOpacity(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class android.widget.ScrollBarDrawable { java.lang.String toString(); }
-keepclassmembers class android.view.KeyCharacterMap$FallbackAction { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap$FallbackAction { void recycle(); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap$FallbackAction { void <clinit>(); }
-keepclassmembers class java.lang.InstantiationException { void <init>(); }
-keepclassmembers class java.util.zip.ZipFile { void readCentralDir(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void setConfigurationWatchListResetFlag(ch.qos.logback.core.Context,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { java.net.URL getMainWatchURL(ch.qos.logback.core.Context); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { boolean wasConfigurationWatchListReset(ch.qos.logback.core.Context); }
-keepclassmembers class com.fasterxml.jackson.annotation.SimpleObjectIdResolver { void bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.util.ConfigurationWatchListUtil { void setMainWatchURL(ch.qos.logback.core.Context,java.net.URL); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.fasterxml.jackson.annotation.SimpleObjectIdResolver { boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class com.fasterxml.jackson.annotation.SimpleObjectIdResolver { java.lang.Object resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey); }
-keepclassmembers class com.fasterxml.jackson.annotation.SimpleObjectIdResolver { com.fasterxml.jackson.annotation.ObjectIdResolver newForDeserialization(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$1 { void <init>(android.support.v7.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$1 { void onGlobalLayout(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer { void <clinit>(); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.annotation.SimpleObjectIdResolver { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer { void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.zip.ZipFile { void throwZipException(java.lang.String,int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.util.zip.ZipFile { void access$000(java.util.zip.ZipFile); }
-keepclassmembers class android.app.WallpaperManager { void initGlobals(android.os.Looper); }
-keepclassmembers class org.apache.commons.io.IOCase { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { void <clinit>(); }
-keepclassmembers class android.app.WallpaperManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class org.apache.commons.io.IOCase { void <clinit>(); }
-keepclassmembers class java.nio.channels.ConnectionPendingException { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.commons.io.IOCase { boolean checkEndsWith(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { void <init>(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String repeat(char,int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void setValue(android.graphics.drawable.Drawable,int); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { int hashCode(); }
-keepclassmembers class org.apache.commons.io.IOCase { boolean checkEquals(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { java.lang.Integer get(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String classToString(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void run(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { void <init>(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { void clear(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { org.slf4j.Logger getLogger(java.lang.String); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { java.util.concurrent.LinkedBlockingQueue getEventQueue(); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replace(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { android.graphics.PorterDuffColorFilter makeTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { void postInitialization(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.ParameterizedType,java.lang.reflect.Type); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void <init>(android.support.v7.view.menu.ListMenuPresenter); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class org.slf4j.helpers.SubstituteLoggerFactory { java.util.List getLoggers(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.GenericArrayType,java.lang.reflect.Type); }
-keepclassmembers class javax.xml.parsers.DocumentBuilder { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { int getCount(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isProjected(); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.Type,java.lang.reflect.Type); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.WildcardType,java.lang.reflect.Type); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void <init>(android.widget.Editor$HandleView); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceChars(java.lang.String,char,char); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$ChildDrawable addLayer(android.graphics.drawable.Drawable,int[],int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { boolean equalityCheck(java.lang.String,java.lang.String); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[]); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { ch.qos.logback.core.joran.spi.ElementPath duplicate(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { void <init>(java.util.List); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void setAlpha(int); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void run(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { int getOpacity(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void setTint(int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class ch.qos.logback.core.util.Loader$2 { void <init>(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { java.lang.String get(int); }
-keepclassmembers class ch.qos.logback.core.util.Loader$2 { java.lang.ClassLoader run(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags,org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class ch.qos.logback.core.util.Loader$2 { java.lang.Object run(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.ProgressDrawableBase { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { java.util.List getCopyOfPartList(); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { java.lang.String peekLast(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { void pop(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getId(int); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setId(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { void push(java.lang.String); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { int size(); }
-keepclassmembers class android.text.BoringLayout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderRefAction { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderRefAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { java.lang.String toStableString(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.ReasonFlags access$100(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ElementPath { java.lang.String toString(); }
-keepclassmembers class android.text.BoringLayout { int getEllipsisCount(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.view.ViewRootImpl { void <init>(android.content.Context,android.view.Display); }
-keepclassmembers class android.text.BoringLayout { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.GeneralNames access$200(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.animation.RectEvaluator { android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type getClosestParentType(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { int getBlockSize(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void <init>(android.view.MenuInflater,android.view.Menu); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { int getIVSize(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { void init(int,byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { void <init>(); }
-keepclassmembers class android.animation.RectEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA196 { void doFinal(byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class java.net.ContentHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderRefAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA196 { int getBlockSize(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACSHA196 { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { boolean isCBC(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType); }
-keepclassmembers class com.jcraft.jsch.jce.AES256CBC { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class android.transition.TranslationAnimationCreator$TransitionPositionListener { void <init>(android.view.View,android.view.View,int,int,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { void <init>(com.fasterxml.jackson.databind.util.EnumValues); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class android.transition.TranslationAnimationCreator$TransitionPositionListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.transition.TranslationAnimationCreator$TransitionPositionListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.Class getRawType(java.lang.reflect.ParameterizedType); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class android.transition.TranslationAnimationCreator$TransitionPositionListener { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void updateSeed(byte[]); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map); }
-keepclassmembers class android.transition.TranslationAnimationCreator$TransitionPositionListener { void <init>(android.view.View,android.view.View,int,int,float,float,android.transition.TranslationAnimationCreator$1); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { void <init>(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer { void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class android.view.ViewRootImpl { void addFirstDrawHandler(java.lang.Runnable); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.view.ViewRootImpl { void addConfigCallback(android.content.ComponentCallbacks); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineSetSeed(byte[]); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class android.view.MenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class java.math.NativeBN { void BN_bin2bn(byte[],int,boolean,long); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class java.math.NativeBN { int BN_hex2bn(long,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.MenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class java.math.NativeBN { byte[] BN_bn2bin(long); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class ch.qos.logback.classic.pattern.ClassOfCallerConverter { void <init>(); }
-keepclassmembers class java.math.NativeBN { void BN_sub(long,long,long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.math.NativeBN { void BN_mul_word(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_gcd(long,long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class java.math.NativeBN { void BN_mod_inverse(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_nnmod(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_mod_exp(long,long,long,long); }
-keepclassmembers class android.view.ViewRootImpl { void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_generate_prime_ex(long,int,boolean,long,long,long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineNextBytes(byte[]); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo$1 { android.media.MediaRouterClientState$RouteInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { int hashCode(); }
-keepclassmembers class android.media.MediaRouterClientState$RouteInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void <init>(java.net.URL,com.android.okhttp.OkHttpClient); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String right(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.MenuItem addItem(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { com.fasterxml.jackson.databind.util.EnumValues getEnumValues(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.POJONode { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String rightPad(java.lang.String,int,char); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String rightPad(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.view.MenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class android.view.MenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi24Impl { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi24Impl { java.lang.Object getActionSetProgress(); }
-keepclassmembers class com.android.okhttp.CacheControl { void <init>(boolean,boolean,int,int,boolean,boolean,int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void connect(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean mustRevalidate(); }
-keepclassmembers class com.android.okhttp.CacheControl { int maxAgeSeconds(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean noCache(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { java.lang.String getHeaderField(java.lang.String); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.ActionProvider access$000(android.view.MenuInflater$MenuState); }
-keepclassmembers class com.android.okhttp.CacheControl { int sMaxAgeSeconds(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean isPublic(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean noStore(); }
-keepclassmembers class com.android.okhttp.CacheControl { int maxStaleSeconds(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean onlyIfCached(); }
-keepclassmembers class com.android.okhttp.CacheControl { com.android.okhttp.CacheControl parse(com.android.okhttp.Headers); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.telephony.ServiceState { boolean isGsm(int); }
-keepclassmembers class com.android.okhttp.CacheControl { int minFreshSeconds(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NewRuleAction { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NewRuleAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.view.PagerTabStrip$2 { void onClick(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,char); }
-keepclassmembers class android.support.v4.view.PagerTabStrip$2 { void <init>(android.support.v4.view.PagerTabStrip); }
-keepclassmembers class ch.qos.logback.core.util.Loader { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { void setPrvKey(byte[],byte[]); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.app.WallpaperManager { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { void init(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { void setPubKey(byte[],byte[]); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { void update(byte[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.net.URL getResource(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { byte[] sign(); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.ClassLoader getClassLoaderAsPrivileged(java.lang.Class); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.ClassLoader getTCL(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureRSA { boolean verify(byte[]); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.util.Set getResourceOccurrenceCount(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class ch.qos.logback.core.joran.action.NewRuleAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.lang.Class loadClass(java.lang.String,ch.qos.logback.core.Context); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class ch.qos.logback.core.util.Loader { java.net.URL getResourceBySelfClassLoader(java.lang.String); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo { java.lang.String getId(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { void <init>(libcore.reflect.ParameterizedTypeImpl,java.lang.String,libcore.reflect.ListOfTypes,java.lang.ClassLoader); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void initHttpEngine(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.android.okhttp.Connection,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <init>(android.app.Activity,boolean); }
-keepclassmembers class it.skarafaz.mercury.manager.LoadConfigFilesStatus { void <clinit>(); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.app.ContextImpl$7 { void <init>(); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getOwnerType(); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo { android.view.textservice.SpellCheckerSubtype getSubtypeAt(int); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo { int getSubtypeCount(); }
-keepclassmembers class android.app.ContextImpl$7 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type[] getActualTypeArguments(); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo { void <clinit>(); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { android.content.pm.FeatureInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <init>(android.os.Parcel,android.content.pm.InstrumentationInfo$1); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getResolvedType(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type); }
-keepclassmembers class it.skarafaz.mercury.manager.LoadConfigFilesStatus { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] splitWorker(java.lang.String,char,boolean); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { void <init>(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.Class getRawType(); }
-keepclassmembers class it.skarafaz.mercury.manager.LoadConfigFilesStatus { it.skarafaz.mercury.manager.LoadConfigFilesStatus[] values(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { android.content.pm.FeatureInfo[] newArray(int); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle); }
-keepclassmembers class android.widget.SearchView$7 { void <init>(android.widget.SearchView); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class it.skarafaz.mercury.manager.LoadConfigFilesStatus { int message(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpEngine getResponse(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { byte[] getRandomBytes(int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean checkShowingFlags(boolean,boolean,boolean); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class android.view.ViewRootImpl$HighContrastTextManager { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(java.lang.Object[]); }
-keepclassmembers class android.view.ViewRootImpl$HighContrastTextManager { void onHighTextContrastStateChanged(boolean); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getRawType(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void <init>(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$1 { void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { int hashCode(); }
-keepclassmembers class java.net.CookieHandler { java.net.CookieHandler getDefault(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { java.lang.String _getCharDesc(int); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.bluetooth.IBluetoothManagerCallback$Stub { void <init>(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$2 { void run(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$2 { void <init>(com.android.okhttp.ConnectionPool); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String toString(); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[],org.apache.harmony.security.x509.AccessDescription$1); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry processResponseHeaders(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { char _handleUnrecognizedCharacterEscape(char); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { boolean execute(boolean); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void hideForActionMode(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { org.apache.harmony.security.x509.GeneralName access$200(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportError(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { boolean _hasTextualNull(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String access$100(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInLocalFocusMode(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityHoneycomb { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.bluetooth.IBluetoothManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$Tag { void <init>(java.lang.String,int,int,int); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { void <init>(); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.greenrobot.eventbus.HandlerPoster { void <init>(org.greenrobot.eventbus.EventBus,android.os.Looper,int); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$Tag { dalvik.system.profiler.BinaryHprof$Tag[] values(); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.view.ViewRootImpl { void destroyHardwareResources(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$Tag { dalvik.system.profiler.BinaryHprof$Tag get(byte); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityHoneycomb { void <init>(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$Tag { java.lang.String checkSize(int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker); }
-keepclassmembers class android.view.ViewRootImpl { void enableHardwareAcceleration(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub$Proxy { boolean isSpellCheckerEnabled(); }
-keepclassmembers class org.greenrobot.eventbus.HandlerPoster { void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$Tag { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl { void registerAnimatingRenderNode(android.view.RenderNode); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportInvalidEOF(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findDeserializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class org.greenrobot.eventbus.HandlerPoster { void handleMessage(android.os.Message); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportInvalidEOF(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String findEnumValue(java.lang.Enum); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { int indexOfAttribute(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportUnexpectedChar(int,java.lang.String); }
-keepclassmembers class com.android.okio.InflaterSource { void <init>(com.android.okio.BufferedSource,java.util.zip.Inflater); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportInvalidEOFInValue(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _reportMissingRootWS(int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String findImplicitPropertyName(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _throwInternal(); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { int indexOfAttributeNS(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _throwInvalidSpace(int); }
-keepclassmembers class com.android.okio.InflaterSource { void <init>(com.android.okio.Source,java.util.zip.Inflater); }
-keepclassmembers class com.android.okio.InflaterSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean shouldAnimateContextView(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void updateVisibility(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void showForActionMode(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _throwUnquotedSpace(int,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { int getResponseCode(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void _wrapError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class java.lang.StringToReal { double parseDblImpl(java.lang.String,int); }
-keepclassmembers class java.lang.StringToReal { float parseFltImpl(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class java.lang.StringToReal { java.lang.NumberFormatException invalidReal(java.lang.String,boolean); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findNullSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { int getCurrentTokenId(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { void clearCurrentToken(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] normalizeUpperBounds(java.lang.reflect.Type[]); }
-keepclassmembers class java.lang.StringToReal { java.lang.StringToReal$StringExponentPair initialParse(java.lang.String,int,boolean); }
-keepclassmembers class java.util.Calendar { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.okio.InflaterSource { boolean refill(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { com.fasterxml.jackson.core.JsonToken getCurrentToken(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Integer findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class java.util.Calendar { boolean before(java.lang.Object); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void animateToMode(boolean); }
-keepclassmembers class android.view.ViewRootImpl { android.view.WindowLeaked getLocation(); }
-keepclassmembers class com.android.okio.InflaterSource { void releaseInflatedBytes(); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class android.hardware.display.DisplayManager { void <init>(android.content.Context); }
-keepclassmembers class android.hardware.display.DisplayManager { android.view.Display getDisplay(int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.ViewRootImpl { void setLayoutParams(android.view.WindowManager$LayoutParams,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.android.okio.InflaterSource { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findSerializationContentConverter(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.view.ViewRootImpl { android.view.View getView(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class java.lang.StrictMath { double log(double); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void completeDeferredDestroyActionMode(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { long getValueAsLong(long); }
-keepclassmembers class java.util.Calendar { java.lang.Object clone(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { int getValueAsInt(int); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void doHide(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer { void serialize(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { int modulateColorAlpha(int,float); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Include); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { java.lang.String getValueAsString(java.lang.String); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void dispatchMenuVisibilityChanged(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { boolean hasCurrentToken(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { com.fasterxml.jackson.core.JsonToken nextValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.view.ViewRootImpl { void handleAppVisibility(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserMinimalBase { com.fasterxml.jackson.core.JsonParser skipChildren(); }
-keepclassmembers class java.util.zip.ZipException { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { short getNodeType(); }
-keepclassmembers class java.util.Calendar { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void doShow(boolean); }
-keepclassmembers class java.lang.StrictMath { double random(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.ViewRootImpl { void handleGetNewSurface(); }
-keepclassmembers class android.view.ViewRootImpl { void requestLayout(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.view.ViewRootImpl { void requestFitSystemWindows(); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.hardware.display.DisplayManager { android.view.Display getOrCreateDisplayLocked(int,boolean); }
-keepclassmembers class android.view.ViewRootImpl { boolean isLayoutRequested(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ThemeUtils { int getColorFromAttrRes(int,android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer { void serializeWithType(java.net.InetSocketAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ThemeUtils { float getFloatFromAttrRes(int,android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class android.media.MediaRouter$RouteInfo$1 { void <init>(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.view.ViewRootImpl { void invalidate(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.hardware.display.DisplayManager { void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector { boolean isAnnotationBundle(java.lang.annotation.Annotation); }
-keepclassmembers class android.hardware.display.DisplayManager { void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class android.view.ViewRootImpl { void invalidateWorld(android.view.View); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.NavigableMap); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { boolean contains(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.spi.ScanException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.StringToReal { float parseName(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { void <init>(); }
-keepclassmembers class ch.qos.logback.core.spi.ScanException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.view.ViewRootImpl { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.spi.ScanException { java.lang.Throwable getCause(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.SortedSet); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.TimeZone); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class java.util.TreeSet { void clear(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { int getDisplayOptions(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { int getHeight(); }
-keepclassmembers class java.util.TreeSet { boolean contains(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map); }
-keepclassmembers class java.util.Calendar { int hashCode(); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { int getHideOffset(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class java.lang.StringToReal { double parseDouble(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.TextView$3 { void run(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$1 { void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$1 { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewParent getParent(); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class java.lang.StringToReal { float parseFloat(java.lang.String); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canConstantState(); }
-keepclassmembers class java.util.Calendar { void set(int,int,int); }
-keepclassmembers class android.view.ViewRootImpl { int getHostVisibility(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$1 { boolean onForwardingStarted(); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean isShowing(); }
-keepclassmembers class android.view.ViewRootImpl { void disposeResizeBuffer(); }
-keepclassmembers class android.view.ViewRootImpl { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class android.view.ViewRootImpl { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int,int); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int); }
-keepclassmembers class java.util.Calendar { void setFirstDayOfWeek(int); }
-keepclassmembers class org.apache.harmony.xml.dom.ElementImpl { void setPrefix(java.lang.String); }
-keepclassmembers class java.util.Calendar { void setMinimalDaysInFirstWeek(int); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String toString(java.lang.reflect.Type); }
-keepclassmembers class com.android.org.conscrypt.PinFailureLogger { void log(java.lang.String,boolean,boolean,java.util.List); }
-keepclassmembers class android.view.ViewRootImpl { void scheduleTraversals(); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String typeVariableToString(java.lang.reflect.TypeVariable); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class java.util.TreeSet { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.android.org.conscrypt.PinFailureLogger { void writeToLog(java.lang.String,boolean,boolean,java.util.List); }
-keepclassmembers class java.util.TreeSet { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.util.Calendar { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.view.ViewRootImpl { void unscheduleTraversals(); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <init>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void register(); }
-keepclassmembers class android.view.ViewRootImpl { void notifyRendererOfFramePending(); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class android.view.WindowManagerImpl { void <init>(android.view.Display); }
-keepclassmembers class com.android.org.conscrypt.PinFailureLogger { boolean timeToLog(); }
-keepclassmembers class android.view.ViewRootImpl { void applyKeepScreenOnFlag(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.view.ViewRootImpl { void doTraversal(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntryIterator { void <init>(java.util.concurrent.ConcurrentSkipListMap); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String trim(java.lang.String); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.view.WindowManagerImpl { void <init>(android.view.Display,android.view.Window); }
-keepclassmembers class android.view.ViewRootImpl { boolean collectViewAttributes(); }
-keepclassmembers class java.util.Calendar { int compareTo(java.util.Calendar); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams { void <init>(int,android.view.textservice.TextInfo[],int,boolean); }
-keepclassmembers class com.android.org.conscrypt.PinFailureLogger { void <clinit>(); }
-keepclassmembers class android.view.WindowManagerImpl { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String trimToNull(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.Calendar { java.lang.String[] getDisplayNameArray(int,int,java.util.Locale); }
-keepclassmembers class android.view.WindowManagerImpl { void applyDefaultToken(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.WindowManagerImpl { void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { void <init>(int,int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(boolean); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class android.view.WindowManagerImpl { void removeViewImmediate(android.view.View); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean requestFocus(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map); }
-keepclassmembers class android.view.WindowManagerImpl { android.view.Display getDefaultDisplay(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void updateExtractedText(int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { com.android.okhttp.internal.spdy.Huffman$Node[] access$400(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { void <init>(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { int access$600(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class android.transition.PatternPathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.WindowManagerImpl { void removeView(android.view.View); }
-keepclassmembers class java.util.Calendar { java.util.Map getDisplayNames(int,int,java.util.Locale); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { int access$500(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(double); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(float); }
-keepclassmembers class java.util.Calendar { void checkStyle(int); }
-keepclassmembers class android.view.ViewRootImpl { int getImpliedSystemUiVisibility(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.view.IWindowId$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void updateSelection(int,int,int,int,int,int); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(long); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { boolean measureHierarchy(android.view.View,android.view.WindowManager$LayoutParams,android.content.res.Resources,int,int); }
-keepclassmembers class java.util.Calendar { void insertValuesInMap(java.util.Map,java.lang.String[]); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void viewClicked(boolean); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Calendar { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.transition.PatternPathMotion { void setPatternPath(android.graphics.Path); }
-keepclassmembers class android.view.IWindowId$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class java.io.BufferedWriter { void <init>(java.io.Writer,int); }
-keepclassmembers class android.location.GpsStatus$1 { void <init>(android.location.GpsStatus); }
-keepclassmembers class android.transition.PatternPathMotion { android.graphics.Path getPath(float,float,float,float); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.Typed wrap(java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder wildcardType(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void displayCompletions(android.view.inputmethod.CompletionInfo[]); }
-keepclassmembers class android.view.ViewRootImpl { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.Typed wrap(java.lang.Class); }
-keepclassmembers class java.util.Calendar { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchApplyInsets(android.view.View); }
-keepclassmembers class java.lang.Void { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.content.pm.FeatureGroupInfo { void <init>(); }
-keepclassmembers class android.transition.PatternPathMotion { float distance(float,float); }
-keepclassmembers class java.util.Calendar { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class java.lang.StringBuffer { char charAt(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.BufferedWriter { void flush(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo { void <clinit>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.OptionTokenizer { void <init>(ch.qos.logback.core.pattern.parser.TokenStream); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class java.io.BufferedWriter { void flushInternal(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.OptionTokenizer { void <init>(ch.qos.logback.core.pattern.parser.TokenStream,ch.qos.logback.core.pattern.util.IEscapeUtil); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer delete(int,int); }
-keepclassmembers class java.io.BufferedWriter { void checkNotClosed(); }
-keepclassmembers class java.io.BufferedWriter { boolean isClosed(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { boolean equals(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.OptionTokenizer { void escape(java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class android.view.ViewRootImpl { void performTraversals(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.OptionTokenizer { void emitOptionToken(java.util.List,java.util.List); }
-keepclassmembers class ch.qos.logback.classic.spi.ClassPackagingData { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.BufferedWriter { void newLine(); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class ch.qos.logback.classic.spi.ClassPackagingData { boolean equals(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.spi.ClassPackagingData { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.OptionTokenizer { void tokenize(char,java.util.List); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single { com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class ch.qos.logback.classic.spi.ClassPackagingData { int hashCode(); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class org.xml.sax.SAXNotRecognizedException { void <init>(); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class org.xml.sax.SAXNotRecognizedException { void <init>(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class java.io.BufferedWriter { void write(java.lang.String,int,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl { void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String nativeAxisToString(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class java.lang.StringBuffer { void setLength(int); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path); }
-keepclassmembers class android.content.pm.ILauncherApps$Stub { android.content.pm.ILauncherApps asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class com.android.okhttp.internal.NamedRunnable { void <init>(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.SearchView$2 { void <init>(android.widget.SearchView); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class com.android.okhttp.internal.NamedRunnable { void run(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.ViewRootImpl$WindowInputEventReceiver { void <init>(android.view.ViewRootImpl,android.view.InputChannel,android.os.Looper); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.widget.SearchView$2 { void run(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void <init>(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer { void <clinit>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer { java.lang.Number deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMaximumVelocity(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer { void <init>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setEnabled(boolean); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long,long); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass1(); }
-keepclassmembers class android.view.ViewRootImpl$WindowInputEventReceiver { void dispose(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.StackTraceElement[] getThreadStackTrace(java.lang.Thread); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMinimumVelocity(float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRelativeVelocity(float,float); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int available(); }
-keepclassmembers class android.app.ContextImpl$60 { void <init>(); }
-keepclassmembers class java.nio.MappedByteBuffer { void <init>(java.nio.MemoryBlock,int,java.nio.channels.FileChannel$MapMode,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass2(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class android.app.ContextImpl$60 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(byte[],int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRampDownDuration(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setEdgeType(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setActivationDelay(int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int fill(java.util.zip.Inflater,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void alpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void cancel(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { java.lang.String toString(char); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { java.lang.String toString(java.lang.Character); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long skip(long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotation(android.view.View,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRampUpDuration(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRelativeEdges(float,float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotationX(android.view.View,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotationBy(android.view.View,float); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$102(java.util.zip.ZipFile$RAFStream,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$200(java.util.zip.ZipFile$RAFStream); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotationYBy(android.view.View,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void startAnimating(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMaximumEdges(float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean shouldAnimate(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotationXBy(android.view.View,float); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void scaleX(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void rotationY(android.view.View,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void requestStop(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { java.lang.String getVolumeState(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void <init>(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float computeTargetVelocity(int,float,float,float); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setDuration(android.view.View,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void scaleY(android.view.View,float); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { int estimateLength(); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.support.v4.view.GravityCompat { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setInterpolator(android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float getEdgeValue(float,float,float,float); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class android.support.v4.view.GravityCompat { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void translationX(android.view.View,float); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { void <init>(android.net.LocalSocketImpl); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void start(android.view.View); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { int available(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,boolean,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { void close(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float constrainEdgeValue(float,float); }
-keepclassmembers class android.text.style.MetricAffectingSpan$Passthrough { void <init>(android.text.style.MetricAffectingSpan); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void translationY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void y(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void x(android.view.View,float); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { int read(byte[],int,int); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { int read(); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float constrain(float,float,float); }
-keepclassmembers class android.net.LocalSocketImpl$SocketInputStream { int read(byte[]); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { int constrain(int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void cancelTargetTouch(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { void checkUnresolvedObjectId(); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { boolean isPrintableString(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper$ClampedScroller access$300(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$200(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$202(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$400(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$100(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { int getTag(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getHexString(); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Set entrySet(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void access$600(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.support.v4.util.ArrayMap { android.support.v4.util.MapCollections getCollection(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$102(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class android.support.v4.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$500(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { int access$800(int,int,int); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticKeyboardHandler { void process(android.view.KeyEvent); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$502(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { android.view.View access$700(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl { void <init>(java.util.Map); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float access$900(float,float,float); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticKeyboardHandler { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void <clinit>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatApi24 { void setPointerIcon(android.view.View,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void appendQEString(java.lang.StringBuilder); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl { com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(android.os.ParcelFileDescriptor); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeEscaped(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendPath(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor open(java.io.File,int); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class android.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer$1 { void <clinit>(); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor openInternal(java.io.File,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeCanonical(); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class android.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo$1 { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class android.support.v4.os.TraceCompat { void beginSection(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getRFC2253String(); }
-keepclassmembers class android.support.v4.os.TraceCompat { void endSection(); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo$1 { android.view.textservice.SpellCheckerInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext { com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object); }
-keepclassmembers class android.view.textservice.SpellCheckerInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.Surface$CompatibleCanvas { void <init>(android.view.Surface); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.util.LruCache { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor[] createCommSocketPair(); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JdkDeserializers { com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { void <init>(android.support.v7.widget.ActivityChooserView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JdkDeserializers { void <clinit>(); }
-keepclassmembers class java.lang.Float { void <init>(java.lang.String); }
-keepclassmembers class android.view.Surface$CompatibleCanvas { void <init>(android.view.Surface,android.view.Surface$1); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Surface$CompatibleCanvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class java.lang.Float { void <init>(double); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int getActivityCount(); }
-keepclassmembers class android.os.ParcelFileDescriptor { int parseMode(java.lang.String); }
-keepclassmembers class java.lang.Float { double doubleValue(); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLContextFactoryBean { void <init>(); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { android.content.pm.ResolveInfo getDefaultActivity(); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { android.support.v7.widget.ActivityChooserModel getDataModel(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int getHistorySize(); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class android.content.IContentService$Stub { android.content.IContentService asInterface(android.os.IBinder); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor getFileDescriptor(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { java.lang.Object getItem(int); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int getCount(); }
-keepclassmembers class android.os.ParcelFileDescriptor { long getStatSize(); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { long getItemId(int); }
-keepclassmembers class android.util.Xml$XmlSerializerFactory { void <clinit>(); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void <init>(android.graphics.drawable.Ripple); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int getItemViewType(int); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class java.lang.Float { long longValue(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(android.util.PathParser$1); }
-keepclassmembers class com.android.okhttp.HostResolver$1 { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class android.ddm.DdmHandleExit { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { boolean getShowDefaultActivity(); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class android.ddm.DdmHandleExit { void register(); }
-keepclassmembers class com.android.okhttp.HostResolver$1 { void <init>(); }
-keepclassmembers class android.transition.Transition$3 { void <init>(android.transition.Transition); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class android.transition.Transition$3 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class android.os.ParcelFileDescriptor { void close(); }
-keepclassmembers class android.ddm.DdmHandleExit { void <clinit>(); }
-keepclassmembers class java.lang.Float { java.lang.String toHexString(float); }
-keepclassmembers class android.os.ParcelFileDescriptor { void closeWithStatus(int,java.lang.String); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class android.view.MotionEvent { void setLocation(float,float); }
-keepclassmembers class android.os.ParcelFileDescriptor { byte[] getOrCreateStatusBuffer(); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { void configureApplyInsets(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int getViewTypeCount(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.IWallpaperManagerCallback$Stub { void <init>(); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { int getTopInset(java.lang.Object); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void writeCommStatusAndClose(int,java.lang.String); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { void dispatchChildInsets(android.view.View,java.lang.Object,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { int measureContentWidth(); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getException(); }
-keepclassmembers class android.support.v4.widget.DrawerLayoutCompatApi21 { android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context); }
-keepclassmembers class android.os.ParcelFileDescriptor { void releaseResources(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { void setMaxActivityCount(int); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void remove(android.view.IWindow); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$BaseIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { android.os.storage.StorageVolume[] getVolumeList(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { void setShowDefaultActivity(boolean,boolean); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[]); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener { void <init>(android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter { void setShowFooterView(boolean); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void close(); }
-keepclassmembers class android.support.v4.app.FragmentManagerNonConfig { void <init>(java.util.List,java.util.List); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$DialogException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.SweepGradient { android.graphics.Shader copy(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$BaseIterator { boolean hasNext(); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallbackImpl { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class com.android.okhttp.TunnelRequest { void <init>(java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int,int); }
-keepclassmembers class com.android.okhttp.TunnelRequest { java.lang.String requestLine(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { boolean outOfMemory(android.view.IWindow); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$5 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$5 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandYesNo); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler$1 { void <init>(); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate2(float,float,int,int); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void setTransparentRegion(android.view.IWindow,android.graphics.Region); }
-keepclassmembers class com.android.okhttp.TunnelRequest { com.android.okhttp.Request getRequest(); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub { com.android.internal.view.IInputMethodSession asInterface(android.os.IBinder); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandMessage { it.skarafaz.mercury.ssh.SshCommandDrop getDrop(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$5 { void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.KeyDeserializer { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler$1 { void receive(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandMessage { java.lang.String getMessage(); }
-keepclassmembers class android.view.ViewRootImpl { void handleOutOfResourcesException(android.view.Surface$OutOfResourcesException); }
-keepclassmembers class java.nio.IntBuffer { java.nio.IntBuffer wrap(int[]); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandMessage { void <init>(java.lang.String,it.skarafaz.mercury.ssh.SshCommandDrop); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { boolean canConstantState(); }
-keepclassmembers class android.app.SearchableInfo$1 { void <init>(); }
-keepclassmembers class java.nio.IntBuffer { void <init>(int,long); }
-keepclassmembers class android.app.SearchableInfo$1 { android.app.SearchableInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.SearchableInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class ch.qos.logback.classic.pattern.NopThrowableInformationConverter { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.transition.TransitionSet$TransitionSetListener { void <init>(android.transition.TransitionSet); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region); }
-keepclassmembers class android.transition.TransitionSet$TransitionSetListener { void onTransitionStart(android.transition.Transition); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { int getChangingConfigurations(); }
-keepclassmembers class android.view.ViewRootImpl { boolean requestLayoutDuringLayout(android.view.View); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { void doFinal(byte[],int); }
-keepclassmembers class android.transition.TransitionSet$TransitionSetListener { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInLayout(); }
-keepclassmembers class android.view.ViewRootImpl { void performMeasure(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <clinit>(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class android.view.ViewRootImpl { void performLayout(android.view.WindowManager$LayoutParams,int,int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void <clinit>(); }
-keepclassmembers class java.nio.IntBuffer { java.nio.IntBuffer wrap(int[],int,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { void update(byte[],int,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { void update(int); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA256 { void init(byte[]); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void getDisplayFrame(android.view.IWindow,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { boolean _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void run(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds { void setResizeClip(boolean); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void setInTouchMode(boolean); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { java.util.Iterator elements(); }
-keepclassmembers class android.view.ViewRootImpl { java.util.ArrayList getValidLayoutRequesters(java.util.ArrayList,boolean); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void finishDrawing(android.view.IWindow); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { boolean getInTouchMode(); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeBounds { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String fixSlashes(java.lang.String); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class android.location.ICountryDetector$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { java.util.Iterator fields(); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { boolean performHapticFeedback(android.view.IWindow,int,boolean); }
-keepclassmembers class android.transition.ChangeBounds { boolean parentMatches(android.view.View,android.view.View); }
-keepclassmembers class java.security.MessageDigestSpi { int engineDigest(byte[],int,int); }
-keepclassmembers class java.io.File { void <init>(java.net.URI); }
-keepclassmembers class java.io.File { void checkURI(java.net.URI); }
-keepclassmembers class android.view.MotionEvent { java.lang.String axisToString(int); }
-keepclassmembers class java.io.File { java.lang.String join(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.ViewRootImpl { void onHardwarePreDraw(android.view.HardwareCanvas); }
-keepclassmembers class javax.crypto.spec.IvParameterSpec { void <init>(byte[]); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.view.ViewRootImpl { void onHardwarePostDraw(android.view.HardwareCanvas); }
-keepclassmembers class android.view.ViewRootImpl { int getRootMeasureSpec(int,int); }
-keepclassmembers class android.view.ViewRootImpl { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class java.io.File { boolean doAccess(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.File { boolean canRead(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void <init>(com.android.okio.OkBuffer); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class java.io.File { boolean canWrite(); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class android.view.ViewRootImpl { void profileRendering(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeHeaders(java.util.List); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView$Drawables { void resolveWithLayoutDirection(int); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.databind.JsonNode get(java.lang.String); }
-keepclassmembers class java.io.File { void deleteOnExit(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.core.TreeNode get(java.lang.String); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.databind.JsonNode get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.core.TreeNode get(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeInt(int,int,int); }
-keepclassmembers class java.io.File { java.io.File getCanonicalFile(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { int hashCode(); }
-keepclassmembers class java.io.File { java.io.File getParentFile(); }
-keepclassmembers class java.io.File { java.lang.String getCanonicalPath(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void reportDropResult(android.view.IWindow,boolean); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class android.view.ViewRootImpl { void performDraw(); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void dragRecipientEntered(android.view.IWindow); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class java.io.File { boolean isAbsolute(); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeByteString(com.android.okio.ByteString); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void dragRecipientExited(android.view.IWindow); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void drawableStateChanged(); }
-keepclassmembers class java.io.File { java.lang.String canonicalizePath(java.lang.String); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { byte[] engineDigest(); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class android.view.ViewRootImpl { void draw(boolean); }
-keepclassmembers class android.widget.TextView$Drawables { void updateDrawablesLayoutDirection(int); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineReset(); }
-keepclassmembers class java.io.File { boolean setLastModified(long); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { int engineGetDigestLength(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class java.io.File { boolean setReadable(boolean,boolean); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1); }
-keepclassmembers class java.io.File { boolean setLastModifiedImpl(java.lang.String,long); }
-keepclassmembers class java.io.File { boolean setExecutable(boolean,boolean); }
-keepclassmembers class java.io.File { boolean setWritable(boolean,boolean); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { java.lang.Object clone(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class ch.qos.logback.core.rolling.RolloverFailure { void <init>(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.rolling.RolloverFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.transition.ChangeBounds$4 { void set(android.view.View,android.graphics.PointF); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$2 { android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class android.transition.ChangeBounds$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$6 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okio.OkBuffer,int,boolean); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$4 { android.graphics.PointF get(android.view.View); }
-keepclassmembers class java.io.File { java.lang.String[] listImpl(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class java.io.File { java.lang.String[] list(java.io.FilenameFilter); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$2 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$6 { void execute(); }
-keepclassmembers class android.transition.ChangeBounds$4 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void onDetachedFromWindow(); }
-keepclassmembers class java.io.File { boolean doChmod(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket { int access$000(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class ch.qos.logback.core.pattern.util.RestrictedEscapeUtil { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void onMeasure(int,int); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(java.io.FileFilter); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket { void <init>(com.fasterxml.jackson.core.sym.Name,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket); }
-keepclassmembers class java.io.File { java.io.File[] filenamesToFiles(java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { boolean performClick(); }
-keepclassmembers class android.media.IAudioFocusDispatcher$Stub { void <init>(); }
-keepclassmembers class java.io.File { boolean mkdirs(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket { com.fasterxml.jackson.core.sym.Name find(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket { com.fasterxml.jackson.core.sym.Name find(int,int[],int); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class java.io.File { void mkdirErrno(); }
-keepclassmembers class java.io.File { boolean mkdir(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { void <init>(); }
-keepclassmembers class java.io.File { boolean mkdirs(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { void doFinal(byte[],int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { void update(int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { int getBlockSize(); }
-keepclassmembers class java.io.File { boolean createNewFile(); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl { boolean drawSoftware(android.view.Surface,android.view.View$AttachInfo,int,int,boolean,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { void update(byte[],int,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void <init>(com.android.okhttp.internal.BitArray$FixedCapacity); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void <init>(android.content.Context); }
-keepclassmembers class java.io.File { java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA512 { void init(byte[]); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher$Multi { void <init>(java.lang.Class[]); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void growToSize(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int shiftOf(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void toggle(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void clear(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int offsetOf(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher$Multi { boolean isVisibleForView(java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void set(int); }
-keepclassmembers class java.io.File { java.net.URL toURL(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue); }
-keepclassmembers class java.io.File { java.lang.String getAbsoluteName(); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void shiftLeft(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { boolean get(int); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class android.view.GraphicBuffer$1 { void <init>(); }
-keepclassmembers class android.view.IWindowSession$Stub$Proxy { android.view.IWindowId getWindowId(android.os.IBinder); }
-keepclassmembers class java.io.File { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { java.lang.String gravityToString(int); }
-keepclassmembers class java.io.File { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean hasPeekingDrawer(); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class android.view.GraphicBuffer$1 { android.view.GraphicBuffer createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean hasOpaqueBackground(android.view.View); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(float); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean hasVisibleDrawer(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean mirror(android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void <init>(com.android.okhttp.internal.BitArray$FixedCapacity,com.android.okhttp.internal.BitArray$1); }
-keepclassmembers class android.view.GraphicBuffer$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int checkInput(int); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class java.lang.ClassFormatError { void <init>(); }
-keepclassmembers class java.lang.ClassFormatError { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean includeChildForAccessibility(android.view.View); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void debug(java.lang.String,java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$39 { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void drawAccessibilityFocusedDrawableIfNeeded(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void updateChildrenImportantForAccessibility(android.view.View,boolean); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.app.ContextImpl$39 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.graphics.drawable.Drawable resolveRightShadow(); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.graphics.drawable.Drawable resolveLeftShadow(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void booleanArrayAppend(java.lang.StringBuilder,boolean[]); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry { void <init>(android.content.res.ColorStateList,android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void resolveShadowDrawables(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyMetadata { void <init>(java.lang.Boolean,java.lang.String,java.lang.Integer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyMetadata { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void <init>(int,boolean,int,boolean); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void <init>(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void byteArrayAppend(java.lang.StringBuilder,byte[]); }
-keepclassmembers class android.view.ViewRootImpl { boolean getAccessibilityFocusedRect(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyMetadata { com.fasterxml.jackson.databind.PropertyMetadata construct(boolean,java.lang.String,java.lang.Integer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void error(java.lang.String); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ObjectNode { int size(); }
-keepclassmembers class android.view.ViewRootImpl { android.graphics.drawable.Drawable getAccessibilityFocusedDrawable(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void cancelChildViewTouch(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void <init>(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void charArrayAppend(java.lang.StringBuilder,char[]); }
-keepclassmembers class android.view.ViewRootImpl { boolean scrollToRectOrFocus(android.graphics.Rect,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyMetadata { com.fasterxml.jackson.databind.PropertyMetadata withDescription(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <clinit>(); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void error(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean checkDrawerViewAbsoluteGravity(android.view.View,int); }
-keepclassmembers class android.media.tv.TvInputInfo { void <init>(android.content.pm.ResolveInfo,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void closeDrawer(android.view.View); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void closeDrawer(android.view.View,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.PropertyMetadata { com.fasterxml.jackson.databind.PropertyMetadata withIndex(java.lang.Integer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { void <init>(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void doubleArrayAppend(java.lang.StringBuilder,double[]); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void _addSymbol(int,com.fasterxml.jackson.core.sym.Name); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object); }
-keepclassmembers class android.media.tv.TvInputInfo { java.lang.String getId(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void closeDrawers(boolean); }
-keepclassmembers class org.slf4j.event.EventRecodingLogger { void info(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void closeDrawers(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void floatArrayAppend(java.lang.StringBuilder,float[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 { void setMaxScrollX(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { java.lang.Class handledType(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { com.fasterxml.jackson.databind.JsonSerializer replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 { void setMaxScrollY(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { boolean isUnwrappingSerializer(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void intArrayAppend(java.lang.StringBuilder,int[]); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void computeScroll(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.String toString(); }
-keepclassmembers class android.content.pm.FeatureInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void dispatchOnDrawerClosed(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { boolean isDoubleEscaped(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { boolean isEscapedDelimeter(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.String format(java.util.Calendar); }
-keepclassmembers class android.view.ViewRootImpl { android.view.View getAccessibilityFocusedHost(); }
-keepclassmembers class android.content.pm.FeatureInfo { void <init>(android.os.Parcel,android.content.pm.FeatureInfo$1); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.content.pm.FeatureInfo { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonSerializer { boolean usesObjectId(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.AndroidException { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class android.util.AndroidException { void <init>(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.util.AndroidException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void dispatchOnDrawerOpened(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void _handleSpillOverflow(int,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class android.util.AndroidException { void <init>(java.lang.Exception); }
-keepclassmembers class android.media.AudioRoutesInfo$1 { void <init>(); }
-keepclassmembers class android.media.AudioRoutesInfo$1 { android.media.AudioRoutesInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase { void <init>(); }
-keepclassmembers class android.net.nsd.INsdManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase { void setSingleLineAllCaps(android.widget.TextView); }
-keepclassmembers class sun.misc.Unsafe { int arrayBaseOffset(java.lang.Class); }
-keepclassmembers class android.media.AudioRoutesInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.net.nsd.INsdManager$Stub$Proxy { android.os.Messenger getMessenger(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void dispatchOnDrawerSlide(android.view.View,float); }
-keepclassmembers class sun.misc.Unsafe { int arrayIndexScale(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { int hashCode(); }
-keepclassmembers class android.view.ViewRootImpl { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewRootImpl { void clearChildFocus(android.view.View); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.transition.Slide$3 { void <init>(); }
-keepclassmembers class sun.misc.Unsafe { int getArrayBaseOffsetForComponentType(java.lang.Class); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void safeObjectAppend(java.lang.StringBuilder,java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class android.transition.Slide$3 { float getGoneY(android.view.ViewGroup,android.view.View); }
-keepclassmembers class sun.misc.Unsafe { int getArrayIndexScaleForComponentType(java.lang.Class); }
-keepclassmembers class android.view.ViewRootImpl { void focusableViewAvailable(android.view.View); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.String toString(); }
-keepclassmembers class android.view.ViewRootImpl { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void shortArrayAppend(java.lang.StringBuilder,short[]); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapLong(java.lang.Object,long,long,long); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl$1 { void <init>(android.support.v4.view.ViewCompat$LollipopViewCompatImpl,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchDetachedFromWindow(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name constructName(int,java.lang.String,int[],int); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedInt(java.lang.Object,long,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl$1 { java.lang.Object onApplyWindowInsets(android.view.View,java.lang.Object); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { java.lang.Throwable getThrowableCandidate(java.lang.Object[]); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class android.media.tv.TvInputInfo { int hashCode(); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { java.lang.Object[] trimmedCopy(java.lang.Object[]); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class android.media.tv.TvInputInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getAlpha(android.view.View); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { void <init>(); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { ch.qos.logback.core.Context getContext(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { long getFrameTime(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getLayerType(android.view.View); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot(); }
-keepclassmembers class android.media.tv.TvInputInfo { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { boolean isStarted(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.view.ViewRootImpl { android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView(); }
-keepclassmembers class org.slf4j.helpers.MessageFormatter { void longArrayAppend(java.lang.StringBuilder,long[]); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { int findBestBucket(); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { void start(); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class com.afollestad.materialdialogs.Theme { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedEntry nextEntry(); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey { void <init>(java.lang.Class,java.lang.Class,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getTranslationX(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void expandCollision(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredState(android.view.View); }
-keepclassmembers class android.view.ViewRootImpl { void updateConfiguration(android.content.res.Configuration,boolean); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { void setContext(ch.qos.logback.core.Context); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getTranslationY(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int); }
-keepclassmembers class com.afollestad.materialdialogs.Theme { void <init>(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.LayoutBase { void stop(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name getEmptyName(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void mergeChild(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { void <init>(org.apache.commons.lang3.CharRange); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setActivated(android.view.View,boolean); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void nukeSymbols(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setAlpha(android.view.View,float); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { void <init>(org.apache.commons.lang3.CharRange,org.apache.commons.lang3.CharRange$1); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.view.View findDrawerWithGravity(int); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey { int hashCode(); }
-keepclassmembers class android.media.tv.TvInputInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class android.transition.ChangeTransform$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void rehash(); }
-keepclassmembers class android.view.ViewRootImpl { void forceLayout(android.view.View); }
-keepclassmembers class android.transition.ChangeTransform$1 { float[] get(android.transition.ChangeTransform$PathAnimatorMatrix); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { void prepareNext(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.transition.ChangeTransform$1 { void set(android.transition.ChangeTransform$PathAnimatorMatrix,float[]); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewRootImpl { boolean ensureTouchMode(boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.view.View findOpenDrawer(); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void <init>(android.widget.ImageView); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { boolean hasNext(); }
-keepclassmembers class android.transition.ChangeTransform$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.transition.ChangeTransform$1 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { boolean hasOverlappingRendering(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token$1 { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { boolean ensureTouchModeLocally(boolean); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token$1 { android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void tickleInvalidationFlag(android.view.View); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { int hashCode(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.view.View findVisibleDrawer(); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { java.lang.Character next(); }
-keepclassmembers class android.view.ViewRootImpl { boolean enterTouchMode(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.text.Format { java.lang.Object clone(); }
-keepclassmembers class android.media.tv.TvInputInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewGroup findAncestorToTakeFocusInTouchMode(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.CharRange$CharacterIterator { java.lang.Object next(); }
-keepclassmembers class android.view.ViewRootImpl { boolean leaveTouchMode(); }
-keepclassmembers class java.lang.IntegralToString { void appendInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { boolean areSameFloatImpl(float,float); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { dalvik.system.profiler.HprofData$ThreadEvent start(int,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { boolean isNavigationKey(android.view.KeyEvent); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { boolean isTypingKey(android.view.KeyEvent); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.text.Format { boolean upTo(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,char); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { boolean equals(java.lang.Object); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { dalvik.system.profiler.HprofData$ThreadEvent end(int); }
-keepclassmembers class android.media.tv.TvInputInfo { void <init>(android.os.Parcel,android.media.tv.TvInputInfo$1); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$5 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.media.tv.TvInputInfo { void <clinit>(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { void <init>(dalvik.system.profiler.HprofData$ThreadEventType,int,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void setLocalDragState(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$5 { void run(); }
-keepclassmembers class android.view.ViewRootImpl { void handleDragEvent(android.view.DragEvent); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void unshareMain(); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void acquireReference(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { void <init>(dalvik.system.profiler.HprofData$ThreadEventType,int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void unshareNames(); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { boolean checkForLeavingTouchModeAndConsume(android.view.KeyEvent); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void releaseReference(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { int getDrawerLockMode(int); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { java.lang.String toString(); }
-keepclassmembers class com.android.internal.content.PackageMonitor { void <init>(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void unshareCollision(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { int hashCode(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { int getDrawerLockMode(android.view.View); }
-keepclassmembers class java.text.Format { boolean upToWithQuotes(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,char,char); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void characters(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name addName(java.lang.String,int[],int); }
-keepclassmembers class com.android.internal.content.PackageMonitor { void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { java.lang.CharSequence getDrawerTitle(int); }
-keepclassmembers class com.android.internal.content.PackageMonitor { void register(android.content.Context,android.os.Looper,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { void <init>(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { int hashCode(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { void handleDispatchSystemUiVisibilityChanged(android.view.ViewRootImpl$SystemUiVisibilityInfo); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { int getDrawerViewAbsoluteGravity(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { boolean canOverrideAccessModifiers(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void checkForWatchedAttributes(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void close(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { float getDrawerViewOffset(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { int calcHash(int,int); }
-keepclassmembers class android.view.ViewRootImpl { void handleDispatchWindowShown(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewRootImpl { void handleDispatchDoneAnimating(); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean isContentView(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { int calcHash(int[],int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { int calcHash(int); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { void <init>(android.view.inputmethod.CursorAnchorInfo$Builder); }
-keepclassmembers class android.view.ViewRootImpl { android.media.AudioManager getAudioManager(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.ViewRootImpl { void getLastTouchPoint(android.graphics.Point); }
-keepclassmembers class android.view.ViewRootImpl { void setDragFocus(android.view.View); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name findName(int); }
-keepclassmembers class android.view.ViewRootImpl { int relayoutWindow(android.view.WindowManager$LayoutParams,int,boolean); }
-keepclassmembers class java.lang.IntegralToString { void appendLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class dalvik.system.profiler.HprofData$ThreadEvent { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void endElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean isDrawerOpen(android.view.View); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void startDocument(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean isDrawerVisible(android.view.View); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean isDrawerView(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class com.fasterxml.jackson.databind.DatabindContext { com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name findName(int[],int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { java.util.Map getAttributeWatchValues(); }
-keepclassmembers class java.lang.IntegralToString { int intIntoCharArray(char[],int,int); }
-keepclassmembers class android.widget.ImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { java.util.List recordEvents(org.xml.sax.InputSource); }
-keepclassmembers class android.os.storage.IObbActionListener$Stub { void <init>(); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { void playSoundEffect(int); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void startElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.Name findName(int,int); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onAttachedToWindow(); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToBinaryString(int); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[],java.lang.String,java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { boolean performHapticFeedback(int,boolean); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void moveDrawerToOffset(android.view.View,float); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo { void <init>(android.view.inputmethod.CursorAnchorInfo$Builder,android.view.inputmethod.CursorAnchorInfo$1); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int[] getOid(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void setAttributeWatch(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer makeChild(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { boolean maybeDirty(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ImageView { void setImageURI(android.net.Uri); }
-keepclassmembers class ch.qos.logback.classic.android.ASaxEventRecorder { void setFilter(java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void release(); }
-keepclassmembers class com.jcraft.jsch.Channel { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toOIDString(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer { void reportTooManyCollisions(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void <init>(); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void <clinit>(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String byteToHexString(byte,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String applyRulesToString(java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.graphics.LinearGradient { android.graphics.Shader copy(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToHexString(int,boolean,int); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class com.jcraft.jsch.Channel { void del(com.jcraft.jsch.Channel); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.Object getGroup(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void init(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void validateOid(int[]); }
-keepclassmembers class android.widget.ImageView { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToHexString(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { void <init>(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToOctalString(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void disconnect(com.jcraft.jsch.Session); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashIntArray(int[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class java.util.HugeEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class android.view.ViewRootImpl { boolean die(boolean); }
-keepclassmembers class java.util.HugeEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class java.util.HugeEnumSet { int size(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.GregorianCalendar newCalendar(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToOctalString(long); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { void addOrOverrideParam(int,java.lang.annotation.Annotation); }
-keepclassmembers class android.support.v7.widget.SearchView$10 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class android.widget.ImageView { android.widget.ImageView$ScaleType getScaleType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashCode(); }
-keepclassmembers class android.view.ViewRootImpl { void doDie(); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix getImageMatrix(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String stringOf(char[]); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable); }
-keepclassmembers class java.util.HugeEnumSet { void complement(); }
-keepclassmembers class java.util.HugeEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String format(java.util.Date); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer format(long,java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void verify(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(byte[],int,int); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class com.jcraft.jsch.Channel { com.jcraft.jsch.Channel getChannel(int,com.jcraft.jsch.Session); }
-keepclassmembers class java.util.HugeEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String format(java.util.Calendar); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[]); }
-keepclassmembers class java.lang.IntegralToString { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl { void requestUpdateConfiguration(android.content.res.Configuration); }
-keepclassmembers class com.jcraft.jsch.Channel { com.jcraft.jsch.Channel getChannel(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.HugeEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { void destroyHardwareRenderer(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer); }
-keepclassmembers class java.util.HugeEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.List parsePattern(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String getPattern(); }
-keepclassmembers class com.jcraft.jsch.Channel { void addRemoteWindowSize(long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.TimeZone getTimeZone(); }
-keepclassmembers class android.view.ViewRootImpl { void loadSystemProperties(); }
-keepclassmembers class com.jcraft.jsch.Channel { void close(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { int hashCode(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { void doFinal(byte[],int); }
-keepclassmembers class com.jcraft.jsch.Channel { void disconnect(); }
-keepclassmembers class com.jcraft.jsch.Channel { void connect(int); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchFinishInputConnection(android.view.inputmethod.InputConnection); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.Locale getLocale(); }
-keepclassmembers class android.location.LocalListenerHelper { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedWithParams { com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { void update(int); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.HugeEnumSet { void setRange(java.lang.Enum,java.lang.Enum); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$QueuedInputEvent obtainQueuedInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { void update(byte[],int,int); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onMeasure(int,int); }
-keepclassmembers class com.jcraft.jsch.Channel { void eof_remote(); }
-keepclassmembers class com.jcraft.jsch.Channel { void eof(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class com.jcraft.jsch.Channel { com.jcraft.jsch.Packet genChannelOpenPacket(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACMD5 { void init(byte[]); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.HugeEnumSet { long[] access$000(java.util.HugeEnumSet); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void getData(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewRootImpl { void recycleQueuedInputEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl { void enqueueInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int,boolean); }
-keepclassmembers class android.view.ViewRootImpl { void doProcessInputEvents(); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { void <init>(); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { boolean getBoolean(android.content.res.TypedArray,int,int,boolean); }
-keepclassmembers class android.view.ViewRootImpl { void enqueueInputEvent(android.view.InputEvent); }
-keepclassmembers class java.util.HugeEnumSet { java.lang.Enum[] access$100(java.util.HugeEnumSet); }
-keepclassmembers class com.jcraft.jsch.Channel { java.io.InputStream getExtInputStream(); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { int getColumnNumber(ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { java.lang.String getLineColStr(ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { void body(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { void scheduleProcessInputEvents(); }
-keepclassmembers class com.jcraft.jsch.Channel { int getExitStatus(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { int getLineNumber(ch.qos.logback.core.joran.spi.InterpretationContext); }
-keepclassmembers class com.jcraft.jsch.Channel { java.io.InputStream getInputStream(); }
-keepclassmembers class android.view.ViewRootImpl { void deliverInputEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int); }
-keepclassmembers class android.widget.ListView$FixedViewInfo { void <init>(android.widget.ListView); }
-keepclassmembers class ch.qos.logback.core.joran.action.Action { java.lang.String toString(); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { int getResourceId(android.content.res.TypedArray,int,int,int); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.view.ViewRootImpl { void finishInputEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isTerminalInputEvent(android.view.InputEvent); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.view.ViewRootImpl { void scheduleConsumeBatchedInput(); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String parseToken(java.lang.String,int[]); }
-keepclassmembers class android.view.ViewRootImpl { void scheduleConsumeBatchedInputImmediately(); }
-keepclassmembers class android.content.ContextWrapper { void attachBaseContext(android.content.Context); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void finishInput(com.android.internal.view.IInputMethodClient); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class android.view.ViewRootImpl { void unscheduleConsumeBatchedInput(); }
-keepclassmembers class com.android.internal.content.PackageMonitor { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl { void doConsumeBatchedInput(long); }
-keepclassmembers class com.jcraft.jsch.Channel { com.jcraft.jsch.Session getSession(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void <init>(com.android.okhttp.Response); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float,float,float); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float,float,float); }
-keepclassmembers class com.jcraft.jsch.Channel { int getRecipient(); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class com.jcraft.jsch.Channel { boolean isConnected(); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void init(); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchInvalidateDelayed(android.view.View,long); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class com.jcraft.jsch.Channel { void run(); }
-keepclassmembers class com.jcraft.jsch.Channel { void sendChannelOpen(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void removePromptView(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class com.jcraft.jsch.Channel { boolean isClosed(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void connect(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void <init>(int); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { boolean checkTag(int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchInvalidateRectOnAnimation(android.view.View$AttachInfo$InvalidateInfo); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewRootImpl { void cancelInvalidate(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setPopupClipToScreenEnabled(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Matrix { boolean preScale(float,float); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void openDrawer(android.view.View); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchKeyFromIme(android.view.KeyEvent); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void openDrawer(android.view.View,boolean); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver); }
-keepclassmembers class android.support.v4.app.BundleCompatJellybeanMR2 { android.os.IBinder getBinder(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void dismiss(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class android.transition.Transition$AnimationInfo { void <init>(android.view.View,java.lang.String,android.transition.Transition,android.view.WindowId,android.transition.TransitionValues); }
-keepclassmembers class android.media.RemoteControlClient$1 { void <init>(android.media.RemoteControlClient); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getHorizontalOffset(); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class java.io.RandomAccessFile { void close(); }
-keepclassmembers class android.graphics.Matrix { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class com.jcraft.jsch.Channel { void sendOpenFailure(int); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$1 { void run(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void requestLayout(); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.RandomAccessFile { java.io.FileDescriptor getFD(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class com.jcraft.jsch.Channel { void sendOpenConfirmation(); }
-keepclassmembers class android.view.ViewRootImpl { void dispatchCheckFocus(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void setChildInsets(java.lang.Object,boolean); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class com.jcraft.jsch.Channel { void setExitStatus(int); }
-keepclassmembers class java.io.RandomAccessFile { long length(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class android.graphics.Matrix { boolean invert(android.graphics.Matrix); }
-keepclassmembers class android.view.ViewRootImpl { void postSendWindowContentChangedCallback(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[],int,float[],int,int); }
-keepclassmembers class com.jcraft.jsch.Channel { void setLocalPacketSize(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void setInputStream(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.Channel { void setLocalWindowSizeMax(int); }
-keepclassmembers class com.jcraft.jsch.Channel { void setLocalWindowSize(int); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class android.view.ViewRootImpl { void removeSendWindowContentChangedCallback(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class java.io.RandomAccessFile { int read(byte[],int,int); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer { com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer { void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValueIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.ViewRootImpl { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer { com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getWidth(); }
-keepclassmembers class com.jcraft.jsch.Channel { void setRecipient(int); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.widget.ImageView { void animateTransform(android.graphics.Matrix); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[]); }
-keepclassmembers class java.io.RandomAccessFile { int readInt(); }
-keepclassmembers class android.view.ViewRootImpl { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void setDrawerLockMode(int,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class com.jcraft.jsch.Channel { void setRemotePacketSize(int); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class com.jcraft.jsch.Channel { void setRemoteWindowSize(long); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getVerticalOffset(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { boolean isModal(); }
-keepclassmembers class android.graphics.Matrix { void setValues(float[]); }
-keepclassmembers class com.jcraft.jsch.Channel { void start(); }
-keepclassmembers class android.widget.ImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class android.view.ThreadedRenderer { void <init>(android.content.Context,boolean); }
-keepclassmembers class butterknife.ButterKnife$Finder$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setUseCaches(boolean); }
-keepclassmembers class butterknife.ButterKnife$Finder$2 { android.view.View findView(java.lang.Object,int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { boolean getUseCaches(); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class com.jcraft.jsch.Channel { void write_ext(byte[],int,int); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class com.jcraft.jsch.Channel { void setSession(com.jcraft.jsch.Session); }
-keepclassmembers class butterknife.ButterKnife$Finder$2 { android.content.Context getContext(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class android.view.ThreadedRenderer { void updateEnabledState(android.view.Surface); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class com.jcraft.jsch.Channel { void write(byte[],int,int); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.view.ThreadedRenderer { boolean initialize(android.view.Surface); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.view.ThreadedRenderer { void destroy(); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class java.io.RandomAccessFile { void seek(long); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { void <init>(android.media.MediaRouter$RouteCategory); }
-keepclassmembers class android.view.ThreadedRenderer { void destroyHardwareResources(android.view.View); }
-keepclassmembers class android.view.ThreadedRenderer { void updateSurface(android.view.Surface); }
-keepclassmembers class android.view.ThreadedRenderer { boolean pauseSurface(android.view.Surface); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class android.view.ViewRootImpl { boolean canResolveLayoutDirection(); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.view.ViewRootImpl { boolean isLayoutDirectionResolved(); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class android.view.ThreadedRenderer { void destroyResources(android.view.View); }
-keepclassmembers class android.view.ViewRootImpl { int getLayoutDirection(); }
-keepclassmembers class android.view.ViewRootImpl { boolean canResolveTextDirection(); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float,float,float); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { java.lang.CharSequence getName(); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float); }
-keepclassmembers class android.view.ViewRootImpl { boolean isTextDirectionResolved(); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float,float,float); }
-keepclassmembers class android.view.ViewRootImpl { int getTextDirection(); }
-keepclassmembers class android.view.ThreadedRenderer { void invalidate(android.view.Surface); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.view.ViewRootImpl { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.view.ViewRootImpl { boolean canResolveTextAlignment(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void setDrawerViewOffset(android.view.View,float); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { java.lang.CharSequence getName(android.content.res.Resources); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { boolean resolveStatusCode(); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.ViewRootImpl { boolean isTextAlignmentResolved(); }
-keepclassmembers class android.view.ViewRootImpl { int getTextAlignment(); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_postConcat(long,long); }
-keepclassmembers class android.view.ViewRootImpl { android.view.View getCommonPredecessor(android.view.View,android.view.View); }
-keepclassmembers class android.view.ThreadedRenderer { void setup(int,int,android.graphics.Rect); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout { void updateDrawerState(int,int,android.view.View); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { java.lang.CharSequence getStatus(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { boolean setRealStatusCode(int); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class android.view.ThreadedRenderer { void setOpaque(boolean); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { void native_preScale(long,float,float); }
-keepclassmembers class android.view.ThreadedRenderer { int getWidth(); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { java.lang.CharSequence getDescription(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class android.view.ThreadedRenderer { int getHeight(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class android.view.ViewRootImpl { void checkThread(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean native_invert(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.view.ThreadedRenderer { int search(java.lang.String[],java.lang.String); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void startIfReady(android.animation.Animator); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.os.StrictMode$6 { boolean queueIdle(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int getSupportedTypes(); }
-keepclassmembers class android.view.ViewRootImpl { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { boolean canBeBuiltFromSimpleString(java.lang.Class); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { boolean matchesTypes(int); }
-keepclassmembers class android.view.ThreadedRenderer { boolean checkIfProfilingRequested(); }
-keepclassmembers class android.graphics.Matrix { void native_setValues(long,float[]); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { java.lang.Object convertArg(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { android.media.MediaRouter$RouteGroup getGroup(); }
-keepclassmembers class android.app.job.JobScheduler { void <init>(); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { android.media.MediaRouter$RouteCategory getCategory(); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class android.view.ThreadedRenderer { boolean loadSystemProperties(); }
-keepclassmembers class android.support.v4.app.ListFragment$2 { void <init>(android.support.v4.app.ListFragment); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { android.graphics.drawable.Drawable getIconDrawable(); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class android.view.ThreadedRenderer { void updateViewTreeDisplayList(android.view.View); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class android.view.ViewRootImpl { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class android.view.ViewRootImpl { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int getPlaybackType(); }
-keepclassmembers class com.jcraft.jsch.IO { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class com.jcraft.jsch.IO { void close(); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class android.view.ViewRootImpl { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.app.ListFragment$2 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.ThreadedRenderer { void updateRootDisplayList(android.view.View,android.view.HardwareRenderer$HardwareDrawCallbacks); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class android.view.ViewRootImpl { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int getVolume(); }
-keepclassmembers class com.jcraft.jsch.IO { int getByte(); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { java.lang.Object convertByValueOfMethod(ch.qos.logback.core.spi.ContextAware,java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.view.ViewRootImpl { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class com.jcraft.jsch.IO { void getByte(byte[],int,int); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl { void changeCanvasOpacity(boolean); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$100(android.view.View$ListenerInfo); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class com.jcraft.jsch.IO { void out_close(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$102(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { java.nio.charset.Charset convertToCharset(ch.qos.logback.core.spi.ContextAware,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.IO { void put(com.jcraft.jsch.Packet); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int getVolumeMax(); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$RunQueue getRunQueue(); }
-keepclassmembers class android.view.ThreadedRenderer { void invalidateRoot(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$202(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList); }
-keepclassmembers class com.jcraft.jsch.IO { void put(byte[],int,int); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.view.ThreadedRenderer { void draw(android.view.View,android.view.View$AttachInfo,android.view.HardwareRenderer$HardwareDrawCallbacks); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.IO { void put_ext(byte[],int,int); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { boolean updatePresentationDisplay(); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { java.lang.Object convertToEnum(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.Class); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int getVolumeHandling(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$402(android.view.View$ListenerInfo,android.view.View$OnTouchListener); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { android.view.Display choosePresentationDisplay(); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$000(android.view.ViewRootImpl); }
-keepclassmembers class com.jcraft.jsch.IO { void setExtOutputStream(java.io.OutputStream,boolean); }
-keepclassmembers class android.view.ViewRootImpl { android.view.Choreographer$FrameCallback access$100(android.view.ViewRootImpl); }
-keepclassmembers class com.jcraft.jsch.IO { void setInputStream(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.IO { void setInputStream(java.io.InputStream,boolean); }
-keepclassmembers class com.jcraft.jsch.IO { void setExtOutputStream(java.io.OutputStream); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { boolean followsTheValueOfConvention(java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.joran.util.StringToObjectConverter { boolean isOfTypeCharset(java.lang.Class); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class com.jcraft.jsch.IO { void setOutputStream(java.io.OutputStream); }
-keepclassmembers class android.view.ViewRootImpl { void access$300(android.view.ViewRootImpl,boolean); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class com.jcraft.jsch.IO { void setOutputStream(java.io.OutputStream,boolean); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.view.ViewRootImpl { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$400(android.view.ViewRootImpl,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$500(android.view.ViewRootImpl); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.view.ViewRootImpl { void access$600(android.view.ViewRootImpl,android.view.DragEvent); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setDropDownGravity(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$302(android.view.View$ListenerInfo,android.view.View$OnKeyListener); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.ViewRootImpl { void access$700(android.view.ViewRootImpl,android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class android.view.ViewRootImpl { void access$200(android.view.View); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1200(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$1702(android.view.ViewRootImpl,boolean); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$800(android.view.ViewRootImpl,android.view.KeyEvent); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { boolean isSelected(); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$1802(android.view.ViewRootImpl,boolean); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setHorizontalOffset(int); }
-keepclassmembers class android.support.v7.widget.SearchView$7 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$1902(android.view.ViewRootImpl,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class android.support.v7.widget.SearchView$7 { void onClick(android.view.View); }
-keepclassmembers class android.view.ViewRootImpl { boolean access$2002(android.view.ViewRootImpl,boolean); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { java.lang.Object next(); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class android.view.ThreadedRenderer { void fence(); }
-keepclassmembers class android.view.ThreadedRenderer { void setName(java.lang.String); }
-keepclassmembers class android.app.ContextImpl$44 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.ViewRootImpl { android.view.View access$2400(android.view.ViewRootImpl,android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.app.ContextImpl$44 { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class android.view.ThreadedRenderer { void registerAnimatingRenderNode(android.view.RenderNode); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { void <init>(java.lang.String); }
-keepclassmembers class android.os.IMessenger$Stub { void <init>(); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { void routeUpdated(); }
-keepclassmembers class android.view.ThreadedRenderer { void notifyFramePending(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { java.lang.String toString(); }
-keepclassmembers class android.os.IMessenger$Stub { android.os.IMessenger asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.view.ThreadedRenderer { void trimMemory(int); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void notifyUserAction(int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.ThreadedRenderer { void setupShadersDiskCache(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.view.ThreadedRenderer { void nSetAtlas(long,android.view.GraphicBuffer,long[]); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.view.ThreadedRenderer { long nCreateRootRenderNode(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.ThreadedRenderer { long nCreateProxy(boolean,long); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class android.view.ThreadedRenderer { void nSetFrameInterval(long,long); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { com.fasterxml.jackson.core.JsonLocation getLocation(); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void set(android.widget.ImageView,android.graphics.Matrix); }
-keepclassmembers class android.view.ThreadedRenderer { boolean nInitialize(long,android.view.Surface); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { java.lang.String getMessage(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.view.ThreadedRenderer { void nUpdateSurface(long,android.view.Surface); }
-keepclassmembers class android.view.ThreadedRenderer { boolean nPauseSurface(long,android.view.Surface); }
-keepclassmembers class android.media.MediaRouter$RouteInfo { int access$100(android.media.MediaRouter$RouteInfo); }
-keepclassmembers class android.view.ThreadedRenderer { void nSetup(long,int,int,float,float,float,float,int,int); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.IMessenger$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.view.ThreadedRenderer { boolean nLoadSystemProperties(long); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { android.graphics.Matrix get(android.widget.ImageView); }
-keepclassmembers class android.view.ThreadedRenderer { void nSetOpaque(long,boolean); }
-keepclassmembers class android.view.ThreadedRenderer { int nSyncAndDrawFrame(long,long,long,float); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.ThreadedRenderer { void nDestroy(long); }
-keepclassmembers class android.view.ThreadedRenderer { void nRegisterAnimatingRenderNode(long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException$Reference { void <init>(java.lang.Object); }
-keepclassmembers class android.view.ThreadedRenderer { void nFence(long); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { java.lang.String getMessageSuffix(); }
-keepclassmembers class android.view.ThreadedRenderer { void nDestroyHardwareResources(long); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException$Reference { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException$Reference { void <init>(java.lang.Object,int); }
-keepclassmembers class android.view.ThreadedRenderer { void nNotifyFramePending(long); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException$Reference { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.ThreadedRenderer { void nTrimMemory(int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonProcessingException { java.lang.String toString(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class java.util.Locale { void <init>(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ThreadedRenderer { void access$000(long,android.view.GraphicBuffer,long[]); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class android.view.ThreadedRenderer { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setPromptPosition(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setSelection(int); }
-keepclassmembers class android.transition.ChangeTransform$2 { android.graphics.PointF get(android.transition.ChangeTransform$PathAnimatorMatrix); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.ChangeTransform$2 { void set(android.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF); }
-keepclassmembers class android.transition.ChangeTransform$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.transition.ChangeTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class android.transition.ChangeTransform$2 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonMappingException$Reference { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void show(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class com.jcraft.jsch.UserAuthPassword { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void <init>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { int getLength(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getURI(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { void <clinit>(); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$InternalListener { void <init>(android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { void <init>(java.lang.String,java.lang.Class[]); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getLocalName(int); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getQName(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setVerticalOffset(int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class java.io.ObjectInputStream { int available(); }
-keepclassmembers class com.jcraft.jsch.UserAuthPassword { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getType(int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class java.io.ObjectInputStream { void checkReadPrimitiveTypes(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$1 { void <init>(android.support.v7.widget.ActivityChooserView); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getValue(int); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadObject(); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { java.lang.Object get(java.lang.Object,java.lang.reflect.Field); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { int hashCode(); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { void _assertSubclass(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.io.ObjectInputStream { int nextHandle(); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class java.io.ObjectInputStream { byte nextTC(); }
-keepclassmembers class java.nio.SelectorImpl$UnaddableSet { void <init>(java.util.Set); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType _widen(java.lang.Class); }
-keepclassmembers class java.io.ObjectInputStream { void pushbackTC(); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class java.io.ObjectInputStream { int read(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { void <init>(java.lang.reflect.Constructor); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.MemberKey { void <init>(java.lang.reflect.Method); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { void <init>(java.util.List); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { void <init>(); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { void debugPrintln(java.lang.String); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { java.lang.ClassLoader findClassLoader(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType containedType(int); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockData(); }
-keepclassmembers class java.io.ObjectInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { int containedTypeCount(); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockDataLong(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { java.lang.String containedTypeName(int); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getPublicId(); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.io.ObjectInputStream { char readChar(); }
-keepclassmembers class android.view.ViewRootImpl$AccessibilityInteractionConnection { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayCountry(java.util.Locale); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { java.lang.String getSystemId(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { int getColumnNumber(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { int getLineNumber(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void discardData(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { long getNativeAsset(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType getContentType(); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { boolean accept(java.io.File); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType forcedNarrowBy(java.lang.Class); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType getKeyType(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void setFeature(java.lang.String,boolean); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.StreamCorruptedException corruptStream(byte); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readContent(byte); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { java.lang.Object getValueHandler(); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { java.lang.Object find(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean hasGenericTypes(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { java.lang.Object getTypeHandler(); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { java.lang.Class enumTypeFor(java.util.EnumMap); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayName(java.util.Locale); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl$1 { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter); }
-keepclassmembers class android.net.wifi.IWifiScanner$Stub { android.net.wifi.IWifiScanner asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator { java.lang.Class enumTypeFor(java.util.EnumSet); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isAbstract(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isArrayType(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNonPrimitiveContent(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { java.lang.Class getRawClass(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isConcrete(); }
-keepclassmembers class org.apache.commons.io.filefilter.AndFileFilter { java.lang.String toString(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean hasRawClass(java.lang.Class); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isEnumType(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isInterface(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isFinal(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$2 { void <init>(it.skarafaz.mercury.adapter.CommandListAdapter,it.skarafaz.mercury.model.Command); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isPrimitive(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isMapLikeType(); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isThrowable(); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean isCollectionLikeType(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long,android.content.res.AssetManager$1); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType narrowBy(java.lang.Class); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readCyclicReference(); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class javax.net.SocketFactory { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Exception readException(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo { void <init>(); }
-keepclassmembers class com.android.internal.appwidget.IAppWidgetService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldDescriptors(java.io.ObjectStreamClass); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void setErrorHandler(org.xml.sax.ErrorHandler); }
-keepclassmembers class com.android.okhttp.HostResolver { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo { void clear(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayVariant(java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { boolean useStaticType(); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void parse(org.xml.sax.InputSource); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class javax.net.SocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String formatClassSig(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JavaType { com.fasterxml.jackson.databind.JavaType widenBy(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { java.lang.Object findJarServiceProvider(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectInputStream$GetField readFields(); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayScript(java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.io.EmulatedFieldsForLoading); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void parseSubTree(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class android.graphics.Canvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { java.lang.String which(java.lang.Class); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1 { void <init>(com.jcraft.jsch.KeyPair,byte[]); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class java.util.Locale { java.lang.String makeLanguageTag(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1 { void <init>(com.jcraft.jsch.KeyPair,byte[],int,int); }
-keepclassmembers class android.app.ContextImpl$34 { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.app.ContextImpl$34 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1 { byte[] getContent(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class java.util.Locale { java.lang.String[] splitIllformedVariant(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1 { com.jcraft.jsch.KeyPair$ASN1[] getContents(); }
-keepclassmembers class android.graphics.Canvas { void setDensity(int); }
-keepclassmembers class android.graphics.Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { boolean isOpaque(); }
-keepclassmembers class javax.xml.datatype.FactoryFinder { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void setScreenDensity(int); }
-keepclassmembers class com.jcraft.jsch.KeyPair$ASN1 { int getLength(int[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void unread(java.io.PushbackReader,int); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { java.lang.String getSystemId(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void resetDocumentLocator(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class java.io.ObjectInputStream { float readFloat(); }
-keepclassmembers class java.util.Locale { java.lang.String concatenateRange(java.lang.String[],int,int); }
-keepclassmembers class java.io.ObjectInputStream { void readFully(byte[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] add(byte[],byte); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.renderscript.Byte3 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] add(byte[],int,byte); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(char); }
-keepclassmembers class android.location.GpsMeasurementListenerTransport$ListenerTransport { void <init>(android.location.GpsMeasurementListenerTransport); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] add(char[],char); }
-keepclassmembers class java.io.ObjectInputStream { void readHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(byte); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(float); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(int); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] add(char[],int,char); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 add(android.renderscript.Byte3,android.renderscript.Byte3); }
-keepclassmembers class java.util.Locale { void setDefault(java.util.Locale); }
-keepclassmembers class android.graphics.Canvas { void <init>(long); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean isAtlasable(android.graphics.Bitmap); }
-keepclassmembers class org.xmlpull.v1.sax2.Driver { void startElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] add(double[],int,double); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class android.graphics.Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.location.GpsMeasurementListenerTransport$ListenerTransport { void <init>(android.location.GpsMeasurementListenerTransport,android.location.GpsMeasurementListenerTransport$1); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] add(double[],double); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] add(float[],float); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class java.io.ObjectInputStream { java.util.List cacheSuperclassesFor(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(double); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 add(android.renderscript.Byte3,byte); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] add(int[],int); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class android.graphics.Canvas { int getSaveCount(); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] add(float[],int,float); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class java.io.ObjectInputStream { int findStreamSuperclass(java.lang.Class,java.util.List,int); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] add(int[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] add(long[],long); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 sub(android.renderscript.Byte3,android.renderscript.Byte3); }
-keepclassmembers class java.util.Locale { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class android.system.OsConstants { boolean S_ISLNK(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] add(long[],int,long); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] add(java.lang.Object[],java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class com.afollestad.materialdialogs.R$styleable { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectNoData(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(short); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectForClass(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] add(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(char[]); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 sub(android.renderscript.Byte3,byte); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] add(short[],int,short); }
-keepclassmembers class java.util.Locale { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] add(short[],short); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(double[]); }
-keepclassmembers class java.util.Locale { void readExtensions(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void <init>(boolean,int,com.android.okio.Source); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] add(boolean[],boolean); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.RectF); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(float[]); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class java.io.ObjectInputStream { long readLong(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] add(boolean[],int,boolean); }
-keepclassmembers class java.util.Locale { java.lang.String serializeExtensions(java.util.Map); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewArray(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void clearHeaderTable(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(int[]); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void maxHeaderTableByteCount(int); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]); }
-keepclassmembers class java.util.Locale { void parseSerializedExtensions(java.lang.String,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(long[]); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 div(android.renderscript.Byte3,android.renderscript.Byte3); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(short[]); }
-keepclassmembers class android.view.InputEventReceiver { void <init>(android.view.InputChannel,android.os.Looper); }
-keepclassmembers class android.view.InputEventReceiver { void nativeDispose(long); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int evictToRecoverBytes(int); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.view.InputEventReceiver { long nativeInit(java.lang.ref.WeakReference,android.view.InputChannel,android.os.MessageQueue); }
-keepclassmembers class java.util.Locale { boolean isUnM49AreaCode(java.lang.String); }
-keepclassmembers class android.renderscript.Byte3 { android.renderscript.Byte3 div(android.renderscript.Byte3,byte); }
-keepclassmembers class java.util.Locale { boolean isAsciiAlphaNum(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class android.view.InputEventReceiver { void dispose(); }
-keepclassmembers class java.security.MessageDigest { void reset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readHeaders(); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alpha(java.lang.String,int,int); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { void <init>(); }
-keepclassmembers class android.view.InputEventReceiver { boolean nativeConsumeBatchedInputEvents(long,long); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { int toHashCode(); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alphanum(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { void <init>(int); }
-keepclassmembers class android.view.InputEventReceiver { void dispose(boolean); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.String titleCaseAsciiWord(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void clearReferenceSet(); }
-keepclassmembers class java.security.MessageDigest { int digest(byte[],int,int); }
-keepclassmembers class android.graphics.Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void emitReferenceSet(); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { java.lang.Class bestEffortLoadClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { void _reportUnsupportedOperation(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDesc(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewClass(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { boolean canReadTypeId(); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { ch.qos.logback.classic.spi.ClassPackagingData computeBySTEP(ch.qos.logback.classic.spi.StackTraceElementProxy,java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { boolean canReadObjectId(); }
-keepclassmembers class java.util.Locale { void addUnicodeExtensionToExtensionsMap(java.util.Set,java.util.Map,java.util.Map); }
-keepclassmembers class android.graphics.Canvas { void drawColor(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer { void <init>(); }
-keepclassmembers class android.view.InputEventReceiver { boolean consumeBatchedInputEvents(long); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDescInternal(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { java.net.URL attributeToURL(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readEnum(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer { java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readIndexedHeader(int); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { java.lang.String getCodeLocation(java.lang.String,char); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { java.util.List getAndReset(); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { byte[] getBinaryValue(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,int); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { boolean isFolder(int,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithoutIndexingIndexedName(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] clone(byte[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int headerTableIndex(int); }
-keepclassmembers class java.security.MessageDigest { int getDigestLength(); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider getProvider(); }
-keepclassmembers class java.security.MessageDigest { java.lang.String getAlgorithm(); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { byte getByteValue(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithIncrementalIndexingIndexedName(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithoutIndexingNewName(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNewClassDesc(boolean); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { boolean checkAttributes(org.xml.sax.Attributes); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] clone(char[]); }
-keepclassmembers class java.util.Locale { void parseUnicodeExtension(java.lang.String[],java.util.Map,java.util.Set); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider access$102(java.security.MessageDigest,java.security.Provider); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithIncrementalIndexingNewName(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] clone(int[]); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { void calculate(ch.qos.logback.classic.spi.IThrowableProxy); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] clone(float[]); }
-keepclassmembers class java.security.MessageDigest { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] clone(double[]); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.util.Locale { java.lang.String joinBcp47Subtags(java.util.List); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { java.lang.Object getObjectId(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] clone(long[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] clone(java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { java.lang.String getCodeLocation(java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { com.android.okio.ByteString getName(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void startCDATA(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void mark(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] clone(short[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void save(int,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { short getShortValue(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void insertIntoHeaderTable(int,com.android.okhttp.internal.spdy.Header); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void <init>(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewProxyClassDesc(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getLabel(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] clone(boolean[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { java.lang.Object getTypeId(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { java.net.URL filePathAsURL(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { boolean isStaticHeader(int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { java.lang.String getImplementationVersion(java.lang.Class); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class java.util.Locale { java.lang.String convertGrandfatheredTag(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { int getValueAsInt(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class java.util.Locale { void extractVariantSubtags(java.lang.String[],int,int,java.util.List); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void main(java.lang.String[]); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { long getValueAsLong(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { void populateFrames(ch.qos.logback.classic.spi.StackTraceElementProxy[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { int getValueAsInt(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { java.lang.String getValueAsString(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { java.net.URL getInputURL(ch.qos.logback.core.joran.spi.InterpretationContext,org.xml.sax.Attributes); }
-keepclassmembers class android.graphics.Canvas { void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { int estimateLength(); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { int readNewHandle(); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { long getValueAsLong(long); }
-keepclassmembers class android.graphics.Canvas { void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityThread$DropBoxReporter { void <init>(android.app.ActivityThread); }
-keepclassmembers class android.app.ActivityThread$DropBoxReporter { void addText(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { int extractExtensions(java.lang.String[],int,int,java.util.Map); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { java.net.URL resourceAsURL(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.spi.PackagingDataCalculator { void populateUncommonFrames(int,ch.qos.logback.classic.spi.StackTraceElementProxy[],java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { boolean isExpectedStartArrayToken(); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <clinit>(); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int readInt(int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewObject(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { com.android.okio.ByteString readByteString(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int readByte(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { void <init>(java.util.Enumeration,java.util.jar.JarFile); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser { int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { boolean hasMoreElements(); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String,boolean); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.lang.Object nextElement(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { void close(java.io.InputStream); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int getLength(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager$4 { android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class android.support.v4.view.ViewPager$4 { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.InvalidClassException missingClassDescriptor(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { void handleError(java.lang.String,java.lang.Exception); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.util.jar.JarEntry nextElement(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(byte[],byte); }
-keepclassmembers class ch.qos.logback.core.joran.action.AbstractIncludeAction { boolean isOptional(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int hashCode(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(char[],char); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(byte[],byte,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewLongString(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewString(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(char[],char,int); }
-keepclassmembers class com.android.internal.app.AlertController$3 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readUnshared(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(boolean); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class java.util.HashSet { void <init>(int,float); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object report(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(double[],double); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { android.content.pm.ActivityInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(double[],double,int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { android.content.pm.ActivityInfo[] newArray(int); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class java.util.ArrayList { int newCapacity(int); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.HashMap); }
-keepclassmembers class android.widget.AdapterView { android.widget.AdapterView$OnItemClickListener getOnItemClickListener(); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator { void <init>(java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport { void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator { boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.CAI_WithLocatorSupport { java.lang.Object getOrigin(); }
-keepclassmembers class java.util.Locale { boolean access$000(java.lang.String,int,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.util.Locale { boolean access$200(java.lang.String); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.util.Locale { boolean access$300(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.util.Locale { java.lang.String access$400(java.lang.String); }
-keepclassmembers class java.util.HashSet { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(float[],float); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(float[],float,int); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.util.concurrent.Callable); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.util.HashSet { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(int[],int); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object registeredObjectRead(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(int[],int,int); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { void <init>(java.lang.String); }
-keepclassmembers class java.util.ArrayList { java.lang.IndexOutOfBoundsException throwIndexOutOfBoundsException(int,int); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.support.v7.widget.SearchView$6 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class android.support.v7.widget.SearchView$6 { void onGlobalLayout(); }
-keepclassmembers class java.io.ObjectInputStream { void registerObjectRead(java.lang.Object,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(long[],long,int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class java.util.concurrent.FutureTask { void done(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.HashSet { java.util.HashMap createBackingMap(int,float); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(java.lang.Object[],java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void setException(java.lang.Throwable); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { boolean hasRelativeRules(); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(long[],long); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class android.widget.AdapterView { long getSelectedItemId(); }
-keepclassmembers class java.util.concurrent.FutureTask { void set(java.lang.Object); }
-keepclassmembers class java.util.concurrent.FutureTask { void run(); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class java.io.ObjectInputStream { void resetSeenObjects(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveRules(int); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { java.lang.String getValue(); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean isClipPath(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(short[],short); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(short[],short,int); }
-keepclassmembers class ch.qos.logback.core.pattern.IdentityCompositeConverter { void <init>(); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void setEmptyView(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { void verifyAndInit(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectInputStream { void resetState(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(boolean[],boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer { void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { java.lang.Object readResolve(); }
-keepclassmembers class android.widget.AdapterView { java.lang.Object getSelectedItem(); }
-keepclassmembers class android.widget.AdapterView { boolean isInFilterMode(); }
-keepclassmembers class com.fasterxml.jackson.core.io.SerializedString { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(boolean[],boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(double[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(float[]); }
-keepclassmembers class java.io.ObjectInputStream { void checkedSetSuperClassDesc(java.io.ObjectStreamClass,java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class java.util.concurrent.FutureTask { void handlePossibleCancellationInterrupt(int); }
-keepclassmembers class java.util.concurrent.FutureTask { void finishCompletion(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(boolean[]); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean shouldAllowTextWithIcon(); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void updateTextButtonVisibility(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.concurrent.FutureTask { int awaitDone(boolean,long); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.MenuItemImpl getItemData(); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean hasText(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isNotEmpty(java.lang.Object[]); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.widget.AdapterView { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.graphics.Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class java.util.ArrayList { void removeRange(int,int); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class java.util.concurrent.FutureTask { void removeWaiter(java.util.concurrent.FutureTask$WaitNode); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void initialize(android.support.v7.view.menu.MenuItemImpl,int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerAfter(); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itrs { void <init>(java.util.concurrent.ArrayBlockingQueue,java.util.concurrent.ArrayBlockingQueue$Itr); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerBefore(); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(int); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { java.lang.String doNormalize(java.lang.String,char,boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onClick(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(); }
-keepclassmembers class android.widget.AdapterView { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onLongClick(android.view.View); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$100(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.ArrayList { int hashCode(); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class java.util.ArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$200(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class java.util.ArrayList { void trimToSize(); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itrs { void doSomeSweeping(boolean); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$102(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.util.concurrent.FutureTask { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper$1 { libcore.icu.Transliterator initialValue(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$202(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itrs { void register(java.util.concurrent.ArrayBlockingQueue$Itr); }
-keepclassmembers class java.nio.channels.spi.AbstractSelector$1 { void <init>(java.nio.channels.spi.AbstractSelector); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$302(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$112(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$300(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$400(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$412(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.util.ArrayList { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$1 { android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$312(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$120(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$220(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$1 { void <init>(); }
-keepclassmembers class java.util.ArrayList { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$212(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] access$700(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class java.net.InetAddress { void <init>(int,byte[],java.lang.String); }
-keepclassmembers class java.security.KeyFactory { java.security.PrivateKey generatePrivate(java.security.spec.KeySpec); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$402(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Channel$PassiveOutputStream { void <init>(com.jcraft.jsch.Channel,java.io.PipedInputStream,boolean); }
-keepclassmembers class android.widget.AdapterView { boolean canAnimate(); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void handleDataChanged(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean prefersCondensedTitle(); }
-keepclassmembers class com.jcraft.jsch.Channel$PassiveOutputStream { void write(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.jcraft.jsch.Channel$PassiveOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByNameImpl(java.lang.String,int); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat { java.lang.Object getProvider(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress makeInetAddress(byte[],java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPadding(int,int,int,int); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.lang.StringBuilder access$100(java.lang.StringBuilder,java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$2 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.HashMap$HashMapEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.Map access$200(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$1 { void <init>(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { void <init>(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getKey(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { java.lang.String toString(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString); }
-keepclassmembers class android.graphics.Canvas { void release(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$2 { void execute(); }
-keepclassmembers class android.graphics.Canvas { void freeCaches(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,long,boolean); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { it.skarafaz.mercury.manager.ConfigManager getInstance(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.lang.StringBuilder escapeRegex(java.lang.StringBuilder,java.lang.String,boolean); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class java.net.InetAddress { java.lang.String getCanonicalHostName(); }
-keepclassmembers class android.graphics.Canvas { void freeTextLayoutCaches(); }
-keepclassmembers class android.graphics.Canvas { boolean native_isOpaque(long); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { java.util.Collection listConfigFiles(); }
-keepclassmembers class android.widget.AdapterView { android.os.Parcelable access$100(android.widget.AdapterView); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class java.util.HashMap$HashMapEntry { int hashCode(); }
-keepclassmembers class android.graphics.Canvas { long initRaster(long); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long); }
-keepclassmembers class android.graphics.Canvas { int native_getSaveCount(long); }
-keepclassmembers class android.widget.AdapterView { android.widget.AdapterView$SelectionNotifier access$202(android.widget.AdapterView,android.widget.AdapterView$SelectionNotifier); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { java.io.File getConfigDir(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class android.widget.AdapterView { void access$300(android.widget.AdapterView); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { it.skarafaz.mercury.manager.LoadConfigFilesStatus loadConfigFiles(); }
-keepclassmembers class it.skarafaz.mercury.manager.ConfigManager { java.util.List getServers(); }
-keepclassmembers class java.net.InetAddress { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { boolean native_getClipBounds(long,android.graphics.Rect); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.concurrent.ConcurrentMap getCache(int); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.String toString(); }
-keepclassmembers class android.graphics.Canvas { void native_getCTM(long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.Map getDisplayNames(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class android.media.IMediaRouterService$Stub { android.media.IMediaRouterService asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { void native_drawArc(long,float,float,float,float,float,float,boolean,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_quickReject(long,float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { boolean equals(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar); }
-keepclassmembers class android.graphics.Canvas { void native_drawLines(long,float[],int,int,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawColor(long,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class android.graphics.Canvas { void nativeDrawBitmapMatrix(long,long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,long,int,int,int); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback23Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class java.net.InetAddress { boolean isNumeric(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getHostByAddrImpl(java.net.InetAddress); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$000(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$100(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$200(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$400(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$500(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddress(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter { void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$300(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionType { com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { boolean isAnyLocalAddress(); }
-keepclassmembers class android.graphics.Canvas { void finalizer(long); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback23Impl { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.Context access$600(ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void updateMaskIfNecessary(long); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBase$1 { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { boolean changeDetected(long); }
-keepclassmembers class java.net.BindException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void init(java.util.Calendar); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class org.apache.commons.lang3.Validate { void isTrue(boolean,java.lang.String,long); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class android.graphics.Canvas { void access$000(long); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { java.lang.String buildCanonicalName(); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { int getPrefixLength(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void disableSubsequentReconfiguration(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void detachReconfigurationToNewThread(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType containedType(int); }
-keepclassmembers class org.apache.commons.lang3.Validate { void isTrue(boolean,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { int containedTypeCount(); }
-keepclassmembers class java.text.ParsePosition { int getErrorIndex(); }
-keepclassmembers class java.text.ParsePosition { void setErrorIndex(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { java.lang.String containedTypeName(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void disableRunOnAnimationRequests(); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void setRefreshPeriod(long); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { java.lang.String toString(); }
-keepclassmembers class android.content.pm.PathPermission$1 { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.UnknownHostException badAddressLength(byte[]); }
-keepclassmembers class android.content.pm.PathPermission$1 { android.content.pm.PathPermission createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.PathPermission$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void enableRunOnAnimationRequests(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType getContentType(); }
-keepclassmembers class android.content.pm.PathPermission$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator); }
-keepclassmembers class android.content.pm.PathPermission$1 { android.content.pm.PathPermission[] newArray(int); }
-keepclassmembers class java.net.InetAddress { byte[] ipv4MappedToIPv4(byte[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { int getFieldWidth(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void postOnAnimation(); }
-keepclassmembers class java.net.InetAddress { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter { void updateNextCheck(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void fling(int,int); }
-keepclassmembers class java.net.InetAddress { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.net.InetAddress { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType getKeyType(); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { boolean isContainerType(); }
-keepclassmembers class android.media.MediaRouter$WifiDisplayStatusChangedReceiver { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { boolean isMapLikeType(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addIgnored(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class java.net.InetAddress { java.lang.Object readResolve(); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { boolean isNextNumber(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { boolean isTrueMapType(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void <init>(int); }
-keepclassmembers class android.widget.ActivityChooserModel { android.widget.ActivityChooserModel get(android.content.Context,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] noNullElements(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { boolean checkTag(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.PropertyNamingStrategy _findNamingStrategy(); }
-keepclassmembers class android.widget.ActivityChooserModel { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { boolean isSeparator(char); }
-keepclassmembers class android.view.WindowId$1 { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType narrowKey(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class java.lang.SecurityException { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { boolean isSystemWindows(); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void <init>(java.lang.Object[],int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addCreatorParam(com.fasterxml.jackson.databind.introspect.AnnotatedParameter); }
-keepclassmembers class android.support.v7.widget.SearchView$12 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.PropertyName _propNameFromSimple(java.lang.String); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { boolean hasNext(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object next(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void add(java.lang.Object); }
-keepclassmembers class javax.crypto.ShortBufferException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer { void <clinit>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class javax.crypto.ShortBufferException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object previous(); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] notEmpty(java.lang.Object[]); }
-keepclassmembers class android.view.IWindow$Stub { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer { com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void remove(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.FilenameUtils { java.lang.String separatorsToWindows(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer { com.fasterxml.jackson.databind.node.ObjectNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void <init>(int,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void <init>(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addCreators(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object); }
-keepclassmembers class android.view.IWindow$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void set(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapLikeType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object notNull(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] remove(char[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object remove(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void serialize(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] remove(double[],int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] remove(byte[],int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] remove(long[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] remove(short[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] remove(java.lang.Object[],int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] remove(float[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] remove(int[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void serializeWithType(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] remove(boolean[],int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.media.tv.ITvInputManager$Stub$Proxy { java.util.List getTvInputList(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.media.tv.ITvInputManager$Stub$Proxy { int getTvInputState(java.lang.String,int); }
-keepclassmembers class android.media.tv.ITvInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean isEmptyElementTag(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addFields(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewFlinger { void stop(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addGetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class android.media.tv.ITvInputManager$Stub$Proxy { void registerCallback(android.media.tv.ITvInputManagerCallback,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { java.util.Collection handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer(); }
-keepclassmembers class android.app.ContextImpl$11 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer { com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class ch.qos.logback.classic.pattern.LocalSequenceNumberConverter { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23 { boolean isHardwareDetected(android.content.Context); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$500(android.widget.ActivityChooserModel); }
-keepclassmembers class android.renderscript.Int2 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.widget.ActivityChooserModel { boolean access$602(android.widget.ActivityChooserModel,boolean); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$400(); }
-keepclassmembers class android.widget.ActivityChooserModel { android.content.Context access$300(android.widget.ActivityChooserModel); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 add(android.renderscript.Int2,android.renderscript.Int2); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <init>(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class android.widget.ActivityChooserModel { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterCell { void <init>(long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] removeElement(byte[],byte); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { void <init>(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class android.app.ContextImpl$11 { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.app.ContextImpl$21 { java.lang.Object createStaticService(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { boolean assignParameter(int,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] removeElement(float[],float); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addInjectables(); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 sub(android.renderscript.Int2,android.renderscript.Int2); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 add(android.renderscript.Int2,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] removeElement(double[],double); }
-keepclassmembers class android.app.ContextImpl$21 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] removeElement(long[],long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] removeElement(char[],char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { void bufferMapProperty(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void tryCancel(); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderAction { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] removeElement(int[],int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderAction { void warnDeprecated(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 sub(android.renderscript.Int2,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] removeElement(short[],short); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { java.lang.Object[] getParameters(java.lang.Object[]); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeIntValue(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addMethods(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] removeElement(boolean[],boolean); }
-keepclassmembers class android.content.res.XmlBlock$Parser { float getAttributeFloatValue(int,float); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHeadAndPropagate(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doReleaseShared(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <clinit>(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _addSetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl { java.lang.Object newAccessibilityAction(int,java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { void inject(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl { boolean removeAction(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMember { void addIfNotPresent(java.lang.annotation.Annotation); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 div(android.renderscript.Int2,android.renderscript.Int2); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMember { void addOrOverride(java.lang.annotation.Annotation); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMember { void <init>(com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class android.renderscript.Int2 { android.renderscript.Int2 div(android.renderscript.Int2,int); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class ch.qos.logback.core.joran.action.AppenderAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer { boolean readIdProperty(java.lang.String); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { boolean hasDueCallbacksLocked(long); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMember { void fixAccess(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { android.view.Choreographer$CallbackRecord extractDueCallbacksLocked(long); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { void <init>(java.util.List); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMember { com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations(); }
-keepclassmembers class android.app.ActivityThread$Idler { void <init>(android.app.ActivityThread); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node E(); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node C(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _doAddInjectable(java.lang.Object,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireInterruptibly(int); }
-keepclassmembers class android.app.ActivityThread$Idler { boolean queueIdle(); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node Eopt(); }
-keepclassmembers class android.support.v4.app.BackStackState { void <clinit>(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { void <init>(); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node T(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { it.skarafaz.mercury.ssh.SshCommandStatus execute(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node V(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { void afterExecute(it.skarafaz.mercury.ssh.SshCommandStatus); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { boolean isDefaultToken(ch.qos.logback.core.subst.Token); }
-keepclassmembers class android.support.v4.app.BackStackState { void <init>(android.support.v4.app.BackStackRecord); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { boolean connect(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { void advanceTokenPointer(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$2 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandConfirm); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { boolean beforeExecute(); }
-keepclassmembers class android.app.ActivityThread$Idler { void <init>(android.app.ActivityThread,android.app.ActivityThread$1); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$2 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class android.location.IGpsMeasurementsListener$Stub { void <init>(); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node makeNewLiteralNode(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { void expectCurlyRight(ch.qos.logback.core.subst.Token); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireSharedInterruptibly(int); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Node parse(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { java.util.Properties getSessionConfig(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { void run(); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { ch.qos.logback.core.subst.Token peekAtCurentToken(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(android.util.Property,android.animation.Keyframes); }
-keepclassmembers class ch.qos.logback.core.subst.Parser { void expectNotNull(ch.qos.logback.core.subst.Token,java.lang.String); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { boolean send(java.lang.String); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _removeUnwantedProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { void disconnect(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.BackStackState { android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class android.transition.ArcMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _renameProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void <init>(java.lang.String,com.fasterxml.jackson.databind.AnnotationIntrospector,boolean); }
-keepclassmembers class android.transition.ArcMotion { void setMaximumAngle(float); }
-keepclassmembers class android.nfc.INfcCardEmulation$Stub { android.nfc.INfcCardEmulation asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setConverter(android.animation.TypeConverter); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireInterruptibly(int); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumVerticalAngle(float); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumHorizontalAngle(float); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommand { boolean waitForChannelClosed(com.jcraft.jsch.ChannelExec,java.io.InputStream,java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.ArcMotion { float toTangent(float); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _renameUsing(com.fasterxml.jackson.databind.PropertyNamingStrategy); }
-keepclassmembers class android.telecom.Log { boolean isLoggable(int); }
-keepclassmembers class android.transition.ArcMotion { android.graphics.Path getPath(float,float,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean _anyExplicits(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class android.telecom.Log { void d(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.telecom.Log { void d(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.telecom.Log { void i(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDButton { void init(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class android.text.StaticLayout { void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class android.telecom.Log { void i(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(int); }
-keepclassmembers class android.telecom.Log { void v(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.telecom.Log { void e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.afollestad.materialdialogs.internal.MDButton { void setStacked(boolean,boolean); }
-keepclassmembers class android.provider.DocumentsContract { android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireSharedInterruptibly(int); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class android.telecom.Log { void e(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class android.telecom.Log { void v(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean releaseShared(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void _explode(java.util.Collection,java.util.Map,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class android.os.AsyncTask$Status { android.os.AsyncTask$Status[] values(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class android.transition.ArcMotion { void <clinit>(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class android.telecom.Log { void wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils$2 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _renameWithWrappers(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class android.os.AsyncTask$Status { void <clinit>(); }
-keepclassmembers class java.net.ConnectException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]); }
-keepclassmembers class android.os.AsyncTask$Status { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$3$1 { android.graphics.Bitmap doInBackground(android.net.Uri[]); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String); }
-keepclassmembers class android.telecom.Log { java.lang.String getPrefixFromObject(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class android.telecom.Log { java.lang.String buildMessage(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$3$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void draw(android.graphics.Canvas,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.util.Set _findExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,java.util.Set); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked); }
-keepclassmembers class ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean { void <init>(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePaint(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.Integer _findIndex(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { int _getterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.telecom.Log { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _sortProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.Boolean _findRequired(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedPredecessors(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.String _findDescription(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class android.provider.DocumentsContract { java.lang.String getTreeDocumentId(android.net.Uri); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <init>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo { android.media.AudioAttributes getAudioAttributes(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { int _setterPriority(com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.location.GpsNavigationMessageListenerTransport { void <init>(android.content.Context,android.location.ILocationManager); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <clinit>(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <init>(java.util.List); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List getSubtrees(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePath(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List access$000(org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferAfterCancelledWait(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$ConsumeBatchedInputImmediatelyRunnable { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.view.ViewRootImpl$ConsumeBatchedInputImmediatelyRunnable { void run(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandConfirm { java.lang.String getCmd(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.PropertyName,boolean,boolean,boolean); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void open(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$400(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandConfirm { it.skarafaz.mercury.ssh.SshCommandDrop getDrop(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void _updateCreatorProperty(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder,java.util.List); }
-keepclassmembers class android.support.v4.widget.SearchViewCompatIcs { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandConfirm { void <init>(java.lang.String,it.skarafaz.mercury.ssh.SshCommandDrop); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collect(); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithmName(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean anyIgnorals(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { byte[] getParameters(); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean anyVisible(); }
-keepclassmembers class android.app.ContextImpl$3 { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithm(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class android.app.ContextImpl$3 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { int estimateLength(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap { void <init>(java.util.Map); }
-keepclassmembers class java.nio.DatagramChannelImpl { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap { int findSize(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean couldDeserialize(); }
-keepclassmembers class android.provider.DocumentsContract { boolean deleteDocument(android.content.ContentResolver,android.net.Uri); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap { com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.util.Collection explode(java.util.Collection); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.provider.DocumentsContract { void deleteDocument(android.content.ContentProviderClient,android.net.Uri); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder { int[] _constructArray(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.util.Set findExplicitNames(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int skipUntil(java.lang.String,int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.cfg.MapperConfig getConfig(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { java.util.Set getIgnoredPropertyNames(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class android.support.v4.view.ViewPager$3 { void run(); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getJsonValueMethod(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int parseSeconds(java.lang.String); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.view.ViewPager$3 { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { java.util.Map getInjectables(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.Class[] findViews(); }
-keepclassmembers class java.util.Timer$TimerImpl { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(float,float,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class java.io.Reader { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { java.util.List getProperties(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { void reportProblem(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean); }
-keepclassmembers class java.nio.DatagramChannelImpl { void onDisconnect(boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter(); }
-keepclassmembers class java.io.Reader { int read(char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class java.util.Timer$TimerImpl { void insertTask(java.util.TimerTask); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.app.ApplicationThreadNative { void <init>(); }
-keepclassmembers class android.widget.Spinner$SavedState$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedField getField(); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class android.app.usage.UsageStatsManager { void <init>(android.content.Context,android.app.usage.IUsageStatsManager); }
-keepclassmembers class java.util.Timer$TimerImpl { void access$500(java.util.Timer$TimerImpl,java.util.TimerTask); }
-keepclassmembers class java.util.Timer$TimerImpl { boolean access$400(java.util.Timer$TimerImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { void <clinit>(); }
-keepclassmembers class android.view.TouchDelegate { void <init>(android.graphics.Rect,android.view.View); }
-keepclassmembers class android.content.pm.ResolveInfo$1 { android.content.pm.ResolveInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(long[],int,int); }
-keepclassmembers class android.content.pm.ResolveInfo$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(long[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { void <init>(java.lang.Class,java.lang.Float); }
-keepclassmembers class android.content.pm.ResolveInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class javax.net.DefaultServerSocketFactory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer access$1500(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.jcraft.jsch.Util$1 { void <init>(java.net.Socket[],java.lang.String,int,java.lang.Exception[]); }
-keepclassmembers class javax.net.DefaultServerSocketFactory { java.net.ServerSocket createServerSocket(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer access$700(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.PropertyName getFullName(); }
-keepclassmembers class java.lang.reflect.Proxy { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter(); }
-keepclassmembers class java.lang.reflect.Proxy { void <init>(java.lang.reflect.InvocationHandler); }
-keepclassmembers class android.support.v7.widget.SearchView$11 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector { com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(int,float,int,float,int,float,int,float); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(android.graphics.drawable.RippleBackground,int); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setup(int,int); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.jcraft.jsch.Util$1 { void run(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.app.usage.UsageStatsManager { void <clinit>(); }
-keepclassmembers class android.widget.ListView$FocusSelector { void run(); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.String getInternalName(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.PropertyMetadata getMetadata(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMember getNonConstructorMutator(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String initials(java.lang.String); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { boolean isDelimiter(char,char[]); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isVisibleToClassLoader(java.lang.ClassLoader,java.lang.Class); }
-keepclassmembers class android.support.v4.app.FragmentActivity { int allocateRequestIndex(android.support.v4.app.Fragment); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean hasField(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.PropertyName getWrapperName(); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String initials(java.lang.String,char[]); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean hasGetter(); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean hasSetter(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean isExplicitlyIncluded(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean isExplicitlyNamed(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean isTypeId(); }
-keepclassmembers class java.nio.DatagramChannelImpl { void implCloseSelectableChannel(); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String wrap(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.String viewToString(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String wrap(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { boolean hasConstructorParameter(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { org.apache.harmony.security.pkcs7.SignedData getSignedData(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void mergeAnnotations(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class android.view.View$AttachInfo { void <init>(android.view.IWindowSession,android.view.IWindow,android.view.Display,android.view.ViewRootImpl,android.os.Handler,android.view.View$AttachInfo$Callbacks); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[],org.apache.harmony.security.pkcs7.ContentInfo$1); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class java.nio.DirectByteBuffer { void <init>(java.nio.MemoryBlock,int,int,boolean,java.nio.channels.FileChannel$MapMode); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { void <init>(java.lang.Class,java.lang.Character); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void removeIgnored(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void doReallyStop(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void removeNonVisible(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer access$1200(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer access$400(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { void trimByVisibility(); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer asReadOnlyBuffer(); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.DirectByteBuffer copy(java.nio.DirectByteBuffer,int,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.ArtMethod[],java.lang.Class[][]); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class android.media.tv.ITvInputClient$Stub { void <init>(); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object getLastCustomNonConfigurationInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.media.session.MediaControllerCompat getSupportMediaController(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.LoaderManager getSupportLoaderManager(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.nio.DirectByteBuffer { void <init>(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder { com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withSimpleName(java.lang.String); }
-keepclassmembers class java.nio.DirectByteBuffer { boolean protectedHasArray(); }
-keepclassmembers class android.content.IntentFilter$1 { void <init>(); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class android.content.IntentFilter$1 { android.content.IntentFilter createFromParcel(android.os.Parcel); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.content.IntentFilter$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class java.nio.DirectByteBuffer { boolean isReadOnly(); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class java.nio.DirectByteBuffer { byte[] protectedArray(); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$3 { void <init>(com.android.okhttp.Headers,java.io.InputStream); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$3 { java.io.InputStream byteStream(); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean hasFocus(); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean isFocused(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int translateFieldId(java.text.FieldPosition); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class java.text.MessageFormat$FieldContainer { void <init>(int,int,java.text.AttributedCharacterIterator$Attribute,java.lang.Object); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void setMaxConnectionPoolSizeLocked(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onBackPressed(); }
-keepclassmembers class android.os.AsyncTask { android.os.Handler getHandler(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean isInTouchMode(); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object postResult(java.lang.Object); }
-keepclassmembers class android.app.ApplicationThreadNative { android.os.IBinder asBinder(); }
-keepclassmembers class android.os.AsyncTask { void postResultIfNotInvoked(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onLowMemory(); }
-keepclassmembers class android.os.AsyncTask { void <init>(); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class android.os.AsyncTask { void setDefaultExecutor(java.util.concurrent.Executor); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class java.nio.DirectByteBuffer { byte get(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Object clone(); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <clinit>(); }
-keepclassmembers class java.nio.DirectByteBuffer { byte get(int); }
-keepclassmembers class android.os.AsyncTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$1 { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] toPrimitive(java.lang.Boolean[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class android.support.v7.widget.SearchView$5 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask execute(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { void setHoverListener(android.support.v7.widget.MenuItemHoverListener); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onReallyStop(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onPrepareOptionsPanel(android.view.View,android.view.Menu); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.os.AsyncTask { boolean isCancelled(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { boolean isOpen(); }
-keepclassmembers class android.support.v7.widget.SearchView$5 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.os.AsyncTask { void finish(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { java.util.concurrent.atomic.AtomicBoolean access$200(android.os.AsyncTask); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class android.os.AsyncTask { void access$500(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object access$300(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void begin(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.String toString(java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$52 { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.DHG1 { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$52 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void insert(java.util.TimerTask); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onResumeFragments(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask { void access$400(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainCustomNonConfigurationInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { void <clinit>(); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void upHeap(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { void <init>(); }
-keepclassmembers class java.nio.DirectByteBuffer { boolean isDirect(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { void <init>(com.fasterxml.jackson.databind.deser.Deserializers[],com.fasterxml.jackson.databind.deser.KeyDeserializers[],com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[],com.fasterxml.jackson.databind.AbstractTypeResolver[],com.fasterxml.jackson.databind.deser.ValueInstantiators[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <clinit>(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void end(boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { void free(); }
-keepclassmembers class org.greenrobot.eventbus.NoSubscriberEvent { void <init>(org.greenrobot.eventbus.EventBus,java.lang.Object); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(libcore.icu.LocaleData); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo { void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int); }
-keepclassmembers class android.view.ViewPropertyAnimator$NameValuesHolder { void <init>(int,float,float); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$100(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo { android.widget.ListView getListView(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 { void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 { void onGlobalLayout(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { java.lang.Iterable abstractTypeResolvers(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigDecimal(java.math.BigDecimal,java.text.FieldPosition); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { java.lang.Iterable deserializerModifiers(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuView access$500(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$300(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStart(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class ch.qos.logback.core.spi.AppenderAttachableImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { boolean hasAbstractTypeResolvers(); }
-keepclassmembers class ch.qos.logback.core.spi.AppenderAttachableImpl { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.spi.AppenderAttachableImpl { void addAppender(ch.qos.logback.core.Appender); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer put(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { boolean hasDeserializerModifiers(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN { void <init>(android.support.v7.app.AppCompatDelegateImplN,android.view.Window$Callback); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigInteger(java.math.BigInteger,java.text.FieldPosition); }
-keepclassmembers class ch.qos.logback.core.spi.AppenderAttachableImpl { int appendLoopOnAppenders(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { java.lang.Iterable deserializers(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStateNotSaved(); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void <init>(java.util.Timer$1); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { boolean hasValueInstantiators(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,java.text.FieldPosition); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStop(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Response); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { java.lang.Iterable keyDeserializers(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Request); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(double,java.text.FieldPosition); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Headers); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { java.lang.Iterable valueInstantiators(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long stringToLong(java.lang.String); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void updateFieldPosition(java.text.FieldPosition,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl { void <init>(); }
-keepclassmembers class com.jcraft.jsch.DHG1 { java.lang.String getKeyType(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean dismissPopupMenus(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { void addCookies(com.android.okhttp.Request$Builder,java.util.Map); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig { boolean hasKeyDeserializers(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class ch.qos.logback.core.spi.AppenderAttachableImpl { void detachAndStopAllAppenders(); }
-keepclassmembers class com.jcraft.jsch.DHG1 { void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.DHG1 { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setSupportMediaController(android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canConstantState(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { java.lang.String buildCookieHeader(java.util.List); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.DHG1 { int getState(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void close(java.net.URLConnection); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int getChangingConfigurations(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.Closeable); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.media.AudioManager$FocusEventHandlerDelegate { void <init>(android.media.AudioManager); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int); }
-keepclassmembers class java.util.TreeMap$Bound$2 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.HostKey { void <init>(java.lang.String,int,byte[]); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.Reader); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.OutputStream); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.jcraft.jsch.DHG1 { boolean next(com.jcraft.jsch.Buffer); }
-keepclassmembers class org.apache.commons.io.IOUtils { boolean contentEquals(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class ch.qos.logback.classic.pattern.LineOfCallerConverter { void <init>(); }
-keepclassmembers class com.jcraft.jsch.HostKey { void <init>(java.lang.String,int,byte[],java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPattern(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class org.apache.commons.io.IOUtils { boolean contentEquals(java.io.Reader,java.io.Reader); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.HostKey { void <init>(java.lang.String,byte[]); }
-keepclassmembers class com.jcraft.jsch.HostKey { boolean isIncluded(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.HostKey { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.IOUtils { boolean contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class com.android.okhttp.Headers { void <init>(com.android.okhttp.Headers$Builder); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getGroupingSize(); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String get(java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { int copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class com.android.okhttp.Headers { int size(); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String name(int); }
-keepclassmembers class com.jcraft.jsch.HostKey { void <init>(java.lang.String,java.lang.String,int,byte[],java.lang.String); }
-keepclassmembers class com.jcraft.jsch.HostKey { java.lang.String getComment(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMultiplier(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativePrefix(); }
-keepclassmembers class org.apache.commons.io.IOUtils { int copy(java.io.Reader,java.io.Writer); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativeSuffix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportInvalidateOptionsMenu(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.InputStream,java.io.Writer); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String value(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportFinishAfterTransition(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class com.jcraft.jsch.HostKey { java.lang.String getKey(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositiveSuffix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportPostponeEnterTransition(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.InputStream,java.io.Writer,java.lang.String); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.Reader,java.io.OutputStream,java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.Reader,java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void validateRequestPermissionsRequestCode(int); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.Reader,java.io.OutputStream); }
-keepclassmembers class com.jcraft.jsch.HostKey { java.lang.String getType(); }
-keepclassmembers class com.jcraft.jsch.HostKey { boolean isMatched(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportStartPostponedEnterTransition(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.jcraft.jsch.HostKey { java.lang.String getMarker(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isGroupingUsed(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isDecimalSeparatorAlwaysShown(); }
-keepclassmembers class com.jcraft.jsch.HostKey { java.lang.String getHost(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalSeparatorAlwaysShown(boolean); }
-keepclassmembers class org.apache.harmony.xml.dom.CDATASectionImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.CDATASectionImpl { short getNodeType(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class com.android.okhttp.Headers { com.android.okhttp.Headers$Builder newBuilder(); }
-keepclassmembers class java.nio.DirectByteBuffer { void checkIsAccessible(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String get(java.lang.String[],java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.nio.DirectByteBuffer { void checkNotFreed(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingSize(int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void <init>(android.view.View); }
-keepclassmembers class com.android.okhttp.Headers { void <init>(com.android.okhttp.Headers$Builder,com.android.okhttp.Headers$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(int,char[],int,boolean); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(char[]); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMultiplier(int); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer asReadOnlyBuffer(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setNegativePrefix(java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setNegativeSuffix(java.lang.String); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setPositivePrefix(java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.Reader,java.io.Writer); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void lockRoot(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharArrayBuffer copy(java.nio.CharArrayBuffer,int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class java.net.URI$PartEncoder { boolean isRetained(char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setPositiveSuffix(java.lang.String); }
-keepclassmembers class java.net.URI$PartEncoder { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseBigDecimal(boolean); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.Reader,java.io.Writer,char[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(long,boolean,java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void unlockRoot(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void contendedLock(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean hideOverflowMenu(); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean hideSubMenus(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class org.apache.commons.io.IOUtils { int read(java.io.InputStream,byte[],int,int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean isNestedScrollingEnabled(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long cloneImpl(long); }
-keepclassmembers class org.apache.commons.io.IOUtils { int read(java.io.InputStream,byte[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean startNestedScroll(int); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class java.net.HttpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(java.math.RoundingMode,double); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,long,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDigitList(long,java.lang.String,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPatternImpl(long,boolean,java.lang.String); }
-keepclassmembers class android.app.ContextImpl$24 { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getTextAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(long,double,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long open(java.lang.String,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class org.apache.commons.io.IOUtils { int read(java.io.Reader,char[]); }
-keepclassmembers class com.android.internal.os.IDropBoxManagerService$Stub { com.android.internal.os.IDropBoxManagerService asInterface(android.os.IBinder); }
-keepclassmembers class android.app.ContextImpl$24 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { void setNamespaceAware(boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(long,java.lang.String,java.text.ParsePosition,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(long,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void stopNestedScroll(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompatApi21 { void writeToParcel(java.lang.Object,android.os.Parcel,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(long,int,double); }
-keepclassmembers class brut.util.ExtDataInput { int[] readIntArray(int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class brut.util.ExtDataInput { void <init>(java.io.DataInput); }
-keepclassmembers class org.apache.commons.io.IOUtils { int read(java.io.Reader,char[],int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setTextAttribute(long,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPatternImpl(long,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.text.Format$Field[] access$100(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setAttribute(long,int,int); }
-keepclassmembers class java.net.HttpURLConnection { boolean getInstanceFollowRedirects(); }
-keepclassmembers class brut.util.ExtDataInput { void skipCheckInt(int); }
-keepclassmembers class brut.util.ExtDataInput { void skipInt(); }
-keepclassmembers class android.view.WindowManagerGlobal$2 { void <init>(android.view.WindowManagerGlobal); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer getSerializerInstance(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <clinit>(); }
-keepclassmembers class android.view.WindowManagerGlobal$2 { void run(); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void <init>(java.util.Collections$UnmodifiableList,int); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParser getParserInstance(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void add(java.lang.Object); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class java.net.HttpURLConnection { void <clinit>(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { boolean hasNext(); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.util.List readLines(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { java.lang.Object next(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { java.lang.Object previous(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void remove(); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.util.List readLines(java.io.Reader); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void set(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.Editor { void destroyDisplayListsData(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setExpandedActionViewsExclusive(boolean); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setMenuView(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean removeTreeNode(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class android.text.Layout { void drawText(android.graphics.Canvas,int,int); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { void <init>(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$8 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandPubKeyInput); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setReserveOverflow(boolean); }
-keepclassmembers class java.util.SimpleTimeZone { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean showOverflowMenu(); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$8 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { boolean isSupported(java.lang.Object); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat { void <clinit>(); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat { void <init>(android.content.Context); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.io.BufferedReader toBufferedReader(java.io.Reader); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat { android.support.v4.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void <init>(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class android.text.StaticLayout { void finish(); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void synStream(boolean,boolean,int,int,int,int,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void ackSettings(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void connectionHeader(); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class android.text.StaticLayout { int[] nLineBreakOpportunities(java.lang.String,char[],int,int[]); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.reflect.Method getMethod(java.lang.Class); }
-keepclassmembers class android.text.StaticLayout { void prepare(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void flush(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$Values { java.util.Iterator iterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { void <init>(java.lang.reflect.Field,com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class org.slf4j.event.Level { void <init>(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.util.Hashtable$Values { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class org.slf4j.event.Level { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization); }
-keepclassmembers class java.util.Hashtable$Values { int size(); }
-keepclassmembers class java.util.Hashtable$Values { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class com.jcraft.jsch.ChannelAgentForwarding { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.reflect.Field getAnnotated(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.String getFullName(); }
-keepclassmembers class android.opengl.GLUtils { void setTracingLevel(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.Object getValue(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.reflect.Member getMember(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.Class getRawType(); }
-keepclassmembers class java.util.Hashtable$Values { java.lang.Object[] toArray(); }
-keepclassmembers class android.opengl.GLUtils { void <clinit>(); }
-keepclassmembers class android.opengl.GLUtils { void nativeClassInit(); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateLeft(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { int getModifiers(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.reflect.Type getGenericType(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class com.jcraft.jsch.ChannelAgentForwarding { void send(byte[]); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { java.lang.String asText(); }
-keepclassmembers class com.jcraft.jsch.ChannelAgentForwarding { void eof_remote(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelAgentForwarding { void write(byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.Object readResolve(); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { int getBlockSize(); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.SimpleTimeZone { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { void <init>(double); }
-keepclassmembers class com.jcraft.jsch.ChannelAgentForwarding { void run(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { void init(int,byte[],byte[]); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { com.fasterxml.jackson.databind.node.DoubleNode valueOf(double); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { int getIVSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { void setValue(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateRight(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.text.Layout { void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumb(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor { void hideControllers(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceInsertion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.InputStream); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void dispatchFitSystemWindows(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedField { java.lang.Object writeReplace(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { boolean isCBC(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DoubleNode { int hashCode(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class java.util.SimpleTimeZone { boolean isLeapYear(int); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class com.jcraft.jsch.jce.AES192CTR { void update(byte[],int,int,byte[],int); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.Reader); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void data(boolean,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.nio.channels.ClosedByInterruptException { void <init>(); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(); }
-keepclassmembers class android.widget.AbsSeekBar { void applyThumbTint(); }
-keepclassmembers class java.util.SimpleTimeZone { int mod7(int); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element BOOLEAN(android.renderscript.RenderScript); }
-keepclassmembers class com.android.okhttp.Address { void <init>(java.lang.String,int,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,com.android.okhttp.OkAuthenticator,java.net.Proxy,java.util.List); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URI); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URI,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void sendDataFrame(int,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class java.util.SimpleTimeZone { void checkRange(int,int,int); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onAttachedToWindow(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsSeekBar { int getThumbOffset(); }
-keepclassmembers class android.widget.AbsSeekBar { void setKeyProgressIncrement(int); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onDetachedFromWindow(); }
-keepclassmembers class java.util.SimpleTimeZone { void checkDay(int,int); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URL,java.nio.charset.Charset); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URI,java.nio.charset.Charset); }
-keepclassmembers class android.widget.AbsSeekBar { void setMax(int); }
-keepclassmembers class android.text.style.UnderlineSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$OpaqueUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URL); }
-keepclassmembers class android.widget.AbsSeekBar { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.net.URL,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void writeNameValueBlockToBuffer(java.util.List); }
-keepclassmembers class android.net.Uri$OpaqueUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.widget.AbsSeekBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Void doInBackground(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.Address { java.lang.String getUriHost(); }
-keepclassmembers class com.android.okhttp.Address { javax.net.ssl.SSLSocketFactory getSslSocketFactory(); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumbOffset(int); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getScheme(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedSchemeSpecificPart(); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class com.android.okhttp.Address { java.net.Proxy getProxy(); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(byte[]); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableStateChanged(); }
-keepclassmembers class java.util.SimpleTimeZone { void setEndMode(); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element TYPE(android.renderscript.RenderScript); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class com.android.okhttp.Address { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsSeekBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void settings(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class android.widget.AbsSeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.widget.AbsSeekBar { void updateThumbAndTrackPos(int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceDeletion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.util.List getPathSegments(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getPath(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getAuthority(); }
-keepclassmembers class com.android.okhttp.Address { int hashCode(); }
-keepclassmembers class android.widget.Editor { boolean canSelectText(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class java.util.SimpleTimeZone { void setStartMode(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class android.widget.Editor { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String toString(); }
-keepclassmembers class android.text.Layout { long getLineRangeForDraw(android.graphics.Canvas); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedPath(); }
-keepclassmembers class android.widget.AbsSeekBar { float getScale(); }
-keepclassmembers class android.net.Uri$OpaqueUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedFragment(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { void <init>(com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[],java.util.HashMap,java.lang.String[],com.fasterxml.jackson.databind.util.TokenBuffer[]); }
-keepclassmembers class android.net.Uri$OpaqueUri { int compareTo(java.lang.Object); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void ping(boolean,int,int); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element A_8(android.renderscript.RenderScript); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumbPos(int,android.graphics.drawable.Drawable,float,int); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element RGB_565(android.renderscript.RenderScript); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element RGBA_4444(android.renderscript.RenderScript); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode adopt(long); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]); }
-keepclassmembers class android.view.RenderNode { android.view.HardwareCanvas start(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsUserCerts(boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsCACerts(boolean); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element RGBA_8888(android.renderscript.RenderScript); }
-keepclassmembers class android.view.RenderNode { void end(android.view.HardwareCanvas); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setIndirectCRL(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsAttributeCerts(boolean); }
-keepclassmembers class android.view.RenderNode { void destroyDisplayListData(); }
-keepclassmembers class android.widget.Editor { long getCharRange(int); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.widget.AbsSeekBar { void onResolveDrawables(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { int measureChildForCells(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub { android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.view.RenderNode { void <init>(long); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,byte[]); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.widget.AbsSeekBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.widget.Editor { boolean touchPositionIsInSelection(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.AbsSeekBar { void drawThumb(android.graphics.Canvas); }
-keepclassmembers class android.view.RenderNode { long getNativeDisplayList(); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.widget.AbsSeekBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.widget.AbsSeekBar { void onMeasure(int,int); }
-keepclassmembers class java.util.SimpleTimeZone { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasureExactFormat(int,int); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void windowUpdate(int,long); }
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class android.view.RenderNode { boolean setClipBounds(android.graphics.Rect); }
-keepclassmembers class android.view.RenderNode { boolean setProjectBackwards(boolean); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.view.RenderNode { boolean setProjectionReceiver(boolean); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class android.app.admin.DevicePolicyManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate { boolean canScroll(); }
-keepclassmembers class android.widget.Editor { boolean isPositionVisible(float,float); }
-keepclassmembers class android.app.admin.DevicePolicyManager { android.app.admin.DevicePolicyManager create(android.content.Context,android.os.Handler); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean useDaylightTime(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void close(); }
-keepclassmembers class java.io.PipedOutputStream { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class java.io.PipedOutputStream { void <init>(java.io.PipedInputStream); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class android.support.v4.view.ViewPager$MyAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <clinit>(); }
-keepclassmembers class java.io.PipedOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.PipedOutputStream { void close(); }
-keepclassmembers class android.widget.AbsSeekBar { void setHotspot(float,float); }
-keepclassmembers class java.io.PipedOutputStream { void write(int); }
-keepclassmembers class java.util.SimpleTimeZone { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.widget.AbsSeekBar { void trackTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.PipedOutputStream { void connect(java.io.PipedInputStream); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setStaticMatrix(android.graphics.Matrix); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.OutputStream,boolean); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class android.hardware.IConsumerIrService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean checkInvariants(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class java.io.PipedOutputStream { void flush(); }
-keepclassmembers class java.util.StringTokenizer { int countTokens(); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class android.view.RenderNode { boolean setHasOverlappingRendering(boolean); }
-keepclassmembers class android.widget.Editor { boolean isOffsetVisible(int); }
-keepclassmembers class android.view.RenderNode { boolean setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.AbsSeekBar { void onKeyChange(); }
-keepclassmembers class android.widget.AbsSeekBar { void onStartTrackingTouch(); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.widget.AbsSeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsSeekBar { void attemptClaimDrag(); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class android.widget.AbsSeekBar { void onStopTrackingTouch(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int); }
-keepclassmembers class android.media.tv.TvInputManager { void <init>(android.media.tv.ITvInputManager,int); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class android.widget.Editor { boolean performLongClick(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.widget.AbsSeekBar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript); }
-keepclassmembers class android.media.AudioManager$FocusEventHandlerDelegate$1 { void <init>(android.media.AudioManager$FocusEventHandlerDelegate,android.os.Looper,android.media.AudioManager); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class java.io.PrintWriter { void close(); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.pattern.DateConverter { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich { int getSideChannelBindFlags(); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.RenderNode { boolean setLeft(int); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class android.renderscript.Element { void <init>(long,android.renderscript.RenderScript,android.renderscript.Element$DataType,android.renderscript.Element$DataKind,boolean,int); }
-keepclassmembers class ch.qos.logback.classic.pattern.DateConverter { java.util.Locale parseLocale(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setTop(int); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class ch.qos.logback.classic.pattern.DateConverter { void start(); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { void <init>(com.jcraft.jsch.Session); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class android.app.ActivityTransitionState { int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { void <init>(com.jcraft.jsch.Session,com.jcraft.jsch.Session$1); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { int getPort(); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { int getReply(); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { java.lang.Thread getThread(); }
-keepclassmembers class java.io.PrintWriter { void print(char); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { void setReply(int); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { void setThread(java.lang.Thread); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class android.transition.Transition$2 { void <init>(android.transition.Transition,android.util.ArrayMap); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class android.transition.Transition$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class com.jcraft.jsch.Session$GlobalRequestReply { void setPort(int); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class android.transition.Transition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class android.view.View$5 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.view.RenderNode { void endAllAnimators(); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class android.view.View$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View$5 { void setValue(android.view.View,float); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.Object); }
-keepclassmembers class android.view.View$5 { void setValue(java.lang.Object,float); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayListData(long,long); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.app.IntentReceiverLeaked { void <init>(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeft(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetTop(long,int); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void <init>(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element createUser(android.renderscript.RenderScript,android.renderscript.Element$DataType); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer { void <init>(); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class java.io.PrintWriter { void println(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipBounds(long,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipBoundsEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectBackwards(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectionReceiver(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.RenderNode { boolean nSetHasOverlappingRendering(long,boolean); }
-keepclassmembers class java.io.PrintWriter { void setError(); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer { void serialize(java.util.concurrent.atomic.AtomicReference,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class java.io.PrintWriter { void write(char[]); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class android.renderscript.Element { android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element$DataType,android.renderscript.Element$DataKind); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class android.app.ActivityTransitionState { void postponeEnterTransition(); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class android.app.ActivityTransitionState { void startPostponedEnterTransition(); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.PrintWriter { void write(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetAnimationMatrix(long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetStaticMatrix(long,long); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class android.app.ActivityTransitionState { void startEnter(); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void jumpToCurrentState(); }
-keepclassmembers class java.io.PrintWriter { void doWrite(char[],int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { boolean hasPanelItems(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.RenderNode { void nEndAllAnimators(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void dismissPopupMenus(); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class android.app.ActivityTransitionState { void clear(); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class android.app.ContextImpl$5 { void <init>(); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence); }
-keepclassmembers class android.app.ContextImpl$5 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.app.ActivityTransitionState { void onStop(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class android.app.ActivityTransitionState { boolean startExitBackTransition(android.app.Activity); }
-keepclassmembers class com.android.internal.os.BackgroundThread { void <init>(); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.ActivityTransitionState { void restoreExitedViews(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void setMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void <init>(com.fasterxml.jackson.databind.util.TokenBuffer$Segment,com.fasterxml.jackson.core.ObjectCodec,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class com.android.internal.os.BackgroundThread { com.android.internal.os.BackgroundThread get(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class com.android.internal.os.BackgroundThread { void ensureThreadLocked(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void setStyle(android.content.Context); }
-keepclassmembers class android.database.CursorWindow { int nativeGetNumRows(long); }
-keepclassmembers class com.android.internal.os.BackgroundThread { android.os.Handler getHandler(); }
-keepclassmembers class android.database.CursorWindow { void nativeDispose(long); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler { com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.database.CursorWindow { long nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class java.nio.MemoryBlock$UnmanagedBlock { void <init>(long,long); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void _checkIsNumber(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void _handleEOF(); }
-keepclassmembers class android.database.CursorWindow { long nativeGetLong(long,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.renderscript.Double3 { void <init>(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String nativeGetString(long,int,int); }
-keepclassmembers class java.nio.MemoryBlock$UnmanagedBlock { void <init>(long,long,java.nio.MemoryBlock$1); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.Object _currentObject(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { boolean canReadObjectId(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.database.CursorWindow { java.lang.String nativeGetName(long); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void close(); }
-keepclassmembers class org.apache.harmony.xml.dom.CommentImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { boolean canReadTypeId(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.Menu getMenu(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket { void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket,java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 add(android.renderscript.Double3,android.renderscript.Double3); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams(); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.harmony.xml.dom.CommentImpl { short getNodeType(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.math.BigInteger getBigIntegerValue(); }
-keepclassmembers class android.ddm.DdmRegister { void registerHandlers(); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy { void <init>(java.util.Locale); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class android.database.CursorWindow { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean hasSupportDividerBeforeChildAt(int); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class android.database.CursorWindow { void dispose(); }
-keepclassmembers class android.widget.Editor { void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void recycle(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getName(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class android.app.ActivityThread$Profiler { void <init>(); }
-keepclassmembers class android.app.ActivityThread$Profiler { void setProfiler(android.app.ProfilerInfo); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.JsonLocation getCurrentLocation(); }
-keepclassmembers class android.database.CursorWindow { int getStartPosition(); }
-keepclassmembers class android.database.CursorWindow { int getNumRows(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.ObjectCodec getCodec(); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 add(android.renderscript.Double3,double); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 sub(android.renderscript.Double3,android.renderscript.Double3); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.String getCurrentName(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void clear(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void initialize(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void run(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.widget.Editor { void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { double getDoubleValue(); }
-keepclassmembers class android.app.ActivityThread$Profiler { void startProfiling(); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.math.BigDecimal getDecimalValue(); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 sub(android.renderscript.Double3,double); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.Object getEmbeddedObject(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean isOverflowMenuShowing(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { float getFloatValue(); }
-keepclassmembers class android.app.ActivityThread$Profiler { void stopProfiling(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { int getIntValue(); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class android.widget.LinearLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { long getLongValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.JsonParser$NumberType getNumberType(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onDetachedFromWindow(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class android.text.Layout { boolean shouldClampCursor(int); }
-keepclassmembers class android.database.CursorWindow { long getLong(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.Number getNumberValue(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void <init>(); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 div(android.renderscript.Double3,android.renderscript.Double3); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.String getText(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getString(int,int); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void addPort(com.jcraft.jsch.Session,java.lang.String,int,int,java.lang.String,int,com.jcraft.jsch.SocketFactory); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.Object getObjectId(); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { libcore.net.event.NetworkEventDispatcher getInstance(); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class android.support.v4.content.PermissionChecker { int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void <init>(); }
-keepclassmembers class android.renderscript.Double3 { android.renderscript.Double3 div(android.renderscript.Double3,double); }
-keepclassmembers class android.widget.LinearLayout { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.LinearLayout { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void addListener(libcore.net.event.NetworkEventListener); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void <clinit>(); }
-keepclassmembers class android.support.v4.content.PermissionChecker { int checkSelfPermission(android.content.Context,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.JsonLocation getTokenLocation(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { int getTextOffset(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { java.lang.Object getTypeId(); }
-keepclassmembers class android.database.CursorWindow { android.database.CursorWindow newFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { boolean hasTextCharacters(); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class android.text.Layout { void getCursorPath(int,android.graphics.Path,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void <init>(boolean,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.JsonToken nextToken(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void delPort(com.jcraft.jsch.Session); }
-keepclassmembers class android.database.CursorWindow { void onAllReferencesReleased(); }
-keepclassmembers class android.database.CursorWindow { void recordClosingOfWindow(long); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte b2a(byte); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { char[] getTextCharacters(); }
-keepclassmembers class android.widget.Editor { int getAvailableDisplayListIndex(int[],int,int); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte a2b(byte); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { int getTextLength(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte[] decrypt(byte[],byte[],byte[]); }
-keepclassmembers class android.widget.Editor { void drawCursor(android.graphics.Canvas,int); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasure(int,int); }
-keepclassmembers class java.nio.ShortArrayBuffer { void <init>(short[]); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase { void <init>(); }
-keepclassmembers class java.nio.ShortArrayBuffer { void <init>(int,short[],int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setExpandedActionViewsExclusive(boolean); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.app.ApplicationLoaders { android.app.ApplicationLoaders getDefault(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte[] encrypt(byte[],byte[][],byte[]); }
-keepclassmembers class android.database.CursorWindow { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener); }
-keepclassmembers class android.database.CursorWindow { void <init>(android.os.Parcel,android.database.CursorWindow$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOverflowReserved(boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void delPort(com.jcraft.jsch.Session,int); }
-keepclassmembers class android.database.CursorWindow { void <clinit>(); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.view.menu.MenuBuilder peekMenu(); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void delPort(com.jcraft.jsch.Session,java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setPopupTheme(int); }
-keepclassmembers class android.app.ContextImpl$18 { java.lang.Object createStaticService(); }
-keepclassmembers class android.app.ApplicationLoaders { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean showOverflowMenu(); }
-keepclassmembers class android.app.ApplicationLoaders { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class android.widget.Editor { void updateCursorsPositions(); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.ContextImpl$18 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { com.jcraft.jsch.ChannelForwardedTCPIP$Config getPort(com.jcraft.jsch.Session,java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { void setLocation(com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.HASH genHash(); }
-keepclassmembers class com.android.okhttp.Response$ParsedHeaders { void <init>(com.android.okhttp.Headers); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer$Parser { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.Cipher genCipher(); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class android.database.CursorWindowAllocationException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor { float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean); }
-keepclassmembers class android.app.ApplicationLoaders { java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.Random genRandom(); }
-keepclassmembers class com.android.okhttp.Response$ParsedHeaders { void <init>(com.android.okhttp.Headers,com.android.okhttp.Response$1); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideSuggestionSpan(); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.KeyPair genKeyPair(com.jcraft.jsch.JSch,int,int); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class java.util.BitSet { void shrinkSize(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class java.util.BitSet { void <init>(long[]); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.BitSet { void ensureCapacity(int); }
-keepclassmembers class java.util.BitSet { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Request { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class android.widget.Editor { void stopSelectionActionMode(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void getData(com.jcraft.jsch.Buffer); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class java.util.BitSet { void set(int); }
-keepclassmembers class java.util.BitSet { boolean get(int); }
-keepclassmembers class com.jcraft.jsch.Request { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class com.jcraft.jsch.Request { boolean waitForReply(); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class android.widget.Editor { void updateCursorPosition(int,int,int,float); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { void fill(long[],long); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { void fill(char[],char); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { void fill(short[],short); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { void fill(byte[],byte); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Request { void setReply(boolean); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { void fill(int[],int); }
-keepclassmembers class java.util.BitSet { void checkIndex(int); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(char[]); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class com.jcraft.jsch.ChannelForwardedTCPIP { void run(); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(int[][]); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.Editor { void showSuggestions(); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.jcraft.jsch.Request { void write(com.jcraft.jsch.Packet); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(int[]); }
-keepclassmembers class android.net.wifi.RttManager$ServiceHandler { void <init>(android.os.Looper); }
-keepclassmembers class android.net.wifi.RttManager$ServiceHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(short[][][]); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(short[][]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { byte[] access$100(); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { void <clinit>(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { int[] access$200(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(short[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { int[] access$000(); }
-keepclassmembers class com.android.org.bouncycastle.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { byte[] access$300(); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.Editor { android.view.View$DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { android.content.pm.PermissionInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { android.content.pm.PermissionInfo[] newArray(int); }
-keepclassmembers class ch.qos.logback.classic.Logger { void <init>(java.lang.String,ch.qos.logback.classic.Logger,ch.qos.logback.classic.LoggerContext); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.net.wifi.RttManager$ServiceHandler { void reportSuccess(java.lang.Object,android.os.Message); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canApplyTheme(); }
-keepclassmembers class android.net.wifi.RttManager$ServiceHandler { void reportFailure(java.lang.Object,android.os.Message); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int getChangingConfigurations(); }
-keepclassmembers class android.app.ContextImpl$23 { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void buildLoggingEventAndAppend(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.classic.Logger { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$23 { java.lang.Object getService(android.app.ContextImpl); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.core.spi.FilterReply callTurboFilters(org.slf4j.Marker,ch.qos.logback.classic.Level); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { boolean checkTag(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canConstantState(); }
-keepclassmembers class ch.qos.logback.classic.Logger { int appendLoopOnAppenders(ch.qos.logback.classic.spi.ILoggingEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ch.qos.logback.classic.Logger { void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void addIdentifier(java.util.TreeMap,int,int); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class android.app.ContextImpl$8 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$8 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void removeComposingSpans(android.text.Spannable); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.inputmethod.InputMethodManager,boolean); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments { void handleOnClick(android.content.DialogInterface,int,android.app.Activity,android.os.Bundle); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { java.lang.Object getMediaController(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class ch.qos.logback.classic.Logger { void handleParentLevelChange(int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class ch.qos.logback.classic.Logger { boolean isRootLogger(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.widget.Editor { boolean access$600(android.widget.Editor); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments { android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1400(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2300(android.widget.Editor); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void reportFinish(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void addAppender(ch.qos.logback.core.Appender); }
-keepclassmembers class android.widget.Editor { void access$2400(android.widget.Editor,int,int,boolean); }
-keepclassmembers class android.widget.Editor { boolean access$1500(android.widget.Editor,int); }
-keepclassmembers class ch.qos.logback.classic.Logger { void localLevelReset(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void callAppenders(ch.qos.logback.classic.spi.ILoggingEvent); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2302(android.widget.Editor,android.graphics.Rect); }
-keepclassmembers class android.widget.Editor { boolean access$2500(android.widget.Editor); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2800(android.widget.Editor); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class android.widget.Editor { boolean access$2600(android.widget.Editor,float,float); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3100(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2802(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class android.widget.Editor { void access$2900(android.widget.Editor); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.classic.Logger createChildByName(java.lang.String); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3102(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor { boolean access$3200(android.widget.Editor,float,float); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean finishComposingText(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3000(android.widget.Editor); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3002(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class com.afollestad.materialdialogs.DialogBase { void onShow(android.content.DialogInterface); }
-keepclassmembers class android.app.ContextImpl$9 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class ch.qos.logback.classic.Logger { void debug(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$2 { void <init>(android.support.v7.app.ToolbarActionBar); }
-keepclassmembers class com.afollestad.materialdialogs.DialogBase { void <init>(android.content.Context,int); }
-keepclassmembers class android.app.ContextImpl$9 { void <init>(); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class com.afollestad.materialdialogs.DialogBase { void setOnShowListenerInternal(); }
-keepclassmembers class com.afollestad.materialdialogs.DialogBase { void setOnShowListener(android.content.DialogInterface$OnShowListener); }
-keepclassmembers class android.print.pdf.PrintedPdfDocument { void <init>(android.content.Context,android.print.PrintAttributes); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.EventBus$PostingThreadState { void <init>(); }
-keepclassmembers class java.net.ProxySelectorImpl { void <init>(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy selectOneProxy(java.net.URI); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$2 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class butterknife.ButterKnife$Finder { void <clinit>(); }
-keepclassmembers class com.afollestad.materialdialogs.DialogBase { void setViewInternal(android.view.View); }
-keepclassmembers class ch.qos.logback.classic.Logger { void detachAndStopAllAppenders(); }
-keepclassmembers class java.net.ProxySelectorImpl { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class android.renderscript.Byte2 { void <init>(); }
-keepclassmembers class butterknife.ButterKnife$Finder { void <init>(java.lang.String,int,butterknife.ButterKnife$1); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class android.print.pdf.PrintedPdfDocument { android.graphics.pdf.PdfDocument$Page startPage(int); }
-keepclassmembers class java.net.ProxySelectorImpl { java.util.List select(java.net.URI); }
-keepclassmembers class ch.qos.logback.classic.Logger { void error(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 add(android.renderscript.Byte2,android.renderscript.Byte2); }
-keepclassmembers class butterknife.ButterKnife$Finder { java.lang.Object castView(android.view.View,int,java.lang.String); }
-keepclassmembers class java.net.ProxySelectorImpl { int getSystemPropertyInt(java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.TextViewCompat { void setTextAppearance(android.widget.TextView,int); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy lookupProxy(java.lang.String,java.lang.String,java.net.Proxy$Type,int); }
-keepclassmembers class android.support.v4.widget.TextViewCompat { void <clinit>(); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 add(android.renderscript.Byte2,byte); }
-keepclassmembers class butterknife.ButterKnife$Finder { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.ProxySelectorImpl { boolean isNonProxyHost(java.lang.String,java.lang.String); }
-keepclassmembers class butterknife.ButterKnife$Finder { java.lang.Object findRequiredView(java.lang.Object,int,java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.Logger { void error(java.lang.String); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void sendCurrentText(); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class butterknife.ButterKnife$Finder { java.lang.Object findOptionalView(java.lang.Object,int,java.lang.String); }
-keepclassmembers class java.util.concurrent.Executors$DelegatedExecutorService { void <init>(java.util.concurrent.ExecutorService); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 sub(android.renderscript.Byte2,android.renderscript.Byte2); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty,java.lang.String); }
-keepclassmembers class java.util.concurrent.Executors$DelegatedExecutorService { void execute(java.lang.Runnable); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void addView(android.view.View); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.classic.Logger getChildByName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void addViewRect(android.view.View$AttachInfo$InvalidateInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 sub(android.renderscript.Byte2,byte); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.classic.Level getLevel(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean sendKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void removeView(android.view.View); }
-keepclassmembers class ch.qos.logback.classic.Logger { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.classic.LoggerContext getLoggerContext(); }
-keepclassmembers class ch.qos.logback.classic.Logger { ch.qos.logback.classic.Level getEffectiveLevel(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void info(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void _writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 div(android.renderscript.Byte2,android.renderscript.Byte2); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.Logger { boolean isEnabledFor(ch.qos.logback.classic.Level); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void run(); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class android.renderscript.Byte2 { android.renderscript.Byte2 div(android.renderscript.Byte2,byte); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int); }
-keepclassmembers class android.content.pm.ProviderInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { void <init>(com.fasterxml.jackson.databind.DeserializationConfig,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer { void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class android.content.pm.ProviderInfo { void <init>(android.os.Parcel); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class libcore.net.url.FileURLConnection { void connect(); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class ch.qos.logback.classic.Logger { boolean isEnabledFor(org.slf4j.Marker,ch.qos.logback.classic.Level); }
-keepclassmembers class android.view.ViewRootImpl$InvalidateOnAnimationRunnable { void postIfNeededLocked(); }
-keepclassmembers class android.content.pm.ProviderInfo { void <init>(android.os.Parcel,android.content.pm.ProviderInfo$1); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.classic.Logger { void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.content.pm.ProviderInfo { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.Range { void <init>(java.lang.Object,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.app.admin.DevicePolicyManager { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void recursiveReset(); }
-keepclassmembers class ch.qos.logback.classic.Logger { java.lang.Object readResolve(); }
-keepclassmembers class android.widget.ActivityChooserModel$DefaultSorter { void <init>(android.widget.ActivityChooserModel); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { void <init>(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Map); }
-keepclassmembers class ch.qos.logback.classic.Logger { void setAdditive(boolean); }
-keepclassmembers class ch.qos.logback.classic.Logger { void setLevel(ch.qos.logback.classic.Level); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { boolean canApplyTheme(); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range between(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range between(java.lang.Object,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range is(java.lang.Comparable); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range is(java.lang.Object,java.util.Comparator); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory(); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers(); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter { void <init>(); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentTypeForPlainFiles(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.ActivityChooserModel$DefaultSorter { void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1); }
-keepclassmembers class ch.qos.logback.classic.Logger { java.lang.String toString(); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getDirectoryListing(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { boolean useRootWrapping(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void <init>(int); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class java.util.Hashtable$KeySet { void <init>(java.util.Hashtable); }
-keepclassmembers class android.widget.LinearLayout { int getOrientation(); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { int getDeserializationFeatures(); }
-keepclassmembers class java.util.Hashtable$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getPairValue(); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void <init>(java.util.HugeEnumSet); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void computeNextElement(); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class com.jcraft.jsch.Session$Forwarding { void <init>(com.jcraft.jsch.Session); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class ch.qos.logback.classic.Logger { void warn(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.AsyncTask$2 { java.lang.Object call(); }
-keepclassmembers class android.os.AsyncTask$2 { void <init>(android.os.AsyncTask); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { boolean hasNext(); }
-keepclassmembers class com.jcraft.jsch.Session$Forwarding { void <init>(com.jcraft.jsch.Session,com.jcraft.jsch.Session$1); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.os.BaseBundle { boolean isEmpty(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.MapperFeature[]); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.BaseBundle { boolean isParcelled(); }
-keepclassmembers class android.os.BaseBundle { void clear(); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { java.lang.Object next(); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar$ProgressTintInfo { void <init>(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.ProgressBar$ProgressTintInfo { void <init>(android.widget.ProgressBar$1); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void <init>(java.util.HugeEnumSet,java.util.HugeEnumSet$1); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream$1 { void <clinit>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void <clinit>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void <init>(android.content.Context); }
-keepclassmembers class android.os.BaseBundle { java.lang.Object get(java.lang.String); }
-keepclassmembers class android.os.IPowerManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void putAll(java.util.Map); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class android.net.IEthernetManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.os.BaseBundle { java.util.Set keySet(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void drawProgressRect(android.graphics.Canvas,me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable$RectTransformX,android.graphics.Paint); }
-keepclassmembers class java.util.Hashtable$KeySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer { com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { int checkPermission(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer { com.fasterxml.jackson.databind.util.TokenBuffer createBufferInstance(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void deliver(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void drawTrackRect(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void finish(android.view.ViewRootImpl$QueuedInputEvent,boolean); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void forward(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void apply(android.view.ViewRootImpl$QueuedInputEvent,int); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { void onDeliverToNext(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.os.BaseBundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { void <clinit>(); }
-keepclassmembers class android.hardware.hdmi.HdmiControlManager { void <init>(android.hardware.hdmi.IHdmiControlService); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { void <init>(int,int); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { byte[] allocByteBuffer(int,int); }
-keepclassmembers class android.hardware.hdmi.HdmiControlManager { boolean hasDeviceType(int[],int); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.util.RegularEscapeUtil { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { byte[] allocByteBuffer(int); }
-keepclassmembers class android.support.v4.view.ViewGroupCompatHC { void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class ch.qos.logback.core.pattern.util.RegularEscapeUtil { java.lang.String basicEscape(java.lang.String); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void onPreparePaint(android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { char[] allocCharBuffer(int,int); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void ensureDataCapacity(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void setAlpha(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void setTint(int); }
-keepclassmembers class android.view.ViewRootImpl$InputStage { boolean shouldDropInputEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { char[] allocCharBuffer(int); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { byte[] balloc(int); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { java.lang.String[] getPackagesForUid(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { int byteBufferLength(int); }
-keepclassmembers class ch.qos.logback.core.pattern.util.RegularEscapeUtil { void escape(java.lang.String,java.lang.StringBuffer,char,int); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[]); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { int find(int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { char[] calloc(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { int charBufferLength(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod$GenericInfo { void <init>(libcore.reflect.ListOfTypes,libcore.reflect.ListOfTypes,java.lang.reflect.Type,java.lang.reflect.TypeVariable[]); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable { void start(); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { void releaseByteBuffer(int,byte[]); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class com.fasterxml.jackson.databind.DeserializationConfig { com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.MapperFeature[]); }
-keepclassmembers class ch.qos.logback.core.pattern.util.RegularEscapeUtil { java.lang.String formatEscapeCharsForListing(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.BufferRecycler { void releaseCharBuffer(int,char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { void <init>(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void decreaseDepth(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { void <init>(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket[],int,int); }
-keepclassmembers class android.media.tv.ITvInputManagerCallback$Stub { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class android.database.BulkCursorDescriptor { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.SettableBeanProperty _findWithEquals(java.lang.String,int); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.InfoAccessSyntax$1); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { int findPrefix(int); }
-keepclassmembers class android.media.tv.ITvInputManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 { void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate); }
-keepclassmembers class android.os.BaseBundle { long getLong(java.lang.String,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { int findSize(int); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl); }
-keepclassmembers class android.os.BaseBundle { long getLong(java.lang.String); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { int getCurrentCount(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <clinit>(); }
-keepclassmembers class android.database.BulkCursorDescriptor { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.BulkCursorDescriptor { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { boolean access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate); }
-keepclassmembers class java.util.Hashtable$KeyIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.Hashtable$KeyIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void increaseDepth(); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String); }
-keepclassmembers class java.util.Hashtable$KeyIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { org.w3c.dom.NodeList getChildNodes(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { int getDepth(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { boolean pop(); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { int getMinHeight(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder(); }
-keepclassmembers class android.net.INetworkScoreService$Stub { android.net.INetworkScoreService asInterface(android.os.IBinder); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.PackageInfo getPackageInfo(java.lang.String,int); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { void <init>(); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { java.util.Map getEffectiveConverterMap(); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void onDraw(android.graphics.Canvas); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { java.lang.String getPattern(); }
-keepclassmembers class android.os.BaseBundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void push(int,int); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { void setPattern(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { void setOutputPatternAsHeader(boolean); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack { void reset(); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { void start(); }
-keepclassmembers class android.os.BaseBundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.graphics.Region { boolean set(android.graphics.Region); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { boolean shouldIgnore(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { java.lang.String validatePrefix(java.lang.String,boolean,java.lang.String); }
-keepclassmembers class android.graphics.Region { boolean set(int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.slf4j.LoggerFactory { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutBase { java.lang.String toString(); }
-keepclassmembers class org.slf4j.LoggerFactory { void bind(); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class org.slf4j.LoggerFactory { void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class android.graphics.Region { void translate(int,int); }
-keepclassmembers class org.slf4j.LoggerFactory { void emitReplayWarning(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.graphics.Region { void translate(int,int,android.graphics.Region); }
-keepclassmembers class android.graphics.Region { boolean isEmpty(); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void setPadding(int,int,int,int); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class android.graphics.Region { void scale(float); }
-keepclassmembers class org.slf4j.LoggerFactory { void emitSubstitutionWarning(); }
-keepclassmembers class android.graphics.Region { boolean op(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class android.graphics.Region { void scale(float,android.graphics.Region); }
-keepclassmembers class org.slf4j.LoggerFactory { java.util.Set findPossibleStaticLoggerBinderPathSet(); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class org.slf4j.LoggerFactory { void failedBinding(java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void setTextSpacing(int); }
-keepclassmembers class android.os.BaseBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { void setNameNS(org.apache.harmony.xml.dom.NodeImpl,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.PagerTabStrip { void updateTextPositions(int,float,boolean); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class android.graphics.Region { boolean op(android.graphics.Region,android.graphics.Region$Op); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class org.slf4j.LoggerFactory { void fixSubstituteLoggers(); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo { void <init>(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { void setName(org.apache.harmony.xml.dom.NodeImpl,java.lang.String); }
-keepclassmembers class android.app.ApplicationPackageManager { void maybeAdjustApplicationInfo(android.content.pm.ApplicationInfo); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class org.slf4j.LoggerFactory { org.slf4j.ILoggerFactory getILoggerFactory(); }
-keepclassmembers class android.graphics.Region { boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region$Op); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { int size(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { com.jcraft.jsch.KeyPair loadPPK(com.jcraft.jsch.JSch,byte[]); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class org.slf4j.LoggerFactory { org.slf4j.Logger getLogger(java.lang.Class); }
-keepclassmembers class org.slf4j.LoggerFactory { boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class android.graphics.Region { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.slf4j.LoggerFactory { boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class org.slf4j.LoggerFactory { boolean isAndroid(); }
-keepclassmembers class org.slf4j.LoggerFactory { org.slf4j.Logger getLogger(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class android.graphics.Region { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class android.transition.Slide { void <init>(); }
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor { void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy); }
-keepclassmembers class org.slf4j.LoggerFactory { boolean nonMatchingClasses(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.slf4j.LoggerFactory { void performInitialization(); }
-keepclassmembers class android.transition.Slide { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap { com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.transition.Slide { void <init>(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { boolean applyDayNight(); }
-keepclassmembers class org.slf4j.LoggerFactory { void replayEvents(); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void <init>(ch.qos.logback.core.spi.ContextAware); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class android.transition.Slide { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.content.Context getActionBarThemedContext(); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void <init>(); }
-keepclassmembers class android.graphics.Region { boolean nativeEquals(long,long); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate(); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addError(java.lang.String); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class org.slf4j.LoggerFactory { void reportActualBinding(java.util.Set); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.app.ApplicationPackageManager { boolean hasSystemFeature(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.transition.Slide { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class org.slf4j.LoggerFactory { void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class android.transition.Slide { void setSlideEdge(int); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.app.ApplicationPackageManager { int checkPermission(java.lang.String,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addInfo(java.lang.String); }
-keepclassmembers class org.slf4j.LoggerFactory { void reportMultipleBindingAmbiguity(java.util.Set); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$3 { void <init>(android.widget.Spinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.transition.Slide { android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.graphics.Region { boolean nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.support.v7.app.ActionBar getSupportActionBar(); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$3 { void onDismiss(); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addStatus(ch.qos.logback.core.status.Status); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.Window$Callback getWindowCallback(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { void <init>(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class org.slf4j.LoggerFactory { void versionSanityCheck(); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { boolean isDestroyed(); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,long,long,int); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.transition.Slide { android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class com.jcraft.jsch.KeyPair { boolean parseHeader(com.jcraft.jsch.Buffer,java.util.Hashtable); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addWarn(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void addWarn(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class com.android.okhttp.OkHttpClient { int getConnectTimeout(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void onStart(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { ch.qos.logback.core.Context getContext(); }
-keepclassmembers class android.transition.Slide { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { java.lang.Object getDeclaredOrigin(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode getXfermode(); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.SearchView$SavedState$1 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareBase { void setContext(ch.qos.logback.core.Context); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.support.v7.app.ActionBar peekSupportActionBar(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setProxy(java.net.Proxy); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.Proxy getProxy(); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class android.view.HardwareCanvas { void <init>(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.ProxySelector getProxySelector(); }
-keepclassmembers class android.view.HardwareCanvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class android.view.HardwareCanvas { void drawRenderNode(android.view.RenderNode); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class ch.qos.logback.classic.encoder.PatternLayoutEncoder { void <init>(); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.AlertDialog { android.widget.ListView getListView(); }
-keepclassmembers class ch.qos.logback.classic.encoder.PatternLayoutEncoder { void start(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setResponseCache(java.net.ResponseCache); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.CookieHandler getCookieHandler(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setOkResponseCache(com.android.okhttp.OkResponseCache); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte[] parseLines(com.jcraft.jsch.Buffer,int); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.SocketFactory getSocketFactory(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.SSLSocketFactory getSslSocketFactory(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { int getReadTimeout(); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.HostnameVerifier getHostnameVerifier(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeIntValue(int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkResponseCache getOkResponseCache(); }
-keepclassmembers class android.app.usage.UsageEvents { void <init>(); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setConnectionPool(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,java.lang.Class); }
-keepclassmembers class android.util.XmlPullAttributes { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.graphics.Paint { boolean hasShadowLayer(); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.ConnectionPool getConnectionPool(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setFollowProtocolRedirects(boolean); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkAuthenticator getAuthenticator(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { boolean getFollowProtocolRedirects(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.RouteDatabase getRoutesDatabase(); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setProtocols(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void copy(com.jcraft.jsch.KeyPair); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { void setTextLocale(java.util.Locale); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.KeyPair { int countLength(int); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.util.List getProtocols(); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.HostResolver getHostResolver(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { boolean decrypt(byte[]); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.graphics.Paint { float ascent(); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeImpl { void <clinit>(); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void updatePosition(int,int,boolean,boolean); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void dispose(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.HttpURLConnection open(java.net.URL); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.HttpURLConnection open(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte[] genKey(byte[],byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.usage.UsageEvents { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { float native_measureText(char[],int,int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory(); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkResponseCache toOkResponseCache(java.net.ResponseCache); }
-keepclassmembers class android.media.VolumeProvider { void <init>(int,int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient clone(); }
-keepclassmembers class android.transition.Slide { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle$Message { void <init>(java.lang.CharSequence,long,java.lang.CharSequence); }
-keepclassmembers class android.graphics.PixelFormat { boolean formatHasAlpha(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer { com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion(); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class com.jcraft.jsch.jcraft.Compression { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD596 { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle$Message { android.support.v4.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient copyWithDefaults(); }
-keepclassmembers class android.graphics.RadialGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int); }
-keepclassmembers class android.graphics.Paint { float native_measureText(java.lang.String,int); }
-keepclassmembers class com.jcraft.jsch.jcraft.Compression { byte[] compress(byte[],int,int[]); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD596 { void doFinal(byte[],int); }
-keepclassmembers class com.jcraft.jsch.jcraft.HMACMD596 { int getBlockSize(); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate2(float,float,float,int,int,int); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class com.jcraft.jsch.jcraft.Compression { void init(int,int); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class java.net.URLConnection$DefaultContentHandler { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StringSerializer { void <init>(); }
-keepclassmembers class libcore.io.EventLogger$DefaultReporter { void <init>(); }
-keepclassmembers class libcore.io.EventLogger$DefaultReporter { void report(int,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.core.joran.action.ImplicitAction { void <init>(); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class android.app.ActivityThread$1 { void <init>(android.app.ActivityThread); }
-keepclassmembers class com.jcraft.jsch.jcraft.Compression { byte[] uncompress(byte[],int,int[]); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.ActivityThread$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle$Message { java.util.List getMessagesFromBundleArray(android.os.Parcelable[]); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StringSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class libcore.io.EventLogger$DefaultReporter { void <init>(libcore.io.EventLogger$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StringSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.transition.ChangeBounds$10 { void <init>(android.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StringSerializer { boolean isEmpty(java.lang.String); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.Drawable,int,float,float); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle$Message { android.support.v4.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StringSerializer { void serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds$10 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { boolean isNumber(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endDocument(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { boolean isEncrypted(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startDocument(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jsch.KeyPair { int writeINTEGER(byte[],int,byte[]); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endPrefixMapping(java.lang.String); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.util.EnumMap$EnumMapValueCollection { void <init>(java.util.EnumMap); }
-keepclassmembers class com.jcraft.jsch.KeyPair { int writeLength(byte[],int,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { void <init>(org.apache.commons.lang3.time.FastDateParser$1); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.CompoundButton$SavedState { java.lang.String toString(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void initDrawables(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void characters(char[],int,int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.app.ActivityThread$ProviderRefCount { void <init>(android.app.IActivityManager$ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.core.joran.action.NOPAction { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.EnumMap$EnumMapValueCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void show(); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcel,android.widget.CompoundButton$1); }
-keepclassmembers class ch.qos.logback.core.joran.action.NOPAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.graphics.Paint { int getTextWidths(char[],int,int,float[]); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { boolean booleanValue(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void writePrivateKey(java.io.OutputStream,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class com.jcraft.jsch.KeyPair { byte[] getPublicKeyBlob(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void initHandles(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder { boolean[] _constructArray(int); }
-keepclassmembers class ch.qos.logback.core.joran.action.NOPAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void fatalError(org.xml.sax.SAXParseException); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { java.util.Iterator fields(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { java.util.Iterator elements(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.ThemeSingleton { void <init>(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Paint { int getTextWidths(java.lang.String,int,int,float[]); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { com.fasterxml.jackson.core.TreeNode get(int); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { com.fasterxml.jackson.core.TreeNode get(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { com.fasterxml.jackson.databind.JsonNode get(java.lang.String); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class com.afollestad.materialdialogs.internal.ThemeSingleton { com.afollestad.materialdialogs.internal.ThemeSingleton get(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void writePrivateKey(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void writePrivateKey(java.lang.String,byte[]); }
-keepclassmembers class com.afollestad.materialdialogs.internal.ThemeSingleton { com.afollestad.materialdialogs.internal.ThemeSingleton get(boolean); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void writePublicKey(java.io.OutputStream,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { int getTextWidths(java.lang.CharSequence,int,int,float[]); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void hide(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setAlpha(int); }
-keepclassmembers class com.jcraft.jsch.KeyPair { void writePublicKey(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchModeChanged(boolean); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.jcraft.jsch.KeyPair { int writeSEQUENCE(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedId { void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonNode { java.util.Iterator iterator(); }
-keepclassmembers class dalvik.system.SocketTagger { void untag(java.net.Socket); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class dalvik.system.SocketTagger { void set(dalvik.system.SocketTagger); }
-keepclassmembers class android.content.ContentProvider$Transport { void <init>(android.content.ContentProvider); }
-keepclassmembers class dalvik.system.SocketTagger { void tag(java.net.Socket); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedId { java.lang.String toString(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void clearMutated(); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterHashCode { void <init>(); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.ApplicationPackageManager { android.content.res.Resources getResourcesForApplication(java.lang.String); }
-keepclassmembers class java.util.zip.InflaterInputStream { void fill(); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void <init>(java.lang.reflect.GenericDeclaration,java.lang.String,libcore.reflect.ListOfTypes); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { int hashCode(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.ApplicationPackageManager { void configurationChanged(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int available(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void <init>(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap(); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void <init>(); }
-keepclassmembers class android.app.ApplicationPackageManager { void <init>(android.app.ContextImpl,android.content.pm.IPackageManager); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void <init>(android.os.StrictMode$1); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.TypeVariable findFormalVar(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class java.util.zip.InflaterInputStream { void checkClosed(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void release(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { android.widget.RelativeLayout$DependencyGraph$Node acquire(android.view.View); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.GenericDeclaration nextLayer(java.lang.reflect.GenericDeclaration); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LevelAction { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LevelAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void resolve(); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil$1 { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.app.ApplicationPackageManager { void handlePackageBroadcast(int,java.lang.String[],boolean); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache { com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.GenericDeclaration getGenericDeclaration(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { org.apache.commons.lang3.text.StrLookup mapLookup(java.util.Map); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.String getName(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LevelAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.Type[] getBounds(); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { org.apache.commons.lang3.text.StrLookup systemPropertiesLookup(); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class ch.qos.logback.core.subst.Tokenizer$1 { void <clinit>(); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(java.lang.String); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { int getCompoundPaddingLeft(); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class java.util.Random { void <init>(long); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class java.lang.Math { double acos(double); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class java.lang.Math { double hypot(double,double); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class java.lang.Math { double asin(double); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Random { double nextDouble(); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class ch.qos.logback.core.util.DynamicClassLoadingException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.Random { float nextFloat(); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.graphics.Paint { long native_initWithPaint(long); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.Paint { long native_init(); }
-keepclassmembers class android.graphics.Paint { int native_getStyle(long); }
-keepclassmembers class android.graphics.Paint { void native_set(long,long); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File); }
-keepclassmembers class android.graphics.Paint { void native_setStyle(long,int); }
-keepclassmembers class android.app.trust.TrustManager { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeCap(long,int); }
-keepclassmembers class java.util.Random { int nextInt(); }
-keepclassmembers class java.util.Random { int nextInt(int); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File,boolean); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeJoin(long,int); }
-keepclassmembers class android.graphics.Paint { long native_setShader(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setPathEffect(long,long); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.Paint { long native_setColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setTypeface(long,long); }
-keepclassmembers class android.graphics.Paint { void native_setTextLocale(long,java.lang.String); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class android.graphics.Paint { int native_getTextWidths(long,long,char[],int,int,int,float[]); }
-keepclassmembers class android.graphics.Paint { long native_setXfermode(long,long); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class android.graphics.Paint { int native_getTextWidths(long,long,java.lang.String,int,int,int,float[]); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.view.WindowManagerGlobal$1 { void <init>(); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class java.lang.Math { double toDegrees(double); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class java.lang.Math { double random(); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { float native_getLetterSpacing(long); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void native_setShadowLayer(long,float,float,float,int); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { boolean hasSystemFeature(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void native_setLetterSpacing(long,float); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.FileOutputStream { java.nio.channels.FileChannel getChannel(); }
-keepclassmembers class android.graphics.Paint { void native_setFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.String toString(); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context); }
-keepclassmembers class android.app.trust.TrustManager { void onError(java.lang.Exception); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { void <init>(); }
-keepclassmembers class android.graphics.Paint { boolean native_hasShadowLayer(long); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <init>(); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name { int hashCode(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { org.apache.harmony.security.asn1.ASN1Oid getInstance(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void <clinit>(); }
-keepclassmembers class android.content.ClipData { android.content.ClipData$Item getItemAt(int); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class android.content.ClipData { int getItemCount(); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.content.pm.IPackageManager$Stub$Proxy { boolean performDexOptIfNeeded(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.GeneratorBase { void <init>(int,com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void <init>(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.base.GeneratorBase { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.fasterxml.jackson.core.base.GeneratorBase { boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float computeTargetVelocity(int,float,float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float constrain(float,float,float); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ch.qos.logback.classic.turbo.TurboFilter { void start(); }
-keepclassmembers class ch.qos.logback.classic.turbo.TurboFilter { boolean isStarted(); }
-keepclassmembers class ch.qos.logback.classic.turbo.TurboFilter { void <init>(); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <clinit>(); }
-keepclassmembers class android.database.SQLException { void <init>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { int constrain(int,int,int); }
-keepclassmembers class ch.qos.logback.classic.turbo.TurboFilter { void stop(); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.pattern.CompositeConverter { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.pattern.CompositeConverter { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float getEdgeValue(float,float,float,float); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float constrainEdgeValue(float,float); }
-keepclassmembers class android.content.ClipData { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void requestStop(); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.lang.Class checkBitVectorable(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.lang.Class asEnum(java.lang.Class); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.FieldProperty,java.lang.reflect.Field); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void startAnimating(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void cancelTargetTouch(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.Space { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.widget.Space { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedField); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class android.database.BulkCursorNative { android.database.IBulkCursor asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.Space { int getDefaultSize2(int,int); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class android.support.v4.widget.Space { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std { void <init>(java.lang.Class,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setEdgeType(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.Space { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setActivationDelay(int); }
-keepclassmembers class android.support.v4.widget.Space { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setEnabled(boolean); }
-keepclassmembers class android.net.Uri { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.app.TwilightManager$TwilightState { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std { java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.net.Uri { int compareTo(android.net.Uri); }
-keepclassmembers class android.net.Uri { java.lang.String toSafeString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { boolean shouldWrap(android.content.Context); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.Context wrap(android.content.Context); }
-keepclassmembers class android.net.Uri { int hashCode(); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class java.io.ObjectOutputStream$PutField { void <init>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRampDownDuration(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { java.lang.Object readResolve(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void add(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRampUpDuration(int); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1600(android.view.View$TransformationInfo); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1700(android.view.View$TransformationInfo); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { boolean shouldAnimate(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.util.EnumSet processBitVector(java.lang.Class,long); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.util.EnumSet processBitVectors(java.lang.Class,long[]); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { com.fasterxml.jackson.databind.deser.impl.FieldProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1702(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { com.android.internal.view.InputBindResult createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.FieldProperty { com.fasterxml.jackson.databind.deser.impl.FieldProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void afterTextChanged(android.text.Editable); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getProviders(); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean isCompatTintEnabled(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean setState(int[]); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspot(float,float); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void initServiceInfo(java.security.Provider); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int insertProviderAt(java.security.Provider,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean { void <init>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$2 { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$2 { void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider$Service getSecureRandomService(); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void setNeedRefresh(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void appendServiceLocked(java.lang.String,java.security.Provider$Service); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class java.util.Hashtable$EntrySet { int size(); }
-keepclassmembers class java.util.HashMap { void <init>(java.util.Map); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int getCacheVersion(); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$NativePostImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$NativePostImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class java.util.HashMap { void constructorPutAll(java.util.Map); }
-keepclassmembers class java.util.HashMap { int capacityForInitSize(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer$1 { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$2 { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.widget.SearchView$6 { void onClick(android.view.View); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class libcore.icu.NativePluralRules { libcore.icu.NativePluralRules forLocale(java.util.Locale); }
-keepclassmembers class java.util.Collections$2 { void <init>(); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class libcore.icu.NativePluralRules { void <init>(long); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.HashMap { void init(); }
-keepclassmembers class java.util.Collections$2 { java.lang.Object nextElement(); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.SearchView$6 { void <init>(android.widget.SearchView); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class javax.net.ServerSocketFactory { void <init>(); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class javax.net.ServerSocketFactory { javax.net.ServerSocketFactory getDefault(); }
-keepclassmembers class libcore.icu.NativePluralRules { long forLocaleImpl(java.lang.String); }
-keepclassmembers class java.util.Collections$2 { boolean hasMoreElements(); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { void <init>(java.util.TreeMap$KeySet,java.util.TreeMap$Node); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { java.lang.Object next(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String canonicalizePath(java.lang.String,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void initialize(); }
-keepclassmembers class android.media.session.MediaSession$Token$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void <init>(java.net.HttpURLConnection); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.net.Uri { int compareTo(java.lang.Object); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String authoritySafePath(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String getSchemePrefix(java.lang.String); }
-keepclassmembers class android.view.View { void <init>(); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class libcore.net.url.UrlUtils { boolean isValidSchemeChar(int,char); }
-keepclassmembers class java.util.HashMap { java.lang.Object putValueForNullKey(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void connect(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { boolean casHead(java.util.concurrent.ConcurrentSkipListMap$HeadIndex,java.util.concurrent.ConcurrentSkipListMap$HeadIndex); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { boolean isNumber(); }
-keepclassmembers class libcore.net.url.UrlUtils { int findFirstOf(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class android.renderscript.RSRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ApplicationPackageManager { void <clinit>(); }
-keepclassmembers class java.util.HashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class java.util.HashMap { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class java.util.HashMap { void ensureCapacity(int); }
-keepclassmembers class android.media.MediaRouter$Static$Client { void <init>(android.media.MediaRouter$Static); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$2 { void <init>(android.view.View,android.transition.Transition,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,java.util.ArrayList,android.transition.Transition); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] makeTable(int); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class java.util.LinkedList { void <init>(java.util.Collection); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$ComparableUsingComparator { void <init>(java.lang.Object,java.util.Comparator); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.concurrent.ConcurrentSkipListMap$Node findNode(java.lang.Comparable); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap$ComparableUsingComparator { int compareTo(java.lang.Object); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] doubleCapacity(); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class java.security.spec.RSAPublicKeySpec { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { boolean getUseCaches(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$2 { boolean onPreDraw(); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BundleCompat { android.os.IBinder getBinder(android.os.Bundle,java.lang.String); }
-keepclassmembers class java.util.LinkedList { boolean addLastImpl(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { void <init>(boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object doGet(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { com.fasterxml.jackson.databind.node.BooleanNode getFalse(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { com.fasterxml.jackson.databind.node.BooleanNode getTrue(); }
-keepclassmembers class java.util.LinkedList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object doPut(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class android.provider.Downloads$Impl { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setUseCaches(boolean); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void <clinit>(); }
-keepclassmembers class android.hardware.usb.UsbManager { void <init>(android.content.Context,android.hardware.usb.IUsbManager); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { java.lang.String asText(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { boolean booleanValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { boolean addAll(java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.core.TreeCodec { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void <init>(com.fasterxml.jackson.core.io.IOContext,int); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class java.util.HashMap { java.lang.Object removeNullKey(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Comparable comparable(java.lang.Object); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BooleanNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class it.skarafaz.mercury.activity.MercuryActivity { void setActionBarElevation(); }
-keepclassmembers class java.util.HashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.concurrent.ConcurrentSkipListMap$Node findPredecessor(java.lang.Comparable); }
-keepclassmembers class java.util.LinkedList { boolean addFirstImpl(java.lang.Object); }
-keepclassmembers class android.view.View { int getHorizontalFadingEdgeLength(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompatIcs { float getCurrVelocity(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { int randomLevel(); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.net.Uri { void checkFileUriExposed(java.lang.String); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class it.skarafaz.mercury.activity.MercuryActivity { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _parseSlowFloat(int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void insertIndex(java.util.concurrent.ConcurrentSkipListMap$Node,int); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void <init>(); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class java.util.HashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _parseSlowInt(int,char[],int,int); }
-keepclassmembers class java.util.LinkedList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { java.lang.Object get(int); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class java.util.HashMap { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class it.skarafaz.mercury.activity.MercuryActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.LinkedList { void addFirst(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getFirstImpl(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandEnd { void <init>(it.skarafaz.mercury.ssh.SshCommandStatus); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandEnd { it.skarafaz.mercury.ssh.SshCommandStatus getStatus(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class java.util.LinkedList { void clear(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void addIndex(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$HeadIndex,int); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void <init>(java.lang.ClassLoader); }
-keepclassmembers class java.util.HashMap { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void setInput(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class android.view.View { void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getFirst(); }
-keepclassmembers class android.view.View { void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class java.util.HashMap { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _handleEOF(); }
-keepclassmembers class java.util.LinkedList { java.util.ListIterator listIterator(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyMetadata,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(int); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int _eofAsNextChar(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForMethod(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.view.View { void setOnLongClickListener(android.view.View$OnLongClickListener); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForClass(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder(); }
-keepclassmembers class java.util.HashMap { boolean access$600(java.util.HashMap,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _parseNumericValue(int); }
-keepclassmembers class java.util.HashMap { void <clinit>(); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.PropertyMetadata); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirst(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForConstructor(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirstImpl(); }
-keepclassmembers class android.view.View { boolean performLongClick(); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int,java.math.MathContext); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { java.lang.Object get(int); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void clear(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { int size(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { java.util.ArrayList access$002(android.view.ViewTreeObserver$CopyOnWriteArray$Access,java.util.ArrayList); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[]); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { int access$102(android.view.ViewTreeObserver$CopyOnWriteArray$Access,int); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],java.math.MathContext); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { java.util.ArrayList access$000(android.view.ViewTreeObserver$CopyOnWriteArray$Access); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.net.EthernetManager { void <init>(android.content.Context,android.net.IEthernetManager); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseClassSignature(); }
-keepclassmembers class android.view.View { void setOnKeyListener(android.view.View$OnKeyListener); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseOptFormalTypeParameters(); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getSystemResource(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String,java.math.MathContext); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { void <clinit>(); }
-keepclassmembers class android.view.View { void setOnTouchListener(android.view.View$OnTouchListener); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getSystemResources(java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21); }
-keepclassmembers class java.math.BigDecimal { void <init>(double); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { java.lang.NumberFormatException _badBD(java.lang.String); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.TypeVariableImpl parseFormalTypeParameter(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void onDetach(); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForField(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float,int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object doRemove(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { boolean inLongRange(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _releaseBuffers(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader,boolean); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void setMediaController(android.app.Activity,java.lang.Object); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void _reportMismatchedEndMarker(int,char); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseFieldTypeSignature(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class android.support.v4.app.ActivityCompat21 { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseClassTypeSignature(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { boolean inLongRange(char[],int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void process(android.support.v7.widget.ViewInfoStore$ProcessCallback); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.concurrent.ConcurrentSkipListMap$Node findFirst(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.ListOfTypes parseOptTypeArguments(); }
-keepclassmembers class com.jcraft.jsch.RequestSubsystem { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { int parseAsInt(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.FragmentTransaction { void <init>(); }
-keepclassmembers class com.jcraft.jsch.RequestSubsystem { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class java.util.LinkedList { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { java.lang.Object poll(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseTypeArgument(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void convertNumberToBigDecimal(); }
-keepclassmembers class java.math.BigDecimal { void <init>(double,java.math.MathContext); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.TypeVariableImpl parseTypeVariableSignature(); }
-keepclassmembers class com.jcraft.jsch.RequestSubsystem { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel,java.lang.String,boolean); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,java.math.MathContext); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { long parseAsLong(java.lang.String,long); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseTypeSignature(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void convertNumberToBigInteger(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int,java.math.MathContext); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getParent(); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl { void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void tryReduceLevel(); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class java.util.LinkedList { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseMethodTypeSignature(java.lang.Class[]); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { void <init>(int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,java.math.MathContext); }
-keepclassmembers class java.util.LinkedList { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations); }
-keepclassmembers class java.math.BigDecimal { void <init>(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { java.math.BigDecimal parseBigDecimal(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { java.math.BigDecimal parseBigDecimal(char[]); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore { void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void convertNumberToDouble(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl { void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseReturnType(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { java.math.BigDecimal parseBigDecimal(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void <init>(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,boolean); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$3 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandPassword); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(double); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void scanSymbol(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl { com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,java.math.MathContext); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$3 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { int parseInt(java.lang.String); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void expect(char); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { boolean isStopSymbol(char); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void scanIdentifier(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { double parseDouble(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void convertNumberToInt(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.io.IOException _throwAsIOE(java.lang.Exception); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty { com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring { void <init>(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void _throwAsIOE(java.lang.Exception,java.lang.Object); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty { com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring { boolean hasId(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring { com.fasterxml.jackson.core.JsonLocation getLocation(); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class java.net.ProtocolException { void <init>(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalizeImpl(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.SearchView$9 { void <init>(android.widget.SearchView); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase { void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void <init>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void <init>(com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase { java.lang.String idFromValue(java.lang.Object); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.icu.NativeNormalizer { int toUNormalizationMode(java.text.Normalizer$Form); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring { java.lang.Class getBeanType(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.InputChannel { void nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.InputChannel { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase { java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void convertNumberToLong(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.view.InputChannel { void nativeDispose(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { int parseInt(char[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.InputChannel { void dispose(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { int getCreatorIndex(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean setLayoutDirection(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addIgnorable(java.lang.String); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.view.InputChannel { void readFromParcel(android.os.Parcel); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.PropertyName getFullName(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { int getLayoutDirection(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addInjectable(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.lang.String getManagedReferenceName(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.PropertyMetadata getMetadata(); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { long parseLong(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.io.NumberInput { long parseLong(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class android.view.InputChannel { void <clinit>(); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void <init>(java.util.Comparator); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer(); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { boolean hasValueDeserializer(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void <init>(java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.PropertyName getWrapperName(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void <init>(java.util.SortedMap); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { boolean hasValueTypeDeserializer(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean); }
-keepclassmembers class org.apache.commons.lang3.CharRange { void <init>(char,char,boolean); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { boolean hasViews(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void buildFromSorted(java.util.SortedMap); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean access$100(org.apache.commons.lang3.CharRange); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { void <init>(it.skarafaz.mercury.model.Command); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void setManagedReferenceName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void setObjectIdInfo(com.fasterxml.jackson.databind.introspect.ObjectIdInfo); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.math.BigInteger getBigIntegerValue(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { char access$200(org.apache.commons.lang3.CharRange); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonLocation getCurrentLocation(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void setViews(java.lang.Class[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { void assignIndex(int); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isIn(char,char); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getObjectIdentifier(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { boolean visibleInView(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange is(char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.JsonDeserializer build(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isNot(char); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.lang.String getCurrentName(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void <init>(android.database.sqlite.SQLiteConnection,int); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isNotIn(char,char); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection$PreparedStatement,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { java.lang.String formatServerLabel(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean contains(char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableBeanProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withSimpleName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.math.BigDecimal getDecimalValue(); }
-keepclassmembers class android.widget.SearchView$11 { void <init>(android.widget.SearchView); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { boolean beforeExecute(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract(); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { double getDoubleValue(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.lang.Object getEmbeddedObject(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { float getFloatValue(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int getIntValue(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void appendName(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void finishAffinity(android.app.Activity); }
-keepclassmembers class com.jcraft.jsch.JSchAuthCancelException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { long getLongValue(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonParser$NumberType getNumberType(); }
-keepclassmembers class com.jcraft.jsch.JSchAuthCancelException { void <init>(java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { java.lang.String formatCmd(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle); }
-keepclassmembers class org.apache.commons.lang3.CharRange { int hashCode(); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startActivity(android.content.Context,android.content.Intent,android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { java.util.Iterator iterator(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean isNegated(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { java.lang.String toString(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { java.util.Properties getSessionConfig(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { com.jcraft.jsch.UserInfo getUserInfo(); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandRegular { boolean initConnection(); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.lang.Number getNumberValue(); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { char access$300(org.apache.commons.lang3.CharRange); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { java.util.List getInjectables(); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int getTokenLineNr(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { long getTokenCharacterOffset(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { int getTokenColumnNr(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getC(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void sendRequests(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getE(); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { byte[] toByteArray(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getEP(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { boolean hasTextCharacters(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getType(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getEQ(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonLocation getTokenLocation(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { int estimateLength(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue getValue(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getN(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getOID(int[]); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getP(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getQ(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void loadMoreGuaranteed(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void setIgnoreUnknownProperties(boolean); }
-keepclassmembers class android.os.storage.IMountService$Stub { android.os.storage.IMountService asInterface(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { byte[] getD(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void setAgentForwarding(boolean); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.TimeZone); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void addOID(org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder { void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { int size(); }
-keepclassmembers class com.jcraft.jsch.ChannelSession { void setPty(boolean); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { boolean isEmpty(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { int hashIntArray(int[]); }
-keepclassmembers class android.app.ContextImpl$17 { void <init>(); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue,org.apache.harmony.security.x501.AttributeTypeAndValue$1); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenRSA { void init(int); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.Locale); }
-keepclassmembers class com.android.internal.os.RuntimeInit$UncaughtHandler { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.internal.os.RuntimeInit$UncaughtHandler { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.Set entrySet(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 { void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.support.v7.widget.AppCompatSpinner); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { int collectDefaults(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.internal.os.RuntimeInit$UncaughtHandler { void <init>(com.android.internal.os.RuntimeInit$1); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { com.fasterxml.jackson.core.JsonGenerator$Feature[] values(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { boolean enabledByDefault(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { boolean enabledIn(int); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator$Feature { int getMask(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class ch.qos.logback.core.pattern.LiteralConverter { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { boolean replace(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.app.ContextImpl$17 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void reportInvalidNumber(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.Collection values(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object replace(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentTypeImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void reportOverflowInt(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier access$100(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue access$200(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void reportOverflowLong(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void <init>(boolean,android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class org.apache.harmony.xml.dom.DocumentTypeImpl { short getNodeType(); }
-keepclassmembers class android.view.View { void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { void reportUnexpectedNumberChar(int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$2 { java.lang.String transform(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { android.support.v4.widget.ScrollerCompat create(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void abortAnimation(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$2 { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { boolean computeScrollOffset(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer { java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializer,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { float getCurrVelocity(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.JsonToken resetInt(boolean,int); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { int getCurrX(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { int getCurrY(); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class android.view.View { boolean getFitsSystemWindows(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { int getFinalX(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class com.fasterxml.jackson.core.base.ParserBase { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { int getFinalY(); }
-keepclassmembers class android.view.View { void requestFitSystemWindows(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { boolean isFinished(); }
-keepclassmembers class android.view.View { void requestApplyInsets(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class android.view.View { void makeOptionalFitsSystemWindows(); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.Iterator valueIterator(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void <init>(android.content.res.CompatibilityInfo,float,float); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { void <init>(com.jcraft.jsch.JSch,java.lang.String,com.jcraft.jsch.KeyPair); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void <init>(android.content.res.CompatibilityInfo); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void startScroll(int,int,int,int); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 { void <init>(); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 { android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateRectInScreenToAppWinFrame(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void startScroll(int,int,int,int,int); }
-keepclassmembers class java.nio.IntArrayBuffer { void <init>(int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateCanvas(android.graphics.Canvas); }
-keepclassmembers class java.nio.IntArrayBuffer { void <init>(int,int[],int,boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateRegionInWindowToScreen(android.graphics.Region); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { com.jcraft.jsch.IdentityFile newInstance(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateEventInScreenToAppWindow(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.String build(); }
-keepclassmembers class android.view.View { boolean isHapticFeedbackEnabled(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { void clear(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.Object getObject(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.StringBuffer getStringBuffer(); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateRectInAppWindowToScreen(android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { java.lang.String getAlgName(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translatePointInScreenToAppWindow(android.graphics.PointF); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.lang.Object access$000(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentSkipListMap { java.util.Iterator entryIterator(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { com.jcraft.jsch.KeyPair getKeyPair(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { byte[] getPublicKeyBlob(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { byte[] getSignature(byte[]); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateWindowLayout(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.okio.DeflaterSink { void <init>(com.android.okio.Sink,java.util.zip.Deflater); }
-keepclassmembers class android.net.wifi.p2p.IWifiP2pManager$Stub { android.net.wifi.p2p.IWifiP2pManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase { java.lang.String idFromBaseType(); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { boolean isEncrypted(); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { boolean setPassphrase(byte[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class com.android.okio.DeflaterSink { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.android.okhttp.Headers$Builder { void <init>(); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder addLine(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { android.graphics.Region getTranslatedTouchableArea(android.graphics.Region); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class android.os.ParcelUuid { void <init>(java.util.UUID); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okio.DeflaterSink { void deflate(boolean); }
-keepclassmembers class android.os.ParcelUuid { android.os.ParcelUuid fromString(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringStyle getStyle(); }
-keepclassmembers class android.content.res.CompatibilityInfo$Translator { void translateRectInScreenToAppWindow(android.graphics.Rect); }
-keepclassmembers class android.os.ParcelUuid { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class com.android.okio.DeflaterSink { void close(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class android.os.ParcelUuid { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class com.jcraft.jsch.IdentityFile { java.lang.String getName(); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class android.os.ParcelUuid { java.lang.String toString(); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class android.os.ParcelUuid { int hashCode(); }
-keepclassmembers class android.os.ParcelUuid { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[]); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[]); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class com.android.okio.DeflaterSink { void flush(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],byte[]); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[],int,int); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,boolean,org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class android.view.View { void setSaveEnabled(boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void enlargeBuffer(int); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers build(); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { java.lang.String getId(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char); }
-keepclassmembers class com.android.okhttp.Headers$Builder { java.util.List access$000(com.android.okhttp.Headers$Builder); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.String); }
-keepclassmembers class java.util.logging.Logger$1 { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.view.View { void setSaveFromParentEnabled(boolean); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class java.util.HashMap$Values { int size(); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder removeAll(java.lang.String); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,boolean,byte[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void appendNull(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.View { boolean dispatchUnhandledMove(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int hashCode(); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerators$Base { void <init>(java.lang.Class); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { javax.xml.parsers.DocumentBuilderFactory newInstance(); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerators$Base { boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class com.fasterxml.jackson.annotation.ObjectIdGenerators$Base { java.lang.Class getScope(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { void <init>(com.android.okio.RealBufferedSource); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void decodeExtensionValue(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void delete0(int,int); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int read(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class android.view.View { java.util.ArrayList getFocusables(int); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class android.util.ArraySet { boolean contains(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class android.util.ArraySet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void start(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void doAnimationFrame(long); }
-keepclassmembers class android.util.ArraySet { java.lang.Object removeAt(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int available(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { void setNamespaceAware(boolean); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { void close(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[],int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[]); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { boolean isNamespaceAware(); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { java.lang.String toString(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void <init>(android.view.View); }
-keepclassmembers class android.support.v4.content.FileProvider { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { boolean isValidating(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal plus(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { void <init>(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal plus(java.math.MathContext); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { boolean isIgnoringElementContentWhitespace(); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { boolean canReadTypeId(); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { boolean isIgnoringComments(); }
-keepclassmembers class android.support.v4.content.FileProvider { void <init>(); }
-keepclassmembers class java.math.BigDecimal { boolean isZero(); }
-keepclassmembers class javax.xml.parsers.DocumentBuilderFactory { boolean isCoalescing(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { void close(); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.math.BigInteger getBigIntegerValue(); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int read(byte[],int,int); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { byte getByteValue(); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],int,int,long); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.ObjectCodec getCodec(); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { boolean canReadObjectId(); }
-keepclassmembers class java.math.BigDecimal { int signum(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonLocation getCurrentLocation(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal round(java.math.MathContext); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.String getCurrentName(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonToken getCurrentToken(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int getCurrentTokenId(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class java.lang.AbstractStringBuilder { void move(int,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.math.BigDecimal getDecimalValue(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { double getDoubleValue(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.view.View { boolean requestFocusFromTouch(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.Object getEmbeddedObject(); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void run(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { float getFloatValue(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void start(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void initializeTable(int); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void scheduleAnimation(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void inheritValues(java.lang.ThreadLocal$Values); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int getIntValue(); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void cleanUp(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(android.animation.ValueAnimator$1); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonParser$NumberType getNumberType(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { long getLongValue(); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator x(float); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator y(float); }
-keepclassmembers class java.lang.ThreadLocal$Values { boolean rehash(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePoint(long); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { short getShortValue(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator z(float); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.String getText(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { char[] getTextCharacters(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int getTextLength(); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotationBy(float); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotationX(float); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int getTextOffset(); }
-keepclassmembers class java.util.Arrays { void checkBinarySearchBounds(int,int,int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void add(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotationXBy(float); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonLocation getTokenLocation(); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotationY(float); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.Object getTypeId(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePointRight(int); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotationYBy(float); }
-keepclassmembers class java.util.Arrays { void fill(byte[],byte); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class java.util.Arrays { void fill(byte[],int,int,byte); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.Object getObjectId(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator translationY(float); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue,org.apache.harmony.security.x509.Extension$1); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.Number getNumberValue(); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator translationZ(float); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class java.util.Arrays { void fill(short[],short); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal stripTrailingZeros(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int getValueAsInt(); }
-keepclassmembers class java.util.Arrays { void fill(short[],int,int,short); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator scaleX(float); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void replace0(int,int,java.lang.String); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int[] access$100(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { long getValueAsLong(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean access$200(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { byte[] access$300(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator scaleY(float); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <clinit>(); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object getAfterMiss(java.lang.ThreadLocal); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator rotation(float); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator alpha(float); }
-keepclassmembers class java.math.BigDecimal { int compareTo(java.math.BigDecimal); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { java.lang.String getValueAsString(); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { boolean hasCurrentToken(); }
-keepclassmembers class java.util.Arrays { void fill(int[],int); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { boolean hasTextCharacters(); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleDeserializers { void <init>(java.util.Map); }
-keepclassmembers class java.util.Arrays { void fill(long[],long); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { boolean isExpectedStartArrayToken(); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleDeserializers { void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.math.BigDecimal { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonToken nextToken(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void startAnimation(); }
-keepclassmembers class java.util.Arrays { void fill(long[],int,int,long); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonToken nextValue(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class java.util.Arrays { void fill(float[],float); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleDeserializers { void addDeserializers(java.util.Map); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream); }
-keepclassmembers class java.math.BigDecimal { int hashCode(); }
-keepclassmembers class java.util.Arrays { void fill(float[],int,int,float); }
-keepclassmembers class java.lang.ThreadLocal$Values { void remove(java.lang.ThreadLocal); }
-keepclassmembers class java.util.Arrays { void fill(double[],double); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String toString(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.math.BigDecimal { java.lang.String toString(); }
-keepclassmembers class java.util.Arrays { void fill(double[],int,int,double); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.JsonParser skipChildren(); }
-keepclassmembers class java.util.Arrays { void fill(boolean[],boolean); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animateProperty(int,float); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animatePropertyBy(int,float); }
-keepclassmembers class java.util.Arrays { void fill(boolean[],int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserDelegate { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class java.lang.ThreadLocal$Values { int next(int); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object[] access$000(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animatePropertyBy(int,float,float); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator translationX(float); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void put(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.lang.ThreadLocal$Values { int access$100(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.support.v4.content.FileProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_TRANSLATE_X { void <clinit>(); }
-keepclassmembers class android.view.ViewPropertyAnimator { float getValue(int); }
-keepclassmembers class android.view.ViewPropertyAnimator { void setValue(int,float); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class java.util.Arrays { int hashCode(boolean[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$300(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.Arrays { int hashCode(char[]); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.animation.Animator$AnimatorListener access$400(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.Arrays { void fill(int[],int,int,int); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$200(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$700(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$500(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void <init>(); }
-keepclassmembers class android.view.accessibility.IAccessibilityInteractionConnection$Stub { void <init>(); }
-keepclassmembers class java.util.TreeMap$Node { void <init>(java.util.TreeMap$Node,java.lang.Object); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$600(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.animation.ValueAnimator$AnimatorUpdateListener access$900(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { int getWindowLayoutType(android.widget.PopupWindow); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class java.util.Arrays { int hashCode(float[]); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { void run(); }
-keepclassmembers class java.util.Arrays { int hashCode(long[]); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getKey(); }
-keepclassmembers class java.util.Arrays { int hashCode(double[]); }
-keepclassmembers class android.view.ViewPropertyAnimator { void access$800(android.view.ViewPropertyAnimator,int,float); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void <init>(); }
-keepclassmembers class android.view.accessibility.IAccessibilityInteractionConnection$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class java.util.TreeMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void access$000(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPackageName(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class java.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class android.view.View { boolean dispatchKeyEventPreIme(android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { it.skarafaz.mercury.adapter.ServerPagerAdapter access$200(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { boolean access$300(it.skarafaz.mercury.activity.MainActivity,int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void exportPublicKey(); }
-keepclassmembers class java.util.TreeMap$Node { int hashCode(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void loadConfigFiles(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class android.view.View { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { boolean access$102(it.skarafaz.mercury.activity.MainActivity,boolean); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node next(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void startAppInfo(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node prev(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void dismissProgressDialog(); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void setBackgroundColor(int); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { boolean requestStoragePermission(int); }
-keepclassmembers class java.util.Arrays { int hashCode(short[]); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.content.IntentSender$SendIntentException { void <init>(java.lang.String); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getFactoryClass(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.math.BigDecimal { int intValue(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void <clinit>(); }
-keepclassmembers class android.view.View { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class java.math.BigDecimal { float floatValue(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValuesView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.Arrays { boolean equals(short[],short[]); }
-keepclassmembers class java.math.BigDecimal { double doubleValue(); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { boolean equals(char[],char[]); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$1 { void <init>(it.skarafaz.mercury.adapter.CommandListAdapter,it.skarafaz.mercury.model.Command); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node last(); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getValue(); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewPropertyAnimator { void access$100(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(java.lang.Object); }
-keepclassmembers class java.util.Collections$SingletonList { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchWindowFocusChanged(boolean); }
-keepclassmembers class android.content.IntentSender$SendIntentException { void <init>(java.lang.Exception); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node first(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void onStop(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void set(java.lang.Object); }
-keepclassmembers class java.util.Arrays { boolean equals(long[],long[]); }
-keepclassmembers class java.util.Collections$SingletonList { java.lang.Object get(int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void onStart(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { boolean compareAndSet(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class java.math.BigDecimal { long longValue(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValuesView { java.util.Iterator iterator(); }
-keepclassmembers class android.content.IntentSender$SendIntentException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$3 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object getAndSet(java.lang.Object); }
-keepclassmembers class java.util.Arrays { boolean equals(double[],double[]); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class android.view.View { void dispatchWindowVisibilityChanged(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { byte[] getG(); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void run(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { byte[] getQ(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$3 { void execute(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void <init>(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { byte[] getX(); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { byte[] getY(); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object get(); }
-keepclassmembers class android.content.IClipboard$Stub { android.content.IClipboard asInterface(android.os.IBinder); }
-keepclassmembers class java.util.Arrays { boolean equals(float[],float[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readConnectionHeader(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { boolean nextFrame(com.android.okhttp.internal.spdy.FrameReader$Handler); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { void init(int); }
-keepclassmembers class android.view.View { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.Collections$SingletonList { void <init>(java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity { void showProgressDialog(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { int longCompareTo(long,long); }
-keepclassmembers class android.view.View { void dispatchCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class java.util.Collections$SingletonList { int size(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { boolean isStacked(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void setStacked(boolean); }
-keepclassmembers class java.util.Arrays { boolean deepEqualsElements(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.CircleImageView$OvalShadow { void updateRadialGradient(int); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class java.util.Arrays { boolean equals(boolean[],boolean[]); }
-keepclassmembers class com.jcraft.jsch.jce.KeyPairGenDSA { byte[] getP(); }
-keepclassmembers class android.webkit.WebViewFactory { void loadNativeLibrary(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { void <clinit>(); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { void <init>(); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class android.support.v4.widget.CircleImageView$OvalShadow { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSynStream(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class android.webkit.WebViewFactory { boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.widget.CircleImageView$OvalShadow { void <init>(android.support.v4.widget.CircleImageView,int); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class android.support.v4.widget.CircleImageView$OvalShadow { void onResize(float,float); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.util.Arrays { boolean deepEquals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSynReply(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class ch.qos.logback.core.util.Loader$1 { java.lang.Boolean run(); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class java.io.Writer { void write(java.lang.String); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.view.View { boolean checkInputConnectionProxy(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readRstStream(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.ThreadMonitor { void run(); }
-keepclassmembers class java.math.BigDecimal { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer { void <init>(java.lang.reflect.Constructor); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { boolean hasSingleElement(long[]); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class java.util.Arrays { void sort(char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer { java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.math.BigDecimal { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class ch.qos.logback.core.util.Loader$1 { void <init>(); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.ContextAttributes { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { boolean isEmpty(long[]); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.ContextAttributes { com.fasterxml.jackson.databind.cfg.ContextAttributes getEmpty(); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { boolean shouldLogSlowQuery(long); }
-keepclassmembers class android.transition.ChangeBounds$6 { android.graphics.PointF get(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class org.apache.commons.io.ThreadMonitor { java.lang.Thread start(long); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readWindowUpdate(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class ch.qos.logback.core.util.Loader$1 { java.lang.Object run(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class com.afollestad.materialdialogs.GravityEnum$1 { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class android.transition.ChangeBounds$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.commons.io.ThreadMonitor { java.lang.Thread start(java.lang.Thread,long); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer { void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.math.BigDecimal { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.transition.ChangeBounds$6 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readPing(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int applyAlpha(int,float); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class android.transition.ChangeBounds$6 { void set(android.view.View,android.graphics.PointF); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readGoAway(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void measureContent(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readHeaders(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceHead(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void computeLocalPosition(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSettings(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceTail(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class android.graphics.NinePatch { void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.app.IWallpaperManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void updatePosition(int,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,float,float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { boolean casCleanMe(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void updatePosition(int,int,boolean,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class java.util.Arrays { void checkStartAndEnd(int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void close(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal zeroScaledBy(long); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class android.transition.TransitionPropagation { void <init>(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,int,float,int,float); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Region getTransparentRegion(android.graphics.Rect); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class org.apache.commons.io.ThreadMonitor { void <init>(java.lang.Thread,long); }
-keepclassmembers class android.widget.Spinner$1 { boolean onForwardingStarted(); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(long,byte[]); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class android.graphics.NinePatch { void nativeDraw(long,android.graphics.Rect,long,long,long,int,int); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.graphics.NinePatch { long nativeGetTransparentRegion(long,long,android.graphics.Rect); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Spinner$1 { void <init>(android.widget.Spinner,android.view.View,android.widget.Spinner$DropdownPopup); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { void <init>(java.lang.Object); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class android.view.View { void setTouchDelegate(android.view.TouchDelegate); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { void <init>(java.lang.Class); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class android.widget.Spinner$1 { android.widget.ListPopupWindow getPopup(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { int getSystemWindowInsetBottom(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { int getSystemWindowInsetLeft(); }
-keepclassmembers class android.view.animation.ScaleAnimation { float resolveScale(float,int,int,int,int); }
-keepclassmembers class java.util.Arrays { java.lang.String deepToString(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { int getSystemWindowInsetRight(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { int getSystemWindowInsetTop(); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class java.util.Arrays { void deepToStringImpl(java.lang.Object[],java.lang.Object[],java.lang.StringBuilder); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void <init>(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initialize(int,int,int,int); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { boolean isConsumed(); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setArgumentArray(java.lang.Object[]); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { org.slf4j.helpers.SubstituteLogger getLogger(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat { android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object awaitFulfill(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.lang.Object,boolean,long); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setLogger(org.slf4j.helpers.SubstituteLogger); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setLevel(org.slf4j.event.Level); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setLoggerName(java.lang.String); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setMessage(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setThreadName(java.lang.String); }
-keepclassmembers class libcore.io.Memory { long peekLong(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setThrowable(java.lang.Throwable); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class); }
-keepclassmembers class org.slf4j.event.SubstituteLoggingEvent { void setTimeStamp(long); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(byte[],int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean needMirroring(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void clean(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class java.util.Arrays { boolean deepToStringImplContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(boolean[]); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean getBit(int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void setBit(int,boolean); }
-keepclassmembers class android.view.View { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void show(); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.view.View { void setScrollX(int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { void <init>(java.lang.Class,java.lang.String[],com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class android.hardware.ISerialManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.text.SpannableStringBuilder { void clear(); }
-keepclassmembers class java.util.Arrays { float[] copyOf(float[],int); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { java.lang.String buildCanonicalName(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager$2 { void <init>(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType containedType(int); }
-keepclassmembers class android.support.v4.view.ViewPager$2 { float getInterpolation(float); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class java.util.Arrays { char[] copyOf(char[],int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel { void <clinit>(); }
-keepclassmembers class android.view.View { int getMeasuredWidthAndState(); }
-keepclassmembers class android.view.View { void setScrollY(int); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { int containedTypeCount(); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean[] toBooleanArray(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { java.lang.String containedTypeName(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { void <init>(byte[],int,int); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <clinit>(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class java.util.Arrays { int[] copyOf(int[],int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class libcore.io.Memory { void pokeInt(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void finish(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean isFinished(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onAbsorb(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onPull(float); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(char); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onPull(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onRelease(); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { void <init>(byte[]); }
-keepclassmembers class java.util.Arrays { byte[] copyOfRange(byte[],int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void setSize(int,int); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.joran.action.StatusListenerAction { void <init>(); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class android.support.v7.widget.ActivityChooserModel { android.support.v7.widget.ActivityChooserModel get(android.content.Context,java.lang.String); }
-keepclassmembers class libcore.io.Memory { void pokeLong(byte[],int,long,java.nio.ByteOrder); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher { com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer { void <init>(java.lang.Class,java.lang.Object); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer { java.lang.Object getNullValue(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher { boolean isVisibleForView(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class ch.qos.logback.core.joran.action.StatusListenerAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void clearColorFilter(); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class android.renderscript.Float3 { void <init>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.BinaryNode { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object); }
-keepclassmembers class java.util.Arrays { int[] copyOfRange(int[],int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { boolean isContainerType(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { java.lang.String toString(); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 add(android.renderscript.Float3,android.renderscript.Float3); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class java.util.Arrays { float[] copyOfRange(float[],int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener { void <init>(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$1); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener { void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.view.View { boolean setAlphaNoInvalidation(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object); }
-keepclassmembers class libcore.io.Memory { void pokeShort(byte[],int,short,java.nio.ByteOrder); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerContextListenerAction { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerContextListenerAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.view.View { void setTransitionAlpha(float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser { void <init>(); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser { int[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 add(android.renderscript.Float3,float); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class android.service.persistentdata.PersistentDataBlockManager { void <init>(android.service.persistentdata.IPersistentDataBlockService); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.view.View { boolean hasOverlappingRendering(); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { void <clinit>(); }
-keepclassmembers class android.view.View { void setTop(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.SimpleType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { void <init>(); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 sub(android.renderscript.Float3,android.renderscript.Float3); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { void <init>(com.jcraft.jsch.ChannelSftp,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser { int[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { com.fasterxml.jackson.databind.JsonDeserializer _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class ch.qos.logback.classic.joran.action.LoggerContextListenerAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class ch.qos.logback.core.joran.action.StatusListenerAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { void add(int,long,int); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 sub(android.renderscript.Float3,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { void cancel(com.jcraft.jsch.ChannelSftp$Header,com.jcraft.jsch.Buffer); }
-keepclassmembers class android.service.persistentdata.PersistentDataBlockManager { void onError(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getLayoutDirection(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getMinimumHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getMinimumWidth(); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class android.view.View { void setLeft(int); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckedTextView { void drawableStateChanged(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class libcore.io.Memory { void pokeByteArray(long,byte[],int,int); }
-keepclassmembers class java.nio.channels.spi.SelectorProvider { void <init>(); }
-keepclassmembers class java.nio.channels.spi.SelectorProvider { java.nio.channels.spi.SelectorProvider provider(); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { int count(); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { com.jcraft.jsch.ChannelSftp$RequestQueue$Request get(int); }
-keepclassmembers class com.afollestad.materialdialogs.StackingBehavior { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig); }
-keepclassmembers class java.nio.channels.spi.SelectorProvider { java.nio.channels.spi.SelectorProvider loadProviderByJar(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.StackingBehavior { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Process { android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class java.nio.channels.spi.SelectorProvider { void <clinit>(); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 div(android.renderscript.Float3,android.renderscript.Float3); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.ViewPropertyAnimator$PropertyBundle { boolean cancel(int); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class android.view.ViewPropertyAnimator$PropertyBundle { void <init>(int,java.util.ArrayList); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { long getOffset(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class android.os.Process { java.lang.String getAbiList(java.io.BufferedWriter,java.io.DataInputStream); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.renderscript.Float3 { android.renderscript.Float3 div(android.renderscript.Float3,float); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { com.fasterxml.jackson.databind.JsonDeserializer _withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void invalidateSelf(); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class android.service.persistentdata.PersistentDataBlockManager { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { void <clinit>(); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { void <clinit>(); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { void init(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.view.View { void setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$2 { void <init>(android.support.v7.widget.ActionBarOverlayLayout); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { boolean VMSupportsCS8(); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class android.os.Process { android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(android.os.Process$ZygoteState,java.util.ArrayList); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$RequestQueue { int size(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$2 { void run(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void set(long); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { void <init>(); }
-keepclassmembers class java.text.StringCharacterIterator { int getBeginIndex(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class java.text.StringCharacterIterator { int getEndIndex(); }
-keepclassmembers class android.view.View { android.view.ViewOutlineProvider getOutlineProvider(); }
-keepclassmembers class java.text.StringCharacterIterator { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView$VisibilityAnimListener { void <init>(android.support.v7.widget.AbsActionBarView); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { boolean hasSingleElement(int[]); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.joran.action.RootLoggerAction { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class ch.qos.logback.classic.joran.action.RootLoggerAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { boolean isEmpty(int[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class java.text.StringCharacterIterator { char setIndex(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer { void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { void <clinit>(); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { int intValue(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long longValue(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { float floatValue(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.RootLoggerAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { double doubleValue(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { com.android.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy,java.net.URL,java.util.List); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <init>(long); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.os.Process { android.os.Process$ProcessStartResult startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.app.ContextImpl$55 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAllowCaching(boolean); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { java.lang.Object getMediaController(); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void <clinit>(); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <init>(java.net.URL); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void <init>(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { com.android.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy,java.net.URL,java.util.List); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void connect(); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo makeTimeZone(java.lang.String,libcore.io.BufferIterator); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarFile(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void access$1900(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void copyFrom(android.support.v7.widget.RecyclerView$SavedState); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { int getDefaultNightMode(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$55 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.AnyGetterWriter { void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.ser.std.MapSerializer); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { boolean isCompatVectorFromResourcesEnabled(); }
-keepclassmembers class com.jcraft.jsch.UserAuthGSSAPIWithMIC { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,int[],byte[],int[],byte[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.AnyGetterWriter { void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.util.jar.JarFile openJarFile(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { void appendQuoted(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class com.jcraft.jsch.UserAuthGSSAPIWithMIC { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL); }
-keepclassmembers class android.os.Process { android.os.Process$ZygoteState openZygoteSocketIfNeeded(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int charToHex(int); }
-keepclassmembers class ch.qos.logback.classic.spi.EventArgUtil { java.lang.Throwable extractThrowable(java.lang.Object[]); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { byte[] copyHexBytes(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.AnyGetterWriter { void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] get7BitOutputEscapes(); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] getInputCodeLatin1(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] getInputCodeLatin1JsNames(); }
-keepclassmembers class ch.qos.logback.classic.spi.EventArgUtil { java.lang.Object[] trimmedCopy(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] getInputCodeUtf8(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] getInputCodeUtf8JsNames(); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class android.app.ActivityThread$ProviderClientRecord { void <init>(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.AnyGetterWriter { void resolve(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <init>(); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { java.lang.String getSystemProperty(java.lang.String); }
-keepclassmembers class android.os.Process { int myPpid(); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class android.os.Process { int myTid(); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class com.android.okio.Segment { void <init>(); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <init>(int); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { void setSystemProperty(java.lang.String,java.lang.String); }
-keepclassmembers class javax.crypto.spec.DHParameterSpec { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.os.Process { android.os.UserHandle myUserHandle(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarEntry(); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <init>(java.lang.reflect.Type[]); }
-keepclassmembers class android.os.Process { boolean isIsolated(); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { void create(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class android.support.v4.view.MotionEventCompatHoneycombMr1 { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class com.jcraft.jsch.UserAuthGSSAPIWithMIC { void <init>(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { char[] copyHexChars(); }
-keepclassmembers class ch.qos.logback.classic.spi.EventArgUtil { boolean successfulExtraction(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer { void resolve(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment split(int); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.reflect.Type[] resolveTypes(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void setUseCaches(boolean); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class com.fasterxml.jackson.core.io.CharTypes { int[] getInputCodeComment(); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper { int getNestedScrollAxes(); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean access$002(libcore.net.url.JarURLConnectionImpl,boolean); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <clinit>(); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { void <init>(java.util.EnumMap); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <clinit>(); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class android.bluetooth.BluetoothAdapter$1 { void <init>(android.bluetooth.BluetoothAdapter); }
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper { void onStopNestedScroll(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class com.android.okio.Segment { void compact(); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { java.util.Iterator iterator(); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { byte[] getMIC(byte[],int,int); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment pop(); }
-keepclassmembers class android.os.Process { void setThreadPriority(int); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class libcore.reflect.ListOfTypes { void add(java.lang.reflect.Type); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class com.android.okio.Segment { void writeTo(com.android.okio.Segment,int); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment push(com.android.okio.Segment); }
-keepclassmembers class libcore.reflect.ListOfTypes { int length(); }
-keepclassmembers class android.os.Process { void setArgV0(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { byte[] init(byte[],int,int); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class libcore.util.ZoneInfo { boolean useDaylightTime(); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.reflect.Type[] getResolvedTypes(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.os.Process { java.lang.String access$000(java.io.BufferedWriter,java.io.DataInputStream); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { boolean isEstablished(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.ArrayBlockingQueue$Itrs$Node { void <init>(java.util.concurrent.ArrayBlockingQueue$Itrs,java.util.concurrent.ArrayBlockingQueue$Itr,java.util.concurrent.ArrayBlockingQueue$Itrs$Node); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper { void <init>(android.view.ViewGroup); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.Properties { void list(java.io.PrintStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class android.support.v4.view.NestedScrollingParentHelper { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class java.util.Properties { void listToAppendable(java.lang.Appendable); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class com.jcraft.jsch.jgss.GSSContextKrb5 { void dispose(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { int mapNightMode(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer { com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { java.lang.String buildCanonicalName(); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { java.lang.Iterable customSerializers(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class java.util.Properties { void list(java.io.PrintWriter); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder); }
-keepclassmembers class android.view.View { android.os.Handler getHandler(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType getContentType(); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType containedType(int); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer { com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void <init>(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { boolean isContainerType(); }
-keepclassmembers class org.apache.harmony.xml.dom.TextImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { boolean isTrueCollectionType(); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { void postOnAnimationDelayed(java.lang.Runnable,long); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { int containedTypeCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { java.lang.String containedTypeName(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void flush(); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser { void <init>(); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser { short[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void connectionHeader(); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { boolean isCollectionLikeType(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class org.apache.harmony.xml.dom.TextImpl { short getNodeType(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class java.nio.SelectorProviderImpl { java.nio.channels.DatagramChannel openDatagramChannel(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class java.nio.SelectorProviderImpl { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { org.xmlpull.v1.sax2.Driver buildPullParser(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void synStream(boolean,boolean,int,int,int,int,java.util.List); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class java.nio.SelectorProviderImpl { java.nio.channels.Pipe openPipe(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { void <init>(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void setSoftInputMode(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.view.IWindowSession$Stub { android.view.IWindowSession asInterface(android.os.IBinder); }
-keepclassmembers class java.nio.SelectorProviderImpl { java.nio.channels.ServerSocketChannel openServerSocketChannel(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class java.nio.FloatBuffer { java.nio.FloatBuffer wrap(float[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { java.lang.String toString(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void ackSettings(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object); }
-keepclassmembers class java.nio.SelectorProviderImpl { java.nio.channels.SocketChannel openSocketChannel(); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class java.nio.FloatBuffer { java.nio.FloatBuffer wrap(float[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class java.nio.FloatBuffer { void <init>(int,long); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.support.v4.app.Fragment$1 { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void handleError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser { short[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.View { void computeScroll(); }
-keepclassmembers class android.support.v4.app.Fragment$1 { android.view.View onFindViewById(int); }
-keepclassmembers class java.lang.reflect.ArtMethod { java.lang.String getMethodName(java.lang.reflect.ArtMethod); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void <init>(); }
-keepclassmembers class java.util.Properties { java.util.Enumeration propertyNames(); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalConstructorParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void addError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class java.util.Properties { void selectProperties(java.util.Hashtable,boolean); }
-keepclassmembers class android.view.View { float getTopFadingEdgeStrength(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void <init>(ch.qos.logback.core.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { boolean isPotentialBeanType(java.lang.Class); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalMethodParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.view.View { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.type.CollectionLikeType { com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class android.view.View { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.widget.PopupWindow { void setClipToScreenEnabled(boolean); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class android.view.View { float getRightFadingEdgeStrength(); }
-keepclassmembers class java.nio.SelectorProviderImpl { java.nio.channels.spi.AbstractSelector openSelector(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchModal(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutMode(int,int); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void characters(char[],int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class android.widget.PopupWindow { void setAllowScrollingAnchorParent(boolean); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class android.view.View { void setVerticalScrollBarEnabled(boolean); }
-keepclassmembers class android.support.v4.app.Fragment$1 { boolean onHasView(); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { void _close(java.io.Closeable); }
-keepclassmembers class java.util.Properties { java.lang.Object setProperty(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { com.fasterxml.jackson.core.Version doReadVersion(java.io.Reader); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void fatalError(org.xml.sax.SAXParseException); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BeanSerializerFactory { void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { ch.qos.logback.core.joran.event.SaxEvent getLastEvent(); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void data(boolean,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { java.util.List getSaxEventList(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { org.xml.sax.Locator getLocator(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { java.lang.String getTagName(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { java.util.List recordEvents(org.xml.sax.InputSource); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void headers(boolean,int,int,java.util.List); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class android.view.View { boolean canScrollHorizontally(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void ping(boolean,int,int); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void setContext(ch.qos.logback.core.Context); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void dataFrame(int,byte,com.android.okio.OkBuffer,int); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { boolean isSpaceOnly(java.lang.String); }
-keepclassmembers class android.os.PatternMatcher { java.lang.String toString(); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void startDocument(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextWidths(int,int,float[],android.graphics.Paint); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class android.os.PatternMatcher { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class android.os.PatternMatcher { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { com.fasterxml.jackson.core.Version packageVersionFor(java.lang.Class); }
-keepclassmembers class ch.qos.logback.classic.pattern.ContextNameConverter { void <init>(); }
-keepclassmembers class android.text.SpannableStringBuilder { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { void <init>(com.fasterxml.jackson.databind.JavaType,boolean); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$3 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void windowUpdate(int,long); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { void <init>(java.lang.Class,boolean); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void close(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { int hash(com.fasterxml.jackson.databind.JavaType,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void frameHeader(int,byte,byte,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { int hash(java.lang.Class,boolean); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 { android.support.v4.media.session.MediaSessionCompat$Token getSessionToken(); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView$CharWrapper { void <init>(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { int hashCode(); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { int parseVersionPart(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { void resetUntyped(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { void resetTyped(java.lang.Class); }
-keepclassmembers class android.os.PatternMatcher { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { void throwInternal(); }
-keepclassmembers class android.widget.TextView$CharWrapper { char charAt(int); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class android.widget.TextView$CharWrapper { int length(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.core.util.VersionUtil { com.fasterxml.jackson.core.Version versionFor(java.lang.Class); }
-keepclassmembers class android.widget.TextView$CharWrapper { void set(char[],int,int); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { void resetUntyped(java.lang.Class); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <clinit>(); }
-keepclassmembers class android.widget.TextView$CharWrapper { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowPopup { void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.widget.TextView$CharWrapper { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView$CharWrapper { void getChars(int,int,char[],int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowPopup { void onDismiss(); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.textservice.ITextServicesSessionListener$Stub { void <init>(); }
-keepclassmembers class android.content.IClipboard$Stub$Proxy { void setPrimaryClip(android.content.ClipData,java.lang.String); }
-keepclassmembers class android.content.IClipboard$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.transition.TransitionManager { java.util.ArrayList access$000(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap access$100(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class android.widget.TextView$CharWrapper { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.textservice.ITextServicesSessionListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Appendable append(char); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.JsonFactory); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void settings(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class android.os.PatternMatcher { void <init>(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEventRecorder { void recordEvents(java.io.InputStream); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,long); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.TextView$CharWrapper { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class android.app.usage.IUsageStatsManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void add(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View); }
-keepclassmembers class android.transition.CircularPropagation { long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController,android.media.session.MediaController$1); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String getSigAlgOID(); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class android.transition.CircularPropagation { void <init>(); }
-keepclassmembers class java.nio.Buffer { int checkGetBounds(int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,byte[]); }
-keepclassmembers class android.widget.TextView$CharWrapper { int getTextWidths(int,int,float[],android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { byte[] getEncoded(); }
-keepclassmembers class java.nio.Buffer { int checkPutBounds(int,int,int,int); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class android.content.IClipboard$Stub$Proxy { boolean hasPrimaryClip(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { void <init>(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues,com.fasterxml.jackson.databind.deser.DataFormatReaders); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class android.view.View { void dispatchScreenStateChanged(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ListSelectorHider { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.content.IClipboard$Stub$Proxy { android.content.ClipData getPrimaryClip(java.lang.String); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class android.widget.TextView$CharWrapper { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.util.Set getCriticalExtensionOIDs(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer clear(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { android.net.Uri$PathSegments build(); }
-keepclassmembers class ch.qos.logback.core.pattern.ReplacingCompositeConverter { void <init>(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer flip(); }
-keepclassmembers class android.widget.TextView$CharWrapper { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class ch.qos.logback.core.pattern.ReplacingCompositeConverter { void start(); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$002(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class android.transition.CircularPropagation { float distance(float,float,float,float); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { void <init>(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean checkNewEdgeDrag(float,float,int,int); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { void updateSelection(int); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class java.lang.Thread { void create(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class java.nio.Buffer { void checkWritable(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ListSelectorHider { void run(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer rewind(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class java.nio.Buffer { void positionImpl(int); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class java.nio.Buffer { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { android.widget.Editor$ActionPopupWindow getActionPopupWindow(); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class android.ddm.DdmHandleAppName { void setAppName(java.lang.String,int); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void <clinit>(); }
-keepclassmembers class java.lang.Thread { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int clampMag(int,int,int); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { float clampMag(float,float,float); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.ddm.DdmHandleAppName { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleAppName { void <clinit>(); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class android.ddm.DdmHandleAppName { void sendAPNM(java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void clearMotionHistory(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class android.widget.PopupWindow { void unregisterForScrollChanged(); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void clearMotionHistory(int); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class android.widget.PopupWindow { java.lang.ref.WeakReference access$000(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { void registerForScrollChanged(android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$100(android.widget.PopupWindow); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class java.lang.Thread { boolean isDaemon(); }
-keepclassmembers class android.widget.Editor$SelectionStartHandleView { void updatePosition(float,float); }
-keepclassmembers class android.widget.PopupWindow { int access$300(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { int access$400(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { boolean access$500(android.widget.PopupWindow,android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter { void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class android.widget.PopupWindow { int access$200(android.widget.PopupWindow); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class java.lang.Thread { void join(long); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean checkTouchSlop(android.view.View,float,float); }
-keepclassmembers class org.apache.harmony.xml.dom.ProcessingInstructionImpl { short getNodeType(); }
-keepclassmembers class android.widget.PopupWindow { void access$600(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class java.lang.Thread { void join(long,int); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,boolean,int,int,int); }
-keepclassmembers class org.apache.harmony.xml.dom.ProcessingInstructionImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { boolean access$700(android.widget.PopupWindow); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class android.widget.PopupWindow { int[] access$800(); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$1000(android.widget.PopupWindow); }
-keepclassmembers class android.view.View { android.view.WindowId getWindowId(); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.bluetooth.IBluetoothManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.PopupWindow { void setEnterTransition(android.transition.Transition); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int computeAxisDuration(int,int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.bluetooth.IBluetoothManager$Stub$Proxy { android.bluetooth.IBluetooth registerAdapter(android.bluetooth.IBluetoothManagerCallback); }
-keepclassmembers class android.widget.PopupWindow { void setOverlapAnchor(boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int computeSettleDuration(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop$1 { void <init>(android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop$1 { android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapProperty { void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotFull(); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class java.lang.Thread { void setContextClassLoader(java.lang.ClassLoader); }
-keepclassmembers class java.lang.Thread { void setDaemon(boolean); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class java.lang.Thread { void checkNotStarted(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class java.lang.Thread { void pushInterruptAction$(java.lang.Runnable); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback); }
-keepclassmembers class java.io.BufferedReader { int fillBuf(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class java.lang.Thread { void popInterruptAction$(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class java.lang.Thread { void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void dispatchViewReleased(float,float); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void dragTo(int,int,int,int); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapProperty { void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class java.io.BufferedReader { boolean isClosed(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter { void run(); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers { void <clinit>(); }
-keepclassmembers class android.widget.EdgeEffect { void finish(); }
-keepclassmembers class java.lang.Thread { void sleep(long); }
-keepclassmembers class java.lang.Thread { void sleep(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void ensureMotionHistorySizeForId(int); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers { com.fasterxml.jackson.databind.JsonDeserializer find(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void freeBuffers(); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class java.io.BufferedReader { void checkNotClosed(); }
-keepclassmembers class java.lang.Thread { void setPriority(int); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class java.io.BufferedReader { int read(); }
-keepclassmembers class java.nio.channels.NonReadableChannelException { void <init>(); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 { void <init>(android.support.v7.app.AppCompatDelegateImplV23,android.view.Window$Callback); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class android.view.View { void saveHierarchyState(android.util.SparseArray); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class android.view.View { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class java.lang.Thread { void nativeSetPriority(int); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class java.io.BufferedReader { int readChar(); }
-keepclassmembers class java.lang.Thread { void run(); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class java.net.Proxy { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean forceSettleCapturedViewAt(int,int,int,int); }
-keepclassmembers class android.view.GhostView { void <init>(android.view.View); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class android.view.GhostView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class android.view.View { void restoreHierarchyState(android.util.SparseArray); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { boolean loadMore(int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int getEdgesTouched(int,int); }
-keepclassmembers class android.view.GhostView { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.View { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.widget.EdgeEffect { void onAbsorb(int); }
-keepclassmembers class java.lang.Thread { boolean nativeHoldsLock(java.lang.Object); }
-keepclassmembers class java.net.Proxy { java.lang.String toString(); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void unpark(); }
-keepclassmembers class android.view.GhostView { void setVisibility(int); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void reportBounds(char[],int,int); }
-keepclassmembers class libcore.reflect.Types { java.lang.reflect.Type[] getTypeArray(libcore.reflect.ListOfTypes,boolean); }
-keepclassmembers class android.view.GhostView { void setGhostedVisibility(int); }
-keepclassmembers class java.lang.Thread { void parkFor(long); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void reportInvalid(int,int,java.lang.String); }
-keepclassmembers class java.net.Proxy { int hashCode(); }
-keepclassmembers class libcore.reflect.Types { java.lang.reflect.Type getType(java.lang.reflect.Type); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.GhostView { void onDetachedFromWindow(); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,boolean); }
-keepclassmembers class android.view.GhostView { void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class android.widget.EdgeEffect { boolean draw(android.graphics.Canvas); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void releaseViewForPointerUp(); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Thread { void parkUntil(long); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void reportStrangeStream(); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class libcore.reflect.Types { java.lang.String toString(java.lang.Class[]); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void reportNewEdgeDrags(float,float,int); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,int); }
-keepclassmembers class libcore.reflect.Types { void appendTypeName(java.lang.StringBuilder,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void reportUnexpectedEOF(int,int); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object take(); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class android.view.View { long getDrawingTime(); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { void close(); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { int getLength(); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void <init>(); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void <init>(org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void saveInitialMotion(float,float,int); }
-keepclassmembers class com.fasterxml.jackson.core.io.UTF32Reader { int read(char[],int,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getLocalName(int); }
-keepclassmembers class java.io.BufferedReader { void chompNewline(); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void saveLastMotion(android.view.MotionEvent); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getQName(int); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.EdgeEffect { void update(); }
-keepclassmembers class java.io.BufferedReader { void maybeSwallowLF(); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getType(int); }
-keepclassmembers class android.view.GhostView { android.view.GhostView getGhost(android.view.View); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getValue(int); }
-keepclassmembers class android.view.GhostView { void removeGhost(android.view.View); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.transition.TransitionUtils$MatrixEvaluator { android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix); }
-keepclassmembers class android.transition.TransitionUtils$MatrixEvaluator { void <init>(); }
-keepclassmembers class android.view.GhostView { void copySize(android.view.View,android.view.View); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class android.view.GhostView { int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean hasStaticLayer(); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class java.lang.Thread { void sleep(java.lang.Object,long,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean isValidPointerForActionMove(int); }
-keepclassmembers class android.transition.TransitionUtils$MatrixEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { android.view.HardwareLayer getHardwareLayer(); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void <init>(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class java.lang.Thread { boolean holdsLock(java.lang.Object); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class android.view.GhostView { void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getValue(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void clear(); }
-keepclassmembers class android.transition.Recolor { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer { void <init>(); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { java.lang.String getURI(int); }
-keepclassmembers class android.view.GhostView { int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class android.transition.Recolor { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Recolor { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void setAttributes(org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void cancel(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void captureChildView(android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer { void serialize(java.nio.ByteBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.Recolor { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.View { boolean canHaveDisplayList(); }
-keepclassmembers class android.transition.Recolor { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean); }
-keepclassmembers class android.view.View { void dispatchGetDisplayList(); }
-keepclassmembers class android.view.GhostView { boolean isGhostWrapper(android.view.View); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean checkTouchSlop(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void <clinit>(); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean checkTouchSlop(int,int); }
-keepclassmembers class java.lang.Integer { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void <clinit>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet); }
-keepclassmembers class java.lang.Integer { java.lang.NumberFormatException invalidInt(java.lang.String); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class android.view.GhostView { void getParents(android.view.View,java.util.ArrayList); }
-keepclassmembers class java.lang.Integer { java.lang.Integer decode(java.lang.String); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(android.view.View,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { void <init>(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { void <clinit>(); }
-keepclassmembers class libcore.reflect.Types { void <clinit>(); }
-keepclassmembers class android.view.View { android.view.RenderNode getDisplayList(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean continueSettling(boolean); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void clear(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(java.util.Collection); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.Bitmap getDrawingCache(boolean); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class java.lang.Integer { double doubleValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void <init>(java.util.HashSet,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int drainTo(java.util.Collection,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Connection,java.net.Socket); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int size(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void ensureCapacity(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void poolOnIdle(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class android.view.View { void buildDrawingCache(boolean); }
-keepclassmembers class android.view.View { void destroyHardwareResources(); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class org.xml.sax.helpers.AttributesImpl { void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void updateDisplayListIfDirty(); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { android.view.View findTopChildUnder(int,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int drainTo(java.util.Collection); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean isClosed(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.core.util.Duration { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,long,java.util.List); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration buildByDays(double); }
-keepclassmembers class ch.qos.logback.core.util.Duration { void <init>(long); }
-keepclassmembers class java.lang.Integer { long longValue(); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class android.view.View { void buildDrawingCacheImpl(boolean); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration buildByMilliseconds(double); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { long bufferSize(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration buildByMinutes(double); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean isReadable(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration buildBySeconds(double); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration valueOf(java.lang.String); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.ListIterator listIterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean); }
-keepclassmembers class dalvik.system.DexFile { long openDexFile(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { android.view.View getCapturedView(); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.Boolean truthValue(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { java.util.HashSet toSet(java.lang.String[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void writeRequest(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int getEdgeSize(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void closeOnIdle(); }
-keepclassmembers class java.lang.Integer { int parse(java.lang.String,int,int,boolean); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int getViewDragState(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { int getTouchSlop(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class dalvik.system.DexFile { long openDexFileNative(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean isCapturedViewUnder(int,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.lang.Integer { java.lang.String toBinaryString(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class ch.qos.logback.core.util.Duration { long getMilliseconds(); }
-keepclassmembers class ch.qos.logback.core.util.Duration { java.lang.String toString(); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla { java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean isPointerDown(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.Response$Builder readResponse(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { java.util.Map _orderEntries(java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$1 { void <init>(java.lang.Class,int,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean isViewUnder(android.view.View,int,int); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$1 { boolean equals(java.lang.Object); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer { java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void add(int,java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer { java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.nio.ByteBuffer); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void processTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void readHeaders(com.android.okhttp.Headers$Builder); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.StringWriter { java.lang.StringBuffer getBuffer(); }
-keepclassmembers class java.io.StringWriter { void close(); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class java.net.Authenticator$RequestorType { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ObjectReader { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean discard(com.android.okio.Source,int); }
-keepclassmembers class java.net.Authenticator$RequestorType { void <clinit>(); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Sink newChunkedSink(); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class android.app.job.IJobScheduler$Stub { android.app.job.IJobScheduler asInterface(android.os.IBinder); }
-keepclassmembers class ch.qos.logback.classic.util.LoggerNameUtil { int getSeparatorIndexOf(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Sink newFixedLengthSink(long); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void clear(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean addIfAbsent(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object remove(int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newFixedLengthSource(java.net.CacheRequest,long); }
-keepclassmembers class android.view.View { int getLeftPaddingOffset(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void parse(org.xml.sax.InputSource); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void emptyResponseBody(); }
-keepclassmembers class android.view.View { int getBottomPaddingOffset(); }
-keepclassmembers class android.view.View { int getFadeTop(boolean); }
-keepclassmembers class android.view.View { int getFadeHeight(boolean); }
-keepclassmembers class libcore.io.DeleteOnExit { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newUnknownLengthSource(java.net.CacheRequest); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class ch.qos.logback.core.util.Duration { ch.qos.logback.core.util.Duration buildByHours(double); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void flush(); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB { void <init>(); }
-keepclassmembers class libcore.io.DeleteOnExit { void addFile(java.lang.String); }
-keepclassmembers class android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB { android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal); }
-keepclassmembers class android.view.View { void setClipBounds(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getRightPaddingOffset(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newChunkedSource(java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$302(com.android.okhttp.internal.http.HttpConnection,int); }
-keepclassmembers class libcore.io.DeleteOnExit { void run(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { byte[] access$400(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$300(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$600(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$602(com.android.okhttp.internal.http.HttpConnection,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void removeRange(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { boolean isEmpty(java.util.Map); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.Connection access$700(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setup(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.ConnectionPool access$800(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.BufferedSource access$900(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.InputStream getInputStream(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void adup(char[],int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 { boolean refresh(java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class libcore.net.url.JarHandler { void <init>(); }
-keepclassmembers class libcore.net.url.JarHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aname(char[],int,int); }
-keepclassmembers class libcore.net.url.JarHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 { void setTextSelection(java.lang.Object,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aval(char[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool { java.util.ArrayList getScrapHeapForType(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.net.wifi.IWifiManager$Stub { android.net.wifi.IWifiManager asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.String { void <init>(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String expandEntities(java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[]); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.String { void <init>(byte[],int); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,int); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTrackballHandler { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTrackballHandler { void process(android.view.MotionEvent); }
-keepclassmembers class libcore.net.url.JarHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void entity(char[],int,int); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int lookupEntity(char[],int,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void setDragState(int); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool { void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void setEdgeTrackingEnabled(int); }
-keepclassmembers class libcore.io.DeleteOnExit { libcore.io.DeleteOnExit getInstance(); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { void setMinVelocity(float); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean settleCapturedViewAt(int,int); }
-keepclassmembers class android.content.pm.PackageInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void eof(char[],int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { void <clinit>(); }
-keepclassmembers class android.view.View { boolean isPaddingOffsetRequired(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { void <init>(ch.qos.logback.core.Context); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { boolean isKleeneStar(java.lang.String); }
-keepclassmembers class android.view.View { void setDisplayListProperties(android.view.RenderNode); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { boolean isSuffixPattern(ch.qos.logback.core.joran.spi.ElementSelector); }
-keepclassmembers class java.net.UnknownHostException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean shouldInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag(char[],int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean etag_cdata(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.Outline { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { void addRule(ch.qos.logback.core.joran.spi.ElementSelector,java.lang.String); }
-keepclassmembers class android.graphics.Outline { void setEmpty(); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { void <clinit>(); }
-keepclassmembers class android.view.View { int getTopPaddingOffset(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class android.graphics.Outline { boolean isEmpty(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag_basic(char[],int,int); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { void <init>(); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { java.lang.String decodeString(int,int); }
-keepclassmembers class android.view.View { boolean draw(android.graphics.Canvas,android.view.ViewGroup,long); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.util.List fullPathMatch(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class android.content.pm.PackageInfo { void <init>(android.os.Parcel,android.content.pm.PackageInfo$1); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.BufferedSink access$200(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.Reader getReader(org.xml.sax.InputSource); }
-keepclassmembers class android.content.pm.PackageInfo { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { int getShort(byte[],int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.util.List matchActions(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void <init>(java.lang.String,int,int,int,org.ccil.cowan.tagsoup.Schema); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restart(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.util.SparseLongArray { void <init>(int); }
-keepclassmembers class android.graphics.Outline { void setRect(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.util.List middleMatch(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class android.util.SparseLongArray { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pop(); }
-keepclassmembers class android.graphics.Outline { void setRect(android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void <init>(); }
-keepclassmembers class android.graphics.Outline { void setRoundRect(int,int,int,int,float); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeTag(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restartablyPop(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String name(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void push(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.graphics.Outline { void setRoundRect(android.graphics.Rect,float); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(); }
-keepclassmembers class android.graphics.Outline { void setOval(int,int,int,int); }
-keepclassmembers class android.util.SparseLongArray { void put(int,long); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int flags(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int model(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { boolean canContain(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class android.util.SparseLongArray { int keyAt(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.util.List prefixMatch(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class android.util.SparseLongArray { int size(); }
-keepclassmembers class android.util.SparseLongArray { long valueAt(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeANY(); }
-keepclassmembers class android.graphics.Outline { void setOval(android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Outline { void setConvexPath(android.graphics.Path); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String prefixOf(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBitString(); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { int[] getVarint(byte[],int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean foreign(java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void decl(char[],int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.util.List suffixMatch(ch.qos.logback.core.joran.spi.ElementPath); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertificate$1); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.nio.charset.Charset); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBoolean(); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setParent(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class ch.qos.logback.core.joran.spi.SimpleRuleStore { java.lang.String toString(); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeGeneralizedTime(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { int access$100(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeUTCTime(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String trimquotes(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$3 { void <init>(); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.support.v7.widget.RecyclerView$3 { float getInterpolation(float); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeInteger(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { int getInputType(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { brut.androlib.res.decoder.StringBlock read(brut.util.ExtDataInput); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String[] split(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOctetString(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int available(); }
-keepclassmembers class java.lang.String { void <init>(java.lang.StringBuffer); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void close(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOID(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <clinit>(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.ContextImpl$38 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$38 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.String { void <init>(int[],int,int); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { void <clinit>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$6 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandYesNo); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$6 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class java.lang.String { void <init>(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.util.EnumValues,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.security.KeyPairGenerator$KeyPairGeneratorImpl { void <init>(java.security.KeyPairGeneratorSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { void <init>(); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class java.security.KeyPairGenerator$KeyPairGeneratorImpl { void initialize(int,java.security.SecureRandom); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { int find(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { byte[] addCache(byte[],int,int); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean smoothSlideViewTo(android.view.View,int,int); }
-keepclassmembers class java.security.KeyPairGenerator$KeyPairGeneratorImpl { void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom); }
-keepclassmembers class java.security.KeyPairGenerator$KeyPairGeneratorImpl { java.security.KeyPair generateKeyPair(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.EnumMapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String cleanPublicid(java.lang.String); }
-keepclassmembers class android.support.v4.widget.ViewDragHelper { boolean tryCaptureViewForDrag(android.view.View,int); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int); }
-keepclassmembers class java.security.KeyPairGenerator$KeyPairGeneratorImpl { void <init>(java.security.KeyPairGeneratorSpi,java.security.Provider,java.lang.String,java.security.KeyPairGenerator$1); }
-keepclassmembers class java.lang.String { char foldCase(char); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void <init>(android.content.Context,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.String { int compareToIgnoreCase(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { boolean equals(byte[],byte[]); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void gi(char[],int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { com.fasterxml.jackson.databind.ser.std.EnumMapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { byte[] getFakedCookie(com.jcraft.jsch.Session); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.lang.String { java.lang.String concat(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeString(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pcdata(char[],int,int); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.MapSerializer { com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet,boolean); }
-keepclassmembers class com.android.okhttp.Protocol { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class com.android.okhttp.Protocol { com.android.okhttp.Protocol[] values(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pitarget(char[],int,int); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class com.android.okhttp.Protocol { com.android.okhttp.Protocol find(com.android.okio.ByteString); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pi(char[],int,int); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class com.android.okhttp.Protocol { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { void removeFakedCookie(com.jcraft.jsch.Session); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void addChild(java.lang.Object,android.view.View); }
-keepclassmembers class brut.androlib.res.decoder.StringBlock { java.lang.String getString(int); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void addAction(java.lang.Object,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stagc(char[],int,int); }
-keepclassmembers class android.net.wifi.RttManager { void <init>(android.content.Context,android.net.wifi.IRttManager); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { int getActions(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void getBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$6 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stage(char[],int,int); }
-keepclassmembers class android.net.wifi.RttManager { void init(); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void getBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void cmnt(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void rectify(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { void run(); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { android.support.v7.app.TwilightCalculator getInstance(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { java.lang.CharSequence getClassName(java.lang.Object); }
-keepclassmembers class java.text.Normalizer$Form { java.text.Normalizer$Form[] values(); }
-keepclassmembers class java.nio.channels.AsynchronousCloseException { void <init>(); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { void <init>(); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { java.lang.CharSequence getContentDescription(java.lang.Object); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isClickable(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { java.lang.CharSequence getPackageName(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isEnabled(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isFocusable(java.lang.Object); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$HashMapEntry nextEntry(); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { void calculateTwilight(long,double,double); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isFocused(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentController { void <init>(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isLongClickable(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isPassword(java.lang.Object); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int getEntity(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v4.app.FragmentController { void attachHost(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { boolean isSelected(java.lang.Object); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular { void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object,com.fasterxml.jackson.databind.deser.SettableBeanProperty); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String makeName(char[],int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchActivityCreated(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void recycle(java.lang.Object); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular { void assign(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setBoundsInParent(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchCreate(); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean dispatchContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.net.wifi.RttManager { java.lang.Object getListener(int); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { float getInterpolation(float); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setClassName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setBoundsInScreen(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean dispatchOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(android.graphics.drawable.Ripple$1); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { java.lang.Object obtain(java.lang.Object); }
-keepclassmembers class java.lang.String { void _getChars(int,int,char[],int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setClickable(java.lang.Object,boolean); }
-keepclassmembers class android.net.wifi.RttManager { java.lang.Object removeListener(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setContentDescription(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchLowMemory(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setEnabled(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchMultiWindowModeChanged(boolean); }
-keepclassmembers class java.nio.channels.Pipe { java.nio.channels.Pipe open(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchPictureInPictureModeChanged(boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelX11 { void write(byte[],int,int); }
-keepclassmembers class java.nio.channels.Pipe { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void comment(char[],int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchResume(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchStart(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void startDTD(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setFocusable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setFocused(java.lang.Object,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void endDTD(); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean dispatchPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.net.wifi.RttManager { com.android.internal.util.AsyncChannel access$000(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchReallyStop(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setLongClickable(java.lang.Object,boolean); }
-keepclassmembers class android.net.wifi.RttManager { com.android.internal.util.AsyncChannel access$002(com.android.internal.util.AsyncChannel); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchStop(); }
-keepclassmembers class java.lang.String { int fastIndexOf(int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { void doLoaderStart(); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class android.net.wifi.RttManager { java.lang.Object access$200(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setPackageName(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.FragmentController { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setPassword(java.lang.Object,boolean); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setParent(java.lang.Object,android.view.View); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class android.net.wifi.RttManager { void <clinit>(); }
-keepclassmembers class android.net.wifi.RttManager { java.util.concurrent.CountDownLatch access$100(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi21 { boolean isConsumed(java.lang.Object); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setSelected(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.app.FragmentController { void doLoaderStop(boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class android.net.wifi.RttManager { java.lang.Object access$300(int); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean execPendingActions(); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <clinit>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompatApi21 { java.lang.Object replaceSystemWindowInsets(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setSource(java.lang.Object,android.view.View); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { java.text.DateFormat initialValue(); }
-keepclassmembers class android.view.View { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]); }
-keepclassmembers class java.nio.channels.UnsupportedAddressTypeException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs { void setText(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.LoaderManager getSupportLoaderManager(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void clearColorFilter(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int getLayoutDirection(); }
-keepclassmembers class android.support.v4.app.FragmentController { void noteStateNotSaved(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.app.FragmentController { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ExecutorService newCachedThreadPool(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int getMinimumHeight(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentController { void reportLoaderStart(); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.util.SimpleArrayMap retainLoaderNonConfig(); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int[] getState(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.graphics.Outline { void setAlpha(float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTrackballHandler { void cancel(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { boolean isEmpty(java.util.EnumMap); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void jumpToCurrentState(); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void run(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setChangingConfigurations(int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serializeContents(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serialize(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ThreadFactory defaultThreadFactory(); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean onLevelChange(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView { void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.ViewRootImpl$2 { void <init>(android.view.ViewRootImpl,java.util.ArrayList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setAutoMirrored(boolean); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspot(float,float); }
-keepclassmembers class android.app.trust.TrustManager$2 { void <init>(android.app.trust.TrustManager,android.os.Looper); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean setState(int[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.ViewRootImpl$2 { void run(); }
-keepclassmembers class android.app.LoadedApk { android.app.Application getApplication(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.LoadedApk { void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean); }
-keepclassmembers class android.os.StatFs { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class android.os.StatFs { android.system.StructStatVfs doStat(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { java.lang.String nativeKeyCodeToString(int); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { void <init>(); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.ResourceBundle$MissingBundle { void <init>(); }
-keepclassmembers class android.os.StatFs { int getBlockSize(); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void <init>(byte[]); }
-keepclassmembers class android.animation.LayoutTransition$1 { boolean onPreDraw(); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[]); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void <init>(android.content.Context); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class android.view.View { void drawBackground(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class android.app.LoadedApk { android.content.pm.ApplicationInfo adjustNativeLibraryPaths(android.content.pm.ApplicationInfo); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer,java.text.DateFormat,java.lang.String); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { void <init>(); }
-keepclassmembers class java.util.AbstractQueue { boolean addAll(java.util.Collection); }
-keepclassmembers class android.app.LoadedApk { void <init>(android.app.ActivityThread); }
-keepclassmembers class android.view.View { void setBackgroundRenderNodeProperties(android.view.RenderNode); }
-keepclassmembers class java.util.AbstractQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.View { android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int getMinimumWidth(); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,java.lang.String,int,int); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { void <init>(java.util.MiniEnumSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.String { java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serializeContentsUsing(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.app.LoadedApk { void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v4.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { boolean hasNext(); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.app.LoadedApk { java.lang.String getPackageName(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.app.LoadedApk { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { void <clinit>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class android.app.LoadedApk { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization { void <init>(java.lang.reflect.Constructor); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class android.app.LoadedApk { java.lang.String[] getLibrariesFor(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.TreeMap); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { java.lang.Object next(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { void <init>(java.util.MiniEnumSet,java.util.MiniEnumSet$1); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class java.util.WeakHashMap$Entry { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState { void <clinit>(); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String addLikelySubtags(java.util.Locale); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class android.app.LoadedApk { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[]); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent obtain(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String getScript(java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class java.util.WeakHashMap$Entry { int hashCode(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$2 { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] getEncoded(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState { ch.qos.logback.core.pattern.parser.TokenStream$TokenizerState[] values(); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class android.view.ViewTreeObserver { void merge(android.view.ViewTreeObserver); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$2 { void run(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat { android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey getPublicKey(); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void access$200(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent obtain(android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey generateKeyForAlgorithm(java.security.spec.KeySpec,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy { android.os.Messenger getMessenger(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[],org.apache.harmony.security.x509.SubjectPublicKeyInfo$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { void serializeWithType(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.KeyEvent { void recycle(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent copy(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat { android.support.v4.media.session.MediaSessionCompat$Token getSessionToken(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$100(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumMapSerializer { com.fasterxml.jackson.databind.ser.std.EnumMapSerializer withValueSerializer(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(double); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(float); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class android.view.KeyEvent { void recycleIfNeededAfterDispatch(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { int access$300(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyValue { void <init>(com.fasterxml.jackson.databind.deser.impl.PropertyValue,java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <init>(byte[]); }
-keepclassmembers class libcore.io.Posix { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class libcore.io.Posix { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class libcore.io.Posix { void chmod(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { void chown(java.lang.String,int,int); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { long createNativeInterpolator(); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$PopupCallback { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object); }
-keepclassmembers class libcore.io.Posix { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class android.app.LoadedApk { void initializeJavaContextClassLoader(); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeFlags(android.view.KeyEvent,int); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { void ftruncate(java.io.FileDescriptor,long); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { boolean isTainted(); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration$2 { void <init>(java.lang.String,android.content.pm.PackageInfo); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.support.v7.widget.AppCompatEditText { void drawableStateChanged(); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class android.transition.ChangeBounds$ViewBounds { void <init>(android.view.View); }
-keepclassmembers class android.view.KeyEvent { void setTainted(boolean); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class libcore.io.Posix { int getppid(); }
-keepclassmembers class com.android.internal.os.SamplingProfilerIntegration$2 { void run(); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class android.view.ViewTreeObserver { void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int,int); }
-keepclassmembers class libcore.io.Posix { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.view.KeyEvent { boolean isSystem(); }
-keepclassmembers class android.view.View { void setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(android.view.ViewGroup); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class libcore.io.Posix { int gettid(); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class android.view.ViewGroup$1 { void run(); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.view.ViewRootImpl$ViewRootHandler { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.View { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class libcore.io.Posix { void link(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.LoadedApk { java.lang.String[] getSplitResDirs(); }
-keepclassmembers class libcore.io.Posix { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.LoadedApk { java.lang.String[] getOverlayDirs(); }
-keepclassmembers class libcore.io.Posix { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { void <init>(java.util.TreeMap$EntrySet,java.util.TreeMap$Node); }
-keepclassmembers class android.print.PrintManager$1 { void <init>(android.print.PrintManager,android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.view.KeyEvent { boolean isSystemKey(int); }
-keepclassmembers class android.app.LoadedApk { java.io.File getDataDirFile(); }
-keepclassmembers class libcore.io.Posix { void mkdir(java.lang.String,int); }
-keepclassmembers class android.app.LoadedApk { android.content.res.AssetManager getAssets(android.app.ActivityThread); }
-keepclassmembers class libcore.io.Posix { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.lang.Object next(); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.app.LoadedApk { android.content.res.Resources getResources(android.app.ActivityThread); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class libcore.io.Posix { void munmap(long,long); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class libcore.io.Posix { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class android.view.KeyEvent { int getDeviceId(); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class android.view.KeyEvent { int getSource(); }
-keepclassmembers class android.app.LoadedApk { android.app.Application makeApplication(boolean,android.app.Instrumentation); }
-keepclassmembers class libcore.io.Posix { int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.FileChannelImpl { void <init>(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class android.view.ViewRootImpl$ViewRootHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.nio.FileChannelImpl { void checkOpen(); }
-keepclassmembers class libcore.io.Posix { int preadBytes(java.io.FileDescriptor,java.lang.Object,int,int,long); }
-keepclassmembers class java.nio.FileChannelImpl { void checkReadable(); }
-keepclassmembers class android.support.v4.widget.CircleImageView { void <init>(android.content.Context,int); }
-keepclassmembers class libcore.io.Posix { int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { int estimateLength(); }
-keepclassmembers class libcore.io.Posix { boolean isatty(java.io.FileDescriptor); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEventVO { ch.qos.logback.classic.spi.LoggingEventVO build(ch.qos.logback.classic.spi.ILoggingEvent); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.nio.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void push(int[],java.lang.Object[]); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.app.LoadedApk { java.lang.String getResDir(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { void <init>(char); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class java.io.NotSerializableException { void <init>(); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { int pwriteBytes(java.io.FileDescriptor,java.lang.Object,int,int,long); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class android.support.v4.widget.CircleImageView { boolean elevationSupported(); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class android.view.ViewTreeObserver { void kill(); }
-keepclassmembers class android.support.v4.widget.CircleImageView { void onAnimationEnd(); }
-keepclassmembers class android.net.IEthernetServiceListener$Stub { void <init>(); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnWindowAttachedChange(boolean); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class android.support.v4.widget.CircleImageView { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnWindowFocusChange(boolean); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnGlobalLayout(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.EnumSetSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.KeyEvent { boolean isAltPressed(); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class android.view.KeyEvent { boolean isShiftPressed(); }
-keepclassmembers class android.app.LoadedApk { void rewriteRValues(java.lang.ClassLoader,java.lang.String,int); }
-keepclassmembers class android.view.ViewTreeObserver { boolean dispatchOnPreDraw(); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnGlobalFocusChange(android.view.View,android.view.View); }
-keepclassmembers class libcore.io.Posix { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class android.view.KeyEvent { boolean isCtrlPressed(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { boolean hasSingleElement(java.util.EnumSet); }
-keepclassmembers class libcore.io.Posix { int recvfromBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class ch.qos.logback.classic.spi.LoggingEventVO { void <init>(); }
-keepclassmembers class java.nio.FileChannelImpl { void checkWritable(); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class libcore.io.Posix { void remove(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.view.View { void setBackgroundColor(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { boolean isEmpty(java.util.EnumSet); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnWindowShown(); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.CircleImageView { void onAnimationStart(); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnDraw(); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.FileChannelImpl { java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long); }
-keepclassmembers class android.view.KeyEvent { void cancel(); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnTouchModeChanged(boolean); }
-keepclassmembers class android.view.KeyEvent { void startTracking(); }
-keepclassmembers class android.view.KeyEvent { boolean isTracking(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class libcore.io.Posix { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnScrollChanged(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.KeyEvent { boolean isLongPress(); }
-keepclassmembers class android.view.KeyEvent { int getKeyCode(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class libcore.io.Posix { int sendtoBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.view.KeyEvent { int getScanCode(); }
-keepclassmembers class android.view.KeyEvent { java.lang.String getCharacters(); }
-keepclassmembers class android.view.ViewTreeObserver { boolean hasComputeInternalInsetsListeners(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class java.net.PlainServerSocketImpl { void <init>(); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class android.view.KeyEvent { long getDownTime(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class android.view.ViewTreeObserver { void dispatchOnComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo); }
-keepclassmembers class java.net.PlainServerSocketImpl { void create(boolean); }
-keepclassmembers class libcore.io.Posix { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.view.KeyEvent { long getEventTime(); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class libcore.io.Posix { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.view.KeyEvent { long getEventTimeNano(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void handleMessage(android.os.Message); }
-keepclassmembers class libcore.io.Posix { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry,java.util.jar.JarFile); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.jar.JarEntry); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.Posix { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(); }
-keepclassmembers class libcore.io.Posix { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class java.nio.FileChannelImpl { long position(); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.Posix { void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class android.app.LoadedApk { android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.view.View { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class libcore.io.Posix { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toMillis(long); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { void <init>(); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.view.View { android.content.res.ColorStateList getBackgroundTintList(); }
-keepclassmembers class android.view.View { void setBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.InputDevice { void <init>(int,int,int,java.lang.String,int,int,java.lang.String,boolean,int,int,android.view.KeyCharacterMap,boolean,boolean); }
-keepclassmembers class android.view.View { android.graphics.PorterDuff$Mode getBackgroundTintMode(); }
-keepclassmembers class android.view.KeyEvent { boolean isCanceled(); }
-keepclassmembers class java.nio.FileChannelImpl { int read(java.nio.ByteBuffer); }
-keepclassmembers class android.view.KeyEvent { boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { void resize(float,float); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.EnumSetSerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.opengl.EGL14 { android.opengl.EGLSurface _eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int); }
-keepclassmembers class android.opengl.EGL14 { android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int); }
-keepclassmembers class android.opengl.EGL14 { android.opengl.EGLSurface _eglCreateWindowSurfaceTexture(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.app.LoadedApk { android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void process(android.view.MotionEvent); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class libcore.io.Posix { void maybeUpdateBufferPosition(java.nio.ByteBuffer,int,int); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class java.nio.FileChannelImpl { java.nio.channels.FileChannel position(long); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void onTransitionStart(android.transition.Transition); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$1 { void <init>(int); }
-keepclassmembers class android.opengl.EGL14 { android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void onTransitionResume(android.transition.Transition); }
-keepclassmembers class android.opengl.EGL14 { android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int); }
-keepclassmembers class android.view.KeyEvent { java.lang.String toString(); }
-keepclassmembers class java.io.EmulatedFields$ObjectSlot { void <init>(); }
-keepclassmembers class java.io.EmulatedFields$ObjectSlot { java.io.ObjectStreamField getField(); }
-keepclassmembers class java.io.EmulatedFields$ObjectSlot { java.lang.Object getFieldValue(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void <clinit>(); }
-keepclassmembers class android.nfc.IAppCallback$Stub { void <init>(); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <init>(byte[]); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void update(android.view.MotionEvent,boolean); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { int joystickAxisValueToDirection(float); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <clinit>(); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class java.nio.FileChannelImpl { int readImpl(java.nio.ByteBuffer,long); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.database.BulkCursorDescriptor$1 { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void cancel(android.view.MotionEvent); }
-keepclassmembers class android.database.BulkCursorDescriptor$1 { android.database.BulkCursorDescriptor createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { void resetPaddingToInitialValues(); }
-keepclassmembers class android.opengl.EGL14 { void _nativeClassInit(); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticJoystickHandler { void access$900(android.view.ViewRootImpl$SyntheticJoystickHandler,android.view.MotionEvent); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class android.view.KeyEvent { java.lang.String actionToString(int); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void dispatchFinishTemporaryDetach(android.view.View); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.database.BulkCursorDescriptor$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.KeyEvent { java.lang.String keyCodeToString(int); }
-keepclassmembers class javax.crypto.KeyAgreement { void <init>(javax.crypto.KeyAgreementSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplLollipop { void <init>(); }
-keepclassmembers class javax.crypto.KeyAgreement { java.lang.String getAlgorithm(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplLollipop { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class javax.crypto.KeyAgreement { javax.crypto.KeyAgreement getInstance(java.lang.String); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewCompat { void dispatchStartTemporaryDetach(android.view.View); }
-keepclassmembers class com.android.okhttp.ConnectionPool$4 { void <clinit>(); }
-keepclassmembers class android.view.InputDevice { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class android.opengl.EGL14 { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class java.nio.FileChannelImpl { long size(); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getAlpha(android.view.View); }
-keepclassmembers class javax.crypto.KeyAgreement { javax.crypto.KeyAgreement getKeyAgreement(java.lang.String,java.security.Provider); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { boolean hasSingleElement(java.util.Collection); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getImportantForAccessibility(android.view.View); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(com.android.okhttp.Request); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class java.nio.FileChannelImpl { long transferFrom(java.nio.channels.ReadableByteChannel,long,long); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayerType(android.view.View); }
-keepclassmembers class javax.crypto.KeyAgreement { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { boolean isEmpty(java.util.Collection); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.view.View { boolean toGlobalMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getElevation(android.view.View); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.InputDevice { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { boolean toLocalMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.CollectionSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder url(java.net.URL); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredState(android.view.View); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class android.view.KeyEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumWidth(android.view.View); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class javax.crypto.KeyAgreement { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getOverScrollMode(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.view.ViewParent getParentForAccessibility(android.view.View); }
-keepclassmembers class android.app.LoadedApk { void <clinit>(); }
-keepclassmembers class android.view.View { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.view.KeyEvent { int access$076(android.view.KeyEvent,int); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.net.INetworkPolicyManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class javax.crypto.KeyAgreement { javax.crypto.KeyAgreementSpi getSpi(java.security.Key); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class java.nio.FileChannelImpl { int write(java.nio.ByteBuffer,long); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getTranslationY(android.view.View); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request build(); }
-keepclassmembers class javax.crypto.KeyAgreement { void init(java.security.Key); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.net.URL access$000(com.android.okhttp.Request$Builder); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.lang.String access$100(com.android.okhttp.Request$Builder); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Headers$Builder access$200(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Body access$300(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.view.InputDevice { void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.NullProvider { void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.Object); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.lang.Object access$400(com.android.okhttp.Request$Builder); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(com.android.okhttp.Request,com.android.okhttp.Request$1); }
-keepclassmembers class javax.crypto.KeyAgreement { java.security.Key doPhase(java.security.Key,boolean); }
-keepclassmembers class android.util.Log { int println(int,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.NullProvider { java.lang.Object nullValue(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class javax.crypto.KeyAgreement { byte[] generateSecret(); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class javax.crypto.KeyAgreement { void <clinit>(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isLaidOut(android.view.View); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class android.renderscript.Short3 { void <init>(); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class android.view.View { android.view.View findViewByAccessibilityIdTraversal(int); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(com.android.internal.util.Predicate); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder setUserAgent(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { boolean isPassword(java.lang.Object); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class java.text.DateFormatSymbols { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.app.ActivityThread$ProviderKey { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class android.app.ActivityThread$ProviderKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { void setId(int); }
-keepclassmembers class java.text.DateFormatSymbols { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class android.app.ActivityThread$ProviderKey { int hashCode(); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class java.nio.FileChannelImpl { int writeImpl(java.nio.ByteBuffer,long); }
-keepclassmembers class java.text.DateFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class java.nio.FileChannelImpl { void <clinit>(); }
-keepclassmembers class com.android.internal.os.LoggingPrintStream { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getTranslationX(android.view.View); }
-keepclassmembers class android.view.View { java.lang.Object getTag(); }
-keepclassmembers class javax.crypto.KeyAgreement { javax.crypto.KeyAgreementSpi getSpi(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.view.View { java.lang.Object getTag(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat); }
-keepclassmembers class android.view.View { android.view.View findViewByAccessibilityId(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setContentDescription(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setActivated(android.view.View,boolean); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class android.view.View { void setTagInternal(int,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { void setKeyedTag(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CollectionSerializer { com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.View { void setTag(java.lang.Object); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 add(android.renderscript.Short3,android.renderscript.Short3); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setItemCount(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.text.DateFormatSymbols { boolean timeZoneStringsEqual(java.text.DateFormatSymbols,java.text.DateFormatSymbols); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setPassword(java.lang.Object,boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Href { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat { int resolveSizeAndState(int,int,int); }
-keepclassmembers class java.util.TreeMap$2 { void <clinit>(); }
-keepclassmembers class java.text.DateFormatSymbols { java.text.DateFormatSymbols getInstance(java.util.Locale); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setScrollX(java.lang.Object,int); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 sub(android.renderscript.Short3,android.renderscript.Short3); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setScrollY(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setElevation(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String toString(); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setToIndex(java.lang.Object,int); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLabelFor(android.view.View,int); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 sub(android.renderscript.Short3,short); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class java.io.Console { java.io.Console getConsole(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { void dispatchAnimationsFinished(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.Console { java.io.Console makeConsole(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLayoutDirection(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { long getChangeDuration(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { long getAddDuration(); }
-keepclassmembers class java.io.Console { void <init>(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { long getRemoveDuration(); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 add(android.renderscript.Short3,short); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getAmPmStrings(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getEras(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { long getMoveDuration(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getMonths(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortMonths(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi24 { java.lang.String getCallingPackage(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer { org.w3c.dom.Document parse(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getWeekdays(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortWeekdays(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { void <init>(java.io.InputStream,long,java.util.jar.JarVerifier$VerifierEntry); }
-keepclassmembers class java.io.Console { java.lang.Object access$000(); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { void <clinit>(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] getZoneStrings(); }
-keepclassmembers class java.io.Console { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { void <init>(); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void <init>(); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getEnd(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void <init>(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setAbsolute(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { long _timestamp(java.util.Date); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setDirection(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] clone2dStringArray(java.lang.String[][]); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 div(android.renderscript.Short3,android.renderscript.Short3); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int available(); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { long skip(long); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setAlpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompatIcs { void setFromIndex(java.lang.Object,int); }
-keepclassmembers class java.text.DateFormatSymbols { int hashCode(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void fireOnStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationY(android.view.View,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void fireOnStop(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setRelative(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { void <init>(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.renderscript.Short3 { android.renderscript.Short3 div(android.renderscript.Short3,short); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl { void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl { void <init>(); }
-keepclassmembers class java.util.TreeMap$Relation { java.util.TreeMap$Relation[] values(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void incSize(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { boolean isSpecialKey(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl { com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl { com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void resetAllListeners(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void stopNestedScroll(android.view.View); }
-keepclassmembers class java.util.TreeMap$Relation { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$Relation { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class java.nio.channels.ServerSocketChannel { java.nio.channels.ServerSocketChannel open(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void resetListenersExceptResetResistant(); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void addListener(ch.qos.logback.classic.spi.LoggerContextListener); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void updateLoggerContextVO(); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void addTurboFilter(ch.qos.logback.classic.turbo.TurboFilter); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class dalvik.system.profiler.HprofData$1 { void <clinit>(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateSerializer { long _timestamp(java.lang.Object); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator { int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void fireOnLevelChange(ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { java.lang.String toString(); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void fireOnReset(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationX(android.view.View,float); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { ch.qos.logback.classic.Logger getLogger(java.lang.Class); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <clinit>(); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { java.lang.Object getKey(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String getTimeZoneDisplayName(java.util.TimeZone,boolean,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { int getInputType(); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { java.lang.Object getValue(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCachedBitmap(android.graphics.Rect); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { ch.qos.logback.classic.Logger getLogger(java.lang.String); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class java.nio.channels.ServerSocketChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void resetStatusListeners(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createCachedBitmapIfNeeded(android.graphics.Rect); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.View { void startAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.view.View { void onAnimationStart(); }
-keepclassmembers class android.view.View { void onAnimationEnd(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { org.slf4j.Logger getLogger(java.lang.String); }
-keepclassmembers class android.view.View { boolean gatherTransparentRegion(android.graphics.Region); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class com.android.internal.app.AlertController$6 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { void unregisterClient(android.media.IMediaRouterClient); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(); }
-keepclassmembers class android.support.v4.app.ListFragment$1 { void <init>(android.support.v4.app.ListFragment); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int,int); }
-keepclassmembers class android.view.View { int getMinimumWidth(); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { android.media.MediaRouterClientState getState(android.media.IMediaRouterClient); }
-keepclassmembers class ch.qos.logback.core.pattern.Converter { ch.qos.logback.core.pattern.Converter getNext(); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { int hashCode(); }
-keepclassmembers class android.view.View { void setSystemUiVisibility(int); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class ch.qos.logback.core.pattern.Converter { void setNext(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.View { void dispatchWindowSystemUiVisiblityChanged(int); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager); }
-keepclassmembers class android.database.DatabaseUtils { void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { void dispatchSystemUiVisibilityChanged(int); }
-keepclassmembers class android.view.View { int getWindowSystemUiVisibility(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.View { boolean updateLocalSystemUiVisibility(int,int); }
-keepclassmembers class android.transition.TransitionUtils { android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator); }
-keepclassmembers class android.database.DatabaseUtils { void readExceptionFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.DatabaseUtils { void readExceptionFromParcel(android.os.Parcel,java.lang.String,int); }
-keepclassmembers class android.view.View { boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int); }
-keepclassmembers class android.support.v4.app.ListFragment$1 { void run(); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { boolean checkFileAttributeSanity(org.xml.sax.Attributes); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void initEvaluatorMap(); }
-keepclassmembers class android.database.DatabaseUtils { int getTypeOfObject(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { boolean isPackagingDataEnabled(); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { boolean checkResourceAttributeSanity(org.xml.sax.Attributes); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void noAppenderDefinedWarning(ch.qos.logback.classic.Logger); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { boolean checkValueNameAttributesSanity(org.xml.sax.Attributes); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$9 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandPubKeyInput); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.media.IMediaRouterService$Stub$Proxy { void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void putProperty(java.lang.String,java.lang.String); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$9 { void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.Converter { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers { com.fasterxml.jackson.databind.JsonDeserializer forType(java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void resetTurboFilterList(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void setName(java.lang.String); }
-keepclassmembers class android.transition.TransitionUtils { android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF); }
-keepclassmembers class ch.qos.logback.core.joran.action.PropertyAction { void loadAndSetProperties(ch.qos.logback.core.joran.spi.InterpretationContext,java.io.InputStream,ch.qos.logback.core.joran.action.ActionUtil$Scope); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase { void <init>(java.lang.Class,java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { java.lang.String toString(); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class android.view.View { void checkForLongClick(int); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void stop(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,java.lang.reflect.Type,com.fasterxml.jackson.databind.introspect.AnnotationMap,int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.view.View { android.view.View inflate(android.content.Context,int,android.view.ViewGroup); }
-keepclassmembers class android.transition.TransitionUtils { android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase { boolean _asTimestamp(com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object call(); }
-keepclassmembers class android.transition.TransitionUtils { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object call(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleSerializers { void <init>(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.reflect.Type getGenericType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object call1(java.lang.Object); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { int getIndex(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.reflect.Member getMember(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.AnnotatedElement getAnnotated(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.android.org.bouncycastle.util.Strings { java.lang.String[] split(java.lang.String,char); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleSerializers { void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.Method getAnnotated(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getImportantForAccessibility(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.reflect.Type getParameterType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner(); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.Class getRawType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.String getFullName(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.Reader); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { android.view.ViewParent getParentForAccessibility(android.view.View); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void setBaseAttributes(android.content.res.TypedArray,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.Object getValue(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean hasTransientState(android.view.View); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getPublicId(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.Type getGenericParameterType(int); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers { void <init>(java.lang.Class); }
-keepclassmembers class ch.qos.logback.classic.LoggerContext { void reset(); }
-keepclassmembers class android.view.View { void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable,android.graphics.Region); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getSystemId(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { void setValue(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.xml.sax.InputSource { java.io.InputStream getByteStream(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class org.xml.sax.InputSource { void setByteStream(java.io.InputStream); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getEncoding(); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class org.xml.sax.InputSource { void setCharacterStream(java.io.Reader); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[]); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.String toString(); }
-keepclassmembers class org.xml.sax.InputSource { java.io.Reader getCharacterStream(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.Type getGenericType(); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.app.ContextImpl$56 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.Member getMember(); }
-keepclassmembers class android.app.ContextImpl$56 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleSerializers { void addSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.reflect.Method getMember(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.String getName(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { int getParameterCount(); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class android.database.AbstractCursor$SelfContentObserver { void <init>(android.database.AbstractCursor); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedParameter { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Class getRawParameterType(int); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void markAsReplaced(android.text.Spannable,int,int,java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.content.Intent); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Class[] getRawParameterTypes(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class com.fasterxml.jackson.databind.module.SimpleSerializers { void addSerializers(java.util.List); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Class getRawReturnType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Class getRawType(); }
-keepclassmembers class javax.xml.datatype.DatatypeFactory { javax.xml.datatype.DatatypeFactory newInstance(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$2 { void <init>(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$2 { void run(); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getContentChangeTypes(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class android.widget.SuggestionsAdapter { void <init>(android.content.Context,android.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap); }
-keepclassmembers class android.content.ClipData$Item { java.lang.CharSequence getText(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String getHtmlText(); }
-keepclassmembers class android.nfc.NfcActivityManager { void <init>(android.nfc.NfcAdapter); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventTime(long); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.widget.SuggestionsAdapter { void setQueryRefinement(int); }
-keepclassmembers class android.view.View { float getVerticalScrollFactor(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { void <init>(java.lang.String,int,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class com.android.okhttp.HttpHandler { void <init>(); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class com.android.okhttp.HttpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.view.View { void setTextDirection(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { void setValue(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void clear(); }
-keepclassmembers class com.android.okhttp.HttpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.content.ClipData$Item { java.lang.CharSequence coerceToStyledText(android.content.Context); }
-keepclassmembers class android.widget.SuggestionsAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class android.widget.SuggestionsAdapter { void notifyDataSetInvalidated(); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object getValue(java.lang.Object); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.HttpHandler { com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy); }
-keepclassmembers class android.widget.SuggestionsAdapter { void changeCursor(android.database.Cursor); }
-keepclassmembers class com.android.okhttp.HttpHandler { com.android.okhttp.OkHttpClient createHttpOkHttpClient(java.net.Proxy); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.String toString(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void <clinit>(); }
-keepclassmembers class android.content.ClipData$Item { java.lang.CharSequence coerceToHtmlOrStyledText(android.content.Context,boolean); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object readResolve(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { java.lang.String asString(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { com.fasterxml.jackson.core.JsonToken[] values(); }
-keepclassmembers class java.text.MessageFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.widget.SuggestionsAdapter { void updateSpinnerState(android.database.Cursor); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { java.lang.Object writeReplace(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { boolean isNumeric(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { int id(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { boolean isScalarValue(); }
-keepclassmembers class java.text.MessageFormat { void <init>(java.lang.String); }
-keepclassmembers class android.transition.Slide$5 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { com.fasterxml.jackson.databind.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { char[] asCharArray(); }
-keepclassmembers class android.transition.Slide$5 { float getGoneX(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.text.MessageFormat { void applyPattern(java.lang.String); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { boolean isStructEnd(); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.AnnotatedMethod { boolean hasReturnType(); }
-keepclassmembers class android.content.ContentProvider { void <init>(); }
-keepclassmembers class android.view.View { void setTextAlignment(int); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { boolean getAlwaysAsId(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { java.lang.Class getGeneratorType(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { com.fasterxml.jackson.databind.PropertyName getPropertyName(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { java.lang.Class getResolverType(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { java.lang.Class getScope(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void recycle(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SerializableSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class javax.xml.datatype.DatatypeFactory { void <clinit>(); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { void <init>(java.lang.Boolean); }
-keepclassmembers class android.transition.ChangeBounds$5 { void set(android.view.View,android.graphics.PointF); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { long _timestamp(java.lang.Object); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonToken { boolean isStructStart(); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.ObjectIdInfo { void <init>(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class); }
-keepclassmembers class android.transition.ChangeBounds$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.content.ClipData$Item { java.lang.CharSequence uriToStyledText(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$5 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level parse(java.lang.String); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class android.widget.ArrayAdapter { void init(android.content.Context,int,int,java.util.List); }
-keepclassmembers class android.view.View { android.view.ViewPropertyAnimator animate(); }
-keepclassmembers class android.content.ContentProvider { void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[]); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.ArrayAdapter { android.content.Context getContext(); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.nfc.NfcActivityManager { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { com.fasterxml.jackson.databind.ser.std.SqlDateSerializer withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.app.ContextImpl$37 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$37 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class java.text.MessageFormat { java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.MessageFormat { java.lang.StringBuffer formatImpl(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { boolean canOmitFields(); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers { void <clinit>(); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers { com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class android.database.DatabaseUtils { int findRowIdColumnIndex(java.lang.String[]); }
-keepclassmembers class android.database.DatabaseUtils { void <clinit>(); }
-keepclassmembers class android.renderscript.Double2 { void <init>(); }
-keepclassmembers class android.widget.ArrayAdapter { void setDropDownViewResource(int); }
-keepclassmembers class android.view.View { boolean access$2000(); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String uriToHtml(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { long _timestamp(java.sql.Date); }
-keepclassmembers class android.view.View { void access$2200(android.view.View,boolean,float,float); }
-keepclassmembers class android.transition.ChangeBounds$5 { android.graphics.PointF get(android.view.View); }
-keepclassmembers class android.widget.ArrayAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 add(android.renderscript.Double2,android.renderscript.Double2); }
-keepclassmembers class android.view.View { void access$2300(android.view.View,int); }
-keepclassmembers class android.view.View { int access$2400(android.view.View); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlDateSerializer { void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class android.database.DatabaseUtils { int getSqlStatementType(java.lang.String); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$100(android.widget.ArrayAdapter); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$102(android.widget.ArrayAdapter,java.util.ArrayList); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object access$200(android.widget.ArrayAdapter); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$300(android.widget.ArrayAdapter); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 add(android.renderscript.Double2,double); }
-keepclassmembers class java.util.logging.Level { java.lang.Object readResolve(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void expand(int); }
-keepclassmembers class java.util.logging.Level { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class java.io.EmulatedFields { void <init>(java.io.ObjectStreamField[],java.io.ObjectStreamField[]); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$302(android.widget.ArrayAdapter,java.util.List); }
-keepclassmembers class java.io.EmulatedFields { void buildSlots(java.io.ObjectStreamField[]); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] copyOfRange(float[],int,int); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int adjustAlpha(int,float); }
-keepclassmembers class android.content.ContentProvider { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.content.ContentProvider { void onLowMemory(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { void onTrimMemory(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 sub(android.renderscript.Double2,android.renderscript.Double2); }
-keepclassmembers class java.util.logging.Level { int hashCode(); }
-keepclassmembers class java.util.logging.Level { java.lang.String toString(); }
-keepclassmembers class java.util.logging.Level { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.MessageFormat { void handleArgumentField(int,int,int,java.text.FieldPosition,java.util.List); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { android.content.res.ColorStateList getActionTextStateList(android.content.Context,int); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class android.widget.Editor$Blink { void run(); }
-keepclassmembers class java.text.MessageFormat { void handleFormat(java.text.Format,java.lang.Object,int,java.util.List); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 sub(android.renderscript.Double2,double); }
-keepclassmembers class java.io.EmulatedFields { java.io.EmulatedFields$ObjectSlot findSlot(java.lang.String,java.lang.Class); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] deepCopyNodes(android.support.graphics.drawable.PathParser$PathDataNode[]); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int getColor(android.content.Context,int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void <clinit>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void <init>(android.content.Context); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void extract(java.lang.String,int,android.support.graphics.drawable.PathParser$ExtractFloatResult); }
-keepclassmembers class java.text.MessageFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { void <init>(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.beans.PropertyChangeEvent); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void run(); }
-keepclassmembers class java.security.SecureRandomSpi { void <init>(); }
-keepclassmembers class java.text.MessageFormat { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void drawProgressRect(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { com.android.internal.os.IResultReceiver asInterface(android.os.IBinder); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void drawTrackRect(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 div(android.renderscript.Double2,android.renderscript.Double2); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <clinit>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { void hideKeyboard(android.content.DialogInterface,com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.app.admin.IDevicePolicyManager$Stub { android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int gravityEnumToAttrInt(com.afollestad.materialdialogs.GravityEnum); }
-keepclassmembers class android.renderscript.Double2 { android.renderscript.Double2 div(android.renderscript.Double2,double); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeArrayFieldStart(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class java.io.EmulatedFields { java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class); }
-keepclassmembers class java.io.EmulatedFields { byte get(java.lang.String,byte); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeBinary(byte[]); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeBinary(byte[],int,int); }
-keepclassmembers class android.database.ContentObservable { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { int writeBinary(java.io.InputStream,int); }
-keepclassmembers class android.support.v4.util.LruCache { void <init>(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { boolean isColorDark(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.view.View { void setPointerIcon(android.view.PointerIcon); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class android.support.v4.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.EmulatedFields { char get(java.lang.String,char); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.view.View { boolean access$2102(android.view.View,boolean); }
-keepclassmembers class java.io.EmulatedFields { int get(java.lang.String,int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void onPreparePaint(android.graphics.Paint); }
-keepclassmembers class android.system.StructLinger { void <init>(int,int); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { android.content.res.ColorStateList resolveActionTextColorStateList(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable { void setShowTrack(boolean); }
-keepclassmembers class ch.qos.logback.classic.joran.action.FindIncludeAction { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$Api24ViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$Api24ViewCompatImpl { void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat); }
-keepclassmembers class java.io.EmulatedFields { long get(java.lang.String,long); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { boolean isInMemoryDb(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.FindIncludeAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.classic.joran.action.FindIncludeAction { ch.qos.logback.core.joran.event.SaxEventRecorder createRecorder(java.io.InputStream,java.net.URL); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <clinit>(); }
-keepclassmembers class java.io.EmulatedFields { java.lang.Object get(java.lang.String,java.lang.Object); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.FindIncludeAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { boolean resolveBoolean(android.content.Context,int); }
-keepclassmembers class java.io.EmulatedFields { boolean get(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeObjectField(java.lang.String,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeObjectFieldStart(java.lang.String); }
-keepclassmembers class java.text.MessageFormat { int match(java.lang.String,java.text.ParsePosition,boolean,java.lang.String[]); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { boolean resolveBoolean(android.content.Context,int,boolean); }
-keepclassmembers class android.support.v4.app.ActivityCompat21$SharedElementCallback21 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeObjectId(java.lang.Object); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,byte); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeOmittedField(java.lang.String); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet6Address,short); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int resolveColor(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeObjectRef(java.lang.Object); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,char); }
-keepclassmembers class java.util.logging.Level { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer { void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int resolveColor(android.content.Context,int,int); }
-keepclassmembers class java.text.MessageFormat { java.text.Format parseVariable(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser { boolean[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.net.InterfaceAddress { short countPrefixLength(java.net.Inet4Address); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser { void <init>(); }
-keepclassmembers class android.app.LoaderManagerImpl { void <init>(java.lang.String,android.app.Activity,boolean); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,float); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.InterfaceAddress { boolean equals(java.lang.Object); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int resolveDimension(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonGenerator { void writeStringField(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { android.graphics.drawable.Drawable resolveDrawable(android.content.Context,int); }
-keepclassmembers class android.net.Uri$Part { java.lang.String getEncoded(); }
-keepclassmembers class android.net.Uri$Part { boolean isEmpty(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { int resolveDimension(android.content.Context,int,int); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,int); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,long); }
-keepclassmembers class java.net.InterfaceAddress { int hashCode(); }
-keepclassmembers class android.app.LoaderManagerImpl { void updateActivity(android.app.Activity); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser { boolean[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { android.graphics.drawable.Drawable resolveDrawable(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part readFrom(android.os.Parcel); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class java.net.InterfaceAddress { java.lang.String toString(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <init>(int,java.lang.String,java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { com.afollestad.materialdialogs.GravityEnum resolveGravityEnum(android.content.Context,int,com.afollestad.materialdialogs.GravityEnum); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <init>(android.os.Parcel); }
-keepclassmembers class java.io.EmulatedFields { void put(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.util.LruCache { void trimToSize(int); }
-keepclassmembers class java.io.EmulatedFields { java.io.EmulatedFields$ObjectSlot[] slots(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromUri(android.net.Uri,int); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromAuthority(java.lang.String,int); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <init>(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { int getNameResId(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void register(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.lang.String getLocale(); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getAuthorityWithoutUserId(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri getUriWithoutUserId(android.net.Uri); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <clinit>(); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { void showKeyboard(android.content.DialogInterface,com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class ch.qos.logback.core.pattern.ConverterUtil { ch.qos.logback.core.pattern.Converter findTail(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class java.text.MessageFormat { void setLocale(java.util.Locale); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.lang.String getExtraValue(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { void <clinit>(); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { java.lang.String resolveString(android.content.Context,int); }
-keepclassmembers class android.app.ContextImpl$45 { void <init>(); }
-keepclassmembers class android.app.ContextImpl$45 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.MapperFeature { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.pattern.ConverterUtil { void setContextForConverters(ch.qos.logback.core.Context,ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils { void setBackgroundCompat(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.pattern.ConverterUtil { void startConverters(ch.qos.logback.core.pattern.Converter); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { int hashCode(); }
-keepclassmembers class android.view.View { boolean access$2500(android.view.View); }
-keepclassmembers class com.android.internal.logging.AndroidHandler { void close(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { void configureApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { void <init>(); }
-keepclassmembers class com.android.internal.logging.AndroidHandler { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class com.android.internal.logging.AndroidHandler { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.util.Locale constructLocaleFromString(java.lang.String); }
-keepclassmembers class com.android.internal.logging.AndroidHandler { int getAndroidLevel(java.util.logging.Level); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { void dispatchChildInsets(android.view.View,java.lang.Object,int); }
-keepclassmembers class android.view.ViewRootImpl$1 { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.ViewRootImpl$1 { void onDisplayChanged(int); }
-keepclassmembers class com.fasterxml.jackson.databind.MapperFeature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.MapperFeature { com.fasterxml.jackson.databind.MapperFeature[] values(); }
-keepclassmembers class com.android.internal.logging.AndroidHandler { void <clinit>(); }
-keepclassmembers class android.view.ViewRootImpl$1 { void onDisplayRemoved(int); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase { int getTopInset(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$1 { int toViewScreenState(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class); }
-keepclassmembers class android.view.ViewRootImpl$1 { void onDisplayAdded(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType narrowKey(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.MapperFeature { boolean enabledByDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.MapperFeature { int getMask(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class android.system.Os { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void createPopupWindow(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void initContentView(); }
-keepclassmembers class java.security.spec.DSAPublicKeySpec { void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType widenKey(java.lang.Class); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class android.system.Os { void chmod(java.lang.String,int); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class android.system.Os { void chown(java.lang.String,int,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean isShowingUp(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { android.text.style.SuggestionSpan[] getSuggestionSpans(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type { void <clinit>(); }
-keepclassmembers class android.system.Os { void close(java.io.FileDescriptor); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void onParentLostFocus(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable[] getChildren(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void show(); }
-keepclassmembers class android.os.IMessenger$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void measureContent(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setLayoutDirection(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { int hashCodeInternal(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class android.os.IMessenger$Stub$Proxy { void send(android.os.Message); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.os.IMessenger$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class java.io.DataInputStream { int read(byte[],int,int); }
-keepclassmembers class java.io.DataInputStream { byte readByte(); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int clipVertically(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int getTextOffset(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void hide(); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean updateSuggestions(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int getVerticalLocalPosition(int); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[]); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.MapType { com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class android.system.Os { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class android.text.MeasuredText { void setPos(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class android.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { android.widget.ProgressBar$RefreshData obtain(int,int,boolean); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { void <init>(java.lang.Class); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void recycle(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <clinit>(); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class android.system.Os { int getppid(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class android.os.AsyncTask$4 { void <clinit>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean get(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int,java.io.DataInput); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int); }
-keepclassmembers class android.transition.TransitionSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean compareAndSet(boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { com.fasterxml.jackson.databind.JsonSerializer findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.text.MessageFormat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class java.io.DataInputStream { int skipBytes(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void set(boolean); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void highlightTextDifferences(android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void <init>(android.widget.CompoundButton); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { java.lang.String toString(); }
-keepclassmembers class java.util.logging.ErrorManager { void <init>(); }
-keepclassmembers class android.system.Os { int gettid(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void applyButtonTint(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { void <init>(java.lang.Class,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class android.transition.TransitionSet { int getTransitionCount(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition getTransitionAt(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$000(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.logging.ErrorManager { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setStartDelay(long); }
-keepclassmembers class android.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { int getCompoundPaddingLeft(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(int); }
-keepclassmembers class android.app.SharedPreferencesImpl { void <init>(java.io.File,int); }
-keepclassmembers class android.system.Os { void link(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.app.SharedPreferencesImpl { void startLoadFromDisk(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { java.lang.Class handledType(); }
-keepclassmembers class android.widget.AbsListView$SavedState { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet removeTarget(android.view.View); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void onSetButtonDrawable(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setFromIndex(java.lang.Object,int); }
-keepclassmembers class android.system.Os { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcel,android.widget.AbsListView$1); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setItemCount(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class android.app.SharedPreferencesImpl { java.io.File makeBackupFile(java.io.File); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setMaxScrollX(java.lang.Object,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean access$1600(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int access$2000(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class android.app.SharedPreferencesImpl { void startReloadIfChangedUnexpectedly(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setMaxScrollY(java.lang.Object,int); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo[] access$2100(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { java.util.HashMap access$2200(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class android.app.SharedPreferencesImpl { boolean hasFileChangedUnexpectedly(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <init>(); }
-keepclassmembers class android.app.usage.IUsageStatsManager$Stub { android.app.usage.IUsageStatsManager asInterface(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkNanos(java.lang.Object,long); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setScrollX(java.lang.Object,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setScrollY(java.lang.Object,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setScrollable(java.lang.Object,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet removeListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class android.system.Os { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.system.Os { int read(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class android.transition.TransitionSet { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl { void setToIndex(java.lang.Object,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.transition.TransitionSet { void setupStartEndListeners(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { void <init>(); }
-keepclassmembers class android.database.AbstractCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isRegistered(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.util.Map getRegistry(); }
-keepclassmembers class android.transition.TransitionSet { void forceVisibility(int,boolean); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { void init(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { void setPrvKey(byte[],byte[],byte[],byte[]); }
-keepclassmembers class android.transition.TransitionSet { void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void unregister(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void register(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.transition.TransitionSet { void runAnimators(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StringDeserializer { java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { byte[] sign(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.database.AbstractCursor { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToPosition(int); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { boolean verify(byte[]); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.database.AbstractCursor { void close(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { void setPubKey(byte[],byte[],byte[],byte[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.SignatureDSA { void update(byte[]); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToNext(); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class android.transition.TransitionSet { void resume(android.view.View); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdSerializer { boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class java.util.ServiceLoader { void internalLoad(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(android.content.res.Resources); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class android.transition.TransitionSet { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void put(long,android.content.res.Resources$Theme,android.content.res.ConstantState); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.system.Os { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.system.Os { void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class android.system.Os { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer { void <init>(); }
-keepclassmembers class android.system.Os { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer { java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Object loadFromSystemProperty(java.lang.Class); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class android.system.Os { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition removeListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class java.util.ServiceLoader { java.util.Set access$200(java.util.ServiceLoader); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class java.util.ServiceLoader { java.lang.ClassLoader access$000(java.util.ServiceLoader); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Class access$100(java.util.ServiceLoader); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendClassName(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbTextViewCompatImpl { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 { void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.view.Window$Callback); }
-keepclassmembers class android.system.Os { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { void <clinit>(); }
-keepclassmembers class android.app.SharedPreferencesImpl { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setStartDelay(long); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 { void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendContentStart(java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendContentEnd(java.lang.StringBuffer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal); }
-keepclassmembers class android.widget.Filter$FilterResults { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { java.lang.String asText(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,byte); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,char); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChangeInt(android.util.LongSparseArray,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,double); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { void <init>(java.math.BigDecimal); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments$Honeycomb { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { double doubleValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { boolean isEmpty(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,long); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogFragments$Honeycomb { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.io.filefilter.FalseFileFilter { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { boolean hasSingleElement(java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map); }
-keepclassmembers class org.apache.commons.io.filefilter.FalseFileFilter { boolean accept(java.io.File); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,boolean); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentState { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.database.AbstractCursor { void checkPosition(); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,char[]); }
-keepclassmembers class android.support.v4.app.FragmentState { android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class org.apache.commons.io.filefilter.FalseFileFilter { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.DecimalNode { int hashCode(); }
-keepclassmembers class android.nfc.NfcAdapter { android.nfc.INfcAdapter getServiceInterface(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,double[]); }
-keepclassmembers class android.net.IEthernetManager$Stub { android.net.IEthernetManager asInterface(android.os.IBinder); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,float[]); }
-keepclassmembers class android.nfc.NfcAdapter { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.android.okhttp.Connection { void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Route); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder$1 { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap$3 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,short); }
-keepclassmembers class android.nfc.NfcAdapter { android.nfc.NfcAdapter getNfcAdapter(android.content.Context); }
-keepclassmembers class com.android.okhttp.Connection { java.lang.Object getOwner(); }
-keepclassmembers class android.support.v4.app.FragmentState { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <init>(long,int,java.lang.CharSequence); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,int[]); }
-keepclassmembers class com.android.okhttp.Connection { void setOwner(java.lang.Object); }
-keepclassmembers class android.media.MediaRouter$VolumeChangeReceiver { void <init>(); }
-keepclassmembers class java.util.WeakHashMap$3 { java.util.Iterator iterator(); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$MoveInfo { void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void killMode(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$MoveInfo { void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int,android.support.v7.widget.DefaultItemAnimator$1); }
-keepclassmembers class com.android.okhttp.Connection { void connect(int,int,com.android.okhttp.TunnelRequest); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void initForMode(android.support.v7.view.ActionMode); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,long[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.nfc.NfcAdapter { boolean hasNfcFeature(); }
-keepclassmembers class it.skarafaz.mercury.adapter.LogListAdapter { void <init>(android.content.Context,java.util.List); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.jcraft.jsch.CipherNone { void <init>(); }
-keepclassmembers class java.nio.LongBuffer { java.nio.LongBuffer wrap(long[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.CipherNone { int getBlockSize(); }
-keepclassmembers class com.jcraft.jsch.CipherNone { boolean isCBC(); }
-keepclassmembers class com.jcraft.jsch.CipherNone { int getIVSize(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.jcraft.jsch.CipherNone { void init(int,byte[],byte[]); }
-keepclassmembers class com.android.okhttp.Connection { void upgradeToTls(com.android.okhttp.TunnelRequest); }
-keepclassmembers class com.jcraft.jsch.CipherNone { void update(byte[],int,int,byte[],int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,short[]); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class java.nio.LongBuffer { void <init>(int,long); }
-keepclassmembers class com.android.internal.app.AlertController$4 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class java.nio.LongBuffer { java.nio.LongBuffer wrap(long[],int,int); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl { void <init>(); }
-keepclassmembers class com.android.okhttp.Connection { boolean clearOwner(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { int getWindowLayoutType(android.widget.PopupWindow); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void run(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.SearchView$2 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendEnd(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class android.support.v7.widget.SearchView$2 { void run(); }
-keepclassmembers class com.android.okhttp.Connection { com.android.okhttp.Route getRoute(); }
-keepclassmembers class com.android.okhttp.Connection { void close(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldEnd(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { java.net.Socket getSocket(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Connection { boolean isAlive(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldSeparator(java.lang.StringBuffer); }
-keepclassmembers class it.skarafaz.mercury.adapter.LogListAdapter { boolean isEnabled(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer { com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.android.okhttp.Connection { void resetIdleStartTime(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream); }
-keepclassmembers class com.android.okhttp.Connection { boolean isReadable(); }
-keepclassmembers class com.android.okhttp.Connection { boolean isIdle(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.android.okhttp.Connection { boolean isExpired(long); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void <init>(); }
-keepclassmembers class com.android.okhttp.Connection { java.lang.Object newTransport(com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class com.android.okhttp.Connection { boolean isConnected(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { boolean checkUTF16(int); }
-keepclassmembers class com.android.okhttp.Connection { boolean isSpdy(); }
-keepclassmembers class com.android.okhttp.Connection { long getIdleStartTimeNs(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers { com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { boolean checkUTF32(int); }
-keepclassmembers class com.android.okhttp.Connection { int getHttpMinorVersion(); }
-keepclassmembers class com.android.okhttp.Connection { void setHttpMinorVersion(int); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { boolean handleBOM(int); }
-keepclassmembers class com.android.okhttp.Connection { boolean requiresTunnel(); }
-keepclassmembers class com.android.okhttp.Connection { void incrementRecycleCount(); }
-keepclassmembers class com.android.okhttp.Connection { void updateReadTimeout(int); }
-keepclassmembers class com.android.okhttp.Connection { int recycleCount(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _handleOddName2(int,int,int[]); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setContentHeight(int); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldStart(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { com.android.okhttp.Handshake getHandshake(); }
-keepclassmembers class com.android.okhttp.Connection { void makeTunnel(com.android.okhttp.TunnelRequest); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar$1 { void <init>(android.support.v7.widget.Toolbar); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _matchFalse(); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean showOverflowMenu(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class libcore.reflect.AnnotationMember { libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class libcore.reflect.AnnotationMember { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setVisibility(int); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class java.lang.ThreadLocal { void remove(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _matchNull(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ref.Reference access$300(java.lang.ThreadLocal); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class java.util.AbstractSequentialList { void add(int,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.util.IncompatibleClassException { void <init>(java.lang.Class,java.lang.Class); }
-keepclassmembers class libcore.reflect.AnnotationMember { boolean equalArrayValue(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _nextAfterName(); }
-keepclassmembers class java.util.AbstractSequentialList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { void reportWeirdUCS4(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class android.location.GpsNavigationMessageListenerTransport$ListenerTransport { void <init>(android.location.GpsNavigationMessageListenerTransport); }
-keepclassmembers class java.util.AbstractSequentialList { java.util.Iterator iterator(); }
-keepclassmembers class java.util.AbstractSequentialList { java.lang.Object get(int); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class it.skarafaz.mercury.adapter.CommandListAdapter$ViewHolder { void <init>(android.view.View); }
-keepclassmembers class android.location.GpsNavigationMessageListenerTransport$ListenerTransport { void <init>(android.location.GpsNavigationMessageListenerTransport,android.location.GpsNavigationMessageListenerTransport$1); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _parseFloat(int,int,int,boolean,int); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class java.util.AbstractSequentialList { java.lang.Object remove(int); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class java.util.AbstractSequentialList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.util.Timer { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.net.http.ErrorStrings { int getResource(int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class libcore.reflect.AnnotationMember { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLNestedComponentRegistryRules { void addDefaultNestedComponentRegistryRules(ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry); }
-keepclassmembers class android.animation.ValueAnimator { void updateScaledDuration(); }
-keepclassmembers class android.support.v4.view.KeyEventCompatHoneycomb { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class android.support.v4.view.KeyEventCompatHoneycomb { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class android.support.v4.view.KeyEventCompatHoneycomb { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long); }
-keepclassmembers class android.app.ContextImpl$47 { void <init>(); }
-keepclassmembers class android.nfc.NfcAdapter { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { java.io.Reader constructReader(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _parseName2(int,int,int); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle); }
-keepclassmembers class libcore.reflect.AnnotationMember { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Timer { void scheduleAtFixedRate(java.util.TimerTask,long,long); }
-keepclassmembers class android.app.ContextImpl$47 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class java.lang.ThreadLocal { int access$200(java.lang.ThreadLocal); }
-keepclassmembers class android.view.Display { int getDisplayId(); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class android.view.Display { boolean isValid(); }
-keepclassmembers class android.animation.ValueAnimator { long getFrameDelay(); }
-keepclassmembers class android.view.Display { android.view.DisplayAdjustments getDisplayAdjustments(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { android.os.ParcelFileDescriptor getParcelFileDescriptor(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class android.content.res.AssetFileDescriptor { long getStartOffset(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { long getLength(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class java.util.Timer { void scheduleImpl(java.util.TimerTask,long,long,boolean); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class android.content.res.AssetFileDescriptor { java.io.FileInputStream createInputStream(); }
-keepclassmembers class android.animation.ValueAnimator { void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener); }
-keepclassmembers class android.view.Display { void getSize(android.graphics.Point); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.content.res.AssetFileDescriptor { long getDeclaredLength(); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _parseNumber2(boolean,int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { com.fasterxml.jackson.core.JsonEncoding detectEncoding(); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer { void <init>(com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _matchTrue(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer { void <init>(java.lang.Class); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class com.jcraft.jsch.jce.PBKDF { void <init>(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.Parcel); }
-keepclassmembers class com.jcraft.jsch.jce.PBKDF { byte[] getKey(byte[],byte[],int,int); }
-keepclassmembers class android.media.AudioManager$1 { void <init>(android.media.AudioManager); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.view.Display { int getWidth(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.view.InputQueue$ActiveInputEvent { void <init>(android.view.InputQueue,android.view.InputQueue$1); }
-keepclassmembers class android.view.InputQueue$ActiveInputEvent { void <init>(android.view.InputQueue); }
-keepclassmembers class android.media.CamcorderProfile { android.media.CamcorderProfile get(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendStart(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendNullText(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.view.Display { int getHeight(); }
-keepclassmembers class android.view.Display { void getMetrics(android.util.DisplayMetrics); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { java.util.Map _createObjectIdMap(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { void resume(); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.InputStream,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,byte[],int,int,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int fieldId(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int start(); }
-keepclassmembers class android.view.Display { int getState(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,char[]); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class android.view.Display { void getRealSize(android.graphics.Point); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(); }
-keepclassmembers class android.media.CamcorderProfile { android.media.CamcorderProfile get(int,int); }
-keepclassmembers class android.media.CamcorderProfile { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(libcore.icu.NativeDecimalFormat$1); }
-keepclassmembers class android.media.CamcorderProfile { android.media.CamcorderProfile native_get_camcorder_profile(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { void _serializeNull(com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,double[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { java.text.Format$Field field(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,float[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _checkMatchEnd(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { boolean canTargetScrollHorizontally(int); }
-keepclassmembers class libcore.util.CollectionUtils { void removeDuplicates(java.util.List,java.util.Comparator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { boolean next(); }
-keepclassmembers class android.view.Display { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { void <init>(android.widget.ListView); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper { boolean ensureLoaded(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,int[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,long[]); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int limit(); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { boolean canTargetScrollVertically(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void <init>(com.fasterxml.jackson.core.util.BufferRecycler); }
-keepclassmembers class android.media.CamcorderProfile { void native_init(); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void doFrame(long); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { void scrollTargetBy(int,int); }
-keepclassmembers class android.view.Display { java.lang.String stateToString(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void expand(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] carr(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,short[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _decodeUtf8_3(int); }
-keepclassmembers class libcore.util.CollectionUtils { java.lang.Iterable dereferenceIterable(java.lang.Iterable,boolean); }
-keepclassmembers class android.app.ContextImpl$41 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.app.ContextImpl$41 { void <init>(); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.animation.ValueAnimator { boolean delayedAnimationFrame(long); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] resultArray(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer { void <init>(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.Display { void updateCachedAppSizeIfNeededLocked(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _decodeUtf8_3fast(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummarySize(java.lang.StringBuffer,java.lang.String,int); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] buf(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connect(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _decodeUtf8_2(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipAfterComma2(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void clearSegments(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.view.Display { java.lang.String typeToString(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.animation.ValueAnimator { boolean animationFrame(long); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void unshare(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _decodeUtf8_4(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatKK { void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT1_TRANSLATE_X { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connectInternal(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _skipCComment(); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.lang.String getNullText(); }
-keepclassmembers class android.animation.ValueAnimator { boolean doAnimationFrame(long); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class android.animation.ValueAnimator { float getAnimatedFraction(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void getFile(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void append(char[],int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isUseIdentityHashCode(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipColon(); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _finishString2(char[],int); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isFullDetail(java.lang.Boolean); }
-keepclassmembers class android.print.IPrintManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void cd(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { int getReply(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { java.math.BigDecimal contentsAsDecimal(); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipColon2(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void removeLastFieldSeparator(java.lang.StringBuffer); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] contentsAsArray(); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(int); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Node { void <init>(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipComma(int); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void login(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <init>(byte[]); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { double contentsAsDouble(); }
-keepclassmembers class java.util.IdentityHashMap { int getThreshold(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { java.lang.String contentsAsString(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.animation.ValueAnimator { long access$000(android.animation.ValueAnimator); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object[] newElementArray(int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayEnd(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void access$100(android.animation.ValueAnimator,android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _skipComment(); }
-keepclassmembers class java.util.IdentityHashMap { int computeElementArraySize(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void port(); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayContentDetail(boolean); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$200(android.animation.ValueAnimator,long); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <clinit>(); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.reflect.Type[] getUpperBounds(); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$302(android.animation.ValueAnimator,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setContentEnd(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayStart(java.lang.String); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object massageValue(java.lang.Object); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String readLine(); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Node { java.lang.Object getValue(); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setContentStart(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] emptyAndGetCurrentSegment(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void sendFile(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setFieldSeparator(java.lang.String); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.reflect.Type[] getLowerBounds(); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.String toString(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setType(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _skipLine(); }
-keepclassmembers class java.util.IdentityHashMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] expandCurrentSegment(); }
-keepclassmembers class java.util.IdentityHashMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { void <init>(libcore.reflect.ListOfTypes,libcore.reflect.ListOfTypes); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipWSOrEnd2(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { boolean readMultiLine(); }
-keepclassmembers class android.text.DynamicLayout { int getIndexFirstChangedBlock(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockEndLines(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockIndices(); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class android.text.DynamicLayout { int getNumberOfBlocks(); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] finishCurrentSegment(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _skipWSOrEnd(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseClassName(boolean); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void write(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.pattern.parser.Node { void setNext(ch.qos.logback.core.pattern.parser.Node); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { int hashCode(); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseIdentityHashCode(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { boolean _skipYAMLComment(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] getCurrentSegment(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _matchToken2(java.lang.String,int); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseFieldNames(boolean); }
-keepclassmembers class java.util.IdentityHashMap { void rehash(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.DefaultSerializerProvider { com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setFieldSeparatorAtStart(boolean); }
-keepclassmembers class android.text.DynamicLayout { void setIndexFirstChangedBlock(int); }
-keepclassmembers class android.net.wifi.IWifiManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setDefaultFullDetail(boolean); }
-keepclassmembers class java.util.IdentityHashMap { void computeMaxSize(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { char _verifyNoLeadingZeroes(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { char[] getTextBuffer(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _verifyRootSpace(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { int getCurrentSegmentSize(); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { char _verifyNLZ2(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _closeInput(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.TypeDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.TypeDeserializer { java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _nextAfterName(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.TypeDeserializer { java.lang.Object deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class); }
-keepclassmembers class android.text.DynamicLayout { void access$000(android.text.DynamicLayout,java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseShortClassName(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$6 { void <init>(int); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$INDETERMINATE_HORIZONTAL_RECT2_SCALE_X { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void resetWithCopy(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void releaseBuffers(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandYesNo { it.skarafaz.mercury.ssh.SshCommandDrop getDrop(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandYesNo { void <init>(java.lang.String,it.skarafaz.mercury.ssh.SshCommandDrop); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateRegion(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { int getTextOffset(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandYesNo { java.lang.String getMessage(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$4 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber,it.skarafaz.mercury.event.SshCommandPassword); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void resetWithEmpty(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateLanguage(java.lang.String,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int peek(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.TypeDeserializer$1 { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$4 { void onInput(com.afollestad.materialdialogs.MaterialDialog,java.lang.CharSequence); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateVariant(java.lang.String); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseFormatToken(int); }
-keepclassmembers class java.util.Locale$Builder { boolean isValidVariantSubtag(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void resetWithString(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void resetWithShared(char[],int,int); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateScript(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { int collectDefaults(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { boolean enabledByDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { void setCurrentLength(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _parseFloat(char[],int,int,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { int getMask(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String getFormatSpecifierText(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { boolean enabledIn(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseWidth(java.util.Formatter$FormatToken,int); }
-keepclassmembers class java.util.IdentityHashMap { void <clinit>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$JellybeanMr1Impl { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parsePrecision(java.util.Formatter$FormatToken); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void <init>(com.android.okio.BufferedSource); }
-keepclassmembers class com.fasterxml.jackson.core.JsonParser$Feature { com.fasterxml.jackson.core.JsonParser$Feature[] values(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeListImpl { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseArgumentIndexAndFlags(java.util.Formatter$FormatToken); }
-keepclassmembers class com.fasterxml.jackson.core.util.TextBuffer { int size(); }
-keepclassmembers class android.view.ViewTreeObserver$InternalInsetsInfo { void <init>(); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeListImpl { void add(org.apache.harmony.xml.dom.NodeImpl); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeListImpl { int getLength(); }
-keepclassmembers class java.lang.IntegralToString$1 { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int nextInt(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { char _decodeEscaped(); }
-keepclassmembers class android.view.ViewTreeObserver$InternalInsetsInfo { void reset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void close(); }
-keepclassmembers class android.view.ViewRootImpl$W { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.ViewTreeObserver$InternalInsetsInfo { boolean isEmpty(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.view.ViewTreeObserver$InternalInsetsInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 add(android.renderscript.Int3,android.renderscript.Int3); }
-keepclassmembers class java.lang.IntegralToString$1 { char[] initialValue(); }
-keepclassmembers class android.renderscript.Int3 { void <init>(); }
-keepclassmembers class java.lang.IntegralToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int access$000(java.util.Formatter$FormatSpecifierParser); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String getBytesAsString(byte[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _finishString2(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _finishString(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void readContinuationHeader(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int failNextInt(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SecureRandomFactoryBean { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver$InternalInsetsInfo { void set(android.view.ViewTreeObserver$InternalInsetsInfo); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 add(android.renderscript.Int3,int); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.xml.dom.NodeListImpl { org.w3c.dom.Node item(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _handleApos(); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1200(java.lang.String); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 sub(android.renderscript.Int3,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseConversionType(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class java.util.Locale$Builder { boolean access$1300(java.lang.String); }
-keepclassmembers class java.security.AccessController { void checkPermission(java.security.Permission); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 div(android.renderscript.Int3,android.renderscript.Int3); }
-keepclassmembers class com.afollestad.materialdialogs.DialogAction { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1400(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _parseNumber2(char[],int,boolean,int); }
-keepclassmembers class com.afollestad.materialdialogs.DialogAction { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _handleOddName(int); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1000(java.lang.String,boolean); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class com.afollestad.materialdialogs.DialogAction { com.afollestad.materialdialogs.DialogAction[] values(); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 sub(android.renderscript.Int3,android.renderscript.Int3); }
-keepclassmembers class org.apache.commons.lang3.CharSequenceUtils { boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.renderscript.Int3 { android.renderscript.Int3 div(android.renderscript.Int3,int); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1100(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipColon(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { int hashCode(); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { void updateSelection(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipCComment(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipColon2(boolean); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void <init>(android.support.v4.view.PagerTitleStrip); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _handleOddValue(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(com.android.okio.ByteString,com.android.okio.ByteString); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { void setActionPopupWindow(android.widget.Editor$ActionPopupWindow); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { void updatePosition(float,float); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void onChanged(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(com.android.okio.ByteString,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.widget.Editor$SelectionEndHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _matchToken(java.lang.String,int); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void onPageScrollStateChanged(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class android.content.res.AssetFileDescriptor$1 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback { void <init>(android.support.v7.app.ToolbarActionBar); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void onPageScrolled(int,float,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { com.fasterxml.jackson.databind.util.Annotations getClassAnnotations(); }
-keepclassmembers class com.android.okhttp.Request { void <init>(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { java.lang.Object getDefaultBean(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip$PageListener { void onPageSelected(int); }
-keepclassmembers class android.content.res.AssetFileDescriptor$1 { android.content.res.AssetFileDescriptor createFromParcel(android.os.Parcel); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.app.ContextImpl$51 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback { boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.android.okhttp.Request { java.net.URI uri(); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { void <init>(int,com.fasterxml.jackson.core.json.JsonWriteContext,com.fasterxml.jackson.core.json.DupDetector); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void <init>(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipComment(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.PropertyBuilder { java.lang.Object getDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _parseAposName(); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.Request { java.net.URL url(); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$51 { void <init>(); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String method(); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class android.content.res.AssetFileDescriptor$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { void _checkDup(com.fasterxml.jackson.core.json.DupDetector,java.lang.String); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String header(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { com.fasterxml.jackson.core.json.JsonWriteContext createRootContext(com.fasterxml.jackson.core.json.DupDetector); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers getHeaders(); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.os.DropBoxManager$Entry { void <init>(java.lang.String,long,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipLine(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$Builder newBuilder(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String getUserAgent(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipUtf8_2(int); }
-keepclassmembers class android.net.Uri$StringUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$ParsedHeaders parsedHeaders(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers headers(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.CacheControl cacheControl(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String _parseName(); }
-keepclassmembers class com.android.okhttp.Request { boolean isHttps(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class com.android.okhttp.Request { java.lang.Object access$1100(com.android.okhttp.Request); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipUtf8_3(int); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String access$900(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$Body access$1000(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String getProxyAuthorization(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers access$1200(com.android.okhttp.Request); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.view.InputQueue { long nativeInit(java.lang.ref.WeakReference,android.os.MessageQueue); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { com.fasterxml.jackson.core.json.JsonWriteContext reset(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter { com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]); }
-keepclassmembers class libcore.net.url.FileHandler { void <init>(); }
-keepclassmembers class com.android.okhttp.Request { java.net.URL access$800(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Request { void <init>(com.android.okhttp.Request$Builder,com.android.okhttp.Request$1); }
-keepclassmembers class android.view.InputQueue { long nativeSendKeyEvent(long,android.view.KeyEvent,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$2 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { com.fasterxml.jackson.core.json.JsonWriteContext getParent(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedPath(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipUtf8_4(int); }
-keepclassmembers class android.view.InputQueue { long nativeSendMotionEvent(long,android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void close(); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class android.view.InputQueue { void nativeDispose(long); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipWS(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void <init>(com.android.okhttp.internal.http.HttpConnection,com.android.okhttp.internal.http.HttpConnection$1); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipWS2(); }
-keepclassmembers class libcore.net.url.FileHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { com.android.okhttp.Response get(com.android.okhttp.Request); }
-keepclassmembers class android.view.InputQueue { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void <init>(java.net.ResponseCache); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class android.view.InputQueue { void sendInputEvent(android.view.InputEvent,java.lang.Object,boolean,android.view.InputQueue$FinishedInputEventCallback); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _parseNegNumber(); }
-keepclassmembers class android.view.InputQueue { void dispose(); }
-keepclassmembers class ch.qos.logback.classic.pattern.LineSeparatorConverter { void <init>(); }
-keepclassmembers class android.view.View$TintInfo { void <init>(android.view.View$1); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle { android.support.v4.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class android.view.InputQueue { void dispose(boolean); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { java.net.CacheRequest put(com.android.okhttp.Response); }
-keepclassmembers class com.android.okio.OkBuffer { long size(); }
-keepclassmembers class com.android.okio.OkBuffer { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void update(com.android.okhttp.Response,com.android.okhttp.Response); }
-keepclassmembers class com.fasterxml.jackson.core.json.JsonWriteContext { int writeFieldName(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { boolean exhausted(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$MessagingStyle { void restoreFromCompatExtras(android.os.Bundle); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedFragment(); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil$Scope { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { boolean maybeRemove(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void trackConditionalCacheHit(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class android.view.InputQueue { android.view.InputQueue$ActiveInputEvent obtainActiveInputEvent(java.lang.Object,android.view.InputQueue$FinishedInputEventCallback); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken _parsePosNumber(int); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil$Scope { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean and(boolean[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipWSOrEnd(); }
-keepclassmembers class com.android.okio.OkBuffer { byte readByte(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void trackResponse(com.android.okhttp.ResponseSource); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean and(java.lang.Boolean[]); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { java.net.CacheResponse getJavaCachedResponse(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void <init>(com.android.okhttp.Address,java.net.URI,java.net.ProxySelector,com.android.okhttp.ConnectionPool,com.android.okhttp.HostResolver,com.android.okhttp.RouteDatabase); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.android.okio.OkBuffer { long completeSegmentByteCount(); }
-keepclassmembers class android.os.DropBoxManager$Entry { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ch.qos.logback.core.joran.action.ActionUtil$Scope { ch.qos.logback.core.joran.action.ActionUtil$Scope[] values(); }
-keepclassmembers class com.android.okio.OkBuffer { short readShort(); }
-keepclassmembers class com.android.okio.OkBuffer { byte getByte(long); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _skipWSOrEnd2(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNext(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean or(java.lang.Boolean[]); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.os.DropBoxManager$Entry { void <clinit>(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { void <init>(java.net.URL); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { boolean _skipYAMLComment(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _verifyNoLeadingZeroes(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { com.android.okhttp.Connection next(java.lang.String); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean or(boolean[]); }
-keepclassmembers class android.net.wifi.IWifiManager$Stub$Proxy { android.os.Messenger getWifiServiceMessenger(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder penaltyLog(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(int); }
-keepclassmembers class com.android.okio.OkBuffer { int readInt(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy build(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder penaltyDropBox(); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(int,int,int); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name addName(int[],int,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _verifyRootSpace(int); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextProxy(java.net.URI,java.net.Proxy); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder enable(int); }
-keepclassmembers class android.appwidget.AppWidgetManager { void <init>(android.content.Context,com.android.internal.appwidget.IAppWidgetService); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { int getCompoundPaddingLeft(); }
-keepclassmembers class android.accounts.AccountManager { void <init>(android.content.Context,android.accounts.IAccountManager); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextProxy(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder detectAll(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.net.Proxy nextProxy(); }
-keepclassmembers class android.accounts.AccountManager { android.accounts.AccountManager get(android.content.Context); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void <init>(java.io.InputStream,java.net.Socket); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.security.NoSuchAlgorithmException notFound(java.lang.String,java.lang.String); }
-keepclassmembers class android.accounts.AccountManager { void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatApi23 { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void connectFailed(com.android.okhttp.Connection,java.io.IOException); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(byte[],int,int); }
-keepclassmembers class com.android.okio.OkBuffer { short readShortLe(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { long skip(long); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextInetSocketAddress(java.net.Proxy); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void close(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _reportInvalidToken(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _reportInvalidToken(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { int readIntLe(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean toBooleanObject(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextInetSocketAddress(); }
-keepclassmembers class android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent { void run(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _releaseBuffers(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _skipCR(); }
-keepclassmembers class android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class com.android.okio.OkBuffer { java.lang.String readUtf8(long); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { void _skipString(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.lang.String getHostString(java.net.InetSocketAddress); }
-keepclassmembers class android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent { void runOrPost(android.view.View,int); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextPostponed(); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.ByteString readByteString(long); }
-keepclassmembers class android.view.IWindowId$Stub { android.view.IWindowId asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { int getSideChannelBindFlags(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int available(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.net.InetSocketAddress nextInetSocketAddress(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextTlsMode(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextTlsMode(); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { int getBlockSize(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { com.android.okhttp.Route nextPostponed(); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { int nextTlsMode(); }
-keepclassmembers class android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { int getIVSize(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class android.animation.AnimatorSet$Dependency { void <init>(android.animation.AnimatorSet$Node,int); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { void init(int,byte[],byte[]); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(java.lang.Boolean,int,int,int); }
-keepclassmembers class java.io.EOFException { void <init>(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { java.lang.String readUtf8Line(long); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(boolean,int,int); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { void <init>(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { void <init>(); }
-keepclassmembers class com.android.okio.OkBuffer { byte[] readBytes(long); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { boolean isCBC(); }
-keepclassmembers class android.app.ActionBar { boolean onMenuKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void handleMessage(android.os.Message); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class com.jcraft.jsch.jce.AES128CBC { void update(byte[],int,int,byte[],int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.ObjectCodec getCodec(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name findName(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { char getNextChar(java.lang.String); }
-keepclassmembers class android.renderscript.Short4 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String getText(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name findName(int,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringOnOff(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toString(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringYesNo(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { char[] getTextCharacters(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name findName(int[],int,int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringOnOff(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringTrueFalse(boolean); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void run(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringYesNo(boolean); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.NinePatch); }
-keepclassmembers class com.android.okio.OkBuffer { void skip(long); }
-keepclassmembers class com.android.okio.OkBuffer { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.NinePatch); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int getTextLength(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringTrueFalse(java.lang.Boolean); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int getTextOffset(); }
-keepclassmembers class android.view.animation.Animation { android.view.animation.Animation clone(); }
-keepclassmembers class com.android.okio.OkBuffer { void clear(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int nextByte(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int[] growArrayBy(int[],int); }
-keepclassmembers class android.view.animation.Animation { void reset(); }
-keepclassmembers class android.view.animation.Animation { void detach(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { java.lang.String getValueAsString(); }
-keepclassmembers class android.view.animation.Animation { boolean isInitialized(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name parseName(int,int,int); }
-keepclassmembers class android.view.animation.Animation { void initialize(int,int,int,int); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class ch.qos.logback.core.subst.Parser$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(com.android.okio.ByteString); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { boolean loadMore(); }
-keepclassmembers class android.view.animation.Animation { void setListenerHandler(android.os.Handler); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name parseName(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 add(android.renderscript.Short4,android.renderscript.Short4); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(byte[]); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.util.zip.CRC32 { void <init>(); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _closeInput(); }
-keepclassmembers class java.util.zip.CRC32 { void reset(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setNinePatch(android.graphics.NinePatch); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.os.Process$ZygoteState { void <init>(android.net.LocalSocket,java.io.DataInputStream,java.io.BufferedWriter,java.util.List); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int); }
-keepclassmembers class android.os.Process$ZygoteState { android.os.Process$ZygoteState connect(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdScalarSerializer { void <init>(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class java.util.zip.CRC32 { long updateImpl(byte[],int,int,long); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeByte(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdScalarSerializer { void <init>(java.lang.Class,boolean); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 add(android.renderscript.Short4,short); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { void <init>(com.fasterxml.jackson.core.JsonParser[]); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeUtf8(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeShort(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdScalarSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.os.Process$ZygoteState { void close(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.animation.Animation { void setStartTime(long); }
-keepclassmembers class android.media.RemoteControlClient$EventHandler { void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context); }
-keepclassmembers class android.os.Process$ZygoteState { boolean isClosed(); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeInt(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeClose(long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterCustomFunction(long,android.database.sqlite.SQLiteCustomFunction); }
-keepclassmembers class java.util.zip.CRC32 { long getValue(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.animation.Animation { void start(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeGetParameterCount(long,long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { void <init>(java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean nativeIsReadOnly(long,long); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { void addFlattenedActiveParsers(java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindLong(long,long,int,long); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 sub(android.renderscript.Short4,short); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeFinalizeStatement(long,long); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.status.WarnStatus { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindString(long,long,int,java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { void close(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetStatementAndClearBindings(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindBlob(long,long,int,byte[]); }
-keepclassmembers class android.view.animation.Animation { boolean isFillEnabled(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeExecute(long,long); }
-keepclassmembers class ch.qos.logback.core.status.WarnStatus { void <init>(java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForLong(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterLocalizedCollators(long,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String nativeExecuteForString(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativePrepareStatement(long,java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { com.fasterxml.jackson.core.JsonToken nextToken(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindNull(long,long,int); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindDouble(long,long,int,double); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetCancel(long,boolean); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class android.view.animation.Animation { float getScaleFactor(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 sub(android.renderscript.Short4,android.renderscript.Short4); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.os.Process$ZygoteState { boolean matches(java.lang.String); }
-keepclassmembers class java.util.zip.CRC32 { void update(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class android.view.animation.Animation { long getStartTime(); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.Segment writableSegment(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { com.fasterxml.jackson.core.JsonToken nextToken(); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class android.view.animation.Animation { boolean getFillAfter(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class com.fasterxml.jackson.core.util.JsonParserSequence { boolean switchToNext(); }
-keepclassmembers class android.widget.CompoundButton { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _decodeCharForError(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 div(android.renderscript.Short4,android.renderscript.Short4); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { int[] getDisplayIds(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.CompoundButton { void setButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.animation.Animation { boolean getFillBefore(); }
-keepclassmembers class com.android.okio.OkBuffer { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void <init>(); }
-keepclassmembers class android.widget.CompoundButton { void setButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler); }
-keepclassmembers class android.widget.CompoundButton { void applyButtonTint(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void open(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { char _decodeEscaped(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int,android.os.IBinder); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class android.renderscript.Short4 { android.renderscript.Short4 div(android.renderscript.Short4,short); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void dispose(boolean); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$ControlSettings { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.okio.OkBuffer { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { int findDisplayListenerLocked(android.hardware.display.DisplayManager$DisplayListener); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class dalvik.system.profiler.BinaryHprof$ControlSettings { void <clinit>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _finishString(); }
-keepclassmembers class com.android.okio.OkBuffer { long indexOf(byte,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setPageSize(); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void connect(int); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.CompoundButton { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CompoundButton { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setAutoCheckpointInterval(); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.lang.AutoCloseable); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalSizeLimit(); }
-keepclassmembers class com.android.okio.OkBuffer { void flush(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void run(); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void init(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.android.okio.OkBuffer { void close(); }
-keepclassmembers class com.fasterxml.jackson.core.json.ReaderBasedJsonParser { int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream); }
-keepclassmembers class libcore.io.IoUtils { void setBlocking(java.io.FileDescriptor,boolean); }
-keepclassmembers class android.content.pm.ResolveInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setForeignKeyModeFromConfiguration(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void sendAccessibilityEvent(java.lang.Object,android.view.View,int); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _handleApos(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class libcore.io.IoUtils { boolean canOpenReadOnly(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { com.jcraft.jsch.Packet genChannelOpenPacket(); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class android.support.v7.widget.SearchView$9 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationStart(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setWalModeFromConfiguration(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumWidth(); }
-keepclassmembers class android.content.pm.ResolveInfo { void <init>(android.os.Parcel); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setInputStream(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setOrgPort(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setSyncMode(java.lang.String); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void tag(java.io.FileDescriptor); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void run(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationRepeat(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class libcore.io.IoUtils { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setPort(int); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationEnd(); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String canonicalizeSyncMode(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setHost(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class libcore.io.IoUtils { void throwInterruptedIoException(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Region getTransparentRegion(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setOutputStream(java.io.OutputStream); }
-keepclassmembers class android.view.animation.Animation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation,float); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalMode(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.content.pm.ResolveInfo { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class android.view.animation.Animation { float resolveSize(int,float,int,int); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.animation.Animation { void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation); }
-keepclassmembers class android.renderscript.Element$DataType { android.renderscript.Element$DataType[] values(); }
-keepclassmembers class android.renderscript.Element$DataType { void <init>(java.lang.String,int,int,int); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.jcraft.jsch.ChannelDirectTCPIP { void setOrgIPAddress(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class android.renderscript.Element$DataType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class android.renderscript.Element$DataType { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isClipPath(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader,java.util.Map); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setLocaleFromConfiguration(); }
-keepclassmembers class android.view.animation.Animation { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class java.lang.InterruptedException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TreeTraversingParser { void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer clone(); }
-keepclassmembers class android.app.admin.IDevicePolicyManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.pm.ResolveInfo { void <init>(android.os.Parcel,android.content.pm.ResolveInfo$1); }
-keepclassmembers class android.view.animation.Animation { boolean hasAlpha(); }
-keepclassmembers class android.widget.CompoundButton { android.graphics.drawable.Drawable getButtonDrawable(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class java.nio.DoubleBuffer { java.nio.DoubleBuffer wrap(double[]); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_START { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring { void <init>(com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.nio.DoubleBuffer { java.nio.DoubleBuffer wrap(double[],int,int); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean); }
-keepclassmembers class android.os.SystemVibrator { void <init>(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { java.util.ArrayList access$100(android.support.v7.widget.DefaultItemAnimator); }
-keepclassmembers class android.os.SystemVibrator { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring { void handleResolvedForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.nio.DoubleBuffer { void <init>(int,long); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name _handleOddName(int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo); }
-keepclassmembers class android.support.v4.app.NotificationCompat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TreeTraversingParser { void <init>(com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { java.util.ArrayList access$500(android.support.v7.widget.DefaultItemAnimator); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { java.util.ArrayList access$300(android.support.v7.widget.DefaultItemAnimator); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _matchToken(java.lang.String,int); }
-keepclassmembers class android.os.FileUtils { int setPermissions(java.lang.String,int,int,int); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name _parseAposName(); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.view.ViewRootImpl$EarlyPostImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewRootImpl$EarlyPostImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { void <init>(com.fasterxml.jackson.databind.SerializationConfig,int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getTimeFormat(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.action.ParamAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class ch.qos.logback.core.joran.action.ParamAction { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.action.ParamAction { void <init>(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void dispatchFinishedWhenDone(); }
-keepclassmembers class android.view.ViewRootImpl$EarlyPostImeInputStage { int processKeyEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class ch.qos.logback.core.joran.action.ParamAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std findDeserializer(java.lang.Class); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void run(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getDateFormat(int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { java.lang.Enum _deserializeAltString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { void <init>(com.fasterxml.jackson.databind.util.EnumResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { java.lang.Class[] types(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void run(); }
-keepclassmembers class android.view.ViewRootImpl$EarlyPostImeInputStage { int processPointerEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { java.lang.Object _deserializeFromEmptyString(); }
-keepclassmembers class org.greenrobot.eventbus.Subscription { int hashCode(); }
-keepclassmembers class android.widget.ImageView$ScaleType { android.widget.ImageView$ScaleType[] values(); }
-keepclassmembers class org.greenrobot.eventbus.Subscription { void <init>(java.lang.Object,org.greenrobot.eventbus.SubscriberMethod); }
-keepclassmembers class org.greenrobot.eventbus.Subscription { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { void <init>(com.fasterxml.jackson.databind.SerializationConfig,java.util.Map); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name _parseName(int); }
-keepclassmembers class android.media.tv.TvInputManager$1 { void <init>(android.media.tv.TvInputManager); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { java.lang.Enum _deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.core.joran.spi.NoAutoStartUtil { boolean notMarkedWithNoAutoStart(java.lang.Object); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class android.hardware.Camera$CameraInfo { void <init>(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TreeTraversingParser { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void cancelAll(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void <clinit>(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.annotation.JsonInclude$Include getSerializationInclusion(); }
-keepclassmembers class android.transition.ChangeTransform$3 { void <init>(android.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.transition.ChangeTransform$Transforms,android.transition.ChangeTransform$PathAnimatorMatrix); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class android.os.FileUtils { boolean contains(java.io.File,java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { java.lang.Enum deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.lang.VMClassLoader { int getBootClassPathSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String getBootClassPathResource(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.transition.ChangeTransform$3 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void add(android.view.View); }
-keepclassmembers class android.transition.ChangeTransform$3 { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void clear(); }
-keepclassmembers class android.os.ParcelFileDescriptor$1 { android.os.ParcelFileDescriptor createFromParcel(android.os.Parcel); }
-keepclassmembers class android.transition.ChangeTransform$3 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _parseNegNumber(); }
-keepclassmembers class android.os.ParcelFileDescriptor$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class android.app.ActivityTransitionState$1 { void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void getSortedViews(android.view.View[],int[]); }
-keepclassmembers class java.security.cert.Certificate$CertificateRep { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.security.cert.Certificate$CertificateRep { void <clinit>(); }
-keepclassmembers class android.transition.ChangeTransform$3 { void setCurrentMatrix(android.graphics.Matrix); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement acquirePreparedStatement(java.lang.String); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken _parsePosNumber(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void endAnimations(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class java.security.cert.Certificate$CertificateRep { java.lang.Object readResolve(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(android.widget.RelativeLayout$1); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { java.util.ArrayDeque findRoots(int[]); }
-keepclassmembers class android.os.ParcelFileDescriptor$1 { void <init>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class java.lang.Long { java.lang.NumberFormatException invalidLong(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumDeserializer { boolean isCachable(); }
-keepclassmembers class java.lang.Long { void <init>(java.lang.String); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLParametersConfiguration { void <init>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ch.qos.logback.core.android.CommonPathUtil { java.lang.String getAssetsDirectoryPath(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void releasePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void finalizePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void bindArguments(android.database.sqlite.SQLiteConnection$PreparedStatement,java.lang.Object[]); }
-keepclassmembers class android.os.FileUtils { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void attachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class ch.qos.logback.core.android.CommonPathUtil { java.lang.String getFilesDirectoryPath(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void detachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class java.lang.Long { float floatValue(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { java.util.List readNameValueBlock(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void close(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void <init>(com.android.okio.BufferedSource); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void doneReading(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { int access$022(com.android.okhttp.internal.spdy.NameValueBlockReader,long); }
-keepclassmembers class java.lang.Long { double doubleValue(); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class java.security.KeyPairGenerator { java.security.KeyPairGenerator getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { boolean isRunning(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void throwIfStatementForbidden(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { int access$000(com.android.okhttp.internal.spdy.NameValueBlockReader); }
-keepclassmembers class ch.qos.logback.core.android.CommonPathUtil { java.lang.String getMountedExternalStorageDirectoryPath(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { com.android.okio.ByteString readByteString(); }
-keepclassmembers class java.security.KeyPairGenerator { void <init>(java.lang.String); }
-keepclassmembers class java.nio.charset.CoderResult { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isCacheable(int); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.MapperFeature[]); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Long { int intValue(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void applyBlockGuardPolicy(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class java.security.KeyPairGenerator { void initialize(java.security.spec.AlgorithmParameterSpec); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class android.content.pm.ComponentInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.security.KeyPairGenerator { java.security.Provider access$102(java.security.KeyPairGenerator,java.security.Provider); }
-keepclassmembers class java.lang.Long { long parse(java.lang.String,int,int,boolean); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator { void runPendingAnimations(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.security.KeyPairGenerator { void <clinit>(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.pm.ComponentInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void drawableStateChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.PropertyBindingException { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Class,java.lang.String,java.util.Collection); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class java.lang.Long { long parsePositiveLong(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class java.nio.charset.CoderResult { void throwException(); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLParametersConfiguration { java.lang.String[] includedStrings(java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnmappable(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isMalformed(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLParametersConfiguration { java.lang.String[] stringToArray(java.lang.String); }
-keepclassmembers class java.nio.charset.CoderResult { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.exc.PropertyBindingException { java.lang.String getMessageSuffix(); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class android.os.ResultReceiver$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidChar(int); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidInitial(int); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidOther(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidOther(int,int); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompat21$SharedElementCallback21); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class javax.crypto.spec.DHPublicKeySpec { void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class java.lang.Character { void checkValidCodePoint(int); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidToken(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _releaseBuffers(); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { int[] onCreateDrawableState(int); }
-keepclassmembers class java.lang.Long { long rotateRight(long,int); }
-keepclassmembers class org.xml.sax.SAXNotSupportedException { void <init>(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipCR(); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class org.xml.sax.SAXNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _reportInvalidToken(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { void <init>(); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class java.lang.Character { int unicodeBlockForCodePoint(int); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isSupplementaryCodePoint(int); }
-keepclassmembers class ch.qos.logback.classic.spi.TurboFilterList { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.spi.TurboFilterList { ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision(org.slf4j.Marker,ch.qos.logback.classic.Logger,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { android.view.textservice.SpellCheckerSubtype createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 { void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 { void onDismiss(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { void _skipString(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$1 { void onClick(android.view.View); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void sendAccessibilityEvent(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean isFulfilling(int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$1 { void <init>(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.Character { boolean isSurrogatePair(char,char); }
-keepclassmembers class com.fasterxml.jackson.databind.SerializationConfig { com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.MapperFeature[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void access$200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String trimSqlForDisplay(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { byte[] access$500(); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void recyclePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStopped(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String access$300(java.lang.String); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class com.android.net.IProxyService$Stub { com.android.net.IProxyService asInterface(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStarted(); }
-keepclassmembers class com.android.okhttp.Handshake { com.android.okhttp.Handshake get(javax.net.ssl.SSLSession); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$8 { void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonLocation getCurrentLocation(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int,int); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void <init>(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void <init>(com.fasterxml.jackson.core.util.BufferRecycler); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.ObjectCodec getCodec(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.Handshake { void <init>(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { char[] getTextCharacters(); }
-keepclassmembers class com.android.okhttp.Handshake { com.android.okhttp.Handshake get(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void append(int); }
-keepclassmembers class java.lang.Character { int toChars(int,char[],int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { java.lang.String getText(); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void <init>(int); }
-keepclassmembers class java.lang.Character { int codePointBefore(char[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x501.Name access$100(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class com.android.okhttp.Handshake { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void appendThreeBytes(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void <init>(ch.qos.logback.core.Context,ch.qos.logback.core.joran.spi.Interpreter); }
-keepclassmembers class com.android.okhttp.Handshake { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void addSubstitutionProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void appendTwoBytes(int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void fireInPlay(ch.qos.logback.core.joran.event.SaxEvent); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int getTextOffset(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void addInPlayListener(ch.qos.logback.core.joran.event.InPlayListener); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void addSubstitutionProperties(java.util.Properties); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int getTextLength(); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void _allocMore(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x509.GeneralNames access$000(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean,int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode awaitFulfill(java.util.concurrent.SynchronousQueue$TransferStack$SNode,boolean,long); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry getDefaultNestedComponentRegistry(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonLocation getTokenLocation(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.lang.Object peekObject(); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.util.Map getObjectMap(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { java.lang.String getValueAsString(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.util.Map getCopyOfPropertyMap(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { boolean isEmpty(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.lang.Object popObject(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { byte[] toByteArray(); }
-keepclassmembers class com.fasterxml.jackson.core.util.ByteArrayBuilder { void reset(); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { ch.qos.logback.core.joran.spi.Interpreter getJoranInterpreter(); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean shouldSpin(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { boolean loadMore(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { boolean removeInPlayListener(ch.qos.logback.core.joran.event.InPlayListener); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { void pushObject(java.lang.Object); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class ch.qos.logback.core.joran.spi.InterpretationContext { java.lang.String subst(java.lang.String); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void clean(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class android.widget.TextView$2 { void run(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.regex.Pattern { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class android.net.wifi.p2p.nsd.WifiP2pServiceResponse$Status { java.lang.String toString(int); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { void <init>(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class android.media.IAudioRoutesObserver$Stub { void <init>(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.media.IAudioRoutesObserver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi24$TransportControls { void prepareFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$2 { void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int getDisplayOptions(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi24$TransportControls { void prepareFromUri(java.lang.Object,android.net.Uri,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void collapseActionView(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.view.Menu getMenu(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi24$TransportControls { void prepareFromSearch(java.lang.Object,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$2 { void run(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { void _copyTo(java.lang.Object,int,java.lang.Object[],int); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class java.lang.Character { char forDigit(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { java.lang.Object[] appendCompletedChunk(java.lang.Object[]); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { boolean hasNationalNumberPattern(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { boolean hasExpandedActionView(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi24$TransportControls { void prepare(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.SortedMap); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.view.ViewGroup getViewGroup(); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class java.lang.Character { byte getDirectionality(char); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Map); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class java.lang.Character { boolean isDefined(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class java.lang.Character { byte getIcuDirectionality(int); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class java.lang.Character { boolean isDefinedImpl(int); }
-keepclassmembers class java.util.TreeMap { boolean isEmpty(); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int getVisibility(); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class java.lang.Character { boolean isDefined(char); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { void _reset(); }
-keepclassmembers class java.util.TreeMap { void clear(); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { boolean isOverflowMenuShowing(); }
-keepclassmembers class java.lang.Character { boolean isBmpCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.content.res.TypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.app.ContextImpl$1 { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class java.util.TreeMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class java.util.TreeMap { java.lang.Object putInternal(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.app.ContextImpl$1 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { void completeAndClearBuffer(java.lang.Object[],int,java.util.List); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class android.view.View$CheckForLongPress { void run(); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(char); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierStart(char); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { int initialCapacity(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean add(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class butterknife.ButterKnife$Finder$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByObject(java.lang.Object); }
-keepclassmembers class android.content.res.TypedArray { boolean getValue(int,android.util.TypedValue); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierStart(int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByEntry(java.util.Map$Entry); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ObjectBuffer { java.lang.Object[] resetAndStart(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class org.apache.harmony.xml.dom.LeafNodeImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl); }
-keepclassmembers class android.text.style.SuperscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class java.lang.Character { boolean isSpace(char); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.TreeMap { void removeInternal(java.util.TreeMap$Node); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.JsonToken nextToken(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class android.content.IOnPrimaryClipChangedListener$Stub { void <init>(); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class java.util.TreeMap { void rebalance(java.util.TreeMap$Node,boolean); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node removeInternalByKey(java.lang.Object); }
-keepclassmembers class org.apache.harmony.xml.dom.LeafNodeImpl { boolean isParentOf(org.w3c.dom.Node); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class java.util.TreeMap { void replaceInParent(java.util.TreeMap$Node,java.util.TreeMap$Node); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class libcore.io.DropBox$DefaultReporter { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class libcore.io.DropBox$DefaultReporter { void addText(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class libcore.io.DropBox$DefaultReporter { void <init>(libcore.io.DropBox$1); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setMenuPrepared(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class java.lang.Character { java.lang.String toString(char); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void configureLC(ch.qos.logback.classic.LoggerContext,java.lang.String); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void aname(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void adup(char[],int,int); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void doMain(java.lang.Class,java.lang.String[]); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void main(java.lang.String[]); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { void <init>(android.support.v4.app.FragmentManager); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void aval(char[],int,int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class android.animation.PathKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { int parsePortNumber(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void eof(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void cmnt(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { int getEntity(); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void entity(char[],int,int); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$Node); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void <init>(ch.qos.logback.classic.LoggerContext,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder { void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class java.lang.Character { int access$200(int); }
-keepclassmembers class java.lang.Character { void access$100(int); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class android.animation.PathKeyframes { void invalidateCache(); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void etag(char[],int,int); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { int getCount(); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void usage(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.pattern.RelativeTimeConverter { void <init>(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void gi(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder { com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$Node); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void decl(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void pcdata(char[],int,int); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name parseEscapedName(int[],int,int,int,int); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { void updateServers(java.util.List); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,int,int,boolean,boolean); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[]); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { javax.net.ServerSocketFactory getServerSocketFactory(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void pitarget(char[],int,int); }
-keepclassmembers class com.android.internal.util.AsyncChannel$DeathMonitor { void <init>(com.android.internal.util.AsyncChannel); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { java.lang.String getClientThreadName(java.net.Socket); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[],int); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,int,int,boolean,boolean,char[]); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random); }
-keepclassmembers class it.skarafaz.mercury.adapter.ServerPagerAdapter { int getItemPosition(java.lang.Object); }
-keepclassmembers class android.view.View$CheckForTap { void run(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$200(); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.slf4j.helpers.NamedLoggerBase { void <init>(); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.RequestSftp { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { java.lang.String getServerThreadName(); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class org.slf4j.helpers.NamedLoggerBase { java.lang.String getName(); }
-keepclassmembers class com.jcraft.jsch.RequestSftp { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void run(); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void stagc(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void pi(char[],int,int); }
-keepclassmembers class java.util.TreeMap { java.util.Comparator comparator(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class org.slf4j.helpers.NamedLoggerBase { java.lang.Object readResolve(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void socketNodeClosing(ch.qos.logback.classic.net.SocketNode); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi24 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,char[]); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class ch.qos.logback.classic.net.SimpleSocketServer { void signalAlmostReadiness(); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,boolean,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void <init>(java.io.Writer); }
-keepclassmembers class org.apache.commons.lang3.RandomStringUtils { java.lang.String random(int,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { void doFinal(byte[],int); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name parseLongName(int,int); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class org.ccil.cowan.tagsoup.PYXWriter { void stage(char[],int,int); }
-keepclassmembers class android.view.accessibility.CaptioningManager { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class java.io.OutputStreamWriter { void close(); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { int getBlockSize(); }
-keepclassmembers class java.io.OutputStreamWriter { void checkStatus(); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class libcore.io.Base64 { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { void init(byte[]); }
-keepclassmembers class java.io.OutputStreamWriter { void drainEncoder(); }
-keepclassmembers class org.greenrobot.eventbus.PendingPostQueue { void enqueue(org.greenrobot.eventbus.PendingPost); }
-keepclassmembers class java.io.OutputStreamWriter { void flush(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { com.android.okhttp.internal.spdy.Header[] access$000(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NodeCursor { void <init>(int,com.fasterxml.jackson.databind.node.NodeCursor); }
-keepclassmembers class java.util.TreeMap { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { void update(byte[],int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { java.util.Map access$100(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class java.io.OutputStreamWriter { void flushBytes(boolean); }
-keepclassmembers class java.io.OutputStreamWriter { void write(char[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.util.TreeMap { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class org.greenrobot.eventbus.PendingPostQueue { org.greenrobot.eventbus.PendingPost poll(); }
-keepclassmembers class com.jcraft.jsch.jce.HMAC { void update(int); }
-keepclassmembers class org.greenrobot.eventbus.PendingPostQueue { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findCachedDesc(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.io.OutputStreamWriter { void convert(java.nio.CharBuffer); }
-keepclassmembers class ch.qos.logback.classic.pattern.ClassNameOnlyAbbreviator { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { void onDeliverToNext(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void <init>(com.fasterxml.jackson.databind.type.TypeFactory,java.lang.Class); }
-keepclassmembers class org.greenrobot.eventbus.PendingPostQueue { org.greenrobot.eventbus.PendingPost poll(int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void _addPlaceholder(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void _resolve(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { java.util.Map nameToFirstIndex(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void _resolveBindings(java.lang.reflect.Type); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[]); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[]); }
-keepclassmembers class org.greenrobot.eventbus.EventBus$2 { void <clinit>(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name parseMediumName(int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int releaseMemory(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings,java.lang.Class,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class java.security.ProviderException { void <init>(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { int processKeyEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { void <clinit>(); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$1 { void <init>(android.view.textservice.SpellCheckerSession); }
-keepclassmembers class com.jcraft.jsch.RequestAgentForwarding { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$3 { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8StreamJsonParser { com.fasterxml.jackson.core.sym.Name slowParseName(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.jcraft.jsch.RequestAgentForwarding { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { java.util.ArrayList access$2900(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { void <init>(); }
-keepclassmembers class android.app.ContextImpl$61 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { int processTrackballEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { int processGenericMotionEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.media.RemoteControlClient { void <init>(android.app.PendingIntent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$TriggerLongPress { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { void fireStatusAddEvent(ch.qos.logback.core.status.Status); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$TriggerLongPress { void run(); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { void add(ch.qos.logback.core.status.Status); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String relativePath(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$ViewPostImeInputStage { int processPointerEvent(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.BasicClassIntrospector { com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver); }
-keepclassmembers class android.app.ContextImpl$61 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { void addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { com.fasterxml.jackson.databind.type.TypeBindings childInstance(); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { void remove(ch.qos.logback.core.status.StatusListener); }
-keepclassmembers class java.util.TreeMap$Bound$3 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { com.fasterxml.jackson.databind.JavaType findType(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.mindprod.ledatastream.LEDataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { java.util.List getCopyOfStatusListenerList(); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void clear(); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { void add(ch.qos.logback.core.status.StatusListener); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type); }
-keepclassmembers class com.mindprod.ledatastream.LEDataInputStream { void readFully(byte[]); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.type.TypeBindings { com.fasterxml.jackson.databind.JavaType[] typesAsArray(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void clearOldPositions(); }
-keepclassmembers class com.mindprod.ledatastream.LEDataInputStream { int skipBytes(int); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { java.util.List getCopyOfStatusList(); }
-keepclassmembers class ch.qos.logback.core.BasicStatusManager { boolean addUniquely(ch.qos.logback.core.status.StatusListener,java.lang.Object); }
-keepclassmembers class android.os.IPowerManager$Stub { android.os.IPowerManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 { java.lang.Class[] withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$ScrollabilityCache { void setFadeColor(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.support.v4.app.BundleUtil { android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.app.Activity$1 { void <init>(android.app.Activity); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$3 { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { void <init>(com.fasterxml.jackson.databind.node.JsonNodeFactory); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class com.fasterxml.jackson.databind.util.NameTransformer$3 { java.lang.String transform(java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class android.media.RemoteControlClient { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void run(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int,float); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode _insert(int,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.mindprod.ledatastream.LEDataInputStream { int readInt(); }
-keepclassmembers class java.util.WeakHashMap { void computeMaxSize(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newEntryArray(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class java.util.WeakHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set entrySet(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.os.OperationCanceledException { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { void <init>(com.jcraft.jsch.Channel,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void applyTickMarkTint(); }
-keepclassmembers class android.support.v4.os.OperationCanceledException { void <init>(); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { void <init>(com.jcraft.jsch.Channel,java.io.PipedOutputStream,int); }
-keepclassmembers class android.widget.ActivityChooserModel$DataModelPackageMonitor { void <init>(android.widget.ActivityChooserModel); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { void <init>(com.jcraft.jsch.Channel,int,int); }
-keepclassmembers class java.util.WeakHashMap { boolean isEmpty(); }
-keepclassmembers class android.widget.ActivityChooserModel$DataModelPackageMonitor { void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$EpicenterView { void <init>(); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { void checkSpace(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { void appendQuoted(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.WeakHashMap { java.util.Collection values(); }
-keepclassmembers class java.util.WeakHashMap { void poll(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void drawTickMarks(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void <init>(android.widget.SeekBar); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry getEntry(java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void checkForValidRequestCode(int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { java.util.Iterator elements(); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { int freeSpace(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class java.util.WeakHashMap { void removeEntry(java.util.WeakHashMap$Entry); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void putAll(java.util.Map); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.core.TreeNode get(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void drawableStateChanged(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.core.TreeNode get(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class java.util.WeakHashMap { void putAllImpl(java.util.Map); }
-keepclassmembers class java.util.WeakHashMap { void rehash(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { int hashCode(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.JsonNode get(int); }
-keepclassmembers class java.util.WeakHashMap { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,float); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.JsonNode get(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,double); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,long); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void <init>(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Double); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection); }
-keepclassmembers class android.support.v7.widget.AppCompatSeekBarHelper { void setTickMark(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void markKnownViewsInvalid(); }
-keepclassmembers class com.jcraft.jsch.Channel$MyPipedInputStream { void updateReadSide(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void markItemDecorInsetsDirty(); }
-keepclassmembers class android.widget.Filter$RequestHandler { void handleMessage(android.os.Message); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerFactory { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.DeserializerFactory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Integer); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void <init>(com.fasterxml.jackson.core.ObjectCodec,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void <init>(com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void offsetPositionRecordsForInsert(int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void _append(com.fasterxml.jackson.core.JsonToken,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { int hashCode(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void offsetPositionRecordsForMove(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void offsetPositionRecordsForRemove(int,int,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Float); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void _checkNativeIds(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigDecimal); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void recycleAndClearCachedViews(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.TextNode { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,byte[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void recycleCachedViewAt(int); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void _appendNativeIds(java.lang.StringBuilder); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer { com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void _append(com.fasterxml.jackson.core.JsonToken); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void _reportUnsupportedOperation(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insert(int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.JsonParser asParser(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.node.ArrayNode insertNull(int); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { boolean hasNext(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { void init(int,byte[],byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { boolean canWriteBinaryNatively(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { int getBlockSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { java.lang.Object next(); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { com.fasterxml.jackson.databind.JsonNode set(int,com.fasterxml.jackson.databind.JsonNode); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void close(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { void update(byte[],int,int,byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { int getIVSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { boolean canWriteTypeId(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class java.text.AttributedString { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { boolean canWriteObjectId(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field checkAndGetReflectionField(java.io.ObjectStreamField); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR { boolean isCBC(); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.ChangeScroll { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { java.lang.String toString(); }
-keepclassmembers class android.support.v4.os.AsyncTaskCompat { android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass createClassDesc(java.lang.Class); }
-keepclassmembers class java.text.AttributedString { void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class android.transition.ChangeScroll { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeScroll { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 { void <init>(); }
-keepclassmembers class android.transition.ChangeScroll { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.SerializerFactory { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.node.ArrayNode { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void flush(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.JsonToken firstToken(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { void addUnresolvedId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void serialize(com.fasterxml.jackson.core.JsonGenerator); }
-keepclassmembers class ch.qos.logback.classic.util.LogbackMDCAdapter { void <init>(); }
-keepclassmembers class android.database.Observable { void unregisterAll(); }
-keepclassmembers class java.io.ObjectStreamClass { void buildFieldDescriptors(java.lang.reflect.Field[]); }
-keepclassmembers class android.os.PowerManager { void <init>(android.content.Context,android.os.IPowerManager,android.os.Handler); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void <init>(dalvik.system.profiler.HprofData,java.io.OutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { java.lang.Object getUnresolvedId(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { void <init>(java.text.AttributedString); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference { java.lang.String getMessage(); }
-keepclassmembers class ch.qos.logback.classic.util.LogbackMDCAdapter { void clear(); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.util.LogbackMDCAdapter { java.lang.String get(java.lang.String); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void write(dalvik.system.profiler.HprofData,java.io.OutputStream); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore$InfoRecord { void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord); }
-keepclassmembers class ch.qos.logback.classic.util.LogbackMDCAdapter { java.util.Map getPropertyMap(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeHeader(long); }
-keepclassmembers class java.security.cert.CertificateFactory { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore$InfoRecord { android.support.v7.widget.ViewInfoStore$InfoRecord obtain(); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore$InfoRecord { void <clinit>(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { boolean inRange(java.text.AttributedString$Range); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler { void viewRangeUpdate(int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl { void <init>(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getIndex(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getEndIndex(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { android.os.Parcelable getSessionToken(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore$InfoRecord { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { long computeSerialVersionUID(java.lang.Class,java.lang.reflect.Field[]); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeControlSettings(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.view.ActionMode { void <init>(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void write(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.text.AttributedString { java.text.AttributedCharacterIterator getIterator(); }
-keepclassmembers class android.media.session.MediaSession$Token { void <init>(android.media.session.ISessionController); }
-keepclassmembers class java.net.Inet6Address { void <init>(byte[],java.lang.String,int); }
-keepclassmembers class ch.qos.logback.classic.pattern.FileOfCallerConverter { void <init>(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { boolean inRange(java.util.List); }
-keepclassmembers class java.net.Inet6Address { java.net.Inet6Address getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { void release(java.lang.Object); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeStartThread(dalvik.system.profiler.HprofData$ThreadEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { java.lang.String toString(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent); }
-keepclassmembers class android.support.v7.widget.ViewInfoStore$InfoRecord { void drainCache(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void <clinit>(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { java.util.Set getAllAttributeKeys(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializer { void <init>(); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeThreadEvent(dalvik.system.profiler.HprofData$ThreadEvent); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA196 { void <init>(); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA196 { void doFinal(byte[],int); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeRecordHeader(dalvik.system.profiler.BinaryHprof$Tag,int,int); }
-keepclassmembers class android.transition.Slide$6 { float getGoneY(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class android.media.session.MediaSession$Token { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer { void <init>(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { java.lang.Object currentValue(java.util.List); }
-keepclassmembers class android.transition.Slide$6 { void <init>(); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer { org.w3c.dom.Node _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeId(int); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeStopThread(dalvik.system.profiler.HprofData$ThreadEvent); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class android.net.EthernetManager$1 { void <init>(android.net.EthernetManager); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int); }
-keepclassmembers class com.jcraft.jsch.jce.HMACSHA196 { int getBlockSize(); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer { java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.accessibility.CaptioningManager$1 { void <init>(android.view.accessibility.CaptioningManager,android.os.Handler); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeCpuSamples(int,java.util.Set); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { java.lang.Object verifySession(java.lang.Object); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class libcore.io.IoBridge { int available(java.io.FileDescriptor); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { int writeString(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeFieldName(com.fasterxml.jackson.core.SerializableString); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeEndObject(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeFieldName(java.lang.String); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { void setSessionActivity(java.lang.Object,android.app.PendingIntent); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNull(); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(float); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { java.util.Map getAttributes(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { java.lang.Object verifyToken(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(double); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.net.Inet6Address { boolean isLinkLocalAddress(); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { int writeLoadClass(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(int); }
-keepclassmembers class libcore.io.IoBridge { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { int writeStackFrame(java.lang.StackTraceElement); }
-keepclassmembers class android.view.WindowLeaked { void <init>(java.lang.String); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int runLimit(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(long); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandStatus { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(java.math.BigInteger); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(java.math.BigDecimal); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandStatus { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeObject(java.lang.Object); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunLimit(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class dalvik.system.profiler.BinaryHprofWriter { void writeStackTrace(dalvik.system.profiler.HprofData$StackTrace); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeBoolean(boolean); }
-keepclassmembers class it.skarafaz.mercury.ssh.SshCommandStatus { int message(); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeObjectId(java.lang.Object); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunLimit(java.util.Set); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeRawValue(java.lang.String); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunStart(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int runStart(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeStartArray(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class libcore.io.IoBridge { void connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class java.net.Inet6Address { int getScopeId(); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunStart(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeStartObject(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$ICSMotionEventVersionImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeNumber(short); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunStart(java.util.Set); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForSignature(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { void addError(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForFieldSignature(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeString(com.fasterxml.jackson.core.SerializableString); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field fieldSerialPersistentFields(java.lang.Class); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { void <init>(ch.qos.logback.core.Context,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { void addError(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.Inet6Address { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeString(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeString(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeTypeId(java.lang.Object); }
-keepclassmembers class java.net.Inet6Address { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { int getRunLimit(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class resolveConstructorClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class,long); }
-keepclassmembers class java.text.AttributedString$AttributedIterator { char setIndex(int); }
-keepclassmembers class libcore.io.IoBridge { java.lang.String connectDetail(java.net.InetAddress,int,int,android.system.ErrnoException); }
-keepclassmembers class java.net.Inet6Address { java.lang.String toString(); }
-keepclassmembers class com.android.internal.util.Preconditions { java.lang.Object checkNotNull(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { void addStatus(ch.qos.logback.core.status.Status); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class java.text.MessageFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOption(java.io.FileDescriptor,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void <clinit>(); }
-keepclassmembers class com.android.internal.util.Preconditions { java.lang.Object checkNotNull(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { long getConstructorId(java.lang.Class); }
-keepclassmembers class libcore.io.IoBridge { boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean inSamePackage(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getConstructorSignature(java.lang.reflect.Constructor); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void <init>(); }
-keepclassmembers class java.text.MessageFormat$Field { void <clinit>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField getField(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { java.lang.Object getOrigin(); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.spi.ContextAwareImpl { void setContext(ch.qos.logback.core.Context); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void _get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor,int,long); }
-keepclassmembers class ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] fields(); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List getHierarchy(); }
-keepclassmembers class android.content.Context { int getColor(int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class libcore.io.ForwardingOs { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.Context { android.content.Context createDeviceProtectedStorageContext(); }
-keepclassmembers class libcore.io.IoBridge { int booleanToInt(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class android.content.Context { boolean isDeviceProtectedStorage(); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOption(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer { void <clinit>(); }
-keepclassmembers class android.os.storage.StorageManager$ObbActionListener { void <init>(android.os.storage.StorageManager); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getLoadFields(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getFieldSignature(java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass { byte getFlags(); }
-keepclassmembers class android.support.v4.app.ShareCompat$ShareCompatImplBase { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.reflect.Method); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer { void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperclass(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasClinit(java.lang.Class); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void requestPermissions(android.app.Activity,java.lang.String[],int); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isPrimitiveType(char); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(java.lang.Class); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(java.lang.Class); }
-keepclassmembers class android.os.storage.StorageManager$ObbActionListener { void <init>(android.os.storage.StorageManager,android.os.storage.StorageManager$1); }
-keepclassmembers class java.io.ObjectStreamClass { void resolveProperties(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.TokenBuffer { void writeEndArray(); }
-keepclassmembers class android.support.v7.transition.ActionBarTransition { void beginDelayedTransition(android.view.ViewGroup); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class android.widget.Spinner$2 { void onGlobalLayout(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class android.widget.Spinner$2 { void <init>(android.widget.Spinner); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.io.ForwardingOs { int getppid(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookupStreamClass(java.lang.Class); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List makeHierarchy(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.content.Context { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.WeakHashMap getCache(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class); }
-keepclassmembers class android.view.animation.OvershootInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { boolean booleanFromInt(int); }
-keepclassmembers class libcore.io.IoBridge { int getGroupSourceReqOp(int); }
-keepclassmembers class com.android.internal.app.IAppOpsService$Stub { com.android.internal.app.IAppOpsService asInterface(android.os.IBinder); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.content.Context { java.io.File getDataDir(); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble { int hashCode(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class java.io.ObjectStreamClass { void copyFieldAttributes(); }
-keepclassmembers class libcore.io.ForwardingOs { int gettid(); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteReplace(); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.system.StructPollfd { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class android.support.v4.provider.DocumentsContractApi21 { android.net.Uri prepareTreeUri(android.net.Uri); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteReplace(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadResolve(); }
-keepclassmembers class android.net.nsd.NsdManager { void <init>(android.content.Context,android.net.nsd.INsdManager); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadResolve(); }
-keepclassmembers class java.io.SerializationHandleMap { void resizeArrays(int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteObject(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class java.io.SerializationHandleMap { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.io.SerializationHandleMap { int get(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteObject(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.io.SerializationHandleMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class java.io.ObjectStreamClass { void initPrivateFields(java.io.ObjectStreamClass); }
-keepclassmembers class android.net.nsd.NsdManager { java.lang.Object getListener(int); }
-keepclassmembers class libcore.io.ForwardingOs { boolean isatty(java.io.FileDescriptor); }
-keepclassmembers class java.io.SerializationHandleMap { int put(java.lang.Object,int); }
-keepclassmembers class libcore.io.ForwardingOs { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean); }
-keepclassmembers class android.net.nsd.NsdManager { void removeListener(int); }
-keepclassmembers class java.io.SerializationHandleMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class libcore.io.ForwardingOs { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObjectNoData(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadObjectNoData(); }
-keepclassmembers class java.io.ObjectStreamClass { void setClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObject(); }
-keepclassmembers class android.net.nsd.NsdManager { android.net.nsd.NsdServiceInfo getNsdService(int); }
-keepclassmembers class java.io.SerializationHandleMap { void rehash(); }
-keepclassmembers class java.io.SerializationHandleMap { int remove(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { void setName(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterSendto(boolean,android.system.ErrnoException); }
-keepclassmembers class java.io.ObjectStreamClass { void setSuperclass(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectStreamClass { void setFlags(byte); }
-keepclassmembers class android.net.nsd.NsdManager { java.lang.String getNsdServiceInfoType(android.net.nsd.NsdServiceInfo); }
-keepclassmembers class android.net.nsd.NsdManager { void init(); }
-keepclassmembers class java.io.ObjectStreamClass { void setFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.io.ObjectStreamClass { int primitiveSize(java.lang.Class); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class java.io.ObjectStreamClass { void setSerialVersionUID(long); }
-keepclassmembers class libcore.io.IoBridge { int recvfrom(boolean,java.io.FileDescriptor,byte[],int,int,int,java.net.DatagramPacket,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { void setLoadFields(java.io.ObjectStreamField[]); }
-keepclassmembers class android.app.trust.ITrustManager$Stub { android.app.trust.ITrustManager asInterface(android.os.IBinder); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class libcore.io.ForwardingOs { void munmap(long,long); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class libcore.io.ForwardingOs { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcObjectClass(); }
-keepclassmembers class butterknife.ButterKnife$Finder$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.renderscript.Long4 { void <init>(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetTop(); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetRight(); }
-keepclassmembers class butterknife.ButterKnife$Finder$1 { android.content.Context getContext(java.lang.Object); }
-keepclassmembers class butterknife.ButterKnife$Finder$1 { android.view.View findView(java.lang.Object,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetBottom(); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetLeft(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { byte[] _realpath(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 add(android.renderscript.Long4,android.renderscript.Long4); }
-keepclassmembers class android.view.WindowInsets { boolean isRound(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterRecvfrom(boolean,boolean,android.system.ErrnoException); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class android.os.Handler { void handleMessage(android.os.Message); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor socket(boolean); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean _sendCLOSE(byte[],com.jcraft.jsch.ChannelSftp$Header); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer { void serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback); }
-keepclassmembers class java.util.Hashtable$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.os.Handler { void <init>(boolean); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.os.Handler { void dispatchMessage(android.os.Message); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcEnumClass(); }
-keepclassmembers class java.net.Socks4Message { void <init>(); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 add(android.renderscript.Long4,long); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canApplyTheme(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class java.net.Socks4Message { int getCommandOrResult(); }
-keepclassmembers class java.net.Socks4Message { int getPort(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void updateScroll(float); }
-keepclassmembers class java.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class android.net.nsd.NsdManager { android.os.Messenger getMessenger(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int); }
-keepclassmembers class java.net.Socks4Message { void setPort(int); }
-keepclassmembers class android.net.nsd.NsdManager { com.android.internal.util.AsyncChannel access$000(android.net.nsd.NsdManager); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int getChangingConfigurations(); }
-keepclassmembers class android.net.nsd.NsdManager { java.util.concurrent.CountDownLatch access$100(android.net.nsd.NsdManager); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.SftpATTRS _stat(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canConstantState(); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class java.net.Socks4Message { int getIP(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets replaceSystemWindowInsets(android.graphics.Rect); }
-keepclassmembers class android.net.nsd.NsdManager { java.lang.Object access$200(android.net.nsd.NsdManager,int); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class libcore.io.IoBridge { java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor); }
-keepclassmembers class java.net.Socks4Message { void setIP(byte[]); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class android.net.nsd.NsdManager { android.net.nsd.NsdServiceInfo access$300(android.net.nsd.NsdManager,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.SftpATTRS _stat(byte[]); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,int,int); }
-keepclassmembers class android.net.nsd.NsdManager { java.lang.String access$400(android.net.nsd.NsdManager,android.net.nsd.NsdServiceInfo); }
-keepclassmembers class android.net.nsd.NsdManager { void access$500(android.net.nsd.NsdManager,int); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class java.nio.ServerSocketChannelImpl { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class java.net.Socks4Message { void setCommandOrResult(int); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 sub(android.renderscript.Long4,android.renderscript.Long4); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class java.net.Socks4Message { java.lang.String getErrorString(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class java.net.Socks4Message { byte[] getBytes(); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class android.view.WindowInsets { java.lang.String toString(); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class java.net.Socks4Message { void setUserId(java.lang.String); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 sub(android.renderscript.Long4,long); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class libcore.io.IoBridge { int getSocketLocalPort(java.io.FileDescriptor); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 div(android.renderscript.Long4,android.renderscript.Long4); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class java.util.Currency { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromDouble(); }
-keepclassmembers class java.util.Currency { java.lang.Object readResolve(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void <init>(org.ccil.cowan.tagsoup.ElementType,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromInt(); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class java.net.Socks4Message { void setVersionNumber(int); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { void <init>(com.android.okhttp.Headers); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class java.net.Socks4Message { int getLength(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class ch.qos.logback.core.LogbackException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromObjectWith(); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void <init>(org.xml.sax.Locator); }
-keepclassmembers class android.renderscript.Long4 { android.renderscript.Long4 div(android.renderscript.Long4,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromString(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { java.lang.String access$700(com.android.okhttp.Request$ParsedHeaders); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { java.lang.String access$600(com.android.okhttp.Request$ParsedHeaders); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateUsingDefault(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring { void <init>(com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class,java.lang.Object); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { java.lang.String getPublicId(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.Element next(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateUsingDelegate(); }
-keepclassmembers class libcore.io.ForwardingOs { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { java.lang.String getSystemId(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setNext(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { int getLineNumber(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String name(); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { int getColumnNumber(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void access$1000(com.jcraft.jsch.ChannelSftp,byte[],long,int,com.jcraft.jsch.ChannelSftp$RequestQueue); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void setPublicId(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void setSystemId(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String namespace(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class java.net.Socks4Message { void setString(int,int,java.lang.String); }
-keepclassmembers class java.nio.ServerSocketChannelImpl { void implCloseSelectableChannel(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void setLineNumber(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String localName(); }
-keepclassmembers class org.xml.sax.helpers.LocatorImpl { void setColumnNumber(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int model(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.CreatorProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void initialize(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void access$1100(com.jcraft.jsch.ChannelSftp,com.jcraft.jsch.Buffer,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { int access$1200(com.jcraft.jsch.ChannelSftp,byte[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int flags(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onDetachedFromWindow(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream access$200(com.jcraft.jsch.ChannelSftp); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean canContain(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startScroll(int,int,int); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean access$400(com.jcraft.jsch.ChannelSftp,byte[],com.jcraft.jsch.ChannelSftp$Header); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureIncompleteParameter(com.fasterxml.jackson.databind.introspect.AnnotatedParameter); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromBoolean(); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.ChannelSftp$Header access$500(com.jcraft.jsch.ChannelSftp,com.jcraft.jsch.Buffer,com.jcraft.jsch.ChannelSftp$Header); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void anonymize(); }
-keepclassmembers class android.os.Handler { void removeCallbacksAndMessages(java.lang.Object); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class android.os.Handler { boolean hasMessages(int); }
-keepclassmembers class ch.qos.logback.core.LogbackException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { boolean canCreateFromLong(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void access$600(com.jcraft.jsch.ChannelSftp,long); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.Buffer access$700(com.jcraft.jsch.ChannelSftp); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { int access$800(com.jcraft.jsch.ChannelSftp); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void clean(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.ChannelSftp$RequestQueue access$900(com.jcraft.jsch.ChannelSftp); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void preclose(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean isPreclosed(); }
-keepclassmembers class com.jcraft.jsch.JSch$1 { void <init>(); }
-keepclassmembers class com.jcraft.jsch.JSch$1 { boolean isEnabled(int); }
-keepclassmembers class com.jcraft.jsch.JSch$1 { void log(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { int fill(byte[],int,int); }
-keepclassmembers class android.nfc.INfcTag$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.DialogFragment { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring { void handleResolvedForwardReference(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void notifyEdgeReached(int,int,int); }
-keepclassmembers class android.support.v4.app.DialogFragment { void dismissInternal(boolean); }
-keepclassmembers class android.os.Handler { android.os.IMessenger getIMessenger(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void fill(com.jcraft.jsch.Buffer,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class android.support.v4.app.DialogFragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class android.os.Handler { void handleCallback(android.os.Message); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(); }
-keepclassmembers class com.jcraft.jsch.Buffer { void <init>(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean continueWhenFinished(); }
-keepclassmembers class android.support.v4.app.DialogFragment { int getTheme(); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long); }
-keepclassmembers class com.jcraft.jsch.Buffer { void <init>(int); }
-keepclassmembers class com.jcraft.jsch.Buffer { void <init>(byte[]); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class com.jcraft.jsch.Buffer { com.jcraft.jsch.Buffer fromBytes(byte[][]); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean update(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onAttach(android.content.Context); }
-keepclassmembers class android.content.ClipboardManager { android.content.IClipboard getService(); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.support.v4.widget.DrawerLayout$SavedState$1 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getByte(); }
-keepclassmembers class com.jcraft.jsch.Buffer { void checkFreeSize(int); }
-keepclassmembers class android.content.ClipboardManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getByte(int); }
-keepclassmembers class android.support.v4.app.DialogFragment { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { void <init>(java.lang.Thread$UncaughtExceptionHandler); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class com.fasterxml.jackson.core.type.ResolvedType { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDestroyView(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { boolean shouldWrapException(java.lang.Throwable); }
-keepclassmembers class com.jcraft.jsch.Buffer { void getByte(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class android.content.ClipboardManager { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class android.view.InputEventSender { long nativeInit(java.lang.ref.WeakReference,android.view.InputChannel,android.os.MessageQueue); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean checkStatus(int[],com.jcraft.jsch.ChannelSftp$Header); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { void writeToParcel(android.os.Parcel); }
-keepclassmembers class android.view.InputEventSender { boolean nativeSendKeyEvent(long,int,android.view.KeyEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double); }
-keepclassmembers class com.jcraft.jsch.Buffer { void getByte(byte[]); }
-keepclassmembers class android.view.InputEventSender { void nativeDispose(long); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.view.InputEventSender { boolean nativeSendMotionEvent(long,int,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDetach(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class android.content.ClipboardManager { android.content.ClipData getPrimaryClip(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.view.InputEventSender { void <init>(android.view.InputChannel,android.os.Looper); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.lang.Runtime { java.lang.String[] initLibPaths(); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte[][] getBytes(int,java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte getCommand(); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getLength(); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getInt(); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.Drawable[]); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class com.jcraft.jsch.Buffer { long getLong(); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class android.content.ClipboardManager { boolean hasPrimaryClip(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void resetTransition(); }
-keepclassmembers class android.view.InputEventSender { void dispose(); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte[] getMPIntBits(); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$Entry$Type); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.view.InputEventSender { void dispose(boolean); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$300(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { boolean match(android.content.IntentFilter$AuthorityEntry); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$400(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onStart(); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte[] getMPInt(); }
-keepclassmembers class android.view.InputEventSender { boolean sendInputEvent(int,android.view.InputEvent); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onStop(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$100(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte[] getString(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void setStyle(int,int); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$500(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getOffSet(); }
-keepclassmembers class com.jcraft.jsch.Buffer { int getShort(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void setCancelable(boolean); }
-keepclassmembers class com.jcraft.jsch.Buffer { byte[] getString(int[],int[]); }
-keepclassmembers class android.support.v4.app.DialogFragment { void setupDialog(android.app.Dialog,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { long access$600(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putByte(byte); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putByte(byte[]); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { java.lang.Object next(); }
-keepclassmembers class com.jcraft.jsch.Buffer { long getUInt(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putByte(byte[],int,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.util.Vector glob_remote(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putInt(int); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putLong(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { org.apache.harmony.security.asn1.ASN1BitString getInstance(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.ClipboardManager { void setText(java.lang.CharSequence); }
-keepclassmembers class java.nio.channels.SocketChannel { java.nio.channels.SocketChannel open(java.net.SocketAddress); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <init>(); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class java.nio.channels.SocketChannel { java.nio.channels.SocketChannel open(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putMPInt(byte[]); }
-keepclassmembers class java.nio.channels.SocketChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.graphics.Path); }
-keepclassmembers class android.content.ClipboardManager { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { void gc(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Runtime { void loadLibrary(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.lang.String getCwd(); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putString(byte[]); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class com.jcraft.jsch.Buffer { void putString(byte[],int,int); }
-keepclassmembers class android.os.Handler$MessengerImpl { void <init>(android.os.Handler); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.jcraft.jsch.Buffer { void reset(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <clinit>(); }
-keepclassmembers class android.os.Handler$MessengerImpl { void <init>(android.os.Handler,android.os.Handler$1); }
-keepclassmembers class com.jcraft.jsch.Buffer { void rewind(); }
-keepclassmembers class com.jcraft.jsch.UserAuthKeyboardInteractive { void <init>(); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class com.jcraft.jsch.Buffer { void setOffSet(int); }
-keepclassmembers class com.jcraft.jsch.UserAuthKeyboardInteractive { boolean start(com.jcraft.jsch.Session); }
-keepclassmembers class com.jcraft.jsch.Buffer { void shift(); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator { void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter); }
-keepclassmembers class java.lang.Runtime { java.lang.String doLoad(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.jcraft.jsch.Buffer { void skip(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator { void <init>(java.lang.Class,com.fasterxml.jackson.databind.ser.BeanPropertyWriter); }
-keepclassmembers class android.transition.Fade { void <init>(); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator { boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator); }
-keepclassmembers class android.transition.Fade { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.Runtime { java.lang.String nativeLoad(java.lang.String,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { java.lang.String decode(byte[],char[],int,int); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator(); }
-keepclassmembers class android.transition.Fade { android.animation.Animator createAnimation(android.view.View,float,float); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator { java.lang.Object generateId(java.lang.Object); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { com.fasterxml.jackson.databind.introspect.AnnotatedParameter getIncompleteParameter(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class android.transition.Fade { android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.media.tv.ITvInputManager$Stub { android.media.tv.ITvInputManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { java.lang.String getValueTypeDesc(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { float getPageWidth(int); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdValueInstantiator { com.fasterxml.jackson.databind.JsonMappingException wrapException(java.lang.Throwable); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$4 { void <init>(android.support.v7.widget.ActivityChooserView); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.support.v4.app.FragmentActivity$1 { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { long countBytes(java.lang.String,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator { com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentActivity$1 { void handleMessage(android.os.Message); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$4 { void onChanged(); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class java.lang.Runtime { long freeMemory(); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class java.lang.Runtime { long totalMemory(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setViewPagerObserver(android.database.DataSetObserver); }
-keepclassmembers class java.lang.Runtime { long maxMemory(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List); }
-keepclassmembers class android.transition.Fade { android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class ch.qos.logback.core.util.CachingDateFormatter { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { byte[] encode(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(); }
-keepclassmembers class ch.qos.logback.core.util.CachingDateFormatter { java.lang.String format(long); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { void encode(byte[],int,java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.String toString(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean isLocalAbsolutePath(java.lang.String); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class ch.qos.logback.core.util.CachingDateFormatter { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class ch.qos.logback.core.util.CachingDateFormatter { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.view.GraphicBuffer { void <init>(int,int,int,int,long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean isPattern(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { void <init>(java.lang.Class); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { boolean isPattern(java.lang.String,byte[][]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithm(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { int compareTo(com.fasterxml.jackson.databind.type.ClassKey); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class android.support.v4.app.ListFragment { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithmName(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { com.jcraft.jsch.ChannelSftp$Header header(com.jcraft.jsch.Buffer,com.jcraft.jsch.ChannelSftp$Header); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.view.View findViewById(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncodedAuthenticatedAttributes(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.lang.String isUnique(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.AppCompatDelegate getDelegate(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List getAuthenticatedAttributes(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithmName(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate(); }
-keepclassmembers class android.app.ActivityManager { boolean isLowRamDeviceStatic(); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.lang.String localAbsolutePath(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { int tryAcquireShared(int); }
-keepclassmembers class android.view.GraphicBuffer { void destroy(); }
-keepclassmembers class android.view.GraphicBuffer { void nDestroyGraphicBuffer(long); }
-keepclassmembers class android.app.ActivityManager { boolean isHighEndGfx(); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { void <init>(com.jcraft.jsch.IdentityRepository,boolean); }
-keepclassmembers class android.view.GraphicBuffer { long access$000(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncryptedDigest(); }
-keepclassmembers class android.support.v4.app.ListFragment { void ensureList(); }
-keepclassmembers class com.fasterxml.jackson.databind.type.ClassKey { java.lang.String toString(); }
-keepclassmembers class android.view.GraphicBuffer { void <init>(int,int,int,int,long,android.view.GraphicBuffer$1); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { void <init>(com.jcraft.jsch.IdentityRepository); }
-keepclassmembers class android.view.GraphicBuffer { long nReadGraphicBufferFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.content.Intent getSupportParentActivityIntent(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void putHEAD(com.jcraft.jsch.Buffer,byte,int); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { boolean tryReleaseShared(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.ActionBar getSupportActionBar(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void putHEAD(byte,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.view.GraphicBuffer { void <clinit>(); }
-keepclassmembers class android.support.v4.app.ListFragment { void setListShown(boolean,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void invalidateOptionsMenu(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithm(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { int access$000(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal access$100(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { boolean add(byte[]); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.lang.String remoteAbsolutePath(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger access$200(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { void add(com.jcraft.jsch.Identity); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onContentChanged(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List access$700(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { void check(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendCLOSE(byte[]); }
-keepclassmembers class android.accounts.IAccountManager$Stub { android.accounts.IAccountManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v4.app.ListFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { boolean remove(byte[]); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { java.util.Vector getIdentities(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.pkcs7.AuthenticatedAttributes access$400(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.commons.lang3.text.FormattableUtils { java.lang.String toString(java.util.Formattable); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onStart(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List,org.apache.harmony.security.pkcs7.SignerInfo$1); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeFinished(android.support.v7.view.ActionMode); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeStarted(android.support.v7.view.ActionMode); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendINIT(); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportContentChanged(); }
-keepclassmembers class com.jcraft.jsch.IdentityRepository$Wrapper { void removeAll(); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onStop(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7 { com.fasterxml.jackson.databind.introspect.ObjectIdInfo withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <clinit>(); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.ListFragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.app.ListFragment { void onListItemClick(android.widget.ListView,android.view.View,int,long); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendOPEN(byte[],int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(android.view.View); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportActionBar(android.support.v7.widget.Toolbar); }
-keepclassmembers class android.support.v4.app.ListFragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onSupportNavigateUp(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarIndeterminate(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarVisibility(boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.ListFragment { void setListAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgress(int); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8JsonGenerator { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendOPENDIR(byte[]); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendOPENR(byte[]); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setTheme(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean supportRequestWindowFeature(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void supportInvalidateOptionsMenu(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendPacketPath(byte,byte[]); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendPacketPath(byte,byte[],java.lang.String); }
-keepclassmembers class android.service.fingerprint.IFingerprintService$Stub { android.service.fingerprint.IFingerprintService asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean supportShouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class com.android.okio.Okio$1 { void <init>(java.io.OutputStream); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class com.jcraft.jsch.DHG14 { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void supportNavigateUpTo(android.content.Intent); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8JsonGenerator { void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream); }
-keepclassmembers class android.content.res.Resources$Theme { void applyStyle(int,boolean); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class com.android.okio.Okio$1 { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendREAD(byte[],long,int,com.jcraft.jsch.ChannelSftp$RequestQueue); }
-keepclassmembers class android.net.LocalSocket { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD { void <init>(java.lang.Class); }
-keepclassmembers class libcore.util.CollectionUtils$1 { java.util.Iterator iterator(); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD { com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class); }
-keepclassmembers class android.content.res.Resources$Theme { void setTo(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class com.fasterxml.jackson.core.json.UTF8JsonGenerator { void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,byte[],int,boolean); }
-keepclassmembers class android.net.LocalSocket { void <init>(int); }
-keepclassmembers class com.android.okio.Okio$1 { void flush(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { void <clinit>(); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class android.net.LocalSocket { void <init>(android.net.LocalSocketImpl,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD { java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class libcore.util.CollectionUtils$1 { void <init>(java.lang.Iterable,boolean); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendREADDIR(byte[]); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendREALPATH(byte[]); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class android.net.LocalSocket { void implCreateIfNeeded(); }
-keepclassmembers class java.util.Objects { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.app.ActivityCompatHoneycomb { void invalidateOptionsMenu(android.app.Activity); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry { void <clinit>(); }
-keepclassmembers class android.net.LocalSocket { void connect(android.net.LocalSocketAddress); }
-keepclassmembers class java.util.Objects { int hashCode(java.lang.Object); }
-keepclassmembers class android.util.FloatMath { float sqrt(float); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray resolveAttributes(int[],int[]); }
-keepclassmembers class android.util.FloatMath { float floor(float); }
-keepclassmembers class com.android.okio.Okio$1 { void close(); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class java.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class android.util.FloatMath { float ceil(float); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class android.content.res.Resources$Theme { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.app.Activity { android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void sendSTAT(byte[]); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int following(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class android.net.LocalSocket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.util.Objects { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void checkOffset(int); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources getResources(); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources); }
-keepclassmembers class android.net.LocalSocket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int preceding(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(byte[]); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(java.io.InputStream); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String access$000(android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void throwStatusError(com.jcraft.jsch.Buffer,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { byte[] encode(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.net.LocalSocket { void close(); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { void <init>(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { int generateCacheKey(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void finish(java.lang.Object); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.app.Activity { void onStart(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.String toString(); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String getKey(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.DHG14 { java.lang.String getKeyType(); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.jcraft.jsch.DHG14 { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { void <init>(java.io.ObjectStreamClass); }
-keepclassmembers class com.jcraft.jsch.DHG14 { int getState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void sendResult(android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.DHG14 { void init(com.jcraft.jsch.Session,byte[],byte[],byte[],byte[]); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { java.io.EmulatedFields emulatedFields(); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { void <init>(); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { byte get(java.lang.String,byte); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { char get(java.lang.String,char); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int access$1702(android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$1800(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$1802(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { int get(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int access$2100(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int access$1700(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { long get(java.lang.String,long); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int access$2102(android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { java.lang.Object get(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2202(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2300(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$7 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2302(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.io.EmulatedFieldsForLoading { boolean get(java.lang.String,boolean); }
-keepclassmembers class android.database.CursorIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2500(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.database.CursorIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2402(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2502(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer,java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class java.math.Conversion { java.lang.String bigInteger2String(java.math.BigInteger,int); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class java.util.UUID { void init(); }
-keepclassmembers class java.util.UUID { void <init>(long,long); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2702(android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { boolean access$2700(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int access$2802(android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void skip(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { void assertLayoutStep(int); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.RectF { void setEmpty(); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.RectF); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { void <clinit>(); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.shapes.Shape getDrawableShape(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$State { int getItemCount(); }
-keepclassmembers class android.app.Activity { void onStop(); }
-keepclassmembers class java.util.UUID { java.util.UUID fromString(java.lang.String); }
-keepclassmembers class java.util.UUID { long getLeastSignificantBits(); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer { com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class java.util.UUID { long getMostSignificantBits(); }
-keepclassmembers class android.widget.ProgressBar { void initProgressBar(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi14 { java.lang.Object createRemoteControlClient(android.app.PendingIntent); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminate(boolean); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable); }
-keepclassmembers class com.jcraft.jsch.DHG14 { boolean next(com.jcraft.jsch.Buffer); }
-keepclassmembers class ch.qos.logback.classic.pattern.LoggerConverter { void <init>(); }
-keepclassmembers class java.util.UUID { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.UUID { int compareTo(java.util.UUID); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class android.app.Activity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.util.UUID { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator { void <init>(java.lang.Class); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethod { void <init>(java.lang.reflect.Method,java.lang.Class,org.greenrobot.eventbus.ThreadMode,int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator { com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethod { boolean equals(java.lang.Object); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethod { int hashCode(); }
-keepclassmembers class java.util.UUID { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi14 { void registerRemoteControlClient(android.content.Context,java.lang.Object); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toIsoLatin1Bytes(char[],int,int); }
-keepclassmembers class java.util.UUID { int hashCode(); }
-keepclassmembers class ch.qos.logback.core.net.ssl.ConfigurableSSLSocketFactory { void <init>(ch.qos.logback.core.net.ssl.SSLParametersConfiguration,javax.net.ssl.SSLSocketFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toAsciiBytes(char[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { void <init>(java.lang.reflect.Method,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethod { void checkMethodString(); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toUtf8Bytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toBigEndianUtf16Bytes(char[],int,int); }
-keepclassmembers class android.widget.ProgressBar { void applyIndeterminateTint(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi14 { void unregisterRemoteControlClient(android.content.Context,java.lang.Object); }
-keepclassmembers class java.nio.charset.Charsets { void isoLatin1BytesToChars(byte[],int,int,char[]); }
-keepclassmembers class java.util.UUID { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { java.lang.Class _notNullClass(java.lang.Class); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class android.widget.ProgressBar { void setProgressDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.charset.Charsets { void asciiBytesToChars(byte[],int,int,char[]); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class android.graphics.RectF { void union(float,float,float,float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter); }
-keepclassmembers class android.widget.ProgressBar { void applyProgressTints(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.Drawable,int,int); }
-keepclassmembers class android.widget.ProgressBar { void applyPrimaryProgressTint(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ProgressBar { void applyProgressBackgroundTint(); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class android.app.Activity { void onLowMemory(); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getProgressDrawable(); }
-keepclassmembers class android.os.PatternMatcher$1 { void <init>(); }
-keepclassmembers class android.os.PatternMatcher$1 { android.os.PatternMatcher createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.PatternMatcher$1 { android.os.PatternMatcher[] newArray(int); }
-keepclassmembers class android.os.PatternMatcher$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.widget.ProgressBar { void applySecondaryProgressTint(); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.graphics.RectF { void union(android.graphics.RectF); }
-keepclassmembers class java.text.DecimalFormat { void initNative(java.lang.String); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect getContentRect(); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$000(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.os.PatternMatcher$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ImeInputEventSender { void <init>(android.view.inputmethod.InputMethodManager,android.view.InputChannel,android.os.Looper); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$100(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { void <init>(android.graphics.pdf.PdfDocument$1); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect access$200(android.graphics.pdf.PdfDocument$PageInfo); }
-keepclassmembers class android.app.Activity { void initWindowDecorActionBar(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.math.Conversion { java.lang.String toDecimalScaledString(long,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(byte[]); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$002(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { android.graphics.Rect access$202(android.graphics.pdf.PdfDocument$PageInfo,android.graphics.Rect); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$102(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class android.graphics.pdf.PdfDocument$PageInfo { int access$602(android.graphics.pdf.PdfDocument$PageInfo,int); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class android.widget.Editor$DragLocalState { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName(java.lang.String); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.io.OptionalDataException { void <init>(java.lang.String); }
-keepclassmembers class java.text.DecimalFormat { void checkBufferAndFieldPosition(java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class ch.qos.logback.core.subst.NodeToStringTransformer$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class org.slf4j.helpers.NOPMDCAdapter { void clear(); }
-keepclassmembers class java.text.DecimalFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class org.slf4j.helpers.NOPMDCAdapter { void <init>(); }
-keepclassmembers class org.slf4j.helpers.NOPMDCAdapter { java.lang.String get(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getTintTarget(int,boolean); }
-keepclassmembers class java.math.Conversion { double bigInteger2Double(java.math.BigInteger); }
-keepclassmembers class java.io.OptionalDataException { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void disconnect(); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.jcraft.jsch.RequestEnv { void <init>(); }
-keepclassmembers class android.content.IntentFilter { void <init>(); }
-keepclassmembers class android.widget.ProgressBar { void setProgressDrawableTiled(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setAlpha(int); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean needsDividerAfter(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream get(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.jcraft.jsch.RequestEnv { void request(com.jcraft.jsch.Session,com.jcraft.jsch.Channel); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getCurrentDrawable(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean needsDividerBefore(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean performClick(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { javax.security.auth.x500.X500Principal getX500Principal(); }
-keepclassmembers class android.widget.ProgressBar { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.text.DecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName0(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean setFrame(int,int,int,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream get(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Object clone(); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.widget.ProgressBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.content.IntentFilter { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class com.jcraft.jsch.RequestEnv { void setEnv(byte[],byte[]); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ProgressBar { void onResolveDrawables(int); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean isStateful(); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,long); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.io.InputStream get(java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class java.text.DecimalFormat { java.text.DecimalFormatSymbols getDecimalFormatSymbols(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List,org.apache.harmony.security.x501.Name$1); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.ProgressBar { void postInvalidate(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicWidth(); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { byte[] getEncoded(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class java.text.DecimalFormat { int hashCode(); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.text.DecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <clinit>(); }
-keepclassmembers class android.app.ContextImpl$63 { void <init>(); }
-keepclassmembers class android.widget.ProgressBar { void refreshProgress(int,int,boolean); }
-keepclassmembers class android.bluetooth.IBluetooth$Stub { android.bluetooth.IBluetooth asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.ContextImpl$63 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void clearMutated(); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.IntentFilter { void addAction(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.util.List access$100(org.apache.harmony.security.x501.Name); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ProgressBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.lang.String access$100(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer { com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.util.ArrayList access$300(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.widget.ProgressBar { void setSecondaryProgress(int); }
-keepclassmembers class android.widget.ProgressBar { int getProgress(); }
-keepclassmembers class android.widget.ProgressBar { void doRefreshProgress(int,int,boolean,boolean); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ProgressBar { int getMax(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor,int,long); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.app.Activity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList); }
-keepclassmembers class android.app.Activity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void <init>(android.widget.TextView); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int); }
-keepclassmembers class android.app.Activity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.widget.ProgressBar { void startAnimation(); }
-keepclassmembers class android.widget.ProgressBar { void stopAnimation(); }
-keepclassmembers class android.app.Activity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi24 { java.lang.Object getActionSetProgress(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.io.OutputStream,com.jcraft.jsch.SftpProgressMonitor); }
-keepclassmembers class android.widget.ProgressBar { void setMax(int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { void <init>(com.jcraft.jsch.JSch,byte[],byte[],byte[]); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.widget.ProgressBar { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.widget.ProgressBar { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { int access$200(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.io.OutputStream); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void setVisibility(int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { void <init>(com.jcraft.jsch.JSch); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ProgressBar { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getEPArray(); }
-keepclassmembers class android.widget.ProgressBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { com.jcraft.jsch.KeyPair fromSSHAgent(com.jcraft.jsch.JSch,com.jcraft.jsch.Buffer); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableBounds(int,int); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.IntentFilter { void addDataScheme(java.lang.String); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getCArray(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { void dispose(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void get(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper$1 { void <init>(android.support.v7.view.menu.MenuPopupHelper); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] forSSHAgent(); }
-keepclassmembers class android.app.ContextImpl$14 { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.app.ContextImpl$14 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class android.app.UiModeManager { void <init>(); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.UiModeManager { void <clinit>(); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.widget.ProgressBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { java.lang.String _idFrom(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.widget.ProgressBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.service.fingerprint.FingerprintManager$1 { void <init>(android.service.fingerprint.FingerprintManager); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { void generate(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getEnd(); }
-keepclassmembers class android.app.UiModeManager { int getNightMode(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper$1 { void onDismiss(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getBegin(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class java.text.DecimalFormat { void setParseBigDecimal(boolean); }
-keepclassmembers class java.text.DecimalFormat { java.lang.String toPattern(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getKeyTypeName(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getPrivateKey(); }
-keepclassmembers class java.io.Console$ConsoleReader { void <init>(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getEQArray(); }
-keepclassmembers class android.view.GLES20Canvas { boolean isAvailable(); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class android.view.GLES20Canvas { void <init>(); }
-keepclassmembers class com.android.internal.os.AndroidPrintStream { void <init>(int,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void onSetTextAppearance(android.content.Context,int); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { void setupFinalizer(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment { void <init>(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.JoranException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ch.qos.logback.core.joran.spi.JoranException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment { it.skarafaz.mercury.fragment.ProgressDialogFragment newInstance(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void setViewport(int,int); }
-keepclassmembers class android.view.GLES20Canvas { long nCreateDisplayListRenderer(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { void <init>(); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nIsAvailable(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void setAllCaps(boolean); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { void setHighContrastText(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class android.view.GLES20Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.view.GLES20Canvas { void nSetHighContrastText(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void insertInorderBarrier(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { void <init>(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.view.GLES20Canvas { int onPreDraw(android.graphics.Rect); }
-keepclassmembers class android.widget.ProgressBar { void drawableStateChanged(); }
-keepclassmembers class android.widget.ProgressBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.type.TypeFactory); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { long _timestamp(java.util.Calendar); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getPublicKeyBlob(); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableState(); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void nInsertReorderBarrier(long,boolean); }
-keepclassmembers class java.text.DecimalFormat { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { void <clinit>(); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class it.skarafaz.mercury.fragment.ProgressDialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepareDirty(long,int,int,int,int,boolean); }
-keepclassmembers class android.widget.ProgressBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { byte[] getSignature(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void onPostDraw(); }
-keepclassmembers class android.view.GLES20Canvas { void nSetViewport(long,int,int); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { long _timestamp(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { long nFinishRecording(long); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class java.text.DecimalFormat { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class android.view.GLES20Canvas { int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.widget.ProgressBar { void onDetachedFromWindow(); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepare(long,boolean); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void nFinish(long); }
-keepclassmembers class android.widget.ProgressBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.widget.ProgressBar { void onAttachedToWindow(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { java.lang.String idFromValue(java.lang.Object); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class com.jcraft.jsch.KeyPairRSA { boolean parse(byte[]); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.CalendarSerializer { com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(java.lang.Boolean,java.text.DateFormat); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.GLES20Canvas { float[] getLineStorage(); }
-keepclassmembers class android.widget.ProgressBar { void scheduleAccessibilityEventSender(); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$Sampler { void <init>(dalvik.system.profiler.SamplingProfiler); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ProgressBar { java.util.ArrayList access$100(android.widget.ProgressBar); }
-keepclassmembers class android.view.GLES20Canvas { int nDrawRenderNode(long,long,android.graphics.Rect,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLayer(long,long,float,float); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String); }
-keepclassmembers class java.text.ParseException { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.HashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.ProgressBar { void access$200(android.widget.ProgressBar,int,int,boolean,boolean); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipPath(long,long,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,int,int,int,int,int); }
-keepclassmembers class java.util.HashMap$KeySet { boolean isEmpty(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.lang.Object getEmptyValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.util.Collection getKnownPropertyNames(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class java.text.DecimalFormat { void setRoundingMode(java.math.RoundingMode); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.lang.Object getNullValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader(); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.lang.Class handledType(); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { boolean isCachable(); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver { com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.view.MenuItem getItem(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.support.v7.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean isQwertyMode(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { void setCallback(android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean isShortcutsVisible(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.widget.ProgressBar { boolean access$302(android.widget.ProgressBar,boolean); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ActionException { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nGetClipBounds(long,android.graphics.Rect); }
-keepclassmembers class ch.qos.logback.core.joran.spi.ActionException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.view.SubMenu setHeaderTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nQuickReject(long,float,float,float,float); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { void setQwertyMode(boolean); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager { boolean access$000(java.lang.Object,org.greenrobot.eventbus.util.ThrowableFailureEvent); }
-keepclassmembers class android.app.DialogFragment { void onDetach(); }
-keepclassmembers class android.app.DialogFragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class android.app.DialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { java.lang.String getHome(); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nTranslate(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void rotate(float); }
-keepclassmembers class android.support.v4.media.MediaDescriptionCompatApi21$Builder { java.lang.Object build(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void translate(float,float); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,float,float,float,float,int); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$Sampler { void <init>(dalvik.system.profiler.SamplingProfiler,dalvik.system.profiler.SamplingProfiler$1); }
-keepclassmembers class android.view.GLES20Canvas { void scale(float,float); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$Sampler { boolean access$200(dalvik.system.profiler.SamplingProfiler$Sampler); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResultInner(android.content.IntentSender,int,android.content.Intent,int,int,android.app.Activity,android.os.Bundle); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager { void checkLogException(org.greenrobot.eventbus.util.ThrowableFailureEvent); }
-keepclassmembers class dalvik.system.profiler.SamplingProfiler$Sampler { boolean access$102(dalvik.system.profiler.SamplingProfiler$Sampler,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nRotate(long,float); }
-keepclassmembers class android.view.GLES20Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.view.GLES20Canvas { void nScale(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class org.greenrobot.eventbus.util.ErrorDialogManager { boolean isInExecutionScope(java.lang.Object,org.greenrobot.eventbus.util.ThrowableFailureEvent); }
-keepclassmembers class android.view.GLES20Canvas { void nConcatMatrix(long,long); }
-keepclassmembers class android.app.DialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.view.GLES20Canvas { int save(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils$Null { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { int nSave(long,int); }
-keepclassmembers class android.os.ZygoteStartFailedEx { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.ZygoteStartFailedEx { void <init>(java.lang.String); }
-keepclassmembers class android.app.DialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.os.ZygoteStartFailedEx { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.view.GLES20Canvas { int save(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { void <init>(java.util.TimeZone,java.util.Locale,int); }
-keepclassmembers class android.app.DialogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { void nGetMatrix(long,long); }
-keepclassmembers class android.app.DialogFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void init(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate { java.util.Date parse(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.JsonDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.view.GLES20Canvas { int getSaveCount(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { int estimateLength(); }
-keepclassmembers class android.app.DialogFragment { void onStart(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate { java.lang.String format(java.util.Date); }
-keepclassmembers class android.view.GLES20Canvas { int nGetSaveCount(long); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.app.DialogFragment { void onStop(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toNanos(long); }
-keepclassmembers class android.view.GLES20Canvas { void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate { void <clinit>(); }
-keepclassmembers class android.app.DialogFragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2Impl { void <init>(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void <init>(android.view.View); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { void restore(); }
-keepclassmembers class android.view.GLES20Canvas { void restoreToCount(int); }
-keepclassmembers class android.view.GLES20Canvas { void nRestore(long); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas { void nRestoreToCount(long,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawArc(long,float,float,float,float,float,float,boolean,long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <init>(); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.view.GLES20Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { org.apache.harmony.security.asn1.ASN1Boolean getInstance(); }
-keepclassmembers class android.support.v7.widget.SearchView$8 { void <init>(android.support.v7.widget.SearchView); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.bluetooth.BluetoothAdapter { void <init>(android.bluetooth.IBluetoothManager); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.bluetooth.BluetoothAdapter { android.bluetooth.BluetoothAdapter getDefaultAdapter(); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { void <init>(it.skarafaz.mercury.activity.MainActivity); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onForwardingStopped(); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { it.skarafaz.mercury.manager.ExportPublicKeyStatus doInBackground(java.lang.Void[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <clinit>(); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { void onPostExecute(it.skarafaz.mercury.manager.ExportPublicKeyStatus); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEvent { org.xml.sax.Locator getLocator(); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEvent { java.lang.String getQName(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void clearCallbacks(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.core.joran.event.SaxEvent { void <init>(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { void onPreExecute(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPatch(long,long,long,float,float,float,float,long); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouchObserved(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainActivity$3 { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,long); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { void checkIndex(int); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouchForwarded(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 { void <init>(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 { java.lang.String withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void onLongPress(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { void ensureBufferSize(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.app.Activity { void finish(boolean); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.util.List getAllInterfaces(java.lang.Class); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { android.view.View access$900(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { void <init>(); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { void generatePrivateKey(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 { java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { it.skarafaz.mercury.manager.SshManager getInstance(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { void generatePublicKey(java.io.File); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer { void <init>(com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer,java.text.DateFormat,java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { void <clinit>(); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer { java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void access$1000(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getKnownHostsFile(); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { void getAllInterfaces(java.lang.Class,java.util.HashSet); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class android.support.v4.app.ShareCompat$ShareCompatImplJB { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getSshDir(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder append(int,float,float,float,float,int); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { it.skarafaz.mercury.manager.ExportPublicKeyStatus exportPublicKey(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.lang.String getPublicKeyContent(); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getPublicKeyExportedFile(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[]); }
-keepclassmembers class android.content.IntentFilter { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getPrivateKeyFile(); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getPublicKeyFile(); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$10 { void onInput(com.afollestad.materialdialogs.MaterialDialog,java.lang.CharSequence); }
-keepclassmembers class it.skarafaz.mercury.activity.MainEventSubscriber$10 { void <init>(it.skarafaz.mercury.activity.MainEventSubscriber); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { android.view.inputmethod.SparseRectFArray build(); }
-keepclassmembers class java.io.InputStreamReader { int read(); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[]); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getKnownHosts(); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { boolean isEmpty(); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getPrivateKey(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { int[] access$200(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder); }
-keepclassmembers class android.location.GpsMeasurementListenerTransport { void <init>(android.content.Context,android.location.ILocationManager); }
-keepclassmembers class it.skarafaz.mercury.manager.SshManager { java.io.File getPublicKey(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { float[] access$300(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { void reset(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { int access$100(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { int[] access$400(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder); }
-keepclassmembers class android.content.IntentFilter { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder { void <clinit>(); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class android.graphics.PointF { void set(android.graphics.PointF); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void waitForRelroCreationCompleted(boolean); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxyUtil { void build(ch.qos.logback.classic.spi.ThrowableProxy,java.lang.Throwable,ch.qos.logback.classic.spi.ThrowableProxy); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void <clinit>(); }
-keepclassmembers class android.graphics.PointF { void <init>(float,float); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class android.graphics.PointF { void offset(float,float); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,float,float,float,long); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void <init>(android.content.Context); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxyUtil { int findNumberOfCommonFrames(java.lang.StackTraceElement[],ch.qos.logback.classic.spi.StackTraceElementProxy[]); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void <init>(android.content.Context); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class android.graphics.PointF { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.PointF { void <init>(android.graphics.Point); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,long,long,long,long); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class java.io.InputStreamReader { boolean isOpen(); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class java.nio.MemoryBlock { java.nio.MemoryBlock mmap(java.io.FileDescriptor,long,long,java.nio.channels.FileChannel$MapMode); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { android.support.v4.app.NotificationManagerCompat from(android.content.Context); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class android.graphics.PointF { int hashCode(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.Object,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int next(int,int,boolean); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ch.qos.logback.classic.spi.ThrowableProxyUtil { ch.qos.logback.classic.spi.StackTraceElementProxy[] steArrayToStepArray(java.lang.StackTraceElement[]); }
-keepclassmembers class android.content.IContentService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.GLES20Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.os.Messenger$1 { android.os.Messenger createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class android.graphics.PointF { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class android.graphics.PointF { java.lang.String toString(); }
-keepclassmembers class android.content.IntentFilter { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int measureChildView(android.view.View,int,int,int); }
-keepclassmembers class android.content.IntentFilter { void <init>(android.os.Parcel,android.content.IntentFilter$1); }
-keepclassmembers class android.content.IContentService$Stub$Proxy { void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int); }
-keepclassmembers class java.nio.MemoryBlock { void <init>(long,long); }
-keepclassmembers class java.nio.MemoryBlock { java.nio.MemoryBlock wrapFromJni(long,long); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { boolean isAssignable(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.nio.MemoryBlock { byte[] array(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLines(long,float[],int,int,long); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { boolean isAssignable(java.lang.Class,java.lang.Class,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class android.os.Messenger$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.Messenger$1 { void <init>(); }
-keepclassmembers class java.nio.MemoryBlock { void free(); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawOval(long,float,float,float,float,long); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int positionChild(android.view.View,int,int,int,boolean); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRects(long,long,long); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl { void <init>(); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void setVisibility(int); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class java.nio.MemoryBlock { void pokeByteArray(int,byte[],int,int); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class java.nio.MemoryBlock { boolean isFreed(); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.nio.MemoryBlock { boolean isAccessible(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPath(long,long,long); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { double parseDouble(java.lang.String); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _isNegInf(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { void <init>(java.lang.Class); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _isNaN(java.lang.String); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _isPosInf(java.lang.String); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class java.nio.MemoryBlock { byte peekByte(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void setContentHeight(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer access$100(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer access$900(); }
-keepclassmembers class android.view.GLES20Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class java.nio.MemoryBlock { void peekByteArray(int,byte[],int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.app.ActivityOptions { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer { void <init>(java.lang.Class,java.lang.Boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { com.android.okhttp.OkAuthenticator$Credential basic(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _parseBooleanFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void <init>(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { java.lang.String getHeaderValue(); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class android.app.ActivityOptions { void abort(); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class java.nio.MemoryBlock { long toLong(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.Class primitiveToWrapper(java.lang.Class); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.nio.MemoryBlock { long getSize(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean _hasTextualNull(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRect(long,float,float,float,float,long); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class java.nio.MemoryBlock { void <init>(long,long,java.nio.MemoryBlock$1); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { int getNextColorIndex(); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void invalidateSelf(); }
-keepclassmembers class android.ddm.DdmHandleHello { void <init>(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void draw(android.graphics.Canvas,android.graphics.Rect); }
-keepclassmembers class java.io.DataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class java.io.DataOutputStream { void writeByte(int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { float getEndTrim(); }
-keepclassmembers class java.io.DataOutputStream { void writeBytes(java.lang.String); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { float getStartTrim(); }
-keepclassmembers class android.ddm.DdmHandleHello { void register(); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.Class wrapperToPrimitive(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void goToNextColor(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setArrowDimensions(float,float); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void resetOriginals(); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setAlpha(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void <clinit>(); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setCenterRadius(double); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class ch.qos.logback.core.status.ErrorStatus { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setColorIndex(int); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class ch.qos.logback.core.status.ErrorStatus { void <init>(java.lang.String,java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setEndTrim(float); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setColors(int[]); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.view.animation.AnimationSet { boolean hasAlpha(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setInsets(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int size(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.ddm.DdmHandleHello { void <clinit>(); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer { void <init>(); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setShowArrow(boolean); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void storeOriginals(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setStartTrim(float); }
-keepclassmembers class com.fasterxml.jackson.core.JsonStreamContext { void <init>(); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setStrokeWidth(float); }
-keepclassmembers class com.fasterxml.jackson.core.JsonStreamContext { java.lang.String getTypeDesc(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.core.JsonStreamContext { boolean inObject(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer { void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.Transition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.core.JsonStreamContext { boolean inArray(); }
-keepclassmembers class com.fasterxml.jackson.core.JsonStreamContext { boolean inRoot(); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartTime(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { java.util.EnumMap constructMap(); }
-keepclassmembers class android.view.animation.AnimationSet { long getStartTime(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.util.InternCache { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewGroupCompatLollipop { int getNestedScrollAxes(android.view.ViewGroup); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.view.animation.AnimationSet { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.core.util.InternCache { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.pattern.CallerDataConverter { void <init>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.util.InternCache { java.lang.String intern(java.lang.String); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.transition.Transition { int[] parseMatchOrder(java.lang.String); }
-keepclassmembers class ch.qos.logback.classic.pattern.CallerDataConverter { void addEvaluator(ch.qos.logback.core.boolex.EventEvaluator); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Collection values(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.afollestad.materialdialogs.MaterialDialog$3 { void <init>(com.afollestad.materialdialogs.MaterialDialog); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { java.util.List access$000(org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.view.animation.AnimationSet { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class ch.qos.logback.core.joran.JoranConfiguratorBase { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.JoranConfiguratorBase { void addImplicitRules(ch.qos.logback.core.joran.spi.Interpreter); }
-keepclassmembers class android.transition.Transition { long getDuration(); }
-keepclassmembers class ch.qos.logback.core.joran.JoranConfiguratorBase { void addInstanceRules(ch.qos.logback.core.joran.spi.RuleStore); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class android.transition.Transition { long getStartDelay(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class android.transition.Transition { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class android.app.ActivityOptions { void abort(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { boolean isCachable(); }
-keepclassmembers class android.transition.Transition { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setStartDelay(long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer { com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void run(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void setAgentForwarding(boolean); }
-keepclassmembers class android.transition.Transition { void setMatchOrder(int[]); }
-keepclassmembers class android.opengl.GLES20 { void glAttachShader(int,int); }
-keepclassmembers class android.transition.Transition { boolean isValidMatch(int); }
-keepclassmembers class android.transition.Transition { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class android.view.animation.AnimationSet { void initialize(int,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class ch.qos.logback.classic.pattern.CallerDataConverter { void start(); }
-keepclassmembers class android.transition.Transition { boolean alreadyContains(int[],int); }
-keepclassmembers class ch.qos.logback.core.joran.JoranConfiguratorBase { void buildInterpreter(); }
-keepclassmembers class java.util.zip.ZipFile$1 { boolean hasMoreElements(); }
-keepclassmembers class java.util.zip.ZipFile$1 { void <init>(java.util.zip.ZipFile,java.util.Iterator); }
-keepclassmembers class android.transition.Transition { void matchItemIds(android.util.ArrayMap,android.util.ArrayMap,android.util.LongSparseArray,android.util.LongSparseArray); }
-keepclassmembers class android.view.animation.AnimationSet { void reset(); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.AnimationSet clone(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.animation.AnimationSet { void restoreChildrenStartOffset(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.util.zip.ZipEntry nextElement(); }
-keepclassmembers class android.opengl.GLES20 { int glCreateProgram(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.lang.Object nextElement(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.transition.Transition { void matchIds(android.util.ArrayMap,android.util.ArrayMap,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class android.view.animation.AnimationSet { java.util.List getAnimations(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.graphics.drawable.Drawable); }
-keepclassmembers class android.transition.Transition { void matchInstances(android.util.ArrayMap,android.util.ArrayMap); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.Animation clone(); }
-keepclassmembers class android.opengl.GLES20 { void glDrawArrays(int,int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void remove(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.content.pm.IOnAppsChangedListener$Stub { void <init>(); }
-keepclassmembers class android.transition.Transition { void matchNames(android.util.ArrayMap,android.util.ArrayMap,android.util.ArrayMap,android.util.ArrayMap); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void setPty(boolean); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { boolean isEmpty(); }
-keepclassmembers class android.transition.Transition { void addUnmatched(android.util.ArrayMap,android.util.ArrayMap); }
-keepclassmembers class android.support.v4.widget.MaterialProgressDrawable$Ring { void setRotation(float); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void <init>(); }
-keepclassmembers class android.app.Activity { boolean shouldShowRequestPermissionRationale(java.lang.String); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void remove(android.view.View); }
-keepclassmembers class android.transition.Transition { void matchStartAndEnd(android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp { void start(); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void dump(android.util.Printer,java.lang.String); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <init>(); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class android.transition.Transition { void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.view.GLES20RecordingCanvas { android.view.GLES20RecordingCanvas obtain(android.view.RenderNode); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.app.Activity { void requestPermissions(java.lang.String[],int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void recycle(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { void <init>(ch.qos.logback.core.Context); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { long finishRecording(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { boolean contextHasStatusListener(ch.qos.logback.core.Context); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetInvalidated(); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { java.util.List filterStatusListByTimeThreshold(java.util.List,long); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { java.math.BigInteger createBigInteger(java.lang.String); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <clinit>(); }
-keepclassmembers class android.os.Messenger { void <init>(android.os.Handler); }
-keepclassmembers class android.os.Messenger { void send(android.os.Message); }
-keepclassmembers class android.opengl.GLES20 { void glReadPixels(int,int,int,int,int,int,java.nio.Buffer); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.os.Messenger { android.os.IBinder getBinder(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { boolean containsMatch(long,int,java.lang.String); }
-keepclassmembers class android.content.pm.ApplicationInfo { boolean hasRtlSupport(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.os.Messenger { void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(android.content.pm.ApplicationInfo); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void init(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.os.Messenger { void <init>(android.os.IBinder); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { java.lang.Integer createInteger(java.lang.String); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.os.Messenger { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { int getHighestLevel(long); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class dalvik.system.CloseGuard { void setReporter(dalvik.system.CloseGuard$Reporter); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { boolean hasXMLParsingErrors(long); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void wrapOnScrollChangedListener(android.widget.PopupWindow); }
-keepclassmembers class java.security.Security { int insertProviderAt(java.security.Provider,int); }
-keepclassmembers class dalvik.system.CloseGuard { void setEnabled(boolean); }
-keepclassmembers class java.security.Security { int addProvider(java.security.Provider); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard$Reporter getReporter(); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class dalvik.system.CloseGuard { void warnIfOpen(); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void setSupportOverlapAnchor(boolean); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class ch.qos.logback.core.status.StatusUtil { boolean noXMLParsingErrorsOccurred(long); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class java.util.zip.Deflater { void <init>(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlText(int); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class android.content.pm.ApplicationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlTextOrFormat(int); }
-keepclassmembers class java.util.zip.Deflater { void <init>(int,boolean); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class java.security.Security { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$200(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.Toolbar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void <init>(android.content.Context); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl { void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,int); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class com.android.okhttp.ResponseSource { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl { void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.Toolbar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,long,int); }
-keepclassmembers class com.android.okhttp.ResponseSource { void <clinit>(); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(); }
-keepclassmembers class java.util.zip.Deflater { void end(); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(long); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.zip.Deflater { void finish(); }
-keepclassmembers class android.os.Vibrator { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class android.view.GLES20RecordingCanvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.os.Vibrator { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,java.util.Map); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { void close(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { boolean discardStream(); }
-keepclassmembers class java.util.zip.Deflater { boolean needsInput(); }
-keepclassmembers class android.transition.Transition { android.util.ArrayMap getRunningAnimators(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.transition.Transition { void runAnimators(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,java.net.CacheRequest); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[]); }
-keepclassmembers class android.opengl.GLES20 { void glUseProgram(int); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[],int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class java.nio.channels.Pipe$SinkChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.transition.Transition { void runAnimator(android.animation.Animator,android.util.ArrayMap); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[]); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,int); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[],int,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class java.security.Security { void renumProviders(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class java.util.zip.Deflater { void setLevelsImpl(int,int,long); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addCustomViewsWithGravity(java.util.List,int); }
-keepclassmembers class java.util.zip.Deflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[]); }
-keepclassmembers class ch.qos.logback.core.subst.Token$Type { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(android.os.Parcel,android.content.pm.ApplicationInfo$1); }
-keepclassmembers class java.util.zip.Deflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class ch.qos.logback.core.subst.Token$Type { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Short { void <init>(java.lang.String); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.subst.Token$Type { ch.qos.logback.core.subst.Token$Type[] values(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManager { void <init>(); }
-keepclassmembers class java.security.Security { void access$100(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfigBase,java.util.Map); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void <init>(); }
-keepclassmembers class java.lang.Package { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.reflect.Field,java.lang.reflect.Field); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { java.lang.Class findMixInClassFor(java.lang.Class); }
-keepclassmembers class java.util.zip.Deflater { void checkOpen(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.zip.Deflater { long createStream(int,int,boolean); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { java.lang.Class getActiveView(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addSystemView(android.view.View,boolean); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void <init>(); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes(); }
-keepclassmembers class java.security.Security { void registerDefaultProviders(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { java.lang.String getRootName(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfigBase { com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class java.lang.Short { double doubleValue(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureContentInsets(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.transition.Transition { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureMenu(); }
-keepclassmembers class android.app.ActivityThread$H { void <init>(android.app.ActivityThread); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class java.lang.Short { long longValue(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher$Single { void <init>(java.lang.Class); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ViewMatcher$Single { boolean isVisibleForView(java.lang.Class); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetIds(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargets(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String,int); }
-keepclassmembers class ch.qos.logback.classic.sift.AppenderFactoryUsingJoran { void <init>(java.util.List,java.lang.String,java.util.Map); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetNames(); }
-keepclassmembers class android.nfc.NfcAdapter$1 { void <init>(android.nfc.NfcAdapter); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetTypes(); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureLogoView(); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class java.lang.Short { float floatValue(); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(); }
-keepclassmembers class java.lang.Short { java.lang.String toString(short); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureNavButtonView(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void <clinit>(); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void <init>(); }
-keepclassmembers class java.lang.Package { java.lang.String getImplementationVersion(); }
-keepclassmembers class java.lang.Package { java.lang.String getName(); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variants { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread$H { void handleMessage(android.os.Message); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void _appendInt(int,byte[],int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { com.fasterxml.jackson.databind.JsonDeserializer findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildTop(android.view.View,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String); }
-keepclassmembers class java.lang.Package { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void _appendShort(int,char[],int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureMenuView(); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.io.MergedStream { void _free(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { java.lang.Class handledType(); }
-keepclassmembers class com.fasterxml.jackson.core.io.MergedStream { int available(); }
-keepclassmembers class com.fasterxml.jackson.core.Base64Variants { com.fasterxml.jackson.core.Base64Variant getDefaultVariant(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { byte[] _asBytes(java.util.UUID); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildVerticalGravity(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getHorizontalMargins(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.core.io.MergedStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { boolean isEmpty(java.util.UUID); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getVerticalMargins(android.view.View); }
-keepclassmembers class java.lang.Package { java.lang.String toString(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getViewListMeasuredWidth(java.util.List,int[]); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventJellyBeanImpl { void <init>(); }
-keepclassmembers class java.lang.Package { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void serialize(java.util.UUID,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class android.view.ViewRootImpl$ConsumeBatchedInputRunnable { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.view.ViewRootImpl$ConsumeBatchedInputRunnable { void run(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class dalvik.system.profiler.HprofData$StackTrace { void <init>(); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context); }
-keepclassmembers class android.animation.ObjectAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isChildOrHidden(android.view.View); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.content.ContentResolver { java.lang.String getType(android.net.Uri); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer { void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildLeft(android.view.View,int,int[],int); }
-keepclassmembers class android.net.ProxyInfo$1 { void <init>(); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class android.net.ProxyInfo$1 { android.net.ProxyInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class android.content.ContentResolver { void <init>(android.content.Context); }
-keepclassmembers class android.transition.Transition { android.transition.TransitionValues getTransitionValues(android.view.View,boolean); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode[] values(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean); }
-keepclassmembers class android.net.ProxyInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.security.Signature$SignatureImpl { byte[] engineSign(); }
-keepclassmembers class android.content.ContentResolver { java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.security.Signature$SignatureImpl { boolean engineVerify(byte[]); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitSign(java.security.PrivateKey); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void <init>(java.lang.String,java.security.Provider); }
-keepclassmembers class ch.qos.logback.core.joran.action.NestedComplexPropertyIA$1 { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]); }
-keepclassmembers class com.fasterxml.jackson.core.io.MergedStream { void close(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDeserializer { boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class com.fasterxml.jackson.core.io.MergedStream { void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(java.security.Key); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.UUIDSerializer { void _appendInt(int,char[],int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonAutoDetect$1 { void <clinit>(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildRight(android.view.View,int,int[],int); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class android.transition.Transition { void resume(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { void <init>(org.apache.commons.lang3.reflect.TypeUtils$1); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type[]); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { java.lang.reflect.WildcardType build(); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class android.support.v7.widget.Toolbar { void measureChildConstrained(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class com.jcraft.jsch.ChannelSftp$Header { void <init>(com.jcraft.jsch.ChannelSftp); }
-keepclassmembers class android.transition.Transition { void playTransition(android.view.ViewGroup); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void <init>(android.support.v7.widget.AdapterHelper$Callback); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name3 { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { org.apache.harmony.security.asn1.ASN1OctetString getInstance(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name3 { boolean equals(int); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildHorizontalGravity(int); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.SeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name3 { boolean equals(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void postShowOverflowMenu(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.Name3 { boolean equals(int[],int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.SeekBar { void onStartTrackingTouch(); }
-keepclassmembers class android.transition.Transition { boolean areValuesChanged(android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldCollapse(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <clinit>(); }
-keepclassmembers class android.transition.Transition { boolean isValueChanged(android.transition.TransitionValues,android.transition.TransitionValues,java.lang.String); }
-keepclassmembers class android.widget.SeekBar { void onStopTrackingTouch(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord$TransitionState { void <init>(android.support.v4.app.BackStackRecord); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.SeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void setEpicenter(android.graphics.Rect); }
-keepclassmembers class android.transition.Transition { void animate(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.transition.Transition { void start(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(android.app.ActivityTransitionCoordinator$1); }
-keepclassmembers class android.transition.Transition { void end(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class java.net.URLDecoder { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.os.Environment$UserEnvironment { void <init>(int); }
-keepclassmembers class android.content.ContentResolver { java.io.InputStream openInputStream(android.net.Uri); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int tableSizeFor(int); }
-keepclassmembers class android.content.ContentResolver { android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int spread(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldLayout(android.view.View); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class dalvik.system.profiler.HprofData$Sample { int hashCode(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class dalvik.system.profiler.HprofData$Sample { void <init>(dalvik.system.profiler.HprofData$StackTrace,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Class comparableClassFor(java.lang.Object); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetEnd(); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl { void <init>(); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] getExternalDirsForApp(); }
-keepclassmembers class dalvik.system.profiler.HprofData$Sample { java.lang.String toString(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition removeListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetStart(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(); }
-keepclassmembers class android.transition.Transition { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$TRIM_PATH_END { void <clinit>(); }
-keepclassmembers class android.transition.Transition { android.graphics.Rect getEpicenter(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { void collapseActionView(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.transition.Transition { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class android.transition.Transition { void setPropagation(android.transition.TransitionPropagation); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class android.transition.Transition { android.transition.PathMotion getPathMotion(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class dalvik.system.profiler.HprofData$Sample { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class dalvik.system.profiler.HprofData$Sample { void <init>(dalvik.system.profiler.HprofData$StackTrace,int,dalvik.system.profiler.HprofData$1); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void <init>(com.fasterxml.jackson.databind.deser.impl.MethodProperty,java.lang.reflect.Method); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetRight(); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { boolean canFindInPreLayout(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetStart(); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void allocArrays(int); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl { void setSearchableInfo(android.view.View,android.content.ComponentName); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetEnd(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { java.lang.Object readResolve(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void setTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl { android.view.View newSearchView(android.content.Context); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetLeft(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.graphics.drawable.Drawable getNavigationIcon(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.Menu getMenu(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getNavigationContentDescription(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { java.lang.Object setAndReturn(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(java.util.Map); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getSubtitle(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.app.ActivityThread$H { void maybeSnapshot(); }
-keepclassmembers class android.transition.Transition { void forceVisibility(int,boolean); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class java.util.EnumSet$SerializationProxy { java.lang.Object readResolve(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean hasExpandedActionView(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class org.slf4j.helpers.MarkerIgnoringBase { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean casTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int,float,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { com.fasterxml.jackson.databind.deser.impl.MethodProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class java.util.EnumSet$SerializationProxy { java.lang.Enum[] access$102(java.util.EnumSet$SerializationProxy,java.lang.Enum[]); }
-keepclassmembers class java.util.EnumSet$SerializationProxy { java.lang.Class access$202(java.util.EnumSet$SerializationProxy,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.Toolbar { void inflateMenu(int); }
-keepclassmembers class android.transition.Transition { java.lang.String getName(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$2 { void onGlobalLayout(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class java.util.EnumSet$SerializationProxy { void <init>(java.util.EnumSet$1); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int size(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.MethodProperty { com.fasterxml.jackson.databind.deser.impl.MethodProperty withName(com.fasterxml.jackson.databind.PropertyName); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { int updatePositionWithPostponed(int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void clear(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onDetachedFromWindow(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.DecorToolbar getWrapper(); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class org.slf4j.helpers.MarkerIgnoringBase { java.lang.String getName(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int,float); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class org.slf4j.helpers.MarkerIgnoringBase { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class java.util.EnumSet$SerializationProxy { void <init>(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$2 { void <init>(android.widget.Spinner$DropdownPopup); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class android.content.ContentResolver { android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class android.content.ContentResolver { android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.Response$Body { void <init>(); }
-keepclassmembers class android.graphics.Path { void set(android.graphics.Path); }
-keepclassmembers class android.app.ActivityThread$H { void <init>(android.app.ActivityThread,android.app.ActivityThread$1); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollX(int); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2 { java.lang.Throwable doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollX(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setRemovedCount(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setAddedCount(int); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class java.lang.Class { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBeforeText(java.lang.CharSequence); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList access$000(android.transition.Transition); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.sql.Date { void <init>(long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class java.sql.Date { java.lang.String toString(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class com.android.okhttp.Response$Body { void close(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.Response$Body { com.android.okio.Source source(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { long getSourceNodeId(); }
-keepclassmembers class java.sql.Date { void <init>(int,int,int); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <init>(byte[]); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { int applyPendingUpdatesToPosition(int); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void consumePostponedUpdates(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class java.lang.Class { java.lang.String getCanonicalName(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.sql.Date { void setTime(long); }
-keepclassmembers class java.sql.Date { void format(int,int,java.lang.StringBuilder); }
-keepclassmembers class java.lang.Class { java.lang.annotation.Annotation getAnnotation(java.lang.Class); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void consumeUpdatesInOnePass(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <clinit>(); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class java.sql.Date { long normalizeTime(long); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoaderImpl(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfNull(); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void recycle(); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean isEmpty(); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { int findPositionOffset(int,int); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[],boolean); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int); }
-keepclassmembers class android.util.MathUtils { float log(float); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void clear(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { boolean hasAnyUpdateTypes(int); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { boolean hasPendingUpdates(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void putAll(java.util.Map); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.content.ContentResolver { android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { void addRect(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { boolean hasUpdates(); }
-keepclassmembers class java.lang.Class { void getDeclaredConstructors(boolean,java.util.List); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { boolean isConvex(); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.util.MathUtils { float map(float,float,float,float,float); }
-keepclassmembers class android.util.MathUtils { int random(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.util.MathUtils { float random(float); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp); }
-keepclassmembers class android.util.MathUtils { int random(int,int); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void reset(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void recycleUpdateOpsAndClearList(java.util.List); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void clear(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class android.graphics.Path { long ni(); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int size(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object setValueAt(int,java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.MathUtils { float random(float,float); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void init(); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper { void preProcess(); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class android.graphics.Path { void transform(android.graphics.Matrix,android.graphics.Path); }
-keepclassmembers class android.graphics.Path { void native_set(long,long); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.graphics.Path { boolean native_isConvex(long); }
-keepclassmembers class android.graphics.Path { void offset(float,float); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void setAgentForwarding(boolean); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.Set entrySet(); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void run(); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int hashCode(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.Collection values(); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentProvider acquireProvider(android.net.Uri); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_offset(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void setPty(boolean); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class android.graphics.Path { void native_transform(long,long,long); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer { void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class com.jcraft.jsch.ChannelSubsystem { void start(); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentProvider acquireProvider(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentProvider acquireExistingProvider(android.net.Uri); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.String toString(); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList getChildAnimations(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Class { void getDeclaredMethodsUnchecked(boolean,java.util.List); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.util.jar.Manifest { void <init>(byte[],boolean); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentProvider acquireUnstableProvider(android.net.Uri); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void clear(); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class android.content.ContentResolver { void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher { void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean); }
-keepclassmembers class java.lang.Class { void getPublicMethodsInternal(java.util.List); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { boolean get(int); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.content.ContentResolver { void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void set(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher { void validate(android.content.Context,android.os.Handler); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class android.os.BatteryManager { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void <init>(); }
-keepclassmembers class java.util.jar.Manifest { void read(byte[]); }
-keepclassmembers class java.util.jar.Manifest { int getMainAttributesEnd(); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Manifest$Chunk getChunk(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.widget.Editor$TextDisplayList { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void shiftLeft(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void toggle(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { int checkInput(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setContentInsetsRelative(int,int); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher { android.content.IIntentReceiver getIIntentReceiver(); }
-keepclassmembers class java.util.jar.Manifest { void removeChunks(); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class java.lang.Class { void getDeclaredFieldsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { com.android.okhttp.internal.BitArray toVariableCapacity(); }
-keepclassmembers class java.lang.Class { java.lang.annotation.Annotation[] getDeclaredAnnotations(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogoDescription(java.lang.CharSequence); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher { java.lang.RuntimeException getUnregisterLocation(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.jar.Manifest { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.ArtField findByName(java.lang.String,java.lang.reflect.ArtField[]); }
-keepclassmembers class android.app.LoadedApk$ReceiverDispatcher { void setUnregisterLocation(java.lang.RuntimeException); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class android.app.trust.ITrustManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getEnclosingMethod(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 { boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class java.lang.Class { java.lang.Object[] getEnumConstants(); }
-keepclassmembers class java.lang.Class { java.lang.Class getEnclosingClass(); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object replace(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean replace(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 { void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.media.MediaRouterClientState { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 { void onDestroyActionMode(android.support.v7.view.ActionMode); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] initTable(); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 { boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.animation.AnimatorSet { void setStartDelay(long); }
-keepclassmembers class android.animation.AnimatorSet { boolean isRunning(); }
-keepclassmembers class android.media.MediaRouterClientState { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setPopupTheme(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitleTextAppearance(android.content.Context,int); }
-keepclassmembers class java.lang.Class { void getPublicFieldsRecursive(java.util.List); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class android.animation.AnimatorSet { void resume(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 { boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitleTextColor(int); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void addCount(long,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getPublicFieldRecursive(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] helpTransfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void run(long); }
-keepclassmembers class java.lang.Class { java.security.ProtectionDomain getProtectionDomain(); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { void <init>(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void tryPresize(int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$1 { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Type[] getGenericInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Type getGenericSuperclass(); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { void init(int); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean showOverflowMenu(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$1 { java.io.InputStream byteStream(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { void notifyOnDismissListener(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { void onClick(android.view.View); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { void add(java.lang.Object); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextAppearance(android.content.Context,int); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { java.util.List asList(); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { java.lang.Object get(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextColor(int); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class java.lang.Class { boolean isAnnotation(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void <init>(android.support.v4.util.MapCollections,int); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class java.lang.Class { boolean isAnnotationPresent(java.lang.Class); }
-keepclassmembers class java.lang.Class { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class android.support.v4.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { void <init>(android.support.v7.widget.ActivityChooserView); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.helpers.CyclicBuffer { int length(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { void onDismiss(); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class android.view.View$DragShadowBuilder { void <init>(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawableV21 { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.print.IPrintManager$Stub { android.print.IPrintManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Handler); }
-keepclassmembers class android.view.View$DragShadowBuilder { void onDrawShadow(android.graphics.Canvas); }
-keepclassmembers class android.view.View$DragShadowBuilder { void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView$Callbacks { boolean onLongClick(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer { void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class android.animation.AnimatorSet { void sortNodes(); }
-keepclassmembers class android.os.ResultReceiver { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ActionBarBackgroundDrawableV21 { void <init>(android.support.v7.widget.ActionBarContainer); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(long); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.Package getPackage(); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class java.text.NumberFormat { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer { com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.content.ContentResolver { int resolveUserId(android.net.Uri); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer { boolean isUnwrappingSerializer(); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentService getContentService(); }
-keepclassmembers class android.content.ContentResolver { java.lang.String getPackageName(); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { int getInstanceCount(java.lang.Class); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(java.util.Locale); }
-keepclassmembers class android.content.ContentResolver { void <clinit>(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getCurrencyInstance(java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerJellybeanMr1 { java.lang.Object getDisplayManager(android.content.Context); }
-keepclassmembers class android.os.ResultReceiver { void <clinit>(); }
-keepclassmembers class java.text.NumberFormat { int getMaximumFractionDigits(); }
-keepclassmembers class java.text.NumberFormat { int getMinimumFractionDigits(); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(); }
-keepclassmembers class java.lang.Class { int getDexClassDefIndex(); }
-keepclassmembers class java.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl { void <init>(); }
-keepclassmembers class java.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class java.text.NumberFormat { int hashCode(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class java.lang.Class { int getDexAnnotationDirectoryOffset(); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$000(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(java.util.Locale); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.ValueAnimator access$102(android.animation.AnimatorSet,android.animation.ValueAnimator); }
-keepclassmembers class org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl { javax.xml.parsers.DocumentBuilder newDocumentBuilder(); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class android.animation.AnimatorSet { java.util.HashMap access$300(android.animation.AnimatorSet); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class com.android.okhttp.HttpsHandler { com.android.okhttp.OkHttpClient createHttpsOkHttpClient(java.net.Proxy); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$400(android.animation.AnimatorSet); }
-keepclassmembers class com.android.okhttp.HttpsHandler { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$600(android.animation.AnimatorSet); }
-keepclassmembers class com.android.okhttp.HttpsHandler { com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy); }
-keepclassmembers class com.android.okhttp.HttpsHandler { void <clinit>(); }
-keepclassmembers class java.io.BufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$702(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$502(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.os.ResultReceiver$MyResultReceiver { void <init>(android.os.ResultReceiver); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.text.NumberFormat { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser { void <init>(); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser { float[] handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class java.io.BufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class java.text.NumberFormat { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.fragment.ServerFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class it.skarafaz.mercury.fragment.ServerFragment { it.skarafaz.mercury.fragment.ServerFragment newInstance(it.skarafaz.mercury.model.Server); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser { float[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class it.skarafaz.mercury.fragment.ServerFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.AbstractMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class it.skarafaz.mercury.fragment.ServerFragment { void <init>(); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class it.skarafaz.mercury.fragment.ServerFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v4.provider.DocumentsContractApi19 { boolean delete(android.content.Context,android.net.Uri); }
-keepclassmembers class android.util.TimeUtils { int accumField(int,int,boolean,int); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow$1 { void onScrollChanged(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { long sumCount(); }
-keepclassmembers class java.util.AbstractMap { void putAll(java.util.Map); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class android.util.TimeUtils { int printField(char[],int,char,int,boolean,int); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class android.util.TimeUtils { int formatDurationLocked(long,int); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer { void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class java.text.NumberFormat { java.lang.Object clone(); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.joran.event.BodyEvent { void <init>(java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class java.io.PrintStream { boolean checkError(); }
-keepclassmembers class ch.qos.logback.core.joran.event.BodyEvent { void append(java.lang.String); }
-keepclassmembers class java.security.Signature { java.security.Signature getSignature(java.lang.String,java.security.Provider); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class java.util.AbstractMap { java.util.Collection values(); }
-keepclassmembers class ch.qos.logback.core.joran.event.BodyEvent { java.lang.String getText(); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void fullAddCount(long,java.util.concurrent.ConcurrentHashMap$CounterHashCode,boolean); }
-keepclassmembers class java.util.TreeMap$Bound$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class android.accounts.IAccountManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.io.PrintStream { void flush(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float); }
-keepclassmembers class java.nio.MemoryBlock$MemoryMappedBlock { void <init>(long,long); }
-keepclassmembers class ch.qos.logback.core.net.ssl.KeyStoreFactoryBean { void <init>(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class java.nio.MemoryBlock$MemoryMappedBlock { void free(); }
-keepclassmembers class java.io.PrintStream { void newline(); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float,float,float); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.PublicKey); }
-keepclassmembers class java.nio.MemoryBlock$MemoryMappedBlock { void <init>(long,long,java.nio.MemoryBlock$1); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,java.lang.StringBuilder); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.cert.Certificate); }
-keepclassmembers class android.view.animation.RotateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <clinit>(); }
-keepclassmembers class java.security.Signature { java.lang.String getAlgorithm(); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float,int,float,int,float); }
-keepclassmembers class java.io.PrintStream { void println(); }
-keepclassmembers class java.security.Signature { byte[] sign(); }
-keepclassmembers class java.security.Signature { void initSign(java.security.PrivateKey); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class android.view.animation.RotateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class android.util.TimeUtils { void <clinit>(); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder { void _reset(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,long); }
-keepclassmembers class java.io.PrintStream { void setError(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent superGetParentActivityIntent(android.app.Activity); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder { void <init>(); }
-keepclassmembers class ch.qos.logback.core.helpers.ThrowableToStringArray { java.lang.String[] convert(java.lang.Throwable); }
-keepclassmembers class java.security.Signature { void update(byte[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { void close(); }
-keepclassmembers class ch.qos.logback.core.joran.event.BodyEvent { java.lang.String toString(); }
-keepclassmembers class java.io.PrintStream { void close(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider access$000(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class ch.qos.logback.core.helpers.ThrowableToStringArray { void extract(java.util.List,java.lang.Throwable,java.lang.StackTraceElement[]); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { java.lang.Object call(); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder { java.lang.Object resetAndStart(); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { java.util.List findUsingReflection(java.lang.Class); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { void findUsingReflectionInSingleClass(org.greenrobot.eventbus.SubscriberMethodFinder$FindState); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder { java.lang.Object completeAndClearBuffer(java.lang.Object,int); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { java.util.List findUsingInfo(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder { java.lang.Object appendCompletedChunk(java.lang.Object,int); }
-keepclassmembers class ch.qos.logback.core.helpers.ThrowableToStringArray { java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[]); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { void <init>(java.util.List,boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl { void <init>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { void <init>(com.fasterxml.jackson.databind.cfg.MapperConfig); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,int); }
-keepclassmembers class ch.qos.logback.core.helpers.ThrowableToStringArray { int findNumberOfCommonFrames(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.core.SerializableString compileString(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { int collectFeatureDefaults(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { java.util.List getMethodsAndRelease(org.greenrobot.eventbus.SubscriberMethodFinder$FindState); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedMethod); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <init>(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.core.Base64Variant getBase64Variant(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { java.text.DateFormat getDateFormat(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { boolean canOverrideAccessModifiers(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { org.greenrobot.eventbus.meta.SubscriberInfo getSubscriberInfo(org.greenrobot.eventbus.SubscriberMethodFinder$FindState); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { java.util.Locale getLocale(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { int toIntValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { org.apache.harmony.security.asn1.ASN1Integer getInstance(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { java.util.TimeZone getTimeZone(); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { org.greenrobot.eventbus.SubscriberMethodFinder$FindState prepareFindState(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object fromIntValue(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.ContextImpl$16 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { boolean isAnnotationProcessingEnabled(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.view.animation.PathInterpolatorCompatApi21 { android.view.animation.Interpolator create(android.graphics.Path); }
-keepclassmembers class android.app.ContextImpl$48 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { boolean shouldSortPropertiesAlphabetically(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.math.BigInteger toBigIntegerValue(java.lang.Object); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <clinit>(); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class ch.qos.logback.classic.Level { void <init>(int,java.lang.String); }
-keepclassmembers class android.app.ContextImpl$48 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class ch.qos.logback.classic.Level { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class libcore.io.Streams { int readSingleByte(java.io.InputStream); }
-keepclassmembers class android.app.ContextImpl$16 { void <init>(); }
-keepclassmembers class ch.qos.logback.classic.Level { ch.qos.logback.classic.Level fromLocationAwareLoggerInteger(int); }
-keepclassmembers class ch.qos.logback.classic.Level { ch.qos.logback.classic.Level toLevel(int,ch.qos.logback.classic.Level); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.cfg.MapperConfig { com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { int _int(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object _deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { long _long(java.lang.Object); }
-keepclassmembers class libcore.io.Streams { void readFully(java.io.InputStream,byte[],int,int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int next(); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class libcore.io.Streams { byte[] readFullyNoClose(java.io.InputStream); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]); }
-keepclassmembers class ch.qos.logback.classic.Level { int toLocationAwareLoggerInteger(ch.qos.logback.classic.Level); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { com.fasterxml.jackson.databind.deser.CreatorProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class ch.qos.logback.classic.Level { ch.qos.logback.classic.Level toLevel(int); }
-keepclassmembers class ch.qos.logback.classic.Level { ch.qos.logback.classic.Level toLevel(java.lang.String,ch.qos.logback.classic.Level); }
-keepclassmembers class libcore.io.Streams { long skipByReading(java.io.InputStream,long); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer asArrayDeserializer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { com.fasterxml.jackson.databind.deser.CreatorProperty creatorProp(java.lang.String,com.fasterxml.jackson.databind.JavaType,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { boolean canCreateFromObjectWith(); }
-keepclassmembers class libcore.io.Streams { int copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class ch.qos.logback.classic.Level { ch.qos.logback.classic.Level toLevel(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer(); }
-keepclassmembers class libcore.io.Streams { byte[] readFully(java.io.InputStream); }
-keepclassmembers class libcore.io.Streams { void <clinit>(); }
-keepclassmembers class android.text.TextLine { void draw(android.graphics.Canvas,float,int,int,int); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class org.greenrobot.eventbus.SubscriberMethodFinder { java.util.List findSubscriberMethods(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { java.lang.String getValueTypeDesc(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator { com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readEnumerated(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBitString(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.IAssetAtlas$Stub$Proxy { long[] getMap(); }
-keepclassmembers class android.view.IAssetAtlas$Stub$Proxy { android.view.GraphicBuffer getBuffer(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBoolean(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.IAssetAtlas$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.content.res.Resources { float getDimension(int); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.content.res.Resources { int getDimensionPixelSize(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.view.IAssetAtlas$Stub$Proxy { boolean isCompatible(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class ch.qos.logback.classic.Level { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { boolean hasSingleElement(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readGeneralizedTime(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { boolean isEmpty(java.util.List); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView { void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readUTCTime(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.Color { int rgb(int,int,int); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readInteger(); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer { com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer withIgnorableProperties(java.util.HashSet); }
-keepclassmembers class android.view.WindowManagerGlobal { void initialize(); }
-keepclassmembers class android.view.WindowManagerGlobal { void addView(android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOctetString(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { int[] getDisplayIds(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int strToInt(int,int); }
-keepclassmembers class android.text.TextLine { float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { org.apache.harmony.security.asn1.ASN1Exception expected(java.lang.String); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.support.v7.appcompat.R$styleable { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOID(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession getWindowSession(); }
-keepclassmembers class android.graphics.Color { int getHtmlColor(java.lang.String); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean tryShow(); }
-keepclassmembers class android.view.WindowManagerGlobal { void closeAll(android.os.IBinder,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.ShareCompat { java.lang.String getCallingPackage(android.app.Activity); }
-keepclassmembers class android.content.res.Resources { float getFloat(int); }
-keepclassmembers class android.content.res.Resources { boolean getBoolean(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer { com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.v4.app.ShareCompat { android.content.ComponentName getCallingActivity(android.app.Activity); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.WindowManagerGlobal { void removeView(android.view.View,boolean); }
-keepclassmembers class android.view.WindowManagerGlobal { void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getBuffer(); }
-keepclassmembers class android.support.v4.app.ShareCompat { void <clinit>(); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.view.WindowManagerGlobal { void doRemoveView(android.view.ViewRootImpl); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getOffset(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void dismiss(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean isShowing(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int); }
-keepclassmembers class android.view.WindowManagerGlobal { void removeViewLocked(int,boolean); }
-keepclassmembers class org.apache.harmony.xml.dom.CharacterDataImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.CharacterDataImpl { void appendData(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void addMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getEndOffset(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readContent(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getEncoded(); }
-keepclassmembers class android.view.WindowManagerGlobal { void trimMemory(int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { android.widget.ListView getListView(); }
-keepclassmembers class android.view.WindowManagerGlobal { int findViewLocked(android.view.View,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getTagOffset(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$4 { void <init>(int); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int read(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class org.apache.harmony.xml.dom.CharacterDataImpl { void setData(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetFileDescriptor openRawResourceFd(int); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void onDismiss(); }
-keepclassmembers class android.view.WindowManagerGlobal { void trimForeground(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean onKey(android.view.View,int,android.view.KeyEvent); }
-keepclassmembers class android.telecom.TelecomManager { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class android.view.WindowManagerGlobal { boolean shouldDestroyEglContext(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 add(android.renderscript.Double4,android.renderscript.Double4); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class android.view.WindowManagerGlobal { void doTrimForeground(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatLollipop { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class java.util.concurrent.FutureTask$WaitNode { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void <init>(android.view.ViewRootImpl); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void process(android.view.MotionEvent); }
-keepclassmembers class android.telecom.TelecomManager { android.telecom.TelecomManager from(android.content.Context); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void show(); }
-keepclassmembers class java.nio.channels.spi.AbstractSelectableChannel { void <init>(java.nio.channels.spi.SelectorProvider); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class it.skarafaz.mercury.activity.HelpActivity$$ViewBinder { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setGravity(int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 sub(android.renderscript.Double4,double); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector { void <clinit>(); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 add(android.renderscript.Double4,double); }
-keepclassmembers class android.renderscript.Double4 { void <init>(); }
-keepclassmembers class it.skarafaz.mercury.activity.HelpActivity$$ViewBinder { void bind(butterknife.ButterKnife$Finder,it.skarafaz.mercury.activity.HelpActivity,java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.activity.HelpActivity$$ViewBinder { void bind(butterknife.ButterKnife$Finder,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources$Theme newTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector { com.fasterxml.jackson.core.Version version(); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 sub(android.renderscript.Double4,android.renderscript.Double4); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.view.WindowManagerGlobal { java.lang.Object access$000(android.view.WindowManagerGlobal); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector { void <init>(); }
-keepclassmembers class java.nio.channels.spi.AbstractSelectableChannel { void implCloseChannel(); }
-keepclassmembers class android.view.WindowManagerGlobal { void reportNewConfiguration(android.content.res.Configuration); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.view.WindowManagerGlobal { java.util.ArrayList access$100(android.view.WindowManagerGlobal); }
-keepclassmembers class java.nio.channels.spi.AbstractSelectableChannel { boolean isBlocking(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void finishKeys(long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.EditText { boolean getDefaultEditable(); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 div(android.renderscript.Double4,android.renderscript.Double4); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void cancel(android.view.MotionEvent); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.widget.EditText { android.text.Editable getText(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingMethod(java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void finishTracking(long); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { float consumeAccumulatedMovement(long,int,float,int,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingToString(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter { void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonSerializer,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter { com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.EditText { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getText(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void sendKeyUp(long); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(java.lang.Class); }
-keepclassmembers class android.widget.EditText { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCachesLocked(android.util.ArrayMap,int); }
-keepclassmembers class android.renderscript.Double4 { android.renderscript.Double4 div(android.renderscript.Double4,double); }
-keepclassmembers class android.widget.EditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context); }
-keepclassmembers class android.content.res.Resources { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void <init>(android.os.Handler); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { java.lang.Enum findEnum(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { java.lang.Enum getEnum(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { java.util.List getEnums(); }
-keepclassmembers class android.transition.Slide$1 { void <init>(); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { int lastValidIndex(); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCacheLocked(android.util.LongSparseArray,int); }
-keepclassmembers class android.content.res.Resources { void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void processTask(com.android.internal.textservice.ISpellCheckerSession,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams,boolean); }
-keepclassmembers class android.transition.Slide$1 { float getGoneX(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { boolean postFling(long); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { java.lang.Class getEnumClass(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void sendKeyDownOrRepeat(long,int,int); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { int access$1000(android.view.ViewRootImpl$SyntheticTouchNavigationHandler); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(int); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void cancelFling(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { boolean startFling(long,float,float); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void consumeAccumulatedMovement(long,int); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void gc(); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { int access$1100(android.view.ViewRootImpl$SyntheticTouchNavigationHandler); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { float access$1332(android.view.ViewRootImpl$SyntheticTouchNavigationHandler,float); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { boolean access$1400(android.view.ViewRootImpl$SyntheticTouchNavigationHandler,long); }
-keepclassmembers class android.view.ViewRootImpl$ImeInputStage { void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$InputStage,java.lang.String); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.EnumResolver { com.fasterxml.jackson.databind.util.EnumResolver constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector); }
-keepclassmembers class android.os.Environment { void initForCurrentUser(); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void access$1200(android.view.ViewRootImpl$SyntheticTouchNavigationHandler,long,int,int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { int getSystemWindowInsetBottom(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$ImeInputStage { void onFinishedInputEvent(java.lang.Object,boolean); }
-keepclassmembers class android.view.ViewRootImpl$ImeInputStage { int onProcess(android.view.ViewRootImpl$QueuedInputEvent); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { boolean access$1502(android.view.ViewRootImpl$SyntheticTouchNavigationHandler,boolean); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { void <init>(); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { int getSystemWindowInsetLeft(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$SyntheticTouchNavigationHandler { void access$1600(android.view.ViewRootImpl$SyntheticTouchNavigationHandler,long); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter { void <init>(android.support.v7.widget.Toolbar); }
-keepclassmembers class android.os.Environment { java.io.File getLegacyExternalStorageDirectory(); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void getSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { int getSystemWindowInsetRight(java.lang.Object); }
-keepclassmembers class android.support.v4.view.WindowInsetsCompat$WindowInsetsCompatApi20Impl { int getSystemWindowInsetTop(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { void <clinit>(); }
-keepclassmembers class android.os.Environment { java.io.File getUserConfigDirectory(int); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void close(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void clear(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JavaType modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig); }
-keepclassmembers class android.os.Environment { java.io.File getDataDirectory(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void <init>(android.content.Context); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void <clinit>(); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStorageDirectory(); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void processOrEnqueueTask(android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(java.io.File); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void put(int,java.lang.Object); }
-keepclassmembers class android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl { void getSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int keyAt(int); }
-keepclassmembers class android.text.TextLine { float ascent(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.os.Environment { java.lang.String getCanonicalPathOrNull(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Shape { void <clinit>(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { void <init>(); }
-keepclassmembers class android.os.Environment { java.io.File getDirectory(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.util.LongSparseArray getPreloadedDrawables(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { void init(int,byte[],byte[]); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int size(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { boolean isCBC(); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { int getBlockSize(); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void drawRing(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Activity); }
-keepclassmembers class android.os.Environment { void throwIfUserRequired(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void onDraw(android.graphics.Canvas,int,int,android.graphics.Paint); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { void update(byte[],int,int,byte[],int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void onPreparePaint(android.graphics.Paint); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Shape { com.fasterxml.jackson.annotation.JsonFormat$Shape[] values(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class com.jcraft.jsch.jce.ARCFOUR256 { int getIVSize(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void setAlpha(int); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(); }
-keepclassmembers class android.content.res.Resources { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.annotation.JsonFormat$Shape { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Environment { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.Object valueAt(int); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class android.content.res.Resources { void cacheDrawable(android.util.TypedValue,android.content.res.Resources$Theme,boolean,android.util.ArrayMap,long,android.graphics.drawable.Drawable); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void start(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void setTint(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.os.Environment { android.os.storage.StorageVolume getStorageVolume(java.io.File); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { java.lang.Runnable access$600(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { long access$000(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <clinit>(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { long access$200(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void access$500(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { float access$300(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { java.lang.String getNodeName(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { float access$302(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { java.lang.Object[] toArray(); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { void setPrefix(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { org.w3c.dom.Element getOwnerElement(); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { short getNodeType(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { long access$100(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void access$400(android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.os.Environment { void <clinit>(); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { java.lang.String getLocalName(); }
-keepclassmembers class android.support.v7.widget.AdapterHelper$UpdateOp { void <init>(int,int,int,java.lang.Object); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { java.lang.String getNamespaceURI(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void dispatchEnd(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { long getTime(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void dispatchStart(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawableForCookie(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.xml.dom.AttrImpl { void setValue(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AdapterHelper$UpdateOp { java.lang.String cmdToString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.util.EnumMap { void <init>(java.util.Map); }
-keepclassmembers class android.widget.AbsListView$4 { void run(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.support.v7.widget.AdapterHelper$UpdateOp { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AdapterHelper$UpdateOp { java.lang.String toString(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void notifyUpdateListeners(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class java.util.EnumMap { void <init>(java.lang.Class); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float cross(float,float,float,float); }
-keepclassmembers class android.support.v7.widget.AdapterHelper$UpdateOp { int hashCode(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class java.util.EnumMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void <init>(); }
-keepclassmembers class android.support.v4.animation.GingerbreadAnimatorCompatProvider$GingerbreadFloatValueAnimator { void start(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class java.util.EnumMap { java.util.Set keySet(); }
-keepclassmembers class java.util.EnumMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class java.util.EnumMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawable(android.util.ArrayMap,long,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable$ConstantState getConstantStateLocked(android.util.LongSparseArray,long); }
-keepclassmembers class java.util.EnumMap { java.lang.Object put(java.lang.Enum,java.lang.Object); }
-keepclassmembers class java.util.EnumMap { java.util.Set entrySet(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void dispatchMenuVisibilityChanged(boolean); }
-keepclassmembers class java.util.EnumMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawableLocked(android.util.LongSparseArray,long); }
-keepclassmembers class com.android.internal.view.InputBindResult { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.EnumMap { void putAll(java.util.Map); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.EnumMap { int size(); }
-keepclassmembers class java.util.EnumMap { void <init>(java.util.EnumMap); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$7 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class java.util.EnumMap { java.util.Collection values(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int); }
-keepclassmembers class java.util.EnumMap { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$7 { void execute(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class com.android.internal.view.InputBindResult { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class java.util.EnumMap { boolean isValidKeyType(java.lang.Object); }
-keepclassmembers class java.util.EnumMap { void initialization(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class java.util.EnumMap { void putAllImpl(java.util.Map); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.EnumMap { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class java.util.EnumMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.EnumMap { void initialization(java.util.EnumMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getDisplayOptions(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.util.EnumMap { java.lang.Object putImpl(java.lang.Enum,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void run(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getCachedColorStateList(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int addAtlasableBitmaps(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class java.security.Provider$Service { void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.security.Provider$Service { java.lang.Class loadClassOrThrow(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void <init>(android.content.Context,android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.security.Provider$Service { void addAlias(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Util$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int applyAlpha(int,float); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class com.fasterxml.jackson.databind.node.NumericNode { void <init>(); }
-keepclassmembers class java.security.Provider$Service { void putAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class com.android.okhttp.internal.Util$1 { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getMatrixScale(android.graphics.Matrix); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getColor(int,int); }
-keepclassmembers class android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter { void <init>(android.support.v7.widget.DefaultItemAnimator$1); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getType(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstance(java.lang.Object); }
-keepclassmembers class java.security.Provider$Service { java.security.Provider getProvider(); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAlgorithm(); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAttribute(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getAlpha(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawableIfKnown(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setAlpha(float); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutEncoderBase { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.security.Provider$Service { java.util.List getAliases(); }
-keepclassmembers class org.greenrobot.eventbus.PendingPost { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getInteger(int,int); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getInt(int,int); }
-keepclassmembers class ch.qos.logback.core.pattern.PatternLayoutEncoderBase { java.lang.String getPattern(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void <init>(android.support.v7.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { float getFloat(int,float); }
-keepclassmembers class org.greenrobot.eventbus.PendingPost { org.greenrobot.eventbus.PendingPost obtainPendingPost(org.greenrobot.eventbus.Subscription,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getResourceId(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstanceNoParameter(); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class org.greenrobot.eventbus.PendingPost { void <init>(java.lang.Object,org.greenrobot.eventbus.Subscription); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void <init>(java.lang.Object); }
-keepclassmembers class java.security.Provider$Service { boolean supportsParameter(java.lang.Object); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstanceWithParameter(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.String getString(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { android.view.Menu getMenu(); }
-keepclassmembers class org.greenrobot.eventbus.PendingPost { void releasePendingPost(org.greenrobot.eventbus.PendingPost); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void dispatchMenuVisibilityChanged(boolean); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { boolean collapseActionView(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.security.Provider$Service { void ensureSupportedKeysInitialized(); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void recycle(); }
-keepclassmembers class com.android.internal.textservice.ITextServicesManager$Stub { com.android.internal.textservice.ITextServicesManager asInterface(android.os.IBinder); }
-keepclassmembers class java.security.Provider$Service { boolean isInArray(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.security.Provider$Service { boolean isInArray(java.lang.Class[],java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean hasValue(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class java.security.Provider$Service { java.util.List access$200(java.security.Provider$Service); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class java.security.Provider$Service { java.lang.String toString(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { boolean equals(int[],int); }
-keepclassmembers class java.security.Provider$Service { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { boolean equals(int,int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { boolean _equals2(int[]); }
-keepclassmembers class java.security.Provider$Service { java.util.Map access$400(java.security.Provider$Service); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { com.fasterxml.jackson.core.sym.NameN construct(java.lang.String,int,int[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { int getDisplayOptions(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { boolean equals(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$800(int,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void onDestroy(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setFromIndex(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setMaxScrollX(int); }
-keepclassmembers class com.fasterxml.jackson.core.sym.NameN { void <init>(java.lang.String,int,int,int,int,int,int[],int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.security.Provider$Service { java.lang.String access$302(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setItemCount(int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void populateOptionsMenu(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { boolean isShowing(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setMaxScrollY(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setScrollY(int); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.Interpolators$LINEAR { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { int estimateLength(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setScrollX(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ReceiverAction { void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.media.session.ISessionControllerCallback$Stub { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setToIndex(int); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { boolean requestFocus(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void endOperation(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void setElevation(float); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int beginOperation(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void failOperation(int,java.lang.Exception); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { boolean endOperationDeferLogLocked(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int newOperationCookieLocked(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat { void setScrollable(boolean); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ReceiverAction { void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int hashCode(); }
-keepclassmembers class android.support.v7.app.ToolbarActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void logOperationLocked(int,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class ch.qos.logback.classic.joran.action.ReceiverAction { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class java.util.jar.Attributes { void <init>(java.util.jar.Attributes); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { boolean isEmpty(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.hardware.usb.IUsbManager$Stub { android.hardware.usb.IUsbManager asInterface(android.os.IBinder); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class android.support.v7.widget.Toolbar$2 { void <init>(android.support.v7.widget.Toolbar); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer { com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class java.util.jar.Attributes { void putAll(java.util.Map); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$2 { void run(); }
-keepclassmembers class java.util.jar.Attributes { java.util.Collection values(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer { void <init>(); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { void addStatusEvent(ch.qos.logback.core.status.Status); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer { void serialize(java.lang.Long,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { void addNewInstanceToContext(ch.qos.logback.core.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer { void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void <init>(); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { void start(); }
-keepclassmembers class ch.qos.logback.core.android.SystemPropertiesProxy { void <clinit>(); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { void stop(); }
-keepclassmembers class com.android.okio.SegmentPool { void <init>(); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { boolean isStarted(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void <init>(); }
-keepclassmembers class ch.qos.logback.core.android.SystemPropertiesProxy { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View); }
-keepclassmembers class com.android.okio.SegmentPool { void recycle(com.android.okio.Segment); }
-keepclassmembers class ch.qos.logback.core.status.OnConsoleStatusListener { java.io.PrintStream getPrintStream(); }
-keepclassmembers class com.android.okio.SegmentPool { com.android.okio.Segment take(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getDeltaX(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getDeltaY(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getHorizontalDirection(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void computeScrollDelta(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { float getValueAt(long); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getVerticalDirection(); }
-keepclassmembers class ch.qos.logback.core.android.SystemPropertiesProxy { ch.qos.logback.core.android.SystemPropertiesProxy getInstance(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { float interpolateValue(float); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class com.android.okio.SegmentPool { void <clinit>(); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class ch.qos.logback.core.android.SystemPropertiesProxy { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setTargetVelocity(float,float); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setRampDownDuration(int); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class android.os.Parcel { void nativeFreeBuffer(long); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { boolean isFinished(); }
-keepclassmembers class android.os.Parcel { void nativeAppendFrom(long,long,int,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setRampUpDuration(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void requestStop(); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class android.os.Parcel { void nativeEnforceInterface(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void start(); }
-keepclassmembers class ch.qos.logback.core.android.SystemPropertiesProxy { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.support.v4.os.BuildCompat { boolean isAtLeastN(); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { void <init>(int); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { java.lang.String getMessage(); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor nativeReadFileDescriptor(long); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean); }
-keepclassmembers class android.os.storage.StorageVolume$1 { void <init>(); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class android.os.Parcel { void enforceInterface(java.lang.String); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume[] newArray(int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class android.util.LongArray { void <init>(); }
-keepclassmembers class android.view.HardwareRenderer { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class android.view.HardwareRenderer { void setupDiskCache(java.io.File); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class android.view.HardwareRenderer { boolean initializeIfNeeded(int,int,android.view.Surface,android.graphics.Rect); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class android.view.HardwareRenderer { void disable(boolean); }
-keepclassmembers class android.util.LongArray { void add(long); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class android.util.LongArray { void <init>(int); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class android.view.HardwareRenderer { boolean isEnabled(); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class android.view.HardwareRenderer { boolean isRequested(); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class android.view.HardwareRenderer { boolean isAvailable(); }
-keepclassmembers class android.view.HardwareRenderer { void trimMemory(int); }
-keepclassmembers class android.view.HardwareRenderer { void <clinit>(); }
-keepclassmembers class android.util.LongArray { void ensureCapacity(int); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class android.view.HardwareRenderer { android.view.HardwareRenderer create(android.content.Context,boolean); }
-keepclassmembers class android.os.Parcel { void writeSparseBooleanArray(android.util.SparseBooleanArray); }
-keepclassmembers class android.view.HardwareRenderer { void setRequested(boolean); }
-keepclassmembers class android.content.pm.Signature$1 { void <init>(); }
-keepclassmembers class android.content.pm.Signature$1 { android.content.pm.Signature[] newArray(int); }
-keepclassmembers class android.content.pm.Signature$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated); }
-keepclassmembers class android.content.pm.Signature$1 { android.content.pm.Signature createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.Signature$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.view.HardwareRenderer { void setEnabled(boolean); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { void <clinit>(); }
-keepclassmembers class android.util.LongArray { void clear(); }
-keepclassmembers class android.util.LongArray { android.util.LongArray clone(); }
-keepclassmembers class android.util.LongArray { void addAll(android.util.LongArray); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LongArray { void add(int,long); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { boolean isIndexedList(java.lang.Class); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry { void add(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.media.tv.TvInputManager$2 { void <init>(android.media.tv.TvInputManager); }
-keepclassmembers class android.util.LongArray { int size(); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class android.util.LongArray { int indexOf(long); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(int); }
-keepclassmembers class android.text.style.QuoteSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry { java.lang.Class oneShotFind(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.BasicSerializerFactory { boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry { java.lang.Class findDefaultComponentType(java.lang.Class,java.lang.String); }
-keepclassmembers class ch.qos.logback.core.joran.spi.DefaultNestedComponentRegistry { void <init>(); }
-keepclassmembers class android.os.Parcel { float[] createFloatArray(); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void <clinit>(); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void clearLog(); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class android.os.Parcel { void writeFloatArray(float[]); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { java.io.File getLogDir(); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { java.util.List readLog(); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { java.io.File getLogFile(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int arrayMemberHash(java.lang.Class,java.lang.Object); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int hashMember(java.lang.String,java.lang.Object); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void reload(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean memberEquals(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int hashCode(java.lang.annotation.Annotation); }
-keepclassmembers class android.os.Parcel { java.lang.String[] createStringArray(); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class android.os.Parcel { void writeTypedList(java.util.List); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class it.skarafaz.mercury.fragment.LogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable { void <init>(android.content.Context); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean isValidAnnotationMemberType(java.lang.Class); }
-keepclassmembers class android.os.Parcel { void writeStringList(java.util.List); }
-keepclassmembers class java.util.logging.LogManager$1 { void run(); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { java.lang.String toString(java.lang.annotation.Annotation); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder { float[] _constructArray(int); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$Api23TextViewCompatImpl { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.content.pm.LauncherApps { void <init>(android.content.Context,android.content.pm.ILauncherApps); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class me.zhanghai.android.materialprogressbar.HorizontalProgressDrawable { void setTint(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$Api23TextViewCompatImpl { void setTextAppearance(android.widget.TextView,int); }
-keepclassmembers class com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder { java.lang.Object _constructArray(int); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Exception { void <init>(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class dalvik.system.VMRuntime { void startJitCompilation(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.Object readResolve(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmInstructionSet(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { int hashCode(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String getName(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$3 { android.graphics.PointF get(android.transition.ChangeBounds$ViewBounds); }
-keepclassmembers class android.os.AsyncTask$AsyncTaskResult { void <init>(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class android.transition.ChangeBounds$3 { void set(android.transition.ChangeBounds$ViewBounds,android.graphics.PointF); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String toString(); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { void clearGrowthLimit(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { org.slf4j.Logger getEventRecordingLogger(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class java.util.EnumMap$Entry { void <init>(java.lang.Enum,java.lang.Object,java.util.EnumMap); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void debug(java.lang.String,java.lang.Object); }
-keepclassmembers class android.os.Parcel { void writeNoException(); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class java.util.EnumMap$Entry { int hashCode(); }
-keepclassmembers class java.util.EnumMap$Entry { boolean equals(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.jsontype.SubtypeResolver { void <init>(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.support.v4.app.ShareCompat$ShareCompatImplICS { void <init>(); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap,android.os.StrictMode$1); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void <init>(java.lang.String,java.util.Queue,boolean); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.String toString(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(int,int,int); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class android.transition.ChangeBounds$3 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Enum getKey(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(int,int,int,int,int,int); }
-keepclassmembers class java.util.EnumMap$Entry { void checkEntryStatus(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(int,int,int,int,int); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void error(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.ParcelFileDescriptor readFileDescriptor(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { org.slf4j.Logger delegate(); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor readRawFileDescriptor(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.Locale); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void error(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor openFileDescriptor(java.lang.String,int); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { int hashCode(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(long); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void info(java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(boolean); }
-keepclassmembers class com.android.internal.logging.AndroidHandler$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class java.util.GregorianCalendar { void fullFieldsCalc(); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { boolean isDelegateEventAware(); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { boolean isDelegateNull(); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String getAndroidSystemProperty(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.net.ssl.SSLConfiguration { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String getEnv(java.lang.String); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String getSystemProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { boolean isDelegateNOP(); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.Object instantiateByClassNameAndParameter(java.lang.String,java.lang.Class,java.lang.ClassLoader,java.lang.Class,java.lang.Object); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,ch.qos.logback.core.Context); }
-keepclassmembers class android.os.Parcel { void readTypedList(java.util.List,android.os.Parcelable$Creator); }
-keepclassmembers class android.os.Parcel { void readStringList(java.util.List); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String getSystemProperty(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void log(org.slf4j.event.LoggingEvent); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class org.slf4j.helpers.SubstituteLogger { void setDelegate(org.slf4j.Logger); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String propertyLookup(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] createTypedArray(android.os.Parcelable$Creator); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { void setSystemProperties(ch.qos.logback.core.spi.ContextAware,java.util.Properties); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void calculateFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { boolean toBoolean(java.lang.String,boolean); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { void setSystemProperty(ch.qos.logback.core.spi.ContextAware,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String[] toNoNullStringArray(java.util.Collection); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String[] toNoNullStringArray(java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { void _badFormat(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { int _badChar(java.lang.String,int,char); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toStringExclude(java.lang.Object,java.lang.String[]); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { long _long(byte[],int); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean accept(java.lang.reflect.Field); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toStringExclude(java.lang.Object,java.util.Collection); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { boolean isEmpty(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class ch.qos.logback.core.util.OptionHelper { java.lang.String substVars(java.lang.String,ch.qos.logback.core.spi.PropertyContainer,ch.qos.logback.core.spi.PropertyContainer); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { int byteFromChars(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { int intFromChars(java.lang.String,int); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { int _int(byte[],int); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { int shortFromChars(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.Object getValue(java.lang.reflect.Field); }
-keepclassmembers class android.widget.AbsListView { void setItemChecked(int,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean isAppendTransients(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean isAppendStatics(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.Class getUpToClass(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setAppendStatics(boolean); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setAppendTransients(boolean); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setUpToClass(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void appendFieldsIn(java.lang.Class); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class android.bluetooth.IBluetoothManager$Stub { android.bluetooth.IBluetoothManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.widget.AbsListView { android.view.View findViewByAccessibilityIdTraversal(int); }
-keepclassmembers class android.widget.AbsListView { boolean isTextFilterEnabled(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer { java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void <init>(); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class java.util.GregorianCalendar { long daysFromBaseYear(long); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void <init>(com.android.okhttp.internal.http.HttpConnection,long); }
-keepclassmembers class java.util.GregorianCalendar { int getActualMaximum(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setFirstOut(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment); }
-keepclassmembers class java.util.GregorianCalendar { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(boolean,int); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(boolean,int); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void close(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setLastIn(android.util.SparseArray,android.util.SparseArray,android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(int); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void <init>(com.android.okhttp.internal.http.HttpConnection,long,com.android.okhttp.internal.http.HttpConnection$1); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.util.GregorianCalendar { int getLeastMaximum(int); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.util.GregorianCalendar { int getMaximum(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.util.GregorianCalendar { int getOffset(long); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class java.util.GregorianCalendar { int computeYearAndDay(long,long); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { java.lang.String access$100(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { byte[] access$200(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void addOp(android.support.v4.app.BackStackRecord$Op); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class android.support.v7.widget.SimpleItemAnimator { void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean); }
-keepclassmembers class java.util.GregorianCalendar { int julianError(); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { int mod7(long); }
-keepclassmembers class java.util.jar.JarFile { java.util.HashMap readMetaEntries(java.util.zip.ZipFile,boolean); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.util.jar.JarFile { boolean endsWithIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.List getMetaEntries(java.util.zip.ZipFile); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.net.LocalSocketImpl { int pending_native(java.io.FileDescriptor); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.net.LocalSocketImpl { int available_native(java.io.FileDescriptor); }
-keepclassmembers class android.net.LocalSocketImpl { int readba_native(byte[],int,int,java.io.FileDescriptor); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment); }
-keepclassmembers class android.net.LocalSocketImpl { void writeba_native(byte[],int,int,java.io.FileDescriptor); }
-keepclassmembers class android.net.LocalSocketImpl { int read_native(java.io.FileDescriptor); }
-keepclassmembers class android.net.LocalSocketImpl { void connectLocal(java.io.FileDescriptor,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[],org.apache.harmony.security.x509.OtherName$1); }
-keepclassmembers class java.util.GregorianCalendar { int hashCode(); }
-keepclassmembers class android.net.LocalSocketImpl { void close(); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.widget.AbsListView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class java.util.GregorianCalendar { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class java.util.GregorianCalendar { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class java.util.jar.JarFile { void close(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void calculateBackFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class android.net.LocalSocketImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commit(); }
-keepclassmembers class android.net.LocalSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commitAllowingStateLoss(); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commitInternal(boolean); }
-keepclassmembers class java.util.GregorianCalendar { void setGregorianChange(java.util.Date); }
-keepclassmembers class android.net.LocalSocketImpl { void connect(android.net.LocalSocketAddress,int); }
-keepclassmembers class android.net.LocalSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void commitNowAllowingStateLoss(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction disallowAddToBackStack(); }
-keepclassmembers class android.net.LocalSocketImpl { void create(int); }
-keepclassmembers class android.content.ContentProviderNative { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class android.content.ContentProviderNative { android.content.IContentProvider asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeTouch(int,android.view.View,float,float); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingLeft(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class android.net.LocalSocketImpl { int access$300(android.net.LocalSocketImpl,java.io.FileDescriptor); }
-keepclassmembers class android.net.LocalSocketImpl { int access$400(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor); }
-keepclassmembers class android.net.LocalSocketImpl { java.lang.Object access$500(android.net.LocalSocketImpl); }
-keepclassmembers class android.net.LocalSocketImpl { void access$600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { java.lang.reflect.Type getGenericComponentType(); }
-keepclassmembers class android.net.LocalSocketImpl { int access$800(android.net.LocalSocketImpl,java.io.FileDescriptor); }
-keepclassmembers class android.widget.AbsListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { int hashCode(); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { void <init>(java.lang.reflect.Type); }
-keepclassmembers class android.widget.AbsListView { int getLeftPaddingOffset(); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { int getBottomPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void setDrawSelectorOnTop(boolean); }
-keepclassmembers class android.net.LocalSocketImpl { int access$100(android.net.LocalSocketImpl,java.io.FileDescriptor); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingRight(); }
-keepclassmembers class android.net.LocalSocketImpl { java.lang.Object access$200(android.net.LocalSocketImpl); }
-keepclassmembers class android.widget.AbsListView { android.graphics.drawable.Drawable getSelector(); }
-keepclassmembers class android.widget.AbsListView { int getTopPaddingOffset(); }
-keepclassmembers class android.net.LocalSocketImpl { java.io.FileDescriptor access$000(android.net.LocalSocketImpl); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo { void <init>(com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.AbsListView { void drawSelector(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class android.widget.AbsListView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.AbsListView { int getRightPaddingOffset(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(java.util.Map); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.String getName(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(java.util.Map,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo { void <init>(int,int,int[],com.fasterxml.jackson.core.sym.Name[],com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[],int,int,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher,char); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher,char,org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl { void setMaxScrollX(java.lang.Object,int); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl { void setMaxScrollY(java.lang.Object,int); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float,int); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Properties); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean performLongPress(android.view.View,int,long); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,java.lang.String,java.lang.String,char); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Map); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { char getEscapeChar(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getVariablePrefixMatcher(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void checkCyclicSubstitution(java.lang.String,java.util.List); }
-keepclassmembers class ch.qos.logback.classic.PatternLayout { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrLookup getVariableResolver(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getValueDelimiterMatcher(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { boolean isEnableSubstitutionInVariables(); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { void <init>(com.jcraft.jsch.KnownHosts,java.lang.String,java.lang.String,int,byte[],java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void run(); }
-keepclassmembers class ch.qos.logback.classic.PatternLayout { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getVariableSuffixMatcher(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { void <init>(com.jcraft.jsch.KnownHosts,java.lang.String,int,byte[]); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils$1 { void run(); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.afollestad.materialdialogs.util.DialogUtils$1 { void <init>(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.MaterialDialog$Builder); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { int substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { void hash(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class ch.qos.logback.classic.PatternLayout { java.util.Map getDefaultConverterMap(); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { void <init>(java.lang.Class,java.lang.Double); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang3.text.StrBuilder,int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer access$1100(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void setEscapeChar(char); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer access$300(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet$1 { void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { void <init>(com.jcraft.jsch.KnownHosts,java.lang.String,byte[]); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { boolean isHashed(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(java.lang.String); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void access$000(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void draw(android.graphics.Canvas); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void setVariableResolver(org.apache.commons.lang3.text.StrLookup); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replaceSystemProperties(java.lang.Object); }
-keepclassmembers class android.app.ContextImpl$15 { void <init>(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class android.app.ContextImpl$15 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class android.os.SystemClock { void sleep(long); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,java.lang.Runnable); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer { java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void jumpToCurrentState(); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,int,int); }
-keepclassmembers class com.jcraft.jsch.KnownHosts$HashedHostKey { boolean isMatched(java.lang.String); }
-keepclassmembers class android.os.Message { void recycle(); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$4 { boolean onPreDraw(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$4 { void <init>(android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition,android.view.View); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class android.os.Message { void recycleUnchecked(); }
-keepclassmembers class android.os.Message { boolean isAsynchronous(); }
-keepclassmembers class android.os.Message { boolean isInUse(); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void setHotspot(float,float); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { void <clinit>(); }
-keepclassmembers class android.os.Message { void markInUse(); }
-keepclassmembers class android.os.Message { java.lang.String toString(); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean setState(int[]); }
-keepclassmembers class android.os.Message { void updateCheckRecycle(int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { void <init>(java.lang.String,int,float,java.lang.String); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.Message { java.lang.String toString(long); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.lang.String,java.lang.String,long,long,long,int,int,int,byte[],int,long,long); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.os.Message { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { org.apache.commons.lang3.JavaVersion get(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <init>(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { boolean atLeast(org.apache.commons.lang3.JavaVersion); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { void <init>(android.view.View); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void <init>(android.content.Context); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { boolean[] access$000(org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.Class$Caches { libcore.util.BasicLruCache access$000(); }
-keepclassmembers class com.android.okio.ByteString { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class java.lang.Class$Caches { void <clinit>(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString of(byte[]); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void setSingleLineAllCaps(android.widget.TextView); }
-keepclassmembers class java.util.zip.ZipEntry { void setTime(long); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String base64(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { int getTextSpacing(); }
-keepclassmembers class android.transition.TranslationAnimationCreator { android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String hex(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString toAsciiLowercase(); }
-keepclassmembers class java.util.zip.ZipEntry { int hashCode(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { int getMinHeight(); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(byte[],java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString read(java.io.InputStream,int); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { void restore(android.view.View); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void requestLayout(); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void setNonPrimaryAlpha(float); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void setTextColor(int); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class com.android.okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okio.ByteString { int hashCode(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void setTextSize(int,float); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void setTextSpacing(int); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void onAttachedToWindow(); }
-keepclassmembers class com.android.okio.ByteString { void <clinit>(); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String toString(); }
-keepclassmembers class java.util.zip.ZipEntry { boolean containsNulByte(byte[]); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanDescription { java.lang.Class getBeanClass(); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandPubKeyInput { void <init>(it.skarafaz.mercury.ssh.SshCommandDrop); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(android.support.graphics.drawable.PathParser$PathDataNode); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class it.skarafaz.mercury.event.SshCommandPubKeyInput { it.skarafaz.mercury.ssh.SshCommandDrop getDrop(); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void updateTextPositions(int,float,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanDescription { void <init>(com.fasterxml.jackson.databind.JavaType); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class com.android.okio.ByteString { int size(); }
-keepclassmembers class com.fasterxml.jackson.databind.BeanDescription { com.fasterxml.jackson.databind.JavaType getType(); }
-keepclassmembers class android.net.wifi.WifiManager { void <init>(android.content.Context,android.net.wifi.IWifiManager); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class com.android.okio.ByteString { byte[] toByteArray(); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class java.util.zip.ZipEntry { void validateStringLength(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class java.nio.channels.SelectableChannel { void <init>(); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class android.widget.AbsListView { void showPopup(); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.support.v4.view.PagerTitleStrip { void updateText(int,android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class android.widget.AbsListView { int getHeaderViewsCount(); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.widget.AbsListView { int getFooterViewsCount(); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class android.widget.AbsListView { void scrollListBy(int); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void <init>(java.io.InputStream); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void doNext(); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class android.net.wifi.WifiManager { java.lang.Object removeListener(int); }
-keepclassmembers class android.net.wifi.WifiManager { android.os.Messenger getWifiServiceMessenger(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void <clinit>(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void <init>(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int findAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.wifi.WifiManager { void init(); }
-keepclassmembers class android.net.wifi.WifiManager { java.lang.Object access$000(int); }
-keepclassmembers class android.widget.AbsListView { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.net.wifi.WifiManager { com.android.internal.util.AsyncChannel access$100(); }
-keepclassmembers class android.net.wifi.WifiManager { void <clinit>(); }
-keepclassmembers class android.net.wifi.WifiManager { java.lang.Object access$300(); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int getAttributeOffset(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { int access$900(android.text.HtmlToSpannedConverter$Header); }
-keepclassmembers class com.android.okhttp.Route { void <init>(com.android.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress,boolean); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean checkInputConnectionProxy(android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.net.wifi.WifiManager { com.android.internal.util.AsyncChannel access$102(com.android.internal.util.AsyncChannel); }
-keepclassmembers class android.net.wifi.WifiManager { java.util.concurrent.CountDownLatch access$200(); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class android.net.wifi.WifiManager { android.util.SparseArray access$400(); }
-keepclassmembers class com.android.okhttp.Route { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.Route { int hashCode(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void close(); }
-keepclassmembers class android.widget.AbsListView { void finishGlows(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void resetEventInfo(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class android.widget.AbsListView { int getCacheColorHint(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void nodesToPath(android.support.graphics.drawable.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.support.v4.media.MediaMetadataCompatApi21$Builder { java.lang.Object build(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class com.android.okhttp.Route { com.android.okhttp.Address getAddress(); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class com.android.okhttp.Route { java.net.Proxy getProxy(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributeName(int); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int getAttributeNameResource(int); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void setFirstError(brut.androlib.AndrolibException); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { int access$400(android.widget.AbsListView); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributeNamespace(int); }
-keepclassmembers class android.widget.AbsListView { void access$000(android.widget.AbsListView,boolean); }
-keepclassmembers class android.system.ErrnoException { java.io.IOException rethrowAsIOException(); }
-keepclassmembers class android.system.ErrnoException { java.net.SocketException rethrowAsSocketException(); }
-keepclassmembers class android.widget.AbsListView { boolean access$1300(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.widget.AbsListView$CheckForLongPress access$800(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1202(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int getAttributeCount(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.AbsListView { void access$100(android.widget.AbsListView,boolean); }
-keepclassmembers class android.widget.AbsListView { android.widget.AbsListView$CheckForLongPress access$802(android.widget.AbsListView,android.widget.AbsListView$CheckForLongPress); }
-keepclassmembers class android.widget.AbsListView { int access$1400(android.widget.AbsListView); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributeType(int); }
-keepclassmembers class android.widget.AbsListView { int access$1700(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1902(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class android.widget.AbsListView { int access$2100(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.view.VelocityTracker access$1500(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { float[] access$700(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.widget.EdgeEffect access$2400(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$2700(android.widget.AbsListView); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributePrefix(int); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager { void <init>(android.net.wifi.p2p.IWifiP2pManager); }
-keepclassmembers class android.widget.AbsListView { int access$3000(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$1800(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$2200(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { boolean access$3200(android.widget.AbsListView,int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.widget.AbsListView { int access$2000(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { boolean access$3400(android.widget.AbsListView,int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.widget.AbsListView { int access$2800(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.widget.EdgeEffect access$2500(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1900(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { boolean access$2300(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$3100(android.widget.AbsListView); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributeValue(int); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void access$3500(android.widget.AbsListView,boolean); }
-keepclassmembers class android.widget.AbsListView { int access$3300(android.widget.AbsListView); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager { android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener); }
-keepclassmembers class android.widget.AbsListView { void access$2600(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$2900(android.widget.AbsListView); }
-keepclassmembers class android.view.IAssetAtlas$Stub { android.view.IAssetAtlas asInterface(android.os.IBinder); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int getColumnNumber(); }
-keepclassmembers class android.widget.AbsListView { void access$4200(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager { android.net.wifi.p2p.WifiP2pManager$Channel initalizeChannel(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener,android.os.Messenger); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getName(); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4100(android.widget.AbsListView); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getNamespace(); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.AbsListView { int access$3600(android.widget.AbsListView); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getText(); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int next(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { java.lang.String getPositionDescription(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { char[] getTextCharacters(int[]); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { int getBlockSize(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { void open(java.io.InputStream); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { boolean isCBC(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <init>(android.content.Context); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { int getIVSize(); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { void update(byte[],int,int,byte[],int); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { void init(int,byte[],byte[]); }
-keepclassmembers class com.jcraft.jsch.jce.BlowfishCBC { void <init>(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyAsIpAddress(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void drawSelectorCompat(android.graphics.Canvas); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { int measureHeightOfChildrenCompat(int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class android.widget.AbsListView { void access$3700(android.widget.AbsListView,boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorCompat(int,android.view.View); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.net.wifi.p2p.WifiP2pManager { android.os.Messenger getMessenger(); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void drawableStateChanged(); }
-keepclassmembers class android.transition.ChangeClipBounds { java.lang.String[] getTransitionProperties(); }
-keepclassmembers class brut.androlib.res.decoder.AXmlResourceParser { int getLineNumber(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorLikeFocusCompat(int,android.view.View); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(); }
-keepclassmembers class android.transition.ChangeClipBounds { android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyHostName(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { void <clinit>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean shouldShowSelectorCompat(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorLikeTouchCompat(int,android.view.View,float,float); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void setSelectorEnabled(boolean); }
-keepclassmembers class android.transition.ChangeClipBounds { void <clinit>(); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { java.lang.Object convertValue(java.lang.Object); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { void <init>(com.fasterxml.jackson.databind.util.Converter); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { void resolve(com.fasterxml.jackson.databind.DeserializationContext); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean touchModeDrawsInPressedStateCompat(); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void updateSelectorStateCompat(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onHeaders(int,java.util.List,boolean); }
-keepclassmembers class com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer { java.lang.Class handledType(); }
-keepclassmembers class java.nio.charset.CharacterCodingException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onData(int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onRequest(int,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { void onReset(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.ContextImpl$31 { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { android.support.v7.widget.ListPopupWindow getListPopupWindow(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void onDetachedFromWindow(); }
-keepclassmembers class android.app.ContextImpl$31 { java.lang.Object createService(android.app.ContextImpl); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { boolean isShowingPopup(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { boolean showPopup(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void onAttachedToWindow(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void <init>(android.content.Context); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setIcon(int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void showPopupUnchecked(int); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void removeListeners(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { boolean dismissPopup(); }
-keepclassmembers class android.support.v7.widget.ActivityChooserView { void updateAppearance(); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.util.Map$Entry get(java.util.Map$Entry); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { boolean onPreDraw(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { boolean isEmpty(java.lang.Object); }
-keepclassmembers class android.content.pm.Signature { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class android.transition.PathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { boolean isEmpty(java.util.Iterator); }
-keepclassmembers class android.content.pm.Signature { void <init>(android.os.Parcel); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class java.util.WeakHashMap$1$1 { void <init>(java.util.WeakHashMap$1); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class java.util.jar.ManifestReader { void <init>(byte[],java.util.jar.Attributes); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { void <init>(com.fasterxml.jackson.databind.ser.impl.IteratorSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class android.content.pm.Signature { void <init>(android.os.Parcel,android.content.pm.Signature$1); }
-keepclassmembers class java.util.jar.ManifestReader { boolean readHeader(); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { boolean hasSingleElement(java.lang.Object); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer); }
-keepclassmembers class java.util.jar.ManifestReader { void readName(); }
-keepclassmembers class java.util.jar.ManifestReader { void readEntries(java.util.Map,java.util.Map); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String getRealm(); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String toString(); }
-keepclassmembers class java.util.jar.ManifestReader { void readValue(); }
-keepclassmembers class java.util.jar.ManifestReader { int getEndOfMainSection(); }
-keepclassmembers class android.widget.Scroller { void <init>(android.content.Context); }
-keepclassmembers class com.fasterxml.jackson.databind.ser.impl.IteratorSerializer { boolean hasSingleElement(java.util.Iterator); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Scroller { void startScroll(int,int,int,int,int); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String getScheme(); }
-keepclassmembers class android.widget.Scroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class android.widget.Scroller { void <clinit>(); }
-keepclassmembers class android.widget.Scroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { int hashCode(); }
-keepclassmembers class android.widget.Scroller { int getFinalX(); }
-keepclassmembers class android.widget.Scroller { int getCurrX(); }
-keepclassmembers class android.widget.Scroller { boolean computeScrollOffset(); }
-keepclassmembers class android.widget.Scroller { float computeDeceleration(float); }
-keepclassmembers class android.widget.Scroller { void abortAnimation(); }
-keepclassmembers class android.widget.Scroller { void startScroll(int,int,int,int); }
-keepclassmembers class android.widget.Scroller { void setFinalX(int); }
-keepclassmembers class android.widget.Scroller { boolean isFinished(); }
-keepclassmembers class android.widget.Scroller { int getCurrY(); }
-keepclassmembers class android.widget.Scroller { int getStartX(); }
