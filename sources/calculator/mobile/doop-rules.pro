-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

-dontoptimize
-dontpreverify

-dontnote
-ignorewarnings
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int[]); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class java.io.UnixFileSystem { void <init>(); }
-keepclassmembers class java.lang.Thread { void exit(); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class sun.misc.Unsafe { java.lang.Object getObjectVolatile(java.lang.Object,long); }
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String[] list(java.io.File); }
-keepclassmembers class sun.misc.Unsafe { java.lang.Object getObject(java.lang.Object,long); }
-keepclassmembers class java.security.AccessController { java.lang.Object doPrivileged(java.security.PrivilegedAction); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class java.security.AccessController { java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext); }
-keepclassmembers class java.security.AccessController { java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void <init>(com.android.internal.widget.FloatingToolbar); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class java.util.WeakHashMap$KeyIterator { void <init>(java.util.WeakHashMap); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void activate(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class java.util.WeakHashMap$KeyIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$2 { void onClick(android.view.View); }
-keepclassmembers class java.util.WeakHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void deactivate(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void setMoving(boolean); }
-keepclassmembers class android.icu.text.Normalizer$NFKCModeImpl { android.icu.text.Normalizer$ModeImpl access$1000(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void setHideRequested(boolean); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void setOutOfBounds(boolean); }
-keepclassmembers class android.icu.text.Normalizer$NFKCModeImpl { void <clinit>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper { void updateToolbarVisibility(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$3 { void <init>(); }
-keepclassmembers class java.util.Locale { void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class sun.security.x509.AlgorithmId { void decodeParams(); }
-keepclassmembers class sun.security.x509.AlgorithmId { void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$3 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class sun.security.x509.AlgorithmId { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void putObjectVolatile(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class android.view.HandlerActionQueue { void post(java.lang.Runnable); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class android.view.HandlerActionQueue { void <init>(); }
-keepclassmembers class android.view.HandlerActionQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class java.util.Locale { java.util.Locale createConstant(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class sun.security.x509.AlgorithmId { void derEncode(java.io.OutputStream); }
-keepclassmembers class java.util.Locale { java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.LocaleExtensions); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class sun.security.x509.AlgorithmId { sun.security.util.ObjectIdentifier getOID(); }
-keepclassmembers class sun.security.x509.AlgorithmId { java.lang.String getName(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorEditText { void log(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class java.util.Locale { java.util.Locale getInstance(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class sun.security.x509.AlgorithmId { byte[] getEncodedParams(); }
-keepclassmembers class android.view.HandlerActionQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(java.util.Locale$Category); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorEditText { void backspace(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.CacheValue$StrongValue { void <init>(java.lang.Object); }
-keepclassmembers class android.icu.impl.CacheValue$StrongValue { java.lang.Object get(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class android.icu.impl.CacheValue$StrongValue { java.lang.Object resetIfCleared(java.lang.Object); }
-keepclassmembers class java.util.Locale { java.util.Locale initDefault(); }
-keepclassmembers class dalvik.system.VMRuntime { int getTargetSdkVersion(); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class sun.security.x509.AlgorithmId { boolean equals(sun.security.x509.AlgorithmId); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class android.view.HandlerActionQueue { void executeActions(android.os.Handler); }
-keepclassmembers class sun.security.x509.AlgorithmId { java.lang.String paramsToString(); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class dalvik.system.VMRuntime { void registerNativeAllocation(int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class sun.security.x509.AlgorithmId { java.lang.String toString(); }
-keepclassmembers class dalvik.system.VMRuntime { void registerNativeFree(int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class dalvik.system.VMRuntime { void runFinalization(long); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$000(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void <init>(); }
-keepclassmembers class java.util.Locale { java.util.Locale initDefault(java.util.Locale$Category); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$002(com.xlythe.view.floating.FloatingView,int); }
-keepclassmembers class sun.security.x509.AlgorithmId { sun.security.x509.AlgorithmId parse(sun.security.util.DerValue); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$100(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$1002(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$1000(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.graphics.Point access$1100(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$1300(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$1402(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void access$1700(com.xlythe.view.floating.FloatingView,com.xlythe.view.floating.AnimationFinishedListener); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$1600(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$1500(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.ViewGroup access$1900(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$2000(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.ViewGroup access$1800(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$200(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.View access$1200(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$2302(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.View access$2500(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void access$2100(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { float access$2600(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void access$2400(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$302(com.xlythe.view.floating.FloatingView,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { float access$2800(com.xlythe.view.floating.FloatingView,float); }
-keepclassmembers class java.util.Locale { sun.util.locale.BaseLocale getBaseLocale(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.View access$2502(com.xlythe.view.floating.FloatingView,android.view.View); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.View access$500(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { float access$2700(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class sun.security.x509.X509CRLImpl { void <init>(sun.security.util.DerValue); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void access$700(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$300(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.view.ViewGroup access$800(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int access$400(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean access$902(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void adjustInactivePosition(); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class com.xlythe.math.Solver { boolean isDigit(char); }
-keepclassmembers class android.transition.Transition { int[] parseMatchOrder(java.lang.String); }
-keepclassmembers class com.xlythe.math.Solver { boolean equal(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.x509.AlgorithmId { void reinitializeMappingTableLocked(); }
-keepclassmembers class com.xlythe.math.Solver { void <clinit>(); }
-keepclassmembers class com.xlythe.math.Solver { java.lang.String clean(java.lang.String); }
-keepclassmembers class android.transition.Transition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.xlythe.math.Solver { boolean isNegative(java.lang.String); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class com.xlythe.math.Solver { void <init>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class com.xlythe.math.Solver { java.lang.String convertToDecimal(java.lang.String); }
-keepclassmembers class com.xlythe.math.Solver { boolean displayContainsMatrices(java.lang.String); }
-keepclassmembers class com.xlythe.math.Solver { boolean isOperator(char); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class com.xlythe.math.Solver { double eval(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$5 { void setActivePage(int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$5 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator,com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter); }
-keepclassmembers class com.xlythe.math.Solver { boolean isOperator(java.lang.String); }
-keepclassmembers class sun.security.x509.AlgorithmId { sun.security.util.ObjectIdentifier oid(int[]); }
-keepclassmembers class com.xlythe.math.Solver { com.xlythe.math.BaseModule getBaseModule(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setStartDelay(long); }
-keepclassmembers class sun.security.x509.AlgorithmId { java.lang.String makeSigAlg(java.lang.String,java.lang.String); }
-keepclassmembers class com.xlythe.math.Solver { com.xlythe.math.MatrixModule getMatrixModule(); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$5 { void onPageScrollStateChanged(int); }
-keepclassmembers class android.transition.Transition { void setMatchOrder(int[]); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void applyReflectorsToRow(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$5 { void onPageScrolled(int,float,int); }
-keepclassmembers class com.xlythe.math.Solver { void setLineLength(int); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void <init>(boolean,char[]); }
-keepclassmembers class com.xlythe.math.Solver { java.lang.String solve(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$5 { void onPageSelected(int); }
-keepclassmembers class sun.security.x509.AlgorithmId { java.lang.String getEncAlgFromSigAlg(java.lang.String); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { java.lang.String toJavaFormatString(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorEditText { void onSelectionChanged(int,int); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class android.transition.Transition { boolean isValidMatch(int); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void appendTo(java.lang.Appendable); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class android.transition.Transition { boolean alreadyContains(int[],int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int getScreenWidth(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { int getDigits(char[]); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { int getDecimalExponent(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int getStatusBarHeight(); }
-keepclassmembers class com.xlythe.math.Solver { com.xlythe.math.Base getBase(); }
-keepclassmembers class sun.security.x509.AlgorithmId { void <clinit>(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { boolean isNegative(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { boolean isExceptional(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void setSign(boolean); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void developLongDigits(int,long,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void hide(boolean); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void computeW_row(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,double[],int); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void computeRowOfV(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class com.android.internal.view.InputBindResult { void <init>(android.os.Parcel); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void dtoa(int,long,int,boolean); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$1 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.xlythe.math.Solver { java.lang.String tryFormattingWithPrecision(double,int); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$1 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.android.internal.view.InputBindResult { void <clinit>(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper$MyHandler { void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void computeY(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class java.text.AttributedString { void <init>(java.text.AttributedCharacterIterator[]); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class java.io.UnixFileSystem { char getSeparator(); }
-keepclassmembers class java.io.UnixFileSystem { char getPathSeparator(); }
-keepclassmembers class java.io.UnixFileSystem { int prefixLength(java.lang.String); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.util.Date { void setTime(long); }
-keepclassmembers class java.util.Date { long getTimeImpl(); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class java.text.AttributedString { void <init>(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { double innerProdRowSymm(int,org.ejml.data.D1Submatrix64F,int,org.ejml.data.D1Submatrix64F,int,int); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String resolve(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float,boolean,boolean); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.AttributedString { void <init>(java.text.AttributedCharacterIterator); }
-keepclassmembers class java.text.AttributedString { void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[]); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String getDefaultParent(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void onTargetRadiusChanged(float); }
-keepclassmembers class java.io.UnixFileSystem { boolean isAbsolute(java.io.File); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void close(boolean,boolean); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void multA_u(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void close(); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String canonicalize(java.lang.String); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void close(boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock { void <init>(java.util.concurrent.locks.ReentrantReadWriteLock); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String resolve(java.io.File); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalBlockHelper { void tridiagUpperRow(int,org.ejml.data.D1Submatrix64F,double[],org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.content.Context getContext(); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class org.javia.arity.IsComplexException { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { boolean drawHardware(android.view.DisplayListCanvas); }
-keepclassmembers class java.util.Date { java.lang.StringBuilder convertToAbbr(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class sun.security.x509.X509CRLImpl { javax.security.auth.x500.X500Principal getIssuerX500Principal(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { boolean hasFinishedExit(); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RippleForeground { android.animation.Animator createSoftwareEnter(boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int getScreenHeight(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { android.view.inputmethod.InputConnection getTarget(); }
-keepclassmembers class android.icu.impl.ICUBinary$SingleDataFile { void <init>(java.lang.String,java.io.File); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void onCreate(); }
-keepclassmembers class android.icu.impl.ICUBinary$SingleDataFile { java.nio.ByteBuffer getData(java.lang.String); }
-keepclassmembers class java.text.AttributedString { void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean performEditorAction(int); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String parentOrNull(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean reportFullscreenMode(boolean); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { java.lang.CharSequence getTextBeforeCursor(int,int); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void move(float,float); }
-keepclassmembers class java.io.UnixFileSystem { int getBooleanAttributes(java.io.File); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float getCurrentY(); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String canonicalize0(java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String convertOldISOCodes(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUBinary$SingleDataFile { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float getCurrentX(); }
-keepclassmembers class java.io.UnixFileSystem { int getBooleanAttributes0(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { int getCursorCapsMode(int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean sendKeyEvent(android.view.KeyEvent); }
-keepclassmembers class java.text.AttributedString { void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int); }
-keepclassmembers class java.util.Locale { sun.util.locale.LocaleExtensions getCompatibilityExtensions(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { java.lang.CharSequence getTextAfterCursor(int,int); }
-keepclassmembers class java.io.UnixFileSystem { long getLastModifiedTime(java.io.File); }
-keepclassmembers class android.graphics.drawable.RippleForeground { int getRadiusExitDuration(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { java.lang.CharSequence getSelectedText(int); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void roundup(); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar$Date normalize(); }
-keepclassmembers class java.io.UnixFileSystem { boolean checkAccess(java.io.File,int); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { int estimateDecExp(long,int); }
-keepclassmembers class java.io.UnixFileSystem { boolean checkAccess0(java.io.File,int); }
-keepclassmembers class java.io.UnixFileSystem { long getLength0(java.io.File); }
-keepclassmembers class java.io.UnixFileSystem { long getLength(java.io.File); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float getCurrentRadius(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean deleteSurroundingText(int,int); }
-keepclassmembers class java.text.AttributedString { void addAttributeImpl(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int); }
-keepclassmembers class java.io.UnixFileSystem { long getLastModifiedTime0(java.io.File); }
-keepclassmembers class android.graphics.drawable.RippleForeground { int getOpacityExitDuration(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void onDestroy(); }
-keepclassmembers class java.text.AttributedString { void createRunAttributeDataVectors(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean deleteSurroundingTextInCodePoints(int,int); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date); }
-keepclassmembers class java.text.AttributedString { int ensureRunBreak(int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean setComposingText(java.lang.CharSequence,int); }
-keepclassmembers class java.text.AttributedString { int ensureRunBreak(int,boolean); }
-keepclassmembers class android.graphics.drawable.RippleForeground { android.animation.Animator createSoftwareExit(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean finishComposingText(); }
-keepclassmembers class java.io.UnixFileSystem { boolean delete0(java.io.File); }
-keepclassmembers class java.io.UnixFileSystem { java.lang.String[] list0(java.io.File); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { int insignificantDigitsForPow2(int); }
-keepclassmembers class android.content.UndoManager$UndoState { void <init>(android.content.UndoManager,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean commitText(java.lang.CharSequence,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void onHide(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean commitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void onShow(); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { int getChars(char[]); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar getCalendarSystem(int); }
-keepclassmembers class java.io.UnixFileSystem { boolean delete(java.io.File); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar getCalendarSystem(sun.util.calendar.BaseCalendar$Date); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.RippleForeground { android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet createHardwareExit(android.graphics.Paint); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean setSelection(int,int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean setComposingRegion(int,int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean commitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.content.UndoManager$UndoState { void <init>(android.content.UndoManager,android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean beginBatchEdit(); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar getCalendarSystem(long); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean performContextMenuAction(int); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean endBatchEdit(); }
-keepclassmembers class java.util.Date { sun.util.calendar.BaseCalendar getJulianCalendar(); }
-keepclassmembers class java.util.Locale { sun.util.locale.LocaleExtensions access$700(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void computeBoundedTargetValues(); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class java.io.UnixFileSystem { int compare(java.io.File,java.io.File); }
-keepclassmembers class java.io.EOFException { void <init>(java.lang.String); }
-keepclassmembers class android.content.UndoManager$UndoState { void writeToParcel(android.os.Parcel); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class java.io.UnixFileSystem { int hashCode(java.io.File); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean clearMetaKeyStates(int); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean performPrivateCommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean requestCursorUpdates(int); }
-keepclassmembers class java.util.Locale { void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { android.os.Handler getHandler(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle); }
-keepclassmembers class java.io.UnixFileSystem { void <clinit>(); }
-keepclassmembers class android.content.UndoManager$UndoState { void updateLabel(java.lang.CharSequence); }
-keepclassmembers class java.io.UnixFileSystem { void initIDs(); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class android.content.UndoManager$UndoState { int getCommitId(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void closeConnection(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void jumpValuesToExit(); }
-keepclassmembers class java.text.AttributedString { void addAttributeRunData(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean setCanMerge(boolean); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void clampStartingPosition(); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.NavigableMap); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean canMerge(); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class android.content.UndoManager$UndoState { void makeExecuted(); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.SortedSet); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean hasOperation(android.content.UndoOwner); }
-keepclassmembers class java.lang.System { java.lang.SecurityManager getSecurityManager(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$3 { void onAnimationFinished(); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$102(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class sun.security.x509.X509CRLImpl { void parse(sun.security.util.DerValue); }
-keepclassmembers class android.graphics.drawable.RippleForeground { boolean access$002(android.graphics.drawable.RippleForeground,boolean); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$100(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$302(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean hasMultipleOwners(); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class java.util.TreeSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$202(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class android.content.UndoManager$UndoState { void addOperation(android.content.UndoOperation); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void access$100(sun.misc.FloatingDecimal$BinaryToASCIIBuffer,int,long,int,boolean); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void access$000(sun.misc.FloatingDecimal$BinaryToASCIIBuffer,boolean); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$200(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$402(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class java.text.AttributedString { java.text.AttributedCharacterIterator getIterator(); }
-keepclassmembers class com.xlythe.calculator.material.view.ResizingEditText { float getVariableTextSize(java.lang.String); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.TreeSet { void clear(); }
-keepclassmembers class java.util.TreeSet { boolean remove(java.lang.Object); }
-keepclassmembers class sun.misc.FloatingDecimal$BinaryToASCIIBuffer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleForeground { float access$400(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.graphics.drawable.RippleForeground { void <clinit>(); }
-keepclassmembers class java.text.AttributedString { java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int); }
-keepclassmembers class java.text.AttributedString { java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute,int); }
-keepclassmembers class android.transition.Transition { android.util.ArrayMap getRunningAnimators(); }
-keepclassmembers class android.content.UndoManager$UndoState { android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class java.text.AttributedString { char charAt(int); }
-keepclassmembers class java.text.AttributedString { java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int); }
-keepclassmembers class java.text.AttributedString { int length(); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean hasData(); }
-keepclassmembers class android.content.UndoManager$UndoState { boolean matchOwner(android.content.UndoOwner); }
-keepclassmembers class android.content.UndoManager$UndoState { void commit(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.content.UndoManager$UndoState { void undo(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(int); }
-keepclassmembers class android.content.UndoManager$UndoState { void redo(); }
-keepclassmembers class com.xlythe.calculator.material.view.ResizingEditText { void onMeasure(int,int); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { void <init>(); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { double[] _getVV(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.content.UndoManager$UndoState { void destroy(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class java.util.TreeSet { java.lang.Object first(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class java.util.TreeSet { java.util.Comparator comparator(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class com.xlythe.calculator.material.view.ResizingEditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.text.CurrencyDisplayNames { android.icu.text.CurrencyDisplayNames getInstance(android.icu.util.ULocale); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.view.ResizingEditText { void invalidateTextSize(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { void _solveVectorInternal(double[]); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.view.ResizingEditText { void setTextSize(int,float); }
-keepclassmembers class com.xlythe.view.floating.FloatingView { void open(); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class android.icu.text.CurrencyDisplayNames { void <init>(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class sun.security.x509.X509CRLImpl { javax.security.auth.x500.X500Principal getCertIssuer(sun.security.x509.X509CRLEntryImpl,javax.security.auth.x500.X500Principal); }
-keepclassmembers class android.view.IRotationWatcher$Stub { void <init>(); }
-keepclassmembers class java.text.AttributedString { void appendContents(java.lang.StringBuffer,java.text.CharacterIterator); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { double computeDeterminant(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.text.AttributedString { void setAttributes(java.util.Map,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <clinit>(); }
-keepclassmembers class android.view.IRotationWatcher$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.icu.impl.ICUConfig$1 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean updateTint(int[]); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { void decomposeCommonInit(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.text.AttributedString { boolean mapsDiffer(java.util.Map,java.util.Map); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class android.icu.impl.ICUConfig$1 { java.lang.String run(); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.util.TreeSet { void <clinit>(); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { org.ejml.data.DenseMatrix64F getLU(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int); }
-keepclassmembers class java.text.AttributedString { boolean valuesMatch(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void draw(android.graphics.Canvas); }
-keepclassmembers class java.text.AttributedString { java.lang.Object access$100(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int); }
-keepclassmembers class java.text.AttributedString { char access$000(java.text.AttributedString,int); }
-keepclassmembers class java.text.AttributedString { java.lang.Object access$400(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int,int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class java.text.AttributedString { boolean access$200(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.SimpleCache { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { int getTotalSpaceChange(); }
-keepclassmembers class java.lang.System { void arraycopy(double[],int,double[],int,int); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void setBackgroundColor(int); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void onLayoutComplete(); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class android.icu.impl.SimpleCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getOpacity(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicWidth(); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class android.animation.PropertyValuesHolder$PropertyValues { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int[] getState(); }
-keepclassmembers class android.icu.util.MeasureUnit { int hashCode(); }
-keepclassmembers class android.icu.impl.SimpleCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getWrappedDrawable(); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class android.icu.util.MeasureUnit { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUConfig$1 { java.lang.Object run(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isStateful(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isCompatTintEnabled(); }
-keepclassmembers class sun.security.x509.AVAComparator { void <init>(); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class sun.security.x509.AVAComparator { int compare(sun.security.x509.AVA,sun.security.x509.AVA); }
-keepclassmembers class sun.security.x509.SerialNumber { void construct(sun.security.util.DerValue); }
-keepclassmembers class sun.security.x509.AVAComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class java.lang.System { void arraycopyDoubleUnchecked(double[],int,double[],int,int); }
-keepclassmembers class android.icu.util.MeasureUnit { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class sun.security.x509.AVAComparator { void <clinit>(); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class sun.security.x509.SerialNumber { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class sun.security.x509.SerialNumber { java.lang.String toString(); }
-keepclassmembers class sun.security.x509.AVAComparator { java.util.Comparator getInstance(); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class android.icu.util.MeasureUnit { android.icu.util.MeasureUnit internalGetInstance(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean onLevelChange(int); }
-keepclassmembers class sun.security.x509.SerialNumber { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setAlpha(int); }
-keepclassmembers class sun.security.x509.SerialNumber { java.math.BigInteger getNumber(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setState(int[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformWidth(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setDither(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformHeight(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.icu.util.MeasureUnit { android.icu.util.MeasureUnit addUnit(java.lang.String,java.lang.String,android.icu.util.MeasureUnit$Factory); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionBase { void setExpectedMaxSize(int,int); }
-keepclassmembers class org.ejml.UtilEjml { void <clinit>(); }
-keepclassmembers class org.ejml.simple.SimpleEVD { void <init>(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.util.MeasureUnit { java.lang.String toString(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.System { java.lang.String getEnvironmentPath(java.lang.String,java.lang.String); }
-keepclassmembers class org.ejml.simple.SimpleEVD { org.ejml.data.Complex64F getEigenvalue(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.System { java.lang.String generateIcuDataPath(); }
-keepclassmembers class org.ejml.simple.SimpleEVD { org.ejml.simple.SimpleMatrix getEigenVector(int); }
-keepclassmembers class org.ejml.UtilEjml { void memset(double[],double); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class java.lang.System { void setUnchangeableSystemProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class java.lang.System { void addLegacyLocaleSystemProperties(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class java.lang.System { java.util.Properties initProperties(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader$IsAcceptable { void <init>(android.icu.impl.ICUBinary$1); }
-keepclassmembers class java.lang.System { java.util.Properties setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader$IsAcceptable { void <init>(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class org.ejml.UtilEjml { void memset(int[],int,int); }
-keepclassmembers class android.icu.util.MeasureUnit { void <clinit>(); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.util.PathParser$PathData { void <init>(android.util.PathParser$PathData); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.util.PathParser$PathData { void <init>(); }
-keepclassmembers class android.util.PathParser$PathData { void <init>(java.lang.String); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class java.lang.System { void gc(); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(int); }
-keepclassmembers class android.util.PathParser$PathData { long getNativePtr(); }
-keepclassmembers class java.lang.System { void checkKey(java.lang.String); }
-keepclassmembers class sun.net.ResourceManager { void beforeUdpCreate(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class sun.net.ResourceManager { void <clinit>(); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(long); }
-keepclassmembers class java.lang.System { java.io.PrintStream newPrintStream(java.io.FileOutputStream,java.lang.String); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class android.icu.math.BigDecimal { void <init>(); }
-keepclassmembers class sun.net.ResourceManager { void afterUdpClose(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal add(android.icu.math.BigDecimal,android.icu.math.MathContext); }
-keepclassmembers class android.transition.Transition { void forceToEnd(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { void <init>(); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(java.lang.String,int); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.transition.Transition { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.transition.Transition { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class java.lang.System { void logW(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class android.transition.Transition { void setPropagation(android.transition.TransitionPropagation); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getBaseline(); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getDividerWidth(); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getNextLocationOffset(android.view.View); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,int); }
-keepclassmembers class android.transition.Transition { void setCanRemoveViews(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getVirtualChildCount(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setSceneRoot(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getLocationOffset(android.view.View); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class android.icu.lang.UScript$ScriptMetadata { int access$000(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { boolean modifiesA(); }
-keepclassmembers class android.icu.lang.UScript$ScriptMetadata { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { void <init>(org.ejml.factory.LinearSolver); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { boolean modifiesB(); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { void solve(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.Editor$4 { void <init>(android.widget.Editor); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.linsol.WrapLinearSolverBlock64 { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class android.widget.Editor$4 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.icu.lang.UScript$ScriptMetadata { int getScriptProps(int); }
-keepclassmembers class com.xlythe.math.BaseModule { int getSeparatorDistance(com.xlythe.math.Base); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String group(java.lang.String,int,char); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.xlythe.math.BaseModule { void <init>(com.xlythe.math.Solver); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.widget.CheckBox { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String newBase(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView); }
-keepclassmembers class android.icu.math.BigDecimal { int compareTo(android.icu.math.BigDecimal); }
-keepclassmembers class android.support.v4.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { void moveToLimit(); }
-keepclassmembers class android.icu.text.LowercaseTransliterator$1 { void <init>(); }
-keepclassmembers class android.icu.math.BigDecimal { int compareTo(android.icu.math.BigDecimal,android.icu.math.MathContext); }
-keepclassmembers class android.support.design.widget.StateListAnimator$1 { void <init>(android.support.design.widget.StateListAnimator); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { int nextCaseMapCP(); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { int getCPStart(); }
-keepclassmembers class android.support.design.widget.StateListAnimator$1 { void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int); }
-keepclassmembers class android.transition.ChangeTransform$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { int getCPLimit(); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { void reset(int); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture$1 { void <init>(java.io.ObjectStreamClass$EntryFuture); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { void setLimit(int); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture$1 { java.lang.Void run(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void initDrawables(); }
-keepclassmembers class android.icu.text.LowercaseTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureHorizontal(int,int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void show(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class android.icu.impl.CaseMap$StringContextIterator { int next(); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class java.util.Formatter$Flags { int valueOf(); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class java.util.Formatter$Flags { boolean contains(java.util.Formatter$Flags); }
-keepclassmembers class java.util.Formatter$Flags { void <init>(int); }
-keepclassmembers class android.animation.AnimationHandler { void <init>(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void initHandles(); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags dup(); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal divide(android.icu.math.BigDecimal,int,int); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimationHandler { android.animation.AnimationHandler getInstance(); }
-keepclassmembers class android.animation.AnimationHandler { android.animation.AnimationHandler$AnimationFrameCallbackProvider getProvider(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void enterDrag(int); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags add(java.util.Formatter$Flags); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.animation.AnimationHandler { void addAnimationFrameCallback(android.animation.AnimationHandler$AnimationFrameCallback,long); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.support.v4.os.ParcelableCompat { android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags remove(java.util.Formatter$Flags); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void hide(); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture$1 { java.lang.Object run(); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$13 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags parse(char); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class android.icu.text.UnicodeSet$SpanCondition { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags parse(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String changeBase(java.lang.String,com.xlythe.math.Base,com.xlythe.math.Base); }
-keepclassmembers class android.animation.AnimationHandler { void removeCallback(android.animation.AnimationHandler$AnimationFrameCallback); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.Object[] removeWhitespace(java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class java.util.Formatter$Flags { java.util.Formatter$Flags access$100(java.util.Formatter$Flags,java.util.Formatter$Flags); }
-keepclassmembers class android.icu.text.UnicodeSet$SpanCondition { void <clinit>(); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String changeBase(java.lang.String,com.xlythe.math.Base); }
-keepclassmembers class android.animation.AnimationHandler { long getFrameDelay(); }
-keepclassmembers class java.util.Formatter$Flags { java.lang.String toString(); }
-keepclassmembers class android.animation.AnimationHandler { void autoCancelBasedOn(android.animation.ObjectAnimator); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean shouldIgnoreInvalidAnimation(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.animation.AnimationHandler { int getAnimationCount(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class sun.security.x509.RDN { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal multiply(android.icu.math.BigDecimal,android.icu.math.MathContext); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class sun.security.x509.RDN { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Formatter$Flags { void <clinit>(); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.animation.AnimationHandler { int getCallbackSize(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void onSetTextAppearance(android.content.Context,int); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void setAllCaps(boolean); }
-keepclassmembers class java.net.URI$Parser { void <init>(java.net.URI,java.lang.String); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal plus(android.icu.math.MathContext); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class sun.security.x509.RDN { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class sun.security.x509.RDN { java.lang.String toString(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLayoutDirectionChanged(int); }
-keepclassmembers class java.net.URI$Parser { void fail(java.lang.String); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class java.net.URI$Parser { void fail(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.io.PrintStream { java.nio.charset.Charset toCharset(java.lang.String); }
-keepclassmembers class java.io.PrintStream { java.lang.Object requireNonNull(java.lang.Object,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateSelection(android.view.MotionEvent); }
-keepclassmembers class java.net.URI$Parser { void failExpecting(java.lang.String,int); }
-keepclassmembers class java.io.PrintStream { void <init>(boolean,java.io.OutputStream); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean selectCurrentParagraphAndStartDrag(); }
-keepclassmembers class java.io.PrintStream { void <init>(boolean,java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { float[] append(float[],int,float); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateCharacterBasedSelection(android.view.MotionEvent); }
-keepclassmembers class java.net.URI$Parser { java.lang.String substring(int,int); }
-keepclassmembers class android.animation.AnimationHandler { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.net.URI$Parser { char charAt(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class java.net.URI$Parser { boolean at(int,int,char); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream,boolean,java.lang.String); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.net.URI$Parser { boolean at(int,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class sun.security.x509.RDN { java.lang.String toRFC2253StringInternal(boolean,java.util.Map); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class sun.security.x509.RDN { java.lang.String toRFC2253String(boolean); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateWordBasedSelection(android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.net.URI$Parser { int scan(int,int,char); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class java.io.PrintStream { void ensureOpen(); }
-keepclassmembers class java.text.CalendarBuilder { int toISODayOfWeek(int); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateParagraphBasedSelection(android.view.MotionEvent); }
-keepclassmembers class libcore.net.UriCodec { int hexCharToValue(char); }
-keepclassmembers class java.net.URI$Parser { int scanEscape(int,int,char); }
-keepclassmembers class java.net.URI$Parser { int scan(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { java.net.URISyntaxException unexpectedCharacterException(java.lang.String,java.lang.String,char,int); }
-keepclassmembers class android.icu.math.BigDecimal { double doubleValue(); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimatorSetHelper { android.view.RenderNode getTarget(android.view.DisplayListCanvas); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.PrintStream { java.io.BufferedWriter getTextOut(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.net.URI$Parser { int scan(int,int,long,long); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.icu.math.BigDecimal { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.net.UriCodec { char getNextCharacter(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class com.xlythe.math.BaseModule { char getSeparator(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class android.view.RenderNodeAnimatorSetHelper { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class com.xlythe.math.BaseModule { com.xlythe.math.Base getBase(); }
-keepclassmembers class com.xlythe.math.BaseModule { char getSeparator(com.xlythe.math.Base); }
-keepclassmembers class java.net.URI$Parser { void checkChars(int,int,long,long,java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetDragAcceleratorState(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isCursorBeingModified(); }
-keepclassmembers class java.io.PrintStream { void write(int); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String groupDigits(java.lang.String,com.xlythe.math.Base); }
-keepclassmembers class android.widget.DropDownListView { void <init>(android.content.Context,boolean,int); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.widget.FrameLayout$LayoutParams); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isDragAcceleratorActive(); }
-keepclassmembers class java.net.URI$Parser { void checkChar(int,long,long,java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class android.widget.DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.DropDownListView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void updateAnimatorProperty(android.animation.Animator,java.lang.String,android.graphics.drawable.VectorDrawable,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$7$1 { void <init>(com.xlythe.view.floating.FloatingView$7); }
-keepclassmembers class android.widget.DropDownListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.DropDownListView { boolean shouldShowSelector(); }
-keepclassmembers class java.net.URI$Parser { void parse(boolean); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(com.nineoldandroids.util.Property,float[]); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void access$3400(android.widget.Editor$SelectionModifierCursorController); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void invalidateHandles(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { android.widget.Editor$SelectionHandleView access$3300(android.widget.Editor$SelectionModifierCursorController); }
-keepclassmembers class java.util.Locale$Builder { void <init>(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isActive(); }
-keepclassmembers class java.net.URI$Parser { int parseHierarchical(int,int); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void access$3500(android.widget.Editor$SelectionModifierCursorController); }
-keepclassmembers class android.widget.DropDownListView { void drawableStateChanged(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$7$1 { void onAnimationFinished(); }
-keepclassmembers class java.io.PrintStream { void write(java.lang.String); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.net.URI$Parser { int parseAuthority(int,int); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String,java.lang.String[]); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class com.xlythe.math.BaseModule { java.lang.String groupSentence(java.lang.String,int); }
-keepclassmembers class java.io.PrintStream { void newLine(); }
-keepclassmembers class java.util.Locale$Builder { java.util.Locale$Builder setScript(java.lang.String); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathData,android.util.PathParser$PathData); }
-keepclassmembers class java.util.Locale$Builder { java.util.Locale$Builder setLanguage(java.lang.String); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean containsSameValueType(android.animation.PropertyValuesHolder,android.util.Property); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class android.util.PathParser { boolean interpolatePathData(android.util.PathParser$PathData,android.util.PathParser$PathData,android.util.PathParser$PathData,float); }
-keepclassmembers class java.io.PrintStream { void println(); }
-keepclassmembers class android.util.PathParser { void nParseStringForPath(long,java.lang.String,int); }
-keepclassmembers class java.io.PrintStream { void print(char); }
-keepclassmembers class android.widget.DropDownListView { void setListSelectionHidden(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureVertical(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void fallbackOntoUI(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class java.security.Provider$EngineDescription { java.lang.Class getConstructorParameterClass(); }
-keepclassmembers class java.net.URI$Parser { int parseServer(int,int); }
-keepclassmembers class android.util.PathParser { boolean nCanMorph(long,long); }
-keepclassmembers class android.util.PathParser { long nCreateEmptyPathData(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int measureNullChild(int); }
-keepclassmembers class android.util.PathParser { long nCreatePathDataFromString(java.lang.String,int); }
-keepclassmembers class android.util.PathParser { long access$000(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class android.util.PathParser { long access$100(long); }
-keepclassmembers class android.widget.DropDownListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class android.util.PathParser { long nCreatePathData(long); }
-keepclassmembers class android.util.PathParser { boolean nInterpolatePathData(long,long,long,float); }
-keepclassmembers class android.widget.DropDownListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.util.PathParser { long access$200(java.lang.String,int); }
-keepclassmembers class android.widget.DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class java.util.Locale$Builder { java.util.Locale build(); }
-keepclassmembers class android.widget.DropDownListView { boolean isFocused(); }
-keepclassmembers class sun.util.calendar.Gregorian$Date { void <init>(java.util.TimeZone); }
-keepclassmembers class android.widget.DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class sun.util.calendar.Gregorian$Date { int getNormalizedYear(); }
-keepclassmembers class libcore.net.UriCodec { void appendDecoded(java.lang.StringBuilder,java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class android.widget.DropDownListView { android.widget.DropDownListView$ResolveHoverRunnable access$102(android.widget.DropDownListView,android.widget.DropDownListView$ResolveHoverRunnable); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.widget.DropDownListView { boolean hasFocus(); }
-keepclassmembers class sun.util.calendar.Gregorian$Date { void setNormalizedYear(int); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class java.net.URI$Parser { int scanIPv4Address(int,int,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void <init>(int); }
-keepclassmembers class java.security.Provider$EngineDescription { void <init>(java.lang.String,boolean,java.lang.String); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class java.net.URI$Parser { int scanByte(int,int); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void drawableStateChanged(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.net.www.protocol.file.Handler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void ensureAnimatorSet(); }
-keepclassmembers class sun.net.www.protocol.file.Handler { void <init>(); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void init(sun.security.util.DerInputStream); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.nio.ByteBufferAsIntBuffer { void <init>(java.nio.ByteBuffer,int,int,int,int,int,java.nio.ByteOrder); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void <init>(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.net.URI$Parser { int takeIPv4Address(int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class sun.net.www.protocol.file.Handler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void parseExtension(sun.security.x509.Extension); }
-keepclassmembers class java.net.URI$Parser { int parseHostname(int,int); }
-keepclassmembers class sun.net.www.protocol.file.Handler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream printf(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getReason(); }
-keepclassmembers class java.net.URI$Parser { int parseIPv4Address(int,int); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nSetVectorDrawableTarget(long,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreateGroupPropertyHolder(long,int,float,float); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal movePointLeft(int); }
-keepclassmembers class sun.net.www.protocol.file.Handler { java.net.URLConnection createFileURLConnection(java.net.URL,java.io.File); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreatePathDataPropertyHolder(long,long,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nAddAnimator(long,long,long,long,long,int,int); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal movePointRight(int); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { double get(int,int); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void add(int,int,double); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreatePathColorPropertyHolder(long,int,int,int); }
-keepclassmembers class android.icu.math.BigDecimal { int scale(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { org.ejml.data.DenseMatrix64F copy(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreatePathPropertyHolder(long,int,float,float); }
-keepclassmembers class sun.net.www.protocol.file.Handler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreateRootAlphaPropertyHolder(long,float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long nCreateAnimatorSet(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ElevateToTranslationZAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ElevateToTranslationZAnimation { float getTargetShadowSize(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nSetPropertyHolderData(long,float[],int); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class java.nio.ByteBufferAsIntBuffer { int ix(int); }
-keepclassmembers class libcore.net.UriCodec { void flushDecodingByteAccumulator(java.lang.StringBuilder,java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nStart(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { org.ejml.data.Matrix64F copy(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nEnd(long); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal setScale(int,int); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal setScale(int); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nReverse(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class java.net.URI$Parser { int parseIPv6Reference(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nReset(long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void nSetPropertyHolderData(long,int[],int); }
-keepclassmembers class java.nio.ByteBufferAsIntBuffer { java.nio.IntBuffer get(int[],int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean access$400(); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void print(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { int getNumElements(); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { int getIndex(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void <init>(android.content.Context); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void print(java.lang.String); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void reshape(int,int,boolean); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(char); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$600(android.animation.Animator,java.lang.String,android.graphics.drawable.VectorDrawable,boolean); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(char); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void encode(java.io.OutputStream,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void encode(java.io.OutputStream); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$800(); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[]); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void set(int,int,double); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState access$900(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class java.net.URI$Parser { int scanHexSeq(int,int); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class java.nio.channels.ClosedByInterruptException { void <init>(); }
-keepclassmembers class java.net.URI$Parser { int scanHexPost(int,int); }
-keepclassmembers class android.icu.math.BigDecimal { java.math.BigDecimal toBigDecimal(); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class java.io.FilterInputStream { void mark(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$1000(long,long); }
-keepclassmembers class java.io.FilterInputStream { void reset(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$1200(long,float[],int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$1300(long,long,long); }
-keepclassmembers class android.icu.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$1400(long,int,float,float); }
-keepclassmembers class java.nio.ByteBufferAsIntBuffer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$1100(long,int,float,float); }
-keepclassmembers class android.widget.RemoteViews$5 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$1600(long,int[],int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$1500(long,int,int,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean requestFeature(int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void setReshape(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.math.BigDecimal { int signum(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void <clinit>(); }
-keepclassmembers class android.content.pm.ActivityInfo$WindowLayout { void <init>(android.os.Parcel); }
-keepclassmembers class sun.security.x509.CertificateExtensions { sun.security.x509.Extension get(java.lang.String); }
-keepclassmembers class com.nineoldandroids.animation.IntEvaluator { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { long access$1700(long,float,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$1800(long,long,long,long,long,int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$2 { void onGlobalLayout(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { double unsafe_get(int,int); }
-keepclassmembers class android.icu.math.BigDecimal { java.math.BigInteger unscaledValue(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$1900(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int); }
-keepclassmembers class android.icu.math.BigDecimal { java.lang.String toString(); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void zero(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class org.ejml.data.DenseMatrix64F { void unsafe_set(int,int,double); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { void <init>(); }
-keepclassmembers class sun.net.ftp.FtpLoginException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$2100(long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$2000(long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void access$2200(long,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,int); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal valueOf(double); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal valueOf(long); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal valueOf(long,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setContentView(int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { void setIfNew(android.icu.impl.StandardPlural,android.icu.impl.StandardPlural,android.icu.impl.StandardPlural); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.icu.math.BigDecimal { char[] layout(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class sun.security.x509.CertificateExtensions { java.util.Map getUnparseableExtensions(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { android.support.design.widget.ValueAnimatorCompat createAnimator(android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class sun.security.x509.CertificateExtensions { java.util.Collection getAllExtensions(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { float getZ(android.view.View); }
-keepclassmembers class java.io.FilterInputStream { boolean markSupported(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList inflateColorStateList(android.content.Context,int); }
-keepclassmembers class java.util.Objects { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Objects { int hashCode(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { float getElevation(android.view.View); }
-keepclassmembers class sun.security.x509.CertificateExtensions { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class java.util.Objects { int hash(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { android.icu.impl.StandardPlural get(android.icu.impl.StandardPlural,android.icu.impl.StandardPlural); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void transitionTo(android.transition.Scene); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class java.util.Objects { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { boolean isColorInt(android.content.Context,int); }
-keepclassmembers class java.util.Objects { java.lang.Object requireNonNull(java.lang.Object,java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void jumpDrawableToCurrentState(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean isTranslucent(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean isShowingWallpaper(); }
-keepclassmembers class java.io.FilePermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean isFloating(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class java.io.FilePermission { java.lang.String getActions(); }
-keepclassmembers class sun.security.x509.CertificateExtensions { java.lang.String toString(); }
-keepclassmembers class sun.security.x509.CertificateExtensions { void <clinit>(); }
-keepclassmembers class java.util.Objects { java.lang.Object requireNonNull(java.lang.Object); }
-keepclassmembers class android.icu.lang.CharSequences { int compare(java.lang.CharSequence,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setTitle(java.lang.CharSequence,boolean); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFKCSingleton { android.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$300(); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void onDrawableStateChanged(int[]); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean preparePanel(com.android.internal.policy.PhoneWindow$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { int hashCode(); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { int compareTo(android.icu.text.PluralRanges$Matrix); }
-keepclassmembers class android.icu.lang.CharSequences { int getSingleCodePoint(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFKCSingleton { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setTitleColor(int); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(float); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton$State { com.xlythe.calculator.material.view.BackspaceImageButton$State[] values(); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton$State { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$13 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.widget.ImageButton); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal dodivide(char,android.icu.math.BigDecimal,android.icu.math.MathContext,int); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.lang.CharSequences { int[] codePoints(java.lang.CharSequence); }
-keepclassmembers class android.icu.text.Normalizer$NFC32ModeImpl { android.icu.text.Normalizer$ModeImpl access$700(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void <init>(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.icu.text.PluralRanges$Matrix { java.lang.String toString(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { android.icu.impl.Normalizer2Impl load(java.nio.ByteBuffer); }
-keepclassmembers class android.icu.text.Normalizer$NFC32ModeImpl { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void openPanel(com.android.internal.policy.PhoneWindow$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void enumNorm16PropertyStartsRange(int,int,int,android.icu.text.UnicodeSet); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { void <init>(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class android.view.animation.OvershootInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onMeasure(int,int); }
-keepclassmembers class java.util.logging.Level$KnownLevel { void add(java.util.logging.Level); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.util.Locale getLocale(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void addCanonIterPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void addPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.String getName(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.util.ResourceBundle$CacheKey setLocale(java.util.Locale); }
-keepclassmembers class java.util.logging.Level$KnownLevel { java.util.logging.Level$KnownLevel findByName(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { android.icu.impl.Normalizer2Impl ensureCanonIterData(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.ClassLoader getLoader(); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class java.util.logging.Level$KnownLevel { java.util.logging.Level$KnownLevel findByValue(int); }
-keepclassmembers class java.util.logging.Level$KnownLevel { java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isGeneral(char); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isValid(char); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void closePanel(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { android.icu.impl.Normalizer2Impl load(java.lang.String); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isCharacter(char); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { int hashCode(); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isInteger(char); }
-keepclassmembers class java.util.logging.Level$KnownLevel { void <clinit>(); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { void calculateHashCode(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void closePanel(com.android.internal.policy.PhoneWindow$PanelFeatureState,boolean); }
-keepclassmembers class java.util.logging.Level$KnownLevel { void <init>(java.util.logging.Level); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isFloat(char); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.String getFormat(); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { void setFormat(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCompQuickCheck(int); }
-keepclassmembers class java.util.Formatter$Conversion { boolean isText(char); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isAlgorithmicNoNo(int); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.Object clone(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { void setCause(java.lang.Throwable); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.Throwable getCause(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void checkCloseActionMenu(android.view.Menu); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void <init>(java.util.logging.LogManager); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isCompNo(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isDecompYes(int); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { boolean requiresDefaultLoggers(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.LogManager getOwner(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.Logger getRootLogger(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.Logger getGlobalLogger(); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { java.lang.Throwable access$400(java.util.ResourceBundle$CacheKey); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCCFromYesOrMaybe(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getNorm16(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCC(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void invalidatePanelMenu(int); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.Logger demandLogger(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { long access$600(java.util.ResourceBundle$CacheKey); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { void access$500(java.util.ResourceBundle$CacheKey,java.lang.Throwable); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { long access$700(java.util.ResourceBundle$CacheKey); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void ensureAllDefaultLoggers(java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void ensureInitialized(); }
-keepclassmembers class android.icu.math.BigDecimal { byte[] byteaddsub(byte[],int,byte[],int,int,boolean); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void ensureDefaultLogger(java.util.logging.Logger); }
-keepclassmembers class android.icu.math.BigDecimal { void bad(char[]); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.Logger findLogger(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getFCD16(int); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class android.icu.text.UTF16 { int charAt(java.lang.String,int); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { long access$702(java.util.ResourceBundle$CacheKey,long); }
-keepclassmembers class android.icu.math.BigDecimal { byte[] extend(byte[],int); }
-keepclassmembers class android.icu.text.UTF16 { int _charAt(java.lang.String,int,char); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getFCD16FromNormData(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { java.lang.String getDecomposition(int); }
-keepclassmembers class java.util.ResourceBundle$CacheKey { long access$602(java.util.ResourceBundle$CacheKey,long); }
-keepclassmembers class android.icu.text.UTF16 { int _charAt(java.lang.CharSequence,int,char); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { boolean addLocalLogger(java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { boolean addLocalLogger(java.util.logging.Logger,boolean); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { boolean addLocalLogger(java.util.logging.Logger,java.util.logging.LogManager); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { boolean addLocalLogger(java.util.logging.Logger,boolean,java.util.logging.LogManager); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void dismissContextMenu(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void closeContextMenu(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean singleLeadMightHaveNonZeroFCD16(int); }
-keepclassmembers class android.view.Surface { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class android.icu.math.BigDecimal { byte[] diginit(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class android.icu.text.UTF16 { int charAt(java.lang.StringBuffer,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isCanonSegmentStarter(int); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class android.icu.text.UTF16 { int charAt(char[],int,int,int); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil { java.lang.ClassLoader getBootstrapClassLoader(); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal clone(android.icu.math.BigDecimal); }
-keepclassmembers class android.icu.math.BigDecimal { void checkdigits(android.icu.math.BigDecimal,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void closeAllPanels(); }
-keepclassmembers class android.icu.text.UTF16 { int charAt(java.lang.CharSequence,int); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil { java.lang.ClassLoader getClassLoader(java.lang.Class); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.icu.text.UTF16 { int charAt(android.icu.text.Replaceable,int); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class android.icu.text.UTF16 { int getCharCount(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { com.android.internal.policy.PhoneWindow$PanelFeatureState findMenuPanel(android.view.Menu); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int decompose(java.lang.CharSequence,int,int,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.icu.lang.UScript { int[] getCodesFromLocale(android.icu.util.ULocale); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void processParentHandlers(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal round(android.icu.math.MathContext); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal round(int,int); }
-keepclassmembers class android.icu.math.BigDecimal { android.icu.math.BigDecimal finish(android.icu.math.MathContext,boolean); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class android.icu.lang.UScript { int[] findCodeFromLocale(android.icu.util.ULocale); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { java.util.logging.LogManager$LogNode getNode(java.lang.String); }
-keepclassmembers class android.icu.text.UTF16 { boolean isSurrogate(char); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void removeLoggerRef(java.lang.String,java.util.logging.LogManager$LoggerWeakRef); }
-keepclassmembers class android.icu.lang.UScript { int[] getCode(java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean initializePanelMenu(com.android.internal.policy.PhoneWindow$PanelFeatureState); }
-keepclassmembers class android.icu.text.UTF16 { boolean isTrailSurrogate(char); }
-keepclassmembers class android.icu.text.UTF16 { char getLeadSurrogate(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean initializePanelDecor(com.android.internal.policy.PhoneWindow$PanelFeatureState); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { android.content.pm.ProviderInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.math.BigDecimal { boolean allzero(byte[],int); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void <init>(java.util.logging.LogManager,java.util.logging.LogManager$1); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { android.content.pm.ProviderInfo[] newArray(int); }
-keepclassmembers class android.icu.text.UTF16 { char getTrailSurrogate(int); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { void <init>(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void decomposeAndAppend(java.lang.CharSequence,boolean,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.icu.text.UTF16 { boolean isLeadSurrogate(char); }
-keepclassmembers class android.icu.text.UTF16 { java.lang.String valueOf(int); }
-keepclassmembers class android.icu.lang.UScript { boolean hasScript(int,int); }
-keepclassmembers class android.icu.lang.UScript { int getCodeFromName(java.lang.String); }
-keepclassmembers class android.icu.lang.UScript { java.lang.String getName(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean initializePanelContent(com.android.internal.policy.PhoneWindow$PanelFeatureState); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { int getOptionsPanelGravity(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext { void <clinit>(); }
-keepclassmembers class sun.security.util.ManifestDigester$Entry { void <init>(int,int,int,byte[]); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setElevation(float); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.lang.UScript { int getScript(int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.icu.lang.UScript { boolean isRightToLeft(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean compose(java.lang.CharSequence,int,int,boolean,boolean,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.icu.math.BigDecimal { void <clinit>(); }
-keepclassmembers class sun.security.util.ManifestDigester$Entry { byte[] digest(java.security.MessageDigest); }
-keepclassmembers class android.icu.lang.UScript { void <clinit>(); }
-keepclassmembers class sun.security.util.ManifestDigester$Entry { void doOldStyle(java.security.MessageDigest,byte[],int,int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void show(); }
-keepclassmembers class sun.security.util.ManifestDigester$Entry { byte[] digestWorkaround(java.security.MessageDigest); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$5 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class java.time.temporal.ChronoUnit { void <clinit>(); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void computeLocalPosition(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.pm.ProviderInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.icu.text.UTF16 { java.lang.StringBuffer append(java.lang.StringBuffer,int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { void connect(); }
-keepclassmembers class java.time.temporal.ChronoUnit { void <init>(java.lang.String,int,java.lang.String,java.time.Duration); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void updatePosition(int,int); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$1 { void <init>(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { void <clinit>(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { java.security.Permission getPermission(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { void <init>(java.net.URL,sun.net.www.protocol.jar.Handler); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.view.Surface { void <clinit>(); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setDefaultLogo(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setDefaultIcon(int); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class android.view.RoundScrollbarRenderer { void drawRoundScrollbars(android.graphics.Canvas,float,android.graphics.Rect); }
-keepclassmembers class android.icu.text.PluralRules$SimpleTokenizer { java.lang.String[] split(java.lang.String); }
-keepclassmembers class java.nio.HeapCharBuffer { void <init>(char[],int,int,boolean); }
-keepclassmembers class android.view.RoundScrollbarRenderer { void <init>(android.view.View); }
-keepclassmembers class java.nio.HeapCharBuffer { void <init>(int,int,boolean); }
-keepclassmembers class android.icu.text.PluralRules$SimpleTokenizer { void <clinit>(); }
-keepclassmembers class java.nio.HeapCharBuffer { void <init>(char[],int,int,int,int,int,boolean); }
-keepclassmembers class java.nio.HeapCharBuffer { void <init>(char[],int,int); }
-keepclassmembers class java.nio.HeapCharBuffer { void <init>(int,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean superDispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { boolean superDispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.util.AndroidException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class java.nio.HeapCharBuffer { java.nio.CharBuffer slice(); }
-keepclassmembers class java.nio.HeapCharBuffer { char get(); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { float getInterpolation(float); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { boolean getUseCaches(); }
-keepclassmembers class android.view.RoundScrollbarRenderer { void setTrackColor(int); }
-keepclassmembers class android.view.RoundScrollbarRenderer { int applyAlpha(int,float); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int composeQuickCheck(java.lang.CharSequence,int,int,boolean,boolean); }
-keepclassmembers class java.nio.HeapCharBuffer { int ix(int); }
-keepclassmembers class java.nio.HeapCharBuffer { char get(int); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { java.util.jar.JarFile access$000(sun.net.www.protocol.jar.JarURLConnection); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.view.RoundScrollbarRenderer { void setThumbColor(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.view.View getDecorView(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.view.View peekDecorView(); }
-keepclassmembers class java.nio.HeapCharBuffer { java.nio.CharBuffer put(char); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class java.nio.HeapCharBuffer { java.nio.CharBuffer put(java.nio.CharBuffer); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$Panel { void <clinit>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$Panel { void <init>(java.lang.String,int); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.view.RoundScrollbarRenderer { float clamp(float,float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void composeAndAppend(java.lang.CharSequence,boolean,boolean,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class java.nio.HeapCharBuffer { java.lang.String toString(int,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void openPanelsAfterRestore(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { com.android.internal.policy.DecorView generateDecor(int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class java.security.Provider$ServiceKey { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int makeFCD(java.lang.CharSequence,int,int,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.view.ViewGroup generateLayout(com.android.internal.policy.DecorView); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.icu.impl.ZoneMeta$SystemTimeZoneCache { void <init>(android.icu.impl.ZoneMeta$1); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorHorizontalPosition(android.text.Layout,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.security.Provider$ServiceKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.security.Provider$ServiceKey { int hashCode(); }
-keepclassmembers class sun.misc.FDBigInteger { void <init>(int[],int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class sun.misc.FDBigInteger { void <init>(long,char[],int,int); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class java.security.Provider$ServiceKey { void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void clearMetaKeyState(android.view.View,android.text.Editable,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger valueOfPow52(int,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void clearMetaKeyState(android.text.Editable,int); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger valueOfMulPow52(long,int,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger valueOfPow2(int); }
-keepclassmembers class android.icu.impl.ZoneMeta$SystemTimeZoneCache { void <init>(); }
-keepclassmembers class sun.misc.FDBigInteger { void trimLeadingZeros(); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class sun.misc.FDBigInteger { void leftShift(int[],int,int[],int,int,int); }
-keepclassmembers class sun.misc.FDBigInteger { int getNormalizationBias(); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,java.lang.String,int,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasDecompBoundary(int,boolean); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger leftShift(int); }
-keepclassmembers class sun.net.NetHooks { void beforeTcpConnect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isDecompInert(int); }
-keepclassmembers class android.icu.util.UResourceBundle$1 { void <clinit>(); }
-keepclassmembers class sun.net.NetHooks { void beforeTcpBind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onHandleMoved(); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class sun.misc.FDBigInteger { int size(); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class sun.misc.FDBigInteger { int quoRemIteration(sun.misc.FDBigInteger); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasCompBoundaryAfter(int,boolean,boolean); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasCompBoundaryBefore(int); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasFCDBoundaryBefore(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isMaybeOrNonZeroCC(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasFCDBoundaryAfter(int); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.lang.NumberFormatException { java.lang.NumberFormatException forInputString(java.lang.String); }
-keepclassmembers class java.util.TreeMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger multBy10(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isInert(int); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isCompYesAndZeroCC(int); }
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo { void <init>(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isHangul(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isDecompYesAndZeroCC(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isMaybe(int); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isJamoVT(int); }
-keepclassmembers class sun.security.x509.OtherName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isDecompNoAlgorithmic(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCCFromNoNo(int); }
-keepclassmembers class sun.misc.FDBigInteger { void mult(int[],int,int[],int,int[]); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getTrailCCFromCompYesAndZeroCC(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger multByPow52(int,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean isMostDecompYesAndZeroCC(int); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class android.icu.text.UTF16 { java.lang.String toString(int); }
-keepclassmembers class sun.security.x509.OtherName { sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[]); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCompositionsListForComposite(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void alwaysReadCloseOnTouchAttr(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void decomposeShort(java.lang.CharSequence,int,int,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class sun.security.x509.OtherName { int getType(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int mapAlgorithmic(int,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int getCompositionsListForDecompYes(int); }
-keepclassmembers class sun.security.x509.OtherName { int hashCode(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void installDecor(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void decompose(int,int,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class sun.security.x509.OtherName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class sun.security.x509.OtherName { java.lang.String toString(); }
-keepclassmembers class sun.misc.FDBigInteger { int checkZeroTail(int[],int); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { void setTimeouts(); }
-keepclassmembers class sun.misc.FDBigInteger { int cmp(sun.misc.FDBigInteger); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int combine(java.lang.String,int,int); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class sun.misc.FDBigInteger { int cmpPow52(int,int); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasureExactFormat(int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { int measureChildForCells(android.view.View,int,int,int,int); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { void connect(); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$5 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView$1 { void <init>(android.widget.PopupWindow$PopupDecorView,android.transition.Transition); }
-keepclassmembers class sun.misc.FDBigInteger { int addAndCmp(sun.misc.FDBigInteger,sun.misc.FDBigInteger); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.HashSet { void <init>(int,float,boolean); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void recompose(android.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean); }
-keepclassmembers class android.icu.impl.UCharacterProperty$5 { boolean contains(int); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class sun.misc.FDBigInteger { void makeImmutable(); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { void decodePath(java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.transition.Transition getTransition(android.transition.Transition,android.transition.Transition,int); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger mult(sun.misc.FDBigInteger); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { com.android.internal.policy.PhoneWindow$PanelFeatureState getPanelState(int,boolean,com.android.internal.policy.PhoneWindow$PanelFeatureState); }
-keepclassmembers class android.text.InputFilter$LengthFilter { int getMax(); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger mult(int); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { com.android.internal.policy.PhoneWindow$PanelFeatureState getPanelState(int,boolean); }
-keepclassmembers class sun.misc.FDBigInteger { void multAddMe(int,int); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger add(sun.misc.FDBigInteger); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class sun.misc.FDBigInteger { long multDiffMe(long,sun.misc.FDBigInteger); }
-keepclassmembers class java.io.ObjectStreamClass$WeakClassKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { void <init>(); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class java.io.ObjectStreamClass$WeakClassKey { void <init>(java.lang.Class,java.lang.ref.ReferenceQueue); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { void cd(java.lang.String); }
-keepclassmembers class java.util.HashSet { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class java.io.ObjectStreamClass$WeakClassKey { int hashCode(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { java.lang.String getString(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { java.lang.String getAliasString(); }
-keepclassmembers class java.util.zip.ZipCoder { java.lang.String toString(byte[],int); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { int getInt(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { int getType(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class org.ejml.ops.SpecializedOps { void subvector(org.ejml.data.RowD1Matrix64F,int,int,int,boolean,int,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class sun.misc.FDBigInteger { void mult(int[],int,int,int[]); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { android.icu.impl.UResource$Table getTable(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void <init>(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { int[] getIntVector(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.zip.ZipCoder { byte[] getBytes(java.lang.String); }
-keepclassmembers class sun.misc.FDBigInteger { int multAndCarryBy10(int[],int,int[]); }
-keepclassmembers class sun.misc.FDBigInteger { void mult(int[],int,int,int,int[]); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void dispatchWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { boolean hasCompBoundaryBefore(int,int); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { android.widget.ProgressBar getCircularProgressBar(boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { java.lang.String[] getStringArray(); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames$FactoryImpl { void <init>(); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class java.util.zip.ZipCoder { java.lang.String toStringUTF8(byte[],int); }
-keepclassmembers class java.util.zip.ZipCoder { byte[] getBytesUTF8(java.lang.String); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger big5pow(int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames$FactoryImpl { android.icu.text.TimeZoneNames getTimeZoneNames(android.icu.util.ULocale); }
-keepclassmembers class java.util.zip.ZipCoder { boolean isUTF8(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int findPreviousCompBoundary(java.lang.CharSequence,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void registerSwipeCallbacks(); }
-keepclassmembers class sun.misc.FDBigInteger { sun.misc.FDBigInteger big5powRec(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void callOnPanelClosed(int,com.android.internal.policy.PhoneWindow$PanelFeatureState,android.view.Menu); }
-keepclassmembers class java.util.zip.ZipCoder { void <init>(java.nio.charset.Charset); }
-keepclassmembers class java.util.zip.ZipCoder { java.nio.charset.CharsetEncoder encoder(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int findNextCompBoundary(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.zip.ZipCoder { java.util.zip.ZipCoder get(java.nio.charset.Charset); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderValue { java.lang.String[] getStringArray(android.icu.impl.ICUResourceBundleReader$Array); }
-keepclassmembers class java.util.zip.ZipCoder { java.nio.charset.CharsetDecoder decoder(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { int findNextFCDBoundary(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setHotspot(float,float); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class sun.misc.FDBigInteger { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void addToStartSet(android.icu.impl.Trie2Writable,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void dismissPopupMenus(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { int compareTo(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setAlpha(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { boolean shouldBeUsed(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean onLayoutDirectionChanged(int); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { int hashCode(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable superGetDrawable(int); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection { java.security.Permission getPermission(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { int getOpacity(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders { java.nio.charset.CharsetDecoder decoderFor(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean isStateful(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders { java.nio.charset.CharsetEncoder encoderFor(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { int compareTo(java.lang.Object); }
-keepclassmembers class android.icu.impl.Normalizer2Impl { void <clinit>(); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { sun.util.locale.BaseLocale$Key normalize(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { boolean onLevelChange(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean hasSupportDividerBeforeChildAt(int); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { void <init>(java.lang.String,java.lang.String,sun.util.locale.BaseLocale$1); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { java.lang.String access$200(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { int getIntrinsicWidth(); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { java.lang.String access$100(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { java.lang.String access$300(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class sun.nio.ch.FileChannelImpl$Unmapper { void <init>(long,long,int,java.io.FileDescriptor); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void getOutline(android.graphics.Outline); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder deleteCharAt(int); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { int getLocalFeaturesPrivate(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper { void inflateChildDrawable(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { android.view.View access$200(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class sun.util.locale.BaseLocale$Key { java.lang.String access$400(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onDetachedFromWindow(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void access$300(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class android.text.SpannableStringInternal { void copySpans(android.text.Spanned,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { boolean access$502(com.xlythe.calculator.material.GraphingCalculator,boolean); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { boolean access$500(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { int getNavigationBarColor(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void setDefaultWindowFormat(int); }
-keepclassmembers class sun.nio.ch.FileChannelImpl$Unmapper { void <init>(long,long,int,java.io.FileDescriptor,sun.nio.ch.FileChannelImpl$1); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void access$700(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void invalidateInlineBounds(); }
-keepclassmembers class android.text.SpannableStringInternal { void copySpans(android.text.SpannableStringInternal,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl$Unmapper { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { com.xlythe.calculator.material.GraphController access$600(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int clamp(int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void notifyDataSetChanged(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { int getDecorCaptionShade(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void doScrollY(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class sun.nio.ch.FileChannelImpl$Unmapper { void run(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void ensureGlows(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class dalvik.system.DexPathList { java.util.List splitDexPath(java.lang.String); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void endDrag(); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void transitionToGraph(); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void onBackPressed(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.List splitPaths(java.lang.String,boolean); }
-keepclassmembers class android.text.SpannableStringInternal { boolean isOutOfCopyRange(int,int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void transitionToDisplay(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void onButtonClick(android.view.View); }
-keepclassmembers class com.android.internal.policy.PhoneWindow { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void onDestroy(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator { void onEvaluate(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.List,java.io.File,java.util.List,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getVerticalScrollFactorCompat(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { int getMaxDragScroll(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean inChild(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { void <init>(org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasure(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { boolean _process(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.lang.StringBuilder { java.lang.AbstractStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.lang.StringBuilder { java.lang.AbstractStringBuilder append(java.lang.String); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$4 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$4 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.StringBuilder { int offsetByCodePoints(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlCodePoint(int); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { int codePointAt(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class java.lang.StringBuilder { int codePointBefore(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { android.support.v7.widget.RecyclerView$ViewHolder chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { void ensureCapacity(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(char); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class sun.net.www.protocol.ftp.Handler { void <init>(); }
-keepclassmembers class sun.misc.IOUtils { byte[] readFully(java.io.InputStream,int,boolean); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class sun.net.www.protocol.ftp.Handler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class sun.net.www.protocol.ftp.Handler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class sun.net.www.protocol.ftp.Handler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { void performStep(); }
-keepclassmembers class android.content.pm.Signature$1 { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.content.pm.Signature$1 { android.content.pm.Signature[] newArray(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class sun.net.www.protocol.ftp.Handler { int getDefaultPort(); }
-keepclassmembers class android.content.pm.Signature$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.pm.Signature$1 { android.content.pm.Signature createFromParcel(android.os.Parcel); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$NativeLibraryElement[] makePathElements(java.util.List); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { boolean process(int,double[],double[],double[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setContentHeight(int); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverAbstract { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { boolean process(int,double[],double[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { void setFastEigenvalues(boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQrAlgorithm { void setQ(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.pm.Signature$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setVisibility(int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void recycleVelocityTracker(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class android.icu.text.TimeZoneNames$Factory { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.List getDexPaths(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollExtent(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void <init>(); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.Era getEra(); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub { android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverAbstract { void _setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class sun.util.calendar.CalendarDate { void <init>(java.util.TimeZone); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getYear(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { int getBoundingBoxMargin(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setYear(int); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { float getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setLeapYear(boolean); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getMonth(); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class sun.util.calendar.CalendarDate { boolean isLeapYear(); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setMonth(int); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setDayOfMonth(int); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getDayOfMonth(); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getMinutes(); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getDayOfWeek(); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setMinutes(int); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setHours(int); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionTokenizer { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { int interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getSeconds(); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getHours(); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setSeconds(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionTokenizer { void generateReplacements(android.content.Context); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getMillis(); }
-keepclassmembers class sun.util.logging.PlatformLogger { sun.util.logging.PlatformLogger getLogger(java.lang.String); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class sun.util.logging.PlatformLogger { void redirectPlatformLoggers(); }
-keepclassmembers class sun.util.calendar.CalendarDate { long getTimeOfDay(); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setTimeOfDay(int,int,int,int); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setDate(int,int,int); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setMillis(int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class sun.util.logging.PlatformLogger { boolean isLoggable(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$IsAcceptable { void <init>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class sun.util.calendar.CalendarDate { boolean isStandardTime(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class sun.util.calendar.CalendarDate { boolean isNormalized(); }
-keepclassmembers class sun.util.logging.PlatformLogger { void <init>(java.lang.String); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$4 { void onAnimationFinished(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setTimeOfDay(long); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(android.graphics.Path,boolean); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class sun.util.calendar.CalendarDate { boolean isDaylightTime(); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$4 { void <init>(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$IsAcceptable { void <init>(android.icu.impl.ICUResourceBundleReader$1); }
-keepclassmembers class sun.util.logging.PlatformLogger { boolean isLoggable(sun.util.logging.PlatformLogger$Level); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class sun.util.calendar.CalendarDate { java.util.TimeZone getZone(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.graphics.PathMeasure { boolean getPosTan(float,float[],float[]); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class sun.util.logging.PlatformLogger { void warning(java.lang.String); }
-keepclassmembers class java.util.Formatter$FixedString { void <init>(java.util.Formatter,java.lang.String); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class java.util.Formatter$FixedString { int index(); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class java.util.Formatter$FixedString { java.lang.String toString(); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getPosTan(long,float,float[],float[]); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void fling(int); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class java.time.temporal.ValueRange { java.time.temporal.ValueRange of(long,long); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class sun.util.calendar.CalendarDate { sun.util.calendar.CalendarDate setZone(java.util.TimeZone); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.String,java.lang.Throwable,int); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class java.time.temporal.ValueRange { java.time.temporal.ValueRange of(long,long,long,long); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.util.calendar.CalendarDate { java.lang.Object clone(); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.time.temporal.ValueRange { java.time.temporal.ValueRange of(long,long,long); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int); }
-keepclassmembers class android.view.animation.AnimationUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getNestedScrollAxes(); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionTokenizer { java.lang.String getLocalizedExpression(java.lang.String); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator { void register(); }
-keepclassmembers class java.util.JumboEnumSet$EnumSetIterator { void <init>(java.util.JumboEnumSet); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getScrollRange(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setDayOfWeek(int); }
-keepclassmembers class java.time.temporal.ValueRange { void <init>(long,long,long,long); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.util.JumboEnumSet$EnumSetIterator { boolean hasNext(); }
-keepclassmembers class sun.util.logging.PlatformLogger { void finest(java.lang.String); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setDaylightSaving(int); }
-keepclassmembers class sun.util.calendar.CalendarDate { int getZoneOffset(); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator { void <init>(); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { void requestEnterTransition(android.transition.Transition); }
-keepclassmembers class sun.util.calendar.CalendarDate { java.lang.String toString(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setNormalized(boolean); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionTokenizer { java.lang.String getNormalizedExpression(java.lang.String); }
-keepclassmembers class java.util.JumboEnumSet$EnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean hasNestedScrollingParent(); }
-keepclassmembers class sun.util.calendar.CalendarDate { void setZoneOffset(int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class com.xlythe.math.EquationFormatter { void <init>(); }
-keepclassmembers class com.xlythe.math.EquationFormatter { java.lang.String appendParenthesis(java.lang.String); }
-keepclassmembers class sun.util.logging.PlatformLogger { sun.util.logging.PlatformLogger$Level access$000(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class sun.util.logging.PlatformLogger { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { void startExitTransition(android.transition.Transition,android.view.View,android.transition.Transition$TransitionListener); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.util.JumboEnumSet$EnumSetIterator { java.lang.Object next(); }
-keepclassmembers class com.xlythe.math.EquationFormatter { java.lang.String addComas(com.xlythe.math.Solver,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback { void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class android.icu.impl.locale.LocaleObjectCache$CacheEntry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.xlythe.math.EquationFormatter { java.lang.String addComas(com.xlythe.math.Solver,java.lang.String,int); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { void cancelTransitions(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onAttachedToWindow(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { android.view.View$OnAttachStateChangeListener access$1200(android.widget.PopupWindow$PopupDecorView); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView { android.transition.Transition$TransitionListenerAdapter access$1302(android.widget.PopupWindow$PopupDecorView,android.transition.Transition$TransitionListenerAdapter); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$FairSync { void <init>(); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { void <init>(org.javia.arity.SyntaxException); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class org.javia.arity.EvalContext { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int spread(int); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int tableSizeFor(int); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { org.javia.arity.Symbol getSymbol(org.javia.arity.Token); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { org.javia.arity.CompiledFunction getFun(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$14 { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Class comparableClassFor(java.lang.Object); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void setThreshold(int); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_bin2bn(byte[],int,boolean,long); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { int prevIndex(int,int); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { int nextIndex(int,int); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_sub(long,long,long); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void <init>(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class sun.security.x509.X509AttributeName { void <init>(java.lang.String); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.math.NativeBN { long getNativeFinalizer(); }
-keepclassmembers class sun.security.x509.X509AttributeName { java.lang.String getSuffix(); }
-keepclassmembers class java.util.Stack { boolean empty(); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void <init>(java.lang.ThreadLocal$ThreadLocalMap); }
-keepclassmembers class java.math.NativeBN { long size(); }
-keepclassmembers class android.view.DragAndDropPermissions$1 { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void setTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class sun.security.x509.X509AttributeName { java.lang.String getPrefix(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { void push(org.javia.arity.Token); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$2000(android.view.View$TransformationInfo); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean casTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { java.lang.ThreadLocal$ThreadLocalMap$Entry getEntry(java.lang.ThreadLocal); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1900(android.view.View$TransformationInfo); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeyIterator { java.lang.Object next(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$2 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$2002(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { org.javia.arity.SimpleCodeGen setSymbols(org.javia.arity.Symbols); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$2 { void <init>(com.android.internal.widget.FloatingToolbar); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class android.icu.impl.LocaleIDParser$1 { void <init>(android.icu.impl.LocaleIDParser); }
-keepclassmembers class org.javia.arity.SimpleCodeGen { void start(); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { java.lang.ThreadLocal$ThreadLocalMap$Entry getEntryAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry); }
-keepclassmembers class android.icu.impl.LocaleIDParser$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void set(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int,float,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class java.util.Formatter$FixedString { void print(java.lang.Object,java.util.Locale); }
-keepclassmembers class android.icu.impl.CacheValue$SoftValue { java.lang.Object get(); }
-keepclassmembers class android.icu.impl.CacheValue$SoftValue { java.lang.Object resetIfCleared(java.lang.Object); }
-keepclassmembers class android.icu.impl.LocaleIDParser$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.RemoteViews$Action { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.icu.impl.CacheValue$SoftValue { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void remove(java.lang.ThreadLocal); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class android.icu.util.ULocale$2 { android.icu.util.ULocale createInstance(java.util.Locale,java.lang.Void); }
-keepclassmembers class android.icu.util.ULocale$2 { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.icu.util.ULocale$2 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class,boolean); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { boolean cleanSomeSlots(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.icu.text.AnyTransliterator$ScriptRunIterator { void <init>(android.icu.text.Replaceable,int,int); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { int expungeStaleEntry(int); }
-keepclassmembers class java.lang.invoke.MethodHandle { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void rehash(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void resize(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void expungeStaleEntries(); }
-keepclassmembers class android.icu.text.AnyTransliterator$ScriptRunIterator { boolean next(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(java.lang.Class); }
-keepclassmembers class android.icu.text.AnyTransliterator$ScriptRunIterator { void adjustLimit(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateLocalState(); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { java.lang.ThreadLocal$ThreadLocalMap$Entry access$000(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void access$100(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void access$200(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { void initProxy(java.lang.Class,java.lang.ClassNotFoundException,java.io.ObjectStreamClass); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap { void <init>(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal$1); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(android.view.accessibility.IAccessibilityManager); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { void initNonProxy(java.io.ObjectStreamClass,java.lang.Class,java.lang.ClassNotFoundException,java.io.ObjectStreamClass); }
-keepclassmembers class com.xlythe.view.floating.CreateShortcutActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class com.xlythe.view.floating.CreateShortcutActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean isCompatTintEnabled(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspot(float,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean setState(int[]); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void <init>(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean updateBackgroundTint(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil$1 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { void readNonProxy(java.io.ObjectInputStream); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void applySupportBackgroundTint(); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil$1 { java.lang.Object run(); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil$1 { android.icu.impl.ClassLoaderUtil$BootstrapClassLoader run(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class java.io.ObjectStreamClass { void writeNonProxy(java.io.ObjectOutputStream); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingHistoryAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton { com.xlythe.calculator.material.view.BackspaceImageButton$State getState(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.ClassNotFoundException getResolveException(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$OpenType { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$OpenType { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton { void setState(com.xlythe.calculator.material.view.BackspaceImageButton$State); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton { int[] onCreateDrawableState(int); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class java.io.ObjectStreamClass { void checkDeserialize(); }
-keepclassmembers class java.io.ObjectStreamClass { void checkSerialize(); }
-keepclassmembers class java.io.ObjectStreamClass { void checkDefaultSerialize(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void onSetBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.icu.text.BreakTransliterator { void <init>(java.lang.String,android.icu.text.UnicodeFilter,android.icu.text.BreakIterator,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { int readLine(byte[],int,int); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class android.icu.text.BreakTransliterator { void <init>(java.lang.String,android.icu.text.UnicodeFilter); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasWriteObjectData(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperDesc(); }
-keepclassmembers class android.icu.text.BreakTransliterator { android.icu.text.BreakIterator getBreakIterator(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.icu.impl.UCharacterNameReader { void <init>(java.nio.ByteBuffer); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isInstantiable(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasReadObjectNoDataMethod(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasWriteObjectMethod(); }
-keepclassmembers class android.icu.impl.UCharacterNameReader { void read(android.icu.impl.UCharacterName); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setInternalBackgroundTint(android.content.res.ColorStateList); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasBlockExternalData(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasReadResolveMethod(); }
-keepclassmembers class android.icu.impl.UCharacterNameReader { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasWriteReplaceMethod(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasReadObjectMethod(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.icu.text.BreakTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.JavaLangAccess { java.lang.Enum[] getEnumConstantsShared(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(); }
-keepclassmembers class java.io.ObjectStreamClass { void invokeWriteObject(java.lang.Object,java.io.ObjectOutputStream); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(int[]); }
-keepclassmembers class android.icu.impl.UCharacterNameReader { android.icu.impl.UCharacterName$AlgorithmName readAlg(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean remove(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(android.icu.text.UnicodeSet); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class java.io.ObjectStreamClass { void invokeReadObject(java.lang.Object,java.io.ObjectInputStream); }
-keepclassmembers class java.io.ObjectStreamClass { void invokeReadObjectNoData(java.lang.Object); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { byte peek(); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean replace(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object invokeWriteReplace(java.lang.Object); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { int readLine(byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object invokeReadResolve(java.lang.Object); }
-keepclassmembers class java.util.jar.Manifest$FastInputStream { void fill(); }
-keepclassmembers class java.lang.reflect.WeakCache { void <init>(java.util.function.BiFunction,java.util.function.BiFunction); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet set(int,int); }
-keepclassmembers class android.icu.text.UnicodeSet { void <init>(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable); }
-keepclassmembers class android.icu.text.TimeZoneNames$Cache { android.icu.text.TimeZoneNames createInstance(java.lang.String,android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet set(android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.text.BreakTransliterator { void register(); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompat { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.WeakCache { java.lang.Object get(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.text.TimeZoneNames$Cache { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout0(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean resemblesPattern(java.lang.String,int); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo$CurrencyFilter { void <init>(java.lang.String,java.lang.String,long,long,boolean); }
-keepclassmembers class android.icu.text.UnicodeSet { void appendCodePoint(java.lang.Appendable,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class android.icu.text.TimeZoneNames$Cache { void <init>(android.icu.text.TimeZoneNames$1); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class android.icu.text.TimeZoneNames$Cache { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo { android.icu.text.CurrencyMetaInfo getInstance(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$WindowManagerHolder { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestLayout(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollTo(int,int); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo$CurrencyFilter { android.icu.text.CurrencyMetaInfo$CurrencyFilter onRegion(java.lang.String); }
-keepclassmembers class android.icu.text.UnicodeSet { void append(java.lang.Appendable,java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.WeakCache { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { int getLetterData(int); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class java.lang.reflect.WeakCache { java.util.function.BiFunction access$000(java.lang.reflect.WeakCache); }
-keepclassmembers class java.io.ObjectStreamClass { int getNumObjFields(); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo { void <init>(); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo { java.util.List currencies(android.icu.text.CurrencyMetaInfo$CurrencyFilter); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$7 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.Appendable _appendToPat(java.lang.Appendable,int,boolean); }
-keepclassmembers class java.lang.reflect.WeakCache { void expungeStaleEntries(); }
-keepclassmembers class java.io.ObjectStreamClass { void setObjFieldValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamClass { void getPrimFieldValues(java.lang.Object,byte[]); }
-keepclassmembers class java.io.ObjectStreamClass { void getObjFieldValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.Appendable _appendToPat(java.lang.Appendable,java.lang.String,boolean); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] copyOfRange(float[],int,int); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { int getDiacriticData(int); }
-keepclassmembers class java.io.ObjectStreamClass { void setPrimFieldValues(java.lang.Object,byte[]); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo { android.icu.text.CurrencyMetaInfo$CurrencyDigits currencyDigits(java.lang.String,android.icu.util.Currency$CurrencyUsage); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { int getPrimDataSize(); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.Appendable _toPattern(java.lang.Appendable,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Constructor getExternalizableConstructor(java.lang.Class); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { boolean isFollowedByCasedLetter(java.lang.CharSequence,int); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo$CurrencyFilter { android.icu.text.CurrencyMetaInfo$CurrencyFilter withRegion(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void computeFieldOffsets(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] deepCopyNodes(android.support.graphics.drawable.PathParser$PathDataNode[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.lang.reflect.WeakCache { java.util.concurrent.ConcurrentMap access$100(java.lang.reflect.WeakCache); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Constructor getSerializableConstructor(java.lang.Class); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.String toPattern(boolean); }
-keepclassmembers class com.nineoldandroids.animation.Animator { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.Appendable appendNewPattern(java.lang.Appendable,boolean,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void stopNestedScroll(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class com.nineoldandroids.animation.Animator { void addListener(com.nineoldandroids.animation.Animator$AnimatorListener); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { java.lang.String toUpper(java.lang.CharSequence,int[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getInheritableMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class); }
-keepclassmembers class android.icu.text.UnicodeSet { int size(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getVariantFor(java.lang.Class); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void extract(java.lang.String,int,android.support.graphics.drawable.PathParser$ExtractFloatResult); }
-keepclassmembers class java.io.ObjectStreamClass { boolean classNamesEqual(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean isEmpty(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean packageEquals(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean matchesIndexValue(int); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { java.lang.String access$000(java.lang.CharSequence,int[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.policy.DecorView$4 { void <init>(com.android.internal.policy.DecorView,com.android.internal.view.FloatingActionMode); }
-keepclassmembers class org.ejml.ops.NormOps { double normF(org.ejml.data.D1Matrix64F); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getClassSignature(java.lang.Class); }
-keepclassmembers class android.icu.impl.CaseMap$GreekUpper { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.Class[],java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getSerialFields(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getPackageName(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { void throwMiscException(java.lang.Throwable); }
-keepclassmembers class android.icu.text.UnicodeSet { int matches(android.icu.text.Replaceable,int[],int,boolean); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo$CurrencyFilter { void <clinit>(); }
-keepclassmembers class android.support.v7.appcompat.R$styleable { void <clinit>(); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterCell { void <init>(long); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getDeclaredSerialFields(java.lang.Class); }
-keepclassmembers class org.ejml.ops.NormOps { void normalizeF(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.text.UnicodeSet { int matchRest(android.icu.text.Replaceable,int,int,java.lang.String); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class android.icu.text.UppercaseTransliterator { void <init>(android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.UnicodeSet { void addMatchSetTo(android.icu.text.UnicodeSet); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getDefaultSerialFields(java.lang.Class); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class java.io.ObjectStreamClass { long computeDefaultSUID(java.lang.Class); }
-keepclassmembers class android.icu.text.UppercaseTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add_unchecked(int,int); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add(int,int); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add_unchecked(int); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Long getDeclaredSUID(java.lang.Class); }
-keepclassmembers class com.xlythe.calculator.material.HistoryAdapter { void <init>(android.content.Context,com.xlythe.math.Solver,com.xlythe.math.History); }
-keepclassmembers class java.util.WeakHashMap$KeySet { int size(); }
-keepclassmembers class java.util.WeakHashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.WeakHashMap$KeySet { void <init>(java.util.WeakHashMap); }
-keepclassmembers class com.xlythe.calculator.material.HistoryAdapter { com.xlythe.calculator.material.HistoryAdapter$OnItemClickListener access$000(com.xlythe.calculator.material.HistoryAdapter); }
-keepclassmembers class java.util.WeakHashMap$KeySet { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class android.icu.impl.CacheBase { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.HistoryAdapter { com.xlythe.calculator.material.HistoryAdapter$OnItemLongClickListener access$100(com.xlythe.calculator.material.HistoryAdapter); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add(java.lang.CharSequence); }
-keepclassmembers class android.icu.text.UppercaseTransliterator { void register(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel { void onMeasure(int,int); }
-keepclassmembers class android.icu.text.PluralRules$AndConstraint { void <init>(android.icu.text.PluralRules$Constraint,android.icu.text.PluralRules$Constraint); }
-keepclassmembers class android.icu.text.PluralRules$AndConstraint { boolean isFulfilled(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.icu.text.UnicodeSet { int getSingleCP(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.Void,java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.Void checkParentAccess(java.lang.ThreadGroup); }
-keepclassmembers class android.icu.text.PluralRules$AndConstraint { java.lang.String toString(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel { boolean awakenScrollBars(); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasStaticInitializer(java.lang.Class,boolean); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub { com.android.internal.view.IInputMethodSession asInterface(android.os.IBinder); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet complement(); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$6 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class java.util.HashMap$TreeNode { void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.support.v4.util.LruCache { void <init>(int); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass$FieldReflector getReflector(java.io.ObjectStreamField[],java.io.ObjectStreamClass); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addChild(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet complement(int,int); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SpecialTypeHandler { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean contains(int); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class java.util.HashMap$TreeNode { void moveRootToFront(java.util.HashMap$Node[],java.util.HashMap$TreeNode); }
-keepclassmembers class android.support.v4.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SpecialTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode root(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean isVisible(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addParents(java.util.ArrayList); }
-keepclassmembers class java.lang.ThreadGroup { void checkAccess(); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addSibling(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addParent(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v4.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] matchFields(java.io.ObjectStreamField[],java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.Animator createSoftwareEnter(boolean); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$000(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$002(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class android.icu.text.UnicodeSet { int findCodePoint(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void addCount(long,int); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int resizeStamp(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.DisplayListCanvas); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] initTable(); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.Animator createSoftwareExit(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet createHardwareExit(android.graphics.Paint); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode getTreeNode(int,java.lang.Object); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.io.ObjectStreamClass { void processQueue(java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class access$000(java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean containsAll(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class java.io.Reader { int read(char[]); }
-keepclassmembers class android.support.v4.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { long access$100(java.lang.Class); }
-keepclassmembers class java.util.HashMap$TreeNode { int tieBreakOrder(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean access$400(java.io.ObjectStreamClass); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Long access$502(java.io.ObjectStreamClass,java.lang.Long); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[]); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean containsAll(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] access$800(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jumpValuesToExit(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Long access$700(java.lang.Class); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] helpTransfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class android.support.v4.util.LruCache { void trimToSize(int); }
-keepclassmembers class java.io.ObjectStreamClass { void access$900(java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.drawable.RippleBackground { float access$002(android.graphics.drawable.RippleBackground,float); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass$ExceptionInfo access$1002(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo); }
-keepclassmembers class java.util.HashMap$TreeNode { void treeify(java.util.HashMap$Node[]); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { float access$000(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class java.nio.channels.ClosedChannelException { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass$ExceptionInfo access$1102(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Constructor access$1302(java.io.ObjectStreamClass,java.lang.reflect.Constructor); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class java.io.ObjectStreamClass { boolean access$1200(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Constructor access$1400(java.lang.Class); }
-keepclassmembers class android.system.Os { int fcntlInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Constructor access$1500(java.lang.Class); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void tryPresize(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class java.net.Socket { void <init>(java.net.SocketImpl); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$1602(java.io.ObjectStreamClass,java.lang.reflect.Method); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[],int,float[],int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean access$2002(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.icu.impl.ICUBinary$PackageDataFile { void <init>(java.lang.String,java.nio.ByteBuffer); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$1902(java.io.ObjectStreamClass,java.lang.reflect.Method); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$2102(java.io.ObjectStreamClass,java.lang.reflect.Method); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$1600(java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String access$2400(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$2200(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class); }
-keepclassmembers class android.icu.impl.ICUBinary$PackageDataFile { java.nio.ByteBuffer getData(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String access$2500(java.lang.Class[],java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$1700(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$Node untreeify(java.util.HashMap); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$2302(java.io.ObjectStreamClass,java.lang.reflect.Method); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method access$1802(java.io.ObjectStreamClass,java.lang.reflect.Method); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class android.support.v4.os.BuildCompat { boolean isAtLeastN(); }
-keepclassmembers class java.net.Socket { void createImpl(boolean); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet retainAll(android.icu.text.UnicodeSet); }
-keepclassmembers class java.net.Socket { void setImpl(); }
-keepclassmembers class java.nio.MappedByteBuffer { void <init>(int,int,int,int,java.io.FileDescriptor); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class java.net.Socket { void checkOldImpl(); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class java.net.Socket { java.net.SocketImpl getImpl(); }
-keepclassmembers class java.nio.MappedByteBuffer { void <init>(int,int,int,int,byte[],int); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet removeAll(android.icu.text.UnicodeSet); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$2 { void run(); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet clear(); }
-keepclassmembers class android.icu.text.UnicodeSet { int getRangeCount(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet addAll(android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.text.UnicodeSet { int getRangeStart(int); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class java.net.Socket { void bind(java.net.SocketAddress); }
-keepclassmembers class android.icu.text.UnicodeSet { int getRangeEnd(int); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet compact(); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class java.lang.ThreadGroup { void addUnstarted(); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$2 { void <init>(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class java.net.Socket { void postAccept(); }
-keepclassmembers class android.icu.text.UnicodeSet { int hashCode(); }
-keepclassmembers class java.net.Socket { void checkAddress(java.net.InetAddress,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.Thread); }
-keepclassmembers class java.util.HashMap$TreeNode { void removeTreeNode(java.util.HashMap,java.util.HashMap$Node[],boolean); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.Socket { void setConnected(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet applyPattern(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable,int); }
-keepclassmembers class java.net.Socket { void setBound(); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.TriangularSolver { void solveU(double[],int,int,int,double[],int,int,int); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.net.Socket { void setCreated(); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.TriangularSolver { void solveU(double[],double[],int); }
-keepclassmembers class java.nio.channels.FileChannel$MapMode { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLocalVoiceInteraction(android.os.IBinder); }
-keepclassmembers class java.lang.ThreadGroup { void threadStartFailed(java.lang.Thread); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class java.nio.channels.FileChannel$MapMode { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.icu.text.UnicodeSet { void applyPattern(android.icu.impl.RuleCharacterIterator,android.icu.text.SymbolTable,java.lang.Appendable,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean supportsLocalVoiceInteraction(); }
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator { void <clinit>(); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { void <init>(java.util.jar.Manifest); }
-keepclassmembers class org.ejml.alg.dense.decomposition.TriangularSolver { void solveU(double[],double[],int,int,int); }
-keepclassmembers class java.lang.ThreadGroup { void remove(java.lang.Thread); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { void checkPackageAccess(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { void checkPackageAccess(java.lang.Class); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { boolean isAncestor(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,int); }
-keepclassmembers class java.util.LinkedList { void <init>(java.util.Collection); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { boolean needsPackageAccessCheck(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { void setEntry(java.lang.String,java.util.jar.JarEntry); }
-keepclassmembers class java.util.LinkedList { void linkLast(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { void linkBefore(java.lang.Object,java.util.LinkedList$Node); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { void checkProxyPackageAccess(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class java.util.HashMap$TreeNode { void split(java.util.HashMap,java.util.HashMap$Node[],int,int); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { void update(byte); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { void checkProxyPackageAccess(java.lang.Class); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { void update(byte[],int,int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object unlinkFirst(java.util.LinkedList$Node); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class android.widget.PopupMenu$1 { void <init>(android.widget.PopupMenu); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$1 { void run(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$1 { void <init>(android.support.v7.widget.helper.ItemTouchHelper); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { void <init>(); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class sun.reflect.misc.ReflectUtil { boolean isNonPublicProxyClass(java.lang.Class); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { android.content.pm.PermissionInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode rotateLeft(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { android.content.pm.PermissionInfo[] newArray(int); }
-keepclassmembers class android.widget.PopupMenu$1 { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.content.pm.PermissionInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void setMaxLength(int); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void <init>(); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { java.util.jar.JarEntry getEntry(); }
-keepclassmembers class java.lang.ThreadGroup { void <clinit>(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object unlink(java.util.LinkedList$Node); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void shift(int); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void clear(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getLast(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void addOffset(int); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { java.lang.String toHex(byte[]); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode balanceInsertion(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirst(); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode rotateRight(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { boolean containsOffset(int); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator { void <init>(); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void addOffsetAndCount(int,int); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier { void <clinit>(); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { boolean isEmpty(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { void <init>(); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { boolean hasCountAtOffset(int,int); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { void convertToColumnMajor(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.util.HashMap$TreeNode { java.util.HashMap$TreeNode balanceDeletion(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.util.LinkedList { void clear(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { int popMinimum(android.icu.util.OutputInt); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { double[] getGammas(); }
-keepclassmembers class java.util.LinkedList { void add(int,java.lang.Object); }
-keepclassmembers class java.util.LinkedList { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.LinkedList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.util.LinkedList { java.lang.Object get(int); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(int); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { long sumCount(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan$OffsetList { void <clinit>(); }
-keepclassmembers class java.util.LinkedList { boolean isElementIndex(int); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { void <init>(); }
-keepclassmembers class java.util.LinkedList { java.lang.String outOfBoundsMsg(int); }
-keepclassmembers class java.util.LinkedList { boolean isPositionIndex(int); }
-keepclassmembers class sun.util.logging.LoggingSupport$2 { java.lang.String run(); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class java.util.LinkedList { void checkElementIndex(int); }
-keepclassmembers class sun.util.logging.LoggingSupport$2 { void <init>(); }
-keepclassmembers class java.util.LinkedList { void checkPositionIndex(int); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { void <init>(java.util.SortedSet,java.util.SortedMap); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class java.util.LinkedList { java.util.LinkedList$Node node(int); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { java.util.Set getUnicodeLocaleAttributes(); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { java.util.Set getUnicodeLocaleKeys(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { double[][] getQR(); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void fullAddCount(long,boolean); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { boolean isSingletonChar(char); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { java.lang.String getUnicodeLocaleType(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { org.ejml.data.DenseMatrix64F getR(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class sun.util.logging.LoggingSupport$2 { java.lang.Object run(); }
-keepclassmembers class java.net.Socket { void <clinit>(); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.Calendar { java.util.Calendar createCalendar(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { boolean isTypeSubtag(java.lang.String); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { boolean isAttribute(java.lang.String); }
-keepclassmembers class android.icu.text.UnicodeSet { void syntaxError(android.icu.impl.RuleCharacterIterator,java.lang.String); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { boolean isKey(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { boolean isType(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class java.util.LinkedList { java.lang.Object peek(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class java.util.Calendar { int internalGet(int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class android.icu.impl.locale.UnicodeLocaleExtension { void <clinit>(); }
-keepclassmembers class java.util.Calendar { void internalSet(int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class java.util.HashMap$TreeNode { boolean checkInvariants(java.util.HashMap$TreeNode); }
-keepclassmembers class android.icu.text.UnicodeSet { void ensureCapacity(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class android.icu.text.UnicodeSet { void ensureBufferCapacity(int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class android.icu.text.UnicodeSet { int[] range(int,int); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object pop(); }
-keepclassmembers class java.util.HashMap$TreeNode { void <clinit>(); }
-keepclassmembers class libcore.io.IoTracker$Mode { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class libcore.io.IoTracker$Mode { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { org.ejml.data.Matrix64F getR(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet xor(int[],int,int); }
-keepclassmembers class java.util.Calendar { java.lang.String getDisplayName(int,int,java.util.Locale); }
-keepclassmembers class java.util.Calendar { boolean isSet(int); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class java.util.LinkedList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet add(int[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$5 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$5 { void setValue(java.lang.Object,float); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { void householder(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$5 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$5 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class java.util.Calendar { boolean checkDisplayNameParams(int,int,int,int,java.util.Locale,int); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { boolean inputModified(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Calendar { java.lang.String[] getFieldStrings(int,int,java.text.DateFormatSymbols); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void <init>(int); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { void setExpectedMaxSize(int,int); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRDecompositionHouseholderColumn { void updateA(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void <init>(); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.content.Context { int getColor(int); }
-keepclassmembers class java.util.Calendar { boolean isExternallySet(int); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class android.content.Context { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.util.Collections$EmptyEnumeration { void <init>(); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class java.util.Collections$EmptyEnumeration { void <clinit>(); }
-keepclassmembers class java.util.Collections$EmptyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class java.util.Collections$EmptyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.DenseMatrix64F handleU(org.ejml.data.DenseMatrix64F,boolean,boolean,int,int,int); }
-keepclassmembers class java.util.Calendar { void setFieldsComputed(int); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { boolean _decompose(); }
-keepclassmembers class android.icu.impl.UResource$Key { void <init>(); }
-keepclassmembers class sun.security.x509.PKIXExtensions { void <clinit>(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.icu.impl.UResource$Key { android.icu.impl.UResource$Key setBytes(byte[],int); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class java.util.Calendar { void setFieldsNormalized(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.DenseMatrix64F handleV(org.ejml.data.DenseMatrix64F,boolean,boolean,int,int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class android.icu.impl.UResource$Key { android.icu.impl.UResource$Key setToEmpty(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet retain(int[],int,int); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class java.util.Calendar { boolean isFullyNormalized(); }
-keepclassmembers class java.util.Calendar { boolean isPartiallyNormalized(); }
-keepclassmembers class android.content.Context { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void computeU(int); }
-keepclassmembers class java.util.Calendar { boolean isFieldSet(int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class java.util.Calendar { int selectFields(); }
-keepclassmembers class android.content.Context { boolean migrateSharedPreferencesFrom(android.content.Context,java.lang.String); }
-keepclassmembers class java.util.Calendar { int getSetStateFields(); }
-keepclassmembers class sun.util.logging.PlatformLogger$Level { sun.util.logging.PlatformLogger$Level[] values(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class sun.util.logging.PlatformLogger$Level { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.UResource$Key { java.lang.String toString(); }
-keepclassmembers class sun.util.logging.PlatformLogger$Level { int intValue(); }
-keepclassmembers class sun.util.logging.PlatformLogger$Level { sun.util.logging.PlatformLogger$Level valueOf(int); }
-keepclassmembers class android.icu.impl.UResource$Key { java.lang.String internalSubString(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void computeV(int); }
-keepclassmembers class android.content.Context { boolean migrateDatabaseFrom(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class android.icu.impl.UResource$Key { android.icu.impl.UResource$Key setString(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class android.icu.impl.UResource$Key { boolean regionMatches(int,java.lang.CharSequence,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getLayoutDirection(); }
-keepclassmembers class sun.util.logging.PlatformLogger$Level { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class java.util.Calendar { boolean isStandaloneStyle(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.impl.UResource$Key { boolean contentEquals(java.lang.CharSequence); }
-keepclassmembers class java.util.Calendar { int aggregateStamp(int,int); }
-keepclassmembers class java.util.Calendar { boolean isNarrowFormatStyle(int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class android.icu.impl.UResource$Key { boolean endsWith(java.lang.CharSequence); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void getDiagonal(double[],double[]); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet getInclusions(int); }
-keepclassmembers class android.icu.text.UnicodeSet { int max(int,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toNanos(long); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.DenseMatrix64F getU(org.ejml.data.DenseMatrix64F,boolean,boolean); }
-keepclassmembers class sun.security.jca.ProviderList { sun.security.jca.ProviderList fromSecurityProperties(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet applyFilter(android.icu.text.UnicodeSet$Filter,int); }
-keepclassmembers class android.icu.impl.UResource$Key { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class java.util.Calendar { int toStandaloneStyle(int); }
-keepclassmembers class java.net.URLConnection { java.security.Permission getPermission(); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class java.util.Hashtable$Enumerator { void <init>(java.util.Hashtable,int,boolean); }
-keepclassmembers class java.util.Calendar { int getBaseStyle(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class java.util.Hashtable$Enumerator { boolean hasMoreElements(); }
-keepclassmembers class android.icu.text.UnicodeSet { java.lang.String mungeCharName(java.lang.String); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getZone(); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class java.util.Hashtable$Enumerator { java.lang.Object nextElement(); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class java.util.Hashtable$Enumerator { boolean hasNext(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.Matrix64F getU(org.ejml.data.Matrix64F,boolean,boolean); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet applyIntPropertyValue(int,int); }
-keepclassmembers class java.util.Hashtable$Enumerator { java.lang.Object next(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String,android.icu.text.SymbolTable); }
-keepclassmembers class java.io.ObjectOutputStream$Caches { void <clinit>(); }
-keepclassmembers class sun.security.jca.ProviderList { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.DenseMatrix64F getV(org.ejml.data.DenseMatrix64F,boolean,boolean); }
-keepclassmembers class android.content.Context { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle); }
-keepclassmembers class sun.security.jca.ProviderList { void <init>(sun.security.jca.ProviderConfig[],boolean); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class java.util.ResourceBundle$Control { void <init>(); }
-keepclassmembers class sun.security.jca.ProviderList { sun.security.jca.ProviderList getJarList(java.lang.String[]); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class java.util.Calendar { java.lang.Object clone(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { org.ejml.data.Matrix64F getV(org.ejml.data.Matrix64F,boolean,boolean); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionRow { void init(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class sun.security.jca.ProviderList { int size(); }
-keepclassmembers class java.util.ResourceBundle$Control { java.util.List getFormats(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class sun.security.jca.ProviderList { java.util.List providers(); }
-keepclassmembers class sun.security.jca.ProviderList { java.security.Provider getProvider(int); }
-keepclassmembers class java.util.Calendar { java.lang.String getFieldName(int); }
-keepclassmembers class java.util.ResourceBundle$Control { java.util.List getCandidateLocales(java.lang.String,java.util.Locale); }
-keepclassmembers class sun.security.jca.ProviderList { sun.security.jca.ProviderConfig getProviderConfig(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$Control { java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale); }
-keepclassmembers class java.io.FileDescriptor$1 { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class sun.security.jca.ProviderList { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class sun.security.jca.ProviderList { int getIndex(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$Control { java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.content.Context { android.content.Context createDeviceEncryptedStorageContext(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <clinit>(); }
-keepclassmembers class android.content.Context { boolean isDeviceEncryptedStorage(); }
-keepclassmembers class android.content.Context { android.content.Context createCredentialEncryptedStorageContext(); }
-keepclassmembers class android.icu.util.Currency$1 { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.content.Context { boolean isCredentialEncryptedStorage(); }
-keepclassmembers class android.icu.util.Currency$1 { android.icu.util.Currency createInstance(java.lang.String,java.lang.Void); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class sun.security.jca.ProviderList { sun.security.jca.ProviderList removeInvalid(); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class java.util.Calendar { void setWeekCountData(java.util.Locale); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean resemblesPropertyPattern(java.lang.String,int); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class sun.security.jca.ProviderList { java.security.Provider[] toArray(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$3 { void <init>(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class sun.security.jca.ProviderList { java.lang.String toString(); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class java.util.Calendar { void updateTime(); }
-keepclassmembers class sun.security.jca.ProviderList { int loadAll(); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean resemblesPropertyPattern(android.icu.impl.RuleCharacterIterator,int); }
-keepclassmembers class sun.security.jca.ProviderList { java.security.Provider$Service getService(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$MutablePair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class sun.security.jca.ProviderList { java.util.List getServices(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.EscapeTransliterator$4 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.ResourceBundle$Control { long getTimeToLive(java.lang.String,java.util.Locale); }
-keepclassmembers class android.icu.text.EscapeTransliterator$4 { void <init>(); }
-keepclassmembers class java.util.Calendar { void adjustStamp(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet applyPropertyPattern(java.lang.String,java.text.ParsePosition,android.icu.text.SymbolTable); }
-keepclassmembers class sun.security.jca.ProviderList { java.util.List getServices(java.util.List); }
-keepclassmembers class sun.security.jca.ProviderList { void <init>(sun.security.jca.ProviderList$1); }
-keepclassmembers class sun.security.jca.ProviderList { sun.security.jca.ProviderConfig[] access$100(sun.security.jca.ProviderList); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.ResourceBundle$Control { boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.logging.LogManager$LogNode { void <init>(java.util.logging.LogManager$LogNode,java.util.logging.LogManager$LoggerContext); }
-keepclassmembers class android.icu.lang.UScript$ScriptUsage { android.icu.lang.UScript$ScriptUsage[] values(); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class android.icu.util.Currency$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.lang.UScript$ScriptUsage { void <init>(java.lang.String,int); }
-keepclassmembers class sun.security.jca.ProviderList { void <clinit>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class java.util.logging.LogManager$LogNode { void walkAndSetParent(java.util.logging.Logger); }
-keepclassmembers class android.icu.lang.UScript$ScriptUsage { void <clinit>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class java.util.ResourceBundle$Control { java.lang.String toBundleName(java.lang.String,java.util.Locale); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { int fcntlInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class java.net.URLConnection { boolean checkfpx(java.io.InputStream); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { int watchRotation(android.view.IRotationWatcher); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class java.util.ResourceBundle$Control { java.lang.String toResourceName(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.DisplayContext { void <init>(java.lang.String,int,android.icu.text.DisplayContext$Type,int); }
-keepclassmembers class android.icu.text.UnicodeSet { void addCaseMapping(android.icu.text.UnicodeSet,int,java.lang.StringBuilder); }
-keepclassmembers class java.util.ResourceBundle$Control { java.util.ResourceBundle$Control access$300(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet closeOver(int); }
-keepclassmembers class java.util.ResourceBundle$Control { java.lang.String toResourceName0(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$Control { void <clinit>(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { int getPreferredOptionsPanelGravity(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$3 { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.icu.text.DisplayContext { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet freeze(); }
-keepclassmembers class android.icu.text.UnicodeSet { boolean isFrozen(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class libcore.io.Posix { void munmap(long,long); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.icu.text.ReplaceableString { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URLConnection { int readBytes(int[],int,java.io.InputStream); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.icu.text.ReplaceableString { java.lang.String toString(); }
-keepclassmembers class java.lang.Character$Subset { int hashCode(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.icu.text.ReplaceableString { int length(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class java.net.URLConnection { long skipForward(java.io.InputStream,long); }
-keepclassmembers class android.icu.text.ReplaceableString { int char32At(int); }
-keepclassmembers class android.icu.text.UnicodeSet { int span(java.lang.CharSequence,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.icu.text.ReplaceableString { char charAt(int); }
-keepclassmembers class android.icu.text.ReplaceableString { void getChars(int,int,char[],int); }
-keepclassmembers class android.icu.text.UnicodeSet { int span(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.icu.text.ReplaceableString { void replace(int,int,char[],int,int); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class java.lang.Character$Subset { java.lang.String toString(); }
-keepclassmembers class android.icu.text.ReplaceableString { void replace(int,int,java.lang.String); }
-keepclassmembers class android.icu.text.ReplaceableString { void copy(int,int,int); }
-keepclassmembers class android.icu.text.UnicodeSet { void applyPropertyPattern(android.icu.impl.RuleCharacterIterator,java.lang.Appendable,android.icu.text.SymbolTable); }
-keepclassmembers class android.icu.text.UnicodeSet { int spanAndCount(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition,android.icu.util.OutputInt); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$16 { void onAnimationFinished(); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleBody { java.lang.String nextLine(); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleBody { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$16 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleBody { void <init>(android.icu.text.TransliteratorParser$1); }
-keepclassmembers class android.icu.text.UnicodeSet { int spanCodePointsAndCount(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition,android.icu.util.OutputInt); }
-keepclassmembers class sun.util.locale.LanguageTag { sun.util.locale.LanguageTag parse(java.lang.String,sun.util.locale.ParseStatus); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class sun.util.locale.LanguageTag { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$2 { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.util.AnimationUtil$2 { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.Calculator { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { int spanBack(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$ResourceEntry { void <init>(java.lang.String,int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { char value(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.view.ViewAnimationUtils { android.animation.Animator createCircularReveal(android.view.View,int,int,float,float); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$4 { void <init>(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$4 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { void <init>(char); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { int hashCode(); }
-keepclassmembers class android.icu.text.UnicodeSet { void checkFrozen(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { void <init>(java.lang.String,sun.util.locale.InternalLocaleBuilder$1); }
-keepclassmembers class java.nio.file.attribute.FileTime { void <init>(long,java.util.concurrent.TimeUnit,java.time.Instant); }
-keepclassmembers class java.nio.file.attribute.FileTime { java.nio.file.attribute.FileTime from(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.text.UnicodeSet cloneAsThawed(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseLanguage(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop { float findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop { void <init>(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { int getItemId(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseScript(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseExtlangs(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class android.icu.impl.UPropertyAliases$IsAcceptable { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2$UTrie2Header { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeSet { int compareTo(android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.impl.UPropertyAliases$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { java.lang.CharSequence getTitle(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseRegion(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop { void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean); }
-keepclassmembers class android.icu.impl.UPropertyAliases$IsAcceptable { void <init>(android.icu.impl.UPropertyAliases$1); }
-keepclassmembers class android.transition.Fade { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseVariants(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class android.icu.text.UnicodeSet { int compareTo(android.icu.text.UnicodeSet,android.icu.text.UnicodeSet$ComparisonStyle); }
-keepclassmembers class android.icu.text.UnicodeSet { int compare(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.UnicodeSet { int compare(java.lang.Iterable,java.lang.Iterable); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parseExtensions(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class android.icu.text.UnicodeSet { int compare(java.util.Iterator,java.util.Iterator); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.view.KeyboardShortcutInfo$1 { void <init>(); }
-keepclassmembers class android.transition.Fade { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class sun.security.action.GetBooleanAction { void <init>(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean parsePrivateuse(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,int,int,int); }
-keepclassmembers class sun.security.action.GetBooleanAction { java.lang.Boolean run(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class sun.util.locale.LanguageTag { sun.util.locale.LanguageTag parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence,int,int); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence); }
-keepclassmembers class android.icu.text.UnicodeSet { int compareTo(java.lang.Object); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,int,int,int,char[],int); }
-keepclassmembers class sun.security.action.GetBooleanAction { java.lang.Object run(); }
-keepclassmembers class android.icu.text.UnicodeSet { android.icu.util.VersionInfo access$000(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer get(char[]); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer allocate(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class android.icu.text.UnicodeSet { void <clinit>(); }
-keepclassmembers class com.xlythe.math.HistoryEntry { void <init>(int,java.io.DataInput); }
-keepclassmembers class java.nio.channels.IllegalBlockingModeException { void <init>(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer get(char[],int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class com.xlythe.math.HistoryEntry { void write(java.io.DataOutput); }
-keepclassmembers class com.xlythe.math.HistoryEntry { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class com.xlythe.math.HistoryEntry { java.lang.String toString(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer put(java.nio.CharBuffer); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class com.xlythe.math.HistoryEntry { java.lang.String getFormula(); }
-keepclassmembers class android.content.IntentFilter { void <init>(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.util.List getExtlangs(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String getScript(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String getRegion(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.util.List getVariants(); }
-keepclassmembers class java.nio.CharBuffer { java.lang.String toString(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String getLanguage(); }
-keepclassmembers class android.content.IntentFilter { void <init>(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isLanguage(java.lang.String); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { java.util.List getExtensions(); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isExtlang(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String getPrivateuse(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isScript(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isVariant(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isExtensionSingleton(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isRegion(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isPrivateusePrefix(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isPrivateusePrefixChar(char); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isExtensionSubtag(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$12 { void onAnimationFinished(); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class sun.util.locale.LanguageTag { boolean isPrivateuseSubtag(java.lang.String); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String canonicalizeLanguage(java.lang.String); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String canonicalizeScript(java.lang.String); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String canonicalizeExtension(java.lang.String); }
-keepclassmembers class android.transition.AutoTransition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class sun.util.locale.LanguageTag { void <clinit>(); }
-keepclassmembers class sun.util.locale.LanguageTag { java.lang.String canonicalizeRegion(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { void addAction(java.lang.String); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class android.provider.Settings$System$4 { void <init>(); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void cancel(); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void start(android.support.design.widget.StateListAnimator$Tuple); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void addState(int[],android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void <init>(); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { boolean isEOC(int); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void <init>(); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { boolean isLongForm(int); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { boolean isIndefinite(int); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void parseTag(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$10 { void <init>(); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class sun.security.util.ManifestDigester { boolean findSection(int,sun.security.util.ManifestDigester$Position); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void writeTag(); }
-keepclassmembers class android.content.pm.PathPermission { void <clinit>(); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void setState(int[]); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.content.pm.PathPermission { void <init>(android.os.Parcel); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { int parseLength(); }
-keepclassmembers class java.util.logging.Logger$SystemLoggerHelper { void <clinit>(); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class java.util.logging.Logger$SystemLoggerHelper { boolean getBooleanProperty(java.lang.String); }
-keepclassmembers class sun.security.util.ManifestDigester { void <init>(byte[]); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void writeLengthAndValue(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void increment(int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void addBitmapMemory(android.graphics.Bitmap); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void clear(); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void writeLength(int); }
-keepclassmembers class sun.security.util.DerValue { boolean isContextSpecific(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1); }
-keepclassmembers class sun.security.util.DerValue { boolean isContextSpecific(byte); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class sun.security.util.DerValue { boolean isConstructed(byte); }
-keepclassmembers class sun.security.util.DerValue { boolean isConstructed(); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { byte[] getLengthBytes(int); }
-keepclassmembers class sun.security.util.DerValue { void <init>(byte,byte[]); }
-keepclassmembers class sun.security.util.ManifestDigester { sun.security.util.ManifestDigester$Entry get(java.lang.String,boolean); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class sun.security.util.ManifestDigester { boolean isNameAttr(byte[],int); }
-keepclassmembers class sun.security.util.ManifestDigester { byte[] manifestDigest(java.security.MessageDigest); }
-keepclassmembers class java.util.Formatter$BigDecimalLayoutForm { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Formatter$BigDecimalLayoutForm { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class sun.security.util.DerValue { void <init>(sun.security.util.DerInputBuffer,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class android.icu.text.EscapeTransliterator$8 { void <init>(); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void parseValue(int); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { byte[] convert(byte[]); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class android.icu.text.EscapeTransliterator$8 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class sun.security.util.DerValue { void <init>(byte[]); }
-keepclassmembers class sun.security.util.DerIndefLenConverter { void writeValue(int); }
-keepclassmembers class android.text.TextUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class sun.security.util.DerValue { void <init>(java.io.InputStream); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$6 { void <init>(com.xlythe.calculator.material.BasicCalculator,int,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$6 { boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList getChildAnimations(); }
-keepclassmembers class sun.security.util.DerValue { sun.security.util.DerInputStream init(boolean,java.io.InputStream); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$6 { void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { void addPackageDependency(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class java.lang.Byte$ByteCache { void <clinit>(); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class sun.security.x509.DNSName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class sun.security.util.DerValue { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class sun.security.util.DerValue { sun.security.util.DerInputStream getData(); }
-keepclassmembers class sun.security.x509.DNSName { void <init>(java.lang.String); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class sun.security.util.DerValue { byte getTag(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class sun.security.util.DerValue { boolean getBoolean(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.animation.AnimatorSet { void endRemainingAnimations(); }
-keepclassmembers class sun.security.util.DerValue { byte[] append(byte[],byte[]); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class sun.security.util.DerValue { sun.security.util.ObjectIdentifier getOID(); }
-keepclassmembers class android.animation.AnimatorSet { boolean isRunning(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void <clinit>(); }
-keepclassmembers class sun.security.x509.DNSName { int getType(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$8 { void onAnimationFinished(); }
-keepclassmembers class sun.security.x509.DNSName { java.lang.String getName(); }
-keepclassmembers class sun.security.util.DerValue { byte[] getOctetString(); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class sun.security.x509.DNSName { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class android.animation.AnimatorSet { void setStartDelay(long); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class sun.security.x509.DNSName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class sun.security.x509.DNSName { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class sun.net.ProgressEvent { void <init>(sun.net.ProgressSource,java.net.URL,java.lang.String,java.lang.String,sun.net.ProgressSource$State,long,long); }
-keepclassmembers class android.app.ActivityManagerProxy { android.app.ActivityOptions getActivityOptions(android.os.IBinder); }
-keepclassmembers class sun.security.util.DerValue { int getInteger(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class sun.security.util.DerValue { java.math.BigInteger getBigInteger(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$7 { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$7 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$7 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$7 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.icu.text.RemoveTransliterator { void register(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$7 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.icu.text.RemoveTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class sun.security.util.DerValue { byte[] getBitString(); }
-keepclassmembers class android.icu.text.RemoveTransliterator { void <init>(); }
-keepclassmembers class java.util.logging.LogManager$4 { void <init>(java.util.logging.LogManager,java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager$4 { java.lang.Void run(); }
-keepclassmembers class android.animation.AnimatorSet { void pause(); }
-keepclassmembers class java.util.logging.LogManager$4 { java.lang.Object run(); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getAsString(); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(int); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder newUriPermissionOwner(java.lang.String); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class android.animation.AnimatorSet { void resume(); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class android.icu.text.EscapeTransliterator { void register(); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class sun.security.util.DerValue { sun.security.util.BitArray getUnalignedBitString(boolean); }
-keepclassmembers class sun.security.util.DerValue { byte[] getDataBytes(); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class android.transition.Visibility { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getPrintableString(); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class android.icu.text.EscapeTransliterator { void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,boolean,android.icu.text.EscapeTransliterator); }
-keepclassmembers class java.nio.file.Paths { java.nio.file.Path get(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.text.Layout { int getIndentAdjust(int,android.text.Layout$Alignment); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(android.content.res.ColorStateList); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class android.transition.Visibility { int getMode(); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getT61String(); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getIA5String(); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getBMPString(); }
-keepclassmembers class android.animation.AnimatorSet { void updateAnimatorsDuration(); }
-keepclassmembers class android.icu.text.EscapeTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getUTF8String(); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class android.text.Layout { long getRunRange(int); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String getGeneralString(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.animation.AnimatorSet { void start(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void applyDensityScaling(int,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { sun.net.ftp.FtpReplyCode[] values(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void setDensity(int); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { void <init>(java.lang.String,int,int); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { int getValue(); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { boolean isPositivePreliminary(); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { boolean isPositiveCompletion(); }
-keepclassmembers class sun.security.util.DerValue { boolean equals(java.lang.Object); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { boolean isPositiveIntermediate(); }
-keepclassmembers class sun.security.util.DerValue { boolean equals(sun.security.util.DerValue); }
-keepclassmembers class android.widget.ActionMenuPresenter$OpenOverflowRunnable { void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter$OverflowPopup); }
-keepclassmembers class sun.security.util.DerValue { boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue); }
-keepclassmembers class sun.security.x509.X509CertInfo { void <init>(byte[]); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class sun.security.x509.X509CertInfo { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class sun.security.util.DerValue { java.lang.String toString(); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofInt(int[]); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { float getRadius(); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void <init>(android.support.design.widget.FloatingActionButton); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class sun.security.x509.X509CertInfo { byte[] getEncodedInfo(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { boolean isCompatPaddingEnabled(); }
-keepclassmembers class android.animation.AnimatorSet { void onChildAnimatorEnded(android.animation.Animator); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class sun.security.util.DerValue { byte[] getOriginalEncodedForm(); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class sun.security.util.DerValue { byte[] toByteArray(); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class sun.security.util.DerValue { sun.security.util.DerInputStream toDerInputStream(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void setShadowPadding(int,int,int,int); }
-keepclassmembers class java.util.LinkedList$ListItr { void <init>(java.util.LinkedList,int); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { sun.net.ftp.FtpReplyCode find(int); }
-keepclassmembers class sun.net.ftp.FtpReplyCode { void <clinit>(); }
-keepclassmembers class sun.security.util.DerValue { boolean isPrintableStringChar(char); }
-keepclassmembers class sun.security.util.DerValue { int length(); }
-keepclassmembers class sun.security.util.DerValue { byte createTag(byte,boolean,byte); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class java.util.LinkedList$ListItr { java.lang.Object next(); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class sun.security.util.DerValue { void resetTag(byte); }
-keepclassmembers class java.util.LinkedList$ListItr { boolean hasNext(); }
-keepclassmembers class sun.security.util.DerValue { int hashCode(); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class sun.security.x509.X509CertInfo { java.lang.String toString(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class android.animation.ValueAnimator { long getScaledDuration(); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class android.animation.ValueAnimator { long getDuration(); }
-keepclassmembers class android.content.res.ColorStateList { boolean canApplyTheme(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.animation.ValueAnimator { long getTotalDuration(); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class android.content.res.ColorStateList { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { boolean isActive(); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class java.util.LinkedList$ListItr { void set(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { java.lang.String toString(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void onUserAction(); }
-keepclassmembers class android.content.IntentFilter { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void deactivate(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentIteration(float); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper { void onReportFullscreenMode(boolean,boolean); }
-keepclassmembers class android.animation.ValueAnimator { float getCurrentIterationFraction(float); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class android.animation.ValueAnimator { float clampFraction(float); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.content.res.ColorStateList { int modulateColorAlpha(int,float); }
-keepclassmembers class java.util.LinkedList$ListItr { void checkForComodification(); }
-keepclassmembers class android.animation.ValueAnimator { boolean shouldPlayBackward(int); }
-keepclassmembers class android.content.res.ColorStateList { int getChangingConfigurations(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList obtainForTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Class getType(); }
-keepclassmembers class android.animation.AnimatorSet { void createDependencyGraph(); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.animation.ValueAnimator { long getFrameDelay(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.content.res.ColorStateList { void onColorsChanged(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class android.animation.ValueAnimator { int getRepeatCount(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.Object getAnimatedValue(); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.animation.ValueAnimator { int getRepeatMode(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache$Level { void <init>(int,int); }
-keepclassmembers class android.animation.ValueAnimator { void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener); }
-keepclassmembers class java.util.ResourceBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache$Level { java.lang.Object get(int); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ConstantState getConstantState(); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache$Level { java.lang.Object putIfAbsent(int,java.lang.Object,int); }
-keepclassmembers class java.util.ResourceBundle { java.lang.Object getObject(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale getLocale(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ComplexColor obtainForTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VObject { boolean isTreeValid(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VObject { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VObject { void setTree(com.android.internal.util.VirtualRefBasePtr); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$10 { void <init>(java.lang.String); }
-keepclassmembers class sun.security.x509.X509CertInfo { java.lang.Object get(java.lang.String); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.animation.AnimatorSet { void updatePlayTime(android.animation.AnimatorSet$Node,java.util.ArrayList); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle$Control getDefaultControl(java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache$Level { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.icu.lang.UCharacter { int digit(int,int); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class android.icu.lang.UCharacter { int digit(int); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String,java.lang.Class,java.util.logging.LogManager,boolean); }
-keepclassmembers class android.animation.ValueAnimator { void resume(); }
-keepclassmembers class sun.security.x509.X509CertInfo { java.lang.Object getX500Name(java.lang.String,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class android.icu.lang.UCharacter { int getType(int); }
-keepclassmembers class android.animation.ValueAnimator { void pause(); }
-keepclassmembers class android.icu.lang.UCharacter { double getUnicodeNumericValue(int); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isDigit(int); }
-keepclassmembers class java.util.logging.Logger { void setCallersClassLoaderRef(java.lang.Class); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isISOControl(int); }
-keepclassmembers class java.util.ResourceBundle { boolean checkList(java.util.List); }
-keepclassmembers class sun.security.x509.X509CertInfo { void parse(sun.security.util.DerValue); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class java.util.logging.Logger { java.lang.ClassLoader getCallersClassLoader(); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void findSiblings(android.animation.AnimatorSet$Node,java.util.ArrayList); }
-keepclassmembers class java.util.logging.Logger { void setLogManager(java.util.logging.LogManager); }
-keepclassmembers class java.util.logging.Logger { void checkPermission(); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger demandLogger(java.lang.String,java.lang.String,java.lang.Class); }
-keepclassmembers class android.animation.AnimatorSet { boolean shouldPlayTogether(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isUnicodeIdentifierPart(int); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { long getTotalDuration(); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isUnicodeIdentifierStart(int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Node getNodeForAnimation(android.animation.Animator); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isIdentifierIgnorable(int); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { boolean VMSupportsCS8(); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <init>(long); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class android.icu.lang.UCharacter { int toLowerCase(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long get(); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle getResourceBundle(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void set(long); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$200(android.animation.AnimatorSet); }
-keepclassmembers class sun.security.x509.X509CertInfo { void verifyCert(sun.security.x509.X500Name,sun.security.x509.CertificateExtensions); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$100(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$402(android.animation.AnimatorSet,boolean); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getResourceBundleName(); }
-keepclassmembers class org.ejml.alg.block.linsol.qr.BlockQrHouseHolderSolver { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { void access$300(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Node access$500(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { boolean compareAndSet(long,long); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long getAndIncrement(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$602(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class android.icu.lang.UCharacter { int getCombiningClass(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long getAndAdd(long); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(); }
-keepclassmembers class sun.security.x509.X509CertInfo { void emit(sun.security.util.DerOutputStream); }
-keepclassmembers class org.ejml.alg.block.linsol.qr.BlockQrHouseHolderSolver { boolean setA(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.util.ResourceBundle { boolean hasValidParentChain(java.util.ResourceBundle); }
-keepclassmembers class java.util.ResourceBundle { boolean isValidBundle(java.util.ResourceBundle); }
-keepclassmembers class java.util.logging.Logger { void doLog(java.util.logging.LogRecord); }
-keepclassmembers class org.ejml.alg.block.linsol.qr.BlockQrHouseHolderSolver { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class java.util.ResourceBundle { void throwMissingResourceException(java.lang.String,java.util.Locale,java.lang.Throwable); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class org.ejml.alg.block.linsol.qr.BlockQrHouseHolderSolver { void solve(org.ejml.data.BlockMatrix64F,org.ejml.data.BlockMatrix64F); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String getExtendedName(int); }
-keepclassmembers class android.animation.ValueAnimator { boolean isPulsingInternal(); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addCustomViewsWithGravity(java.util.List,int); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask$2 { void <init>(com.xlythe.view.floating.FloatingView$AnimationTask); }
-keepclassmembers class android.icu.lang.UCharacter { int getCharFromExtendedName(java.lang.String); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask$2 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.icu.lang.UCharacter { int getPropertyEnum(java.lang.CharSequence); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ejml.alg.block.linsol.qr.BlockQrHouseHolderSolver { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String getPropertyValueName(int,int,int); }
-keepclassmembers class android.icu.lang.UCharacter { int getPropertyValueEnum(int,java.lang.CharSequence); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.icu.lang.UCharacter { int getPropertyValueEnumNoThrow(int,java.lang.CharSequence); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalRange { void <init>(android.icu.text.PluralRules$FixedDecimal,android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class org.ejml.factory.LinearSolverFactory { org.ejml.factory.LinearSolver leastSquares(int,int); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class sun.security.x509.X509CertInfo { int attributeMap(java.lang.String); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class org.ejml.factory.LinearSolverFactory { org.ejml.factory.LinearSolver leastSquaresQrPivot(boolean,boolean); }
-keepclassmembers class org.ejml.factory.LinearSolverFactory { org.ejml.factory.LinearSolver linear(int); }
-keepclassmembers class android.icu.impl.Trie2$2 { void <clinit>(); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addSystemView(android.view.View,boolean); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String toUpperCase(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class org.ejml.factory.LinearSolverFactory { org.ejml.factory.LinearSolver pseudoInverse(boolean); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalRange { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle); }
-keepclassmembers class java.util.ResourceBundle { void setExpirationTime(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String toLowerCase(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureContentInsets(); }
-keepclassmembers class sun.security.x509.X509CertInfo { void <clinit>(); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String toTitleCase(android.icu.util.ULocale,java.lang.String,android.icu.text.BreakIterator); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureNavButtonView(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureLogoView(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String toTitleCase(android.icu.util.ULocale,java.lang.String,android.icu.text.BreakIterator,int); }
-keepclassmembers class java.util.ResourceBundle { java.lang.ref.ReferenceQueue access$200(); }
-keepclassmembers class java.util.AbstractMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildHorizontalGravity(int); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildTop(android.view.View,int); }
-keepclassmembers class android.animation.ValueAnimator { float getAnimatedFraction(); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class android.widget.Editor$DragLocalState { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getHorizontalMargins(android.view.View); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.util.AbstractMap { java.util.Set keySet(); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildVerticalGravity(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getViewListMeasuredWidth(java.util.List,int[]); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getVerticalMargins(android.view.View); }
-keepclassmembers class java.util.logging.LogManager$RootLogger { void <init>(java.util.logging.LogManager); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration { void <init>(); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class java.util.logging.LogManager$RootLogger { void addHandler(java.util.logging.Handler); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isChildOrHidden(android.view.View); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.app.ActivityManagerProxy { int setVrMode(android.os.IBinder,boolean,android.content.ComponentName); }
-keepclassmembers class java.util.logging.LogManager$RootLogger { java.util.logging.Handler[] accessCheckedHandlers(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void <init>(); }
-keepclassmembers class org.ejml.simple.SimpleSVD { void <init>(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class java.util.logging.LogManager$RootLogger { void <init>(java.util.logging.LogManager,java.util.logging.LogManager$1); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getEnd(); }
-keepclassmembers class java.io.ObjectStreamClass$Caches { java.lang.ref.ReferenceQueue access$200(); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass$Caches { java.lang.ref.ReferenceQueue access$2600(); }
-keepclassmembers class java.io.ObjectStreamClass$Caches { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getStart(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildRight(android.view.View,int,int[],int); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine$MenuHandler { void <init>(com.xlythe.calculator.material.view.HistoryLine); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine$MenuHandler { void <init>(com.xlythe.calculator.material.view.HistoryLine,com.xlythe.calculator.material.view.HistoryLine$1); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setDirection(boolean); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine$MenuHandler { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class org.ejml.simple.SimpleSVD { org.ejml.simple.SimpleMatrix getU(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class java.util.AbstractMap { boolean eq(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.ejml.simple.SimpleSVD { org.ejml.simple.SimpleMatrix getW(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setRelative(int,int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.support.v7.widget.Toolbar { int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]); }
-keepclassmembers class java.util.AbstractMap { boolean access$000(java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.security.jca.Providers { java.security.Provider getSunProvider(); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencyDisplayInfo { void <init>(); }
-keepclassmembers class sun.security.jca.Providers { java.lang.Object startJarVerification(); }
-keepclassmembers class sun.security.jca.Providers { void stopJarVerification(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildLeft(android.view.View,int,int[],int); }
-keepclassmembers class javax.crypto.Cipher$InitParams { void <init>(javax.crypto.Cipher$InitType,int,java.security.Key,java.security.SecureRandom,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters); }
-keepclassmembers class sun.security.jca.Providers { sun.security.jca.ProviderList getProviderList(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void measureChildConstrained(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String foldCase(java.lang.String,boolean); }
-keepclassmembers class sun.security.jca.Providers { sun.security.jca.ProviderList getFullProviderList(); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class android.content.pm.FeatureInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.lang.UCharacter { java.lang.String foldCase(java.lang.String,int); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class sun.security.jca.Providers { sun.security.jca.ProviderList getSystemProviderList(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class sun.security.jca.Providers { sun.security.jca.ProviderList getThreadProviderList(); }
-keepclassmembers class sun.security.jca.Providers { void setSystemProviderList(sun.security.jca.ProviderList); }
-keepclassmembers class sun.security.jca.Providers { void changeThreadProviderList(sun.security.jca.ProviderList); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow { void dismiss(); }
-keepclassmembers class android.content.pm.FeatureInfo { void <init>(android.os.Parcel,android.content.pm.FeatureInfo$1); }
-keepclassmembers class sun.security.jca.Providers { sun.security.jca.ProviderList beginThreadProviderList(sun.security.jca.ProviderList); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class android.content.pm.FeatureInfo { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldCollapse(); }
-keepclassmembers class sun.security.jca.Providers { void endThreadProviderList(sun.security.jca.ProviderList); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldLayout(android.view.View); }
-keepclassmembers class java.util.logging.Logger { boolean isLevelInitialized(); }
-keepclassmembers class sun.security.jca.Providers { void <clinit>(); }
-keepclassmembers class org.ejml.simple.SimpleSVD { org.ejml.simple.SimpleMatrix getV(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1); }
-keepclassmembers class java.util.logging.Logger { boolean isLoggable(java.util.logging.Level); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class android.icu.lang.UCharacter { android.icu.util.VersionInfo getAge(int); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class android.app.ActivityManagerProxy { void showLockTaskEscapeMessage(android.os.IBinder); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] accessCheckedHandlers(); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle findSystemResourceBundle(java.util.Locale); }
-keepclassmembers class android.icu.lang.UCharacter { boolean hasBinaryProperty(int,int); }
-keepclassmembers class java.util.logging.Logger { void setUseParentHandlers(boolean); }
-keepclassmembers class java.util.logging.Logger { void addHandler(java.util.logging.Handler); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle findResourceBundle(java.lang.String,boolean); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase { void <init>(); }
-keepclassmembers class android.icu.lang.UCharacter { boolean isUAlphabetic(int); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.icu.lang.UCharacter { int getIntPropertyValue(int,int); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetEnd(); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class java.util.logging.Logger { void setupResourceInfo(java.lang.String,java.lang.Class); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetStart(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetEnd(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetLeft(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetRight(); }
-keepclassmembers class java.util.AbstractList$Itr { void <init>(java.util.AbstractList); }
-keepclassmembers class sun.net.util.URLUtil { java.lang.String urlNoFragString(java.net.URL); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetStart(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class java.util.logging.Logger { void doSetParent(java.util.logging.Logger); }
-keepclassmembers class java.util.AbstractList$Itr { boolean hasNext(); }
-keepclassmembers class android.icu.lang.UCharacter { int getIntPropertyMaxValue(int); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class com.android.internal.policy.DecorContext { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class java.util.AbstractList$Itr { java.lang.Object next(); }
-keepclassmembers class com.android.internal.policy.DecorContext { void setPhoneWindow(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class android.appwidget.AppWidgetManager { android.appwidget.AppWidgetManager getInstance(android.content.Context); }
-keepclassmembers class com.android.internal.policy.DecorContext { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getNavigationContentDescription(); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getSubtitle(); }
-keepclassmembers class java.util.AbstractList$Itr { void remove(); }
-keepclassmembers class java.util.AbstractList$Itr { void checkForComodification(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.graphics.drawable.Drawable getNavigationIcon(); }
-keepclassmembers class java.util.AbstractList$Itr { void <init>(java.util.AbstractList,java.util.AbstractList$1); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getTitle(); }
-keepclassmembers class java.util.logging.Logger { void updateEffectiveLevel(); }
-keepclassmembers class com.android.internal.policy.DecorContext { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.DecorToolbar getWrapper(); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.icu.lang.UCharacter { int getIntPropertyMinValue(int); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger$LoggerBundle getEffectiveLoggerBundle(); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { void setChecked(boolean); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class android.icu.util.BytesTrie { void <init>(byte[],int); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger$LoggerBundle access$100(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onDetachedFromWindow(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger$LoggerBundle access$000(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$4 { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { void exitFreeformMode(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$4 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isRootVoiceInteraction(android.os.IBinder); }
-keepclassmembers class android.icu.util.BytesTrie { android.icu.util.BytesTrie$Result next(int); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { int getActivityStackId(android.os.IBinder); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$4 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionTokenizer$Localizer { void <init>(com.xlythe.calculator.material.CalculatorExpressionTokenizer,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$1 { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class java.util.Collections { void reverse(java.util.List); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowPopup { void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isInMultiWindowMode(android.os.IBinder); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowPopup { void onDismiss(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class java.util.Formatter { void <init>(java.util.Locale,java.lang.Appendable); }
-keepclassmembers class sun.security.jca.GetInstance$Instance { void <init>(java.security.Provider,java.lang.Object); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isInPictureInPictureMode(android.os.IBinder); }
-keepclassmembers class java.util.Formatter { java.lang.Appendable nonNullAppendable(java.lang.Appendable); }
-keepclassmembers class android.app.ActivityManagerProxy { void enterPictureInPictureMode(android.os.IBinder); }
-keepclassmembers class sun.security.jca.GetInstance$Instance { void <init>(java.security.Provider,java.lang.Object,sun.security.jca.GetInstance$1); }
-keepclassmembers class java.util.Formatter { void <init>(); }
-keepclassmembers class sun.security.jca.GetInstance$Instance { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class android.icu.util.BytesTrie { int getValue(); }
-keepclassmembers class java.util.Collections { void swap(java.util.List,int,int); }
-keepclassmembers class java.util.Formatter { void <init>(java.util.Locale); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class java.util.Formatter { char getZero(java.util.Locale); }
-keepclassmembers class org.ejml.alg.dense.misc.TransposeAlgs { void block(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,int); }
-keepclassmembers class org.ejml.alg.dense.misc.TransposeAlgs { void square(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class java.util.Formatter { java.lang.Appendable out(); }
-keepclassmembers class java.util.Formatter { java.util.Locale locale(); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffsets(long,int[]); }
-keepclassmembers class java.util.Formatter { void ensureOpen(); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String encodePath(java.lang.String,boolean); }
-keepclassmembers class android.icu.util.BytesTrie { int readValue(byte[],int,int); }
-keepclassmembers class android.icu.util.BytesTrie { void stop(); }
-keepclassmembers class android.icu.util.BytesTrie { int skipValue(int,int); }
-keepclassmembers class sun.net.www.ParseUtil { void <init>(); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.ejml.alg.dense.misc.TransposeAlgs { void standard(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.icu.util.BytesTrie { int jumpByDelta(byte[],int); }
-keepclassmembers class sun.net.www.ParseUtil { byte unescape(java.lang.String,int); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String encodePath(java.lang.String); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String decode(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class sun.net.www.ParseUtil { int escape(char[],char,int); }
-keepclassmembers class android.icu.util.BytesTrie { int skipValue(byte[],int); }
-keepclassmembers class android.icu.util.BytesTrie { int skipDelta(byte[],int); }
-keepclassmembers class android.icu.util.BytesTrie { android.icu.util.BytesTrie$Result branchNext(int,int,int); }
-keepclassmembers class java.security.SecureRandom { void getDefaultPRNG(boolean,byte[]); }
-keepclassmembers class java.security.SecureRandom { void <init>(); }
-keepclassmembers class java.util.Formatter { java.util.Formatter$FormatString[] parse(java.lang.String); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class java.security.SecureRandom { void <init>(java.security.SecureRandomSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheValue { int hashCode(); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheValue { void <init>(java.lang.Object); }
-keepclassmembers class java.security.SecureRandom { java.security.SecureRandom getInstance(java.lang.String); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class java.util.Formatter { java.lang.Appendable access$000(java.util.Formatter); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Class getType(); }
-keepclassmembers class java.util.Formatter { java.util.Locale access$200(java.util.Formatter); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheValue { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onMeasure(int,int); }
-keepclassmembers class java.util.Formatter { double access$300(); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String canonizeString(java.lang.String); }
-keepclassmembers class java.util.Formatter { double access$302(double); }
-keepclassmembers class java.security.SecureRandom { java.security.SecureRandomSpi getSecureRandomSpi(); }
-keepclassmembers class java.util.SimpleTimeZone { long getStart(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int); }
-keepclassmembers class java.security.SecureRandom { java.security.Provider getProvider(); }
-keepclassmembers class java.util.Formatter { char access$400(java.util.Formatter); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { void <init>(int); }
-keepclassmembers class android.icu.text.UnicodeNameTransliterator { void <init>(android.icu.text.UnicodeFilter); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$9 { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class java.util.Collections { java.util.Collection unmodifiableCollection(java.util.Collection); }
-keepclassmembers class android.icu.util.BytesTrie { android.icu.util.BytesTrie$Result nextImpl(int,int); }
-keepclassmembers class java.security.SecureRandom { void setSeed(long); }
-keepclassmembers class android.icu.text.UnicodeNameTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.icu.text.UnicodeNameTransliterator { void register(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { boolean isInListMode(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { boolean hasPanelItems(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class sun.net.www.ParseUtil { java.net.URI toURI(java.net.URL); }
-keepclassmembers class java.security.SecureRandom { void nextBytes(byte[]); }
-keepclassmembers class java.security.SecureRandom { int next(int); }
-keepclassmembers class java.security.SecureRandom { byte[] getSeed(int); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class java.security.SecureRandom { byte[] generateSeed(int); }
-keepclassmembers class java.util.Collections { java.util.Collection synchronizedCollection(java.util.Collection,java.lang.Object); }
-keepclassmembers class java.util.SimpleTimeZone { long getEnd(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int); }
-keepclassmembers class java.util.Collections { java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { void setStyle(android.content.Context); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.SecureRandom { byte[] longToByteArray(long); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class sun.net.www.ParseUtil { java.net.URI createURI(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.SimpleTimeZone { long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int); }
-keepclassmembers class java.security.SecureRandom { java.lang.String getPrngAlgorithm(); }
-keepclassmembers class org.ejml.alg.dense.misc.ImplCommonOps_DenseMatrix64F { void extract(org.ejml.data.DenseMatrix64F,int,int,org.ejml.data.DenseMatrix64F,int,int,int,int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class java.util.Collections { java.util.Set synchronizedSet(java.util.Set,java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class java.security.SecureRandom { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$8 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String toString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$8 { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { com.android.internal.view.menu.MenuView getListMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$8 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$8 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$8 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class sun.net.www.ParseUtil { void appendSchemeSpecificPart(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { void setMenu(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class android.widget.AdapterView { void removeAllViews(); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.nio.ByteBuffer,int,java.util.List,int,boolean); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.nio.ByteBuffer,int,java.util.List,int,boolean); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.icu.util.BytesTrie { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class android.graphics.FontFamily { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { com.android.internal.view.menu.MenuView getIconMenuView(android.content.Context,com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class java.util.Collections { java.util.Iterator emptyIterator(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class java.util.Collections { java.util.Enumeration emptyEnumeration(); }
-keepclassmembers class java.util.Collections { java.util.Set emptySet(); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class java.util.Collections { java.util.Set singleton(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.Collections { java.util.Map emptyMap(); }
-keepclassmembers class java.util.Collections { java.util.Iterator singletonIterator(java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class sun.net.www.ParseUtil { void appendAuthority(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelFeatureState { void applyFrozenState(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class java.util.Collections { java.util.Map singletonMap(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class java.util.Collections { boolean eq(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$JellybeanMr1Impl { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$3$1 { void <init>(com.xlythe.calculator.material.HexCalculator$3); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$3$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setContentInsetsRelative(int,int); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class sun.net.www.ParseUtil { void appendFragment(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class sun.net.www.ParseUtil { java.lang.String quote(java.lang.String,long,long); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class java.util.Collections { java.util.Set newSetFromMap(java.util.Map); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(); }
-keepclassmembers class android.view.KeyboardShortcutGroup$1 { void <init>(); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class sun.net.www.ParseUtil { boolean isEscaped(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class sun.net.www.ParseUtil { void appendEncoded(java.lang.StringBuffer,char); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class sun.net.www.ParseUtil { void appendEscape(java.lang.StringBuffer,byte); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int); }
-keepclassmembers class java.security.spec.InvalidKeySpecException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class java.lang.Character$CharacterCache { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class sun.net.www.ParseUtil { boolean match(char,long,long); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.StaticLayout$Builder { void recycle(android.text.StaticLayout$Builder); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class sun.net.www.ParseUtil { void checkPath(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class sun.net.www.ParseUtil { long lowMask(char,char); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setText(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getMainAttributes(); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setPaint(android.text.TextPaint); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setWidth(int); }
-keepclassmembers class android.icu.impl.ClassLoaderUtil$BootstrapClassLoader { void <init>(); }
-keepclassmembers class sun.net.www.ParseUtil { long lowMask(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment); }
-keepclassmembers class android.text.StaticLayout$Builder { void <init>(); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setPopupTheme(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class android.text.StaticLayout$Builder { void finish(); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setLineSpacing(float,float); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class android.widget.ListView { void addHeaderView(android.view.View,java.lang.Object,boolean); }
-keepclassmembers class sun.net.www.ParseUtil { long highMask(char,char); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setIncludePad(boolean); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { int getMissingMethodFlags(android.view.inputmethod.InputConnection); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setMaxLines(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setBreakStrategy(int); }
-keepclassmembers class java.util.jar.Manifest { void <init>(java.io.InputStream); }
-keepclassmembers class sun.net.www.ParseUtil { long highMask(java.lang.String); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setHyphenationFrequency(int); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { int getMissingMethodFlagsInternal(java.lang.Class); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$2 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class sun.net.www.ParseUtil { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$2 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.util.jar.Manifest { void read(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$2 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$2 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class android.text.StaticLayout$Builder { void setLocale(java.util.Locale); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout$Builder setEllipsizedWidth(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.text.StaticLayout$Builder { float addStyleRun(android.text.TextPaint,int,int,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class java.util.ResourceBundle$Control$1 { void <init>(java.util.ResourceBundle$Control,boolean,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.text.StaticLayout$Builder { void addReplacementRun(int,int,float); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasGetSelectedText(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitleTextAppearance(android.content.Context,int); }
-keepclassmembers class java.util.ResourceBundle$Control$1 { java.io.InputStream run(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.text.StaticLayout$Builder { void addMeasuredRun(int,int,float[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.StaticLayout$Builder { void access$900(android.text.StaticLayout$Builder); }
-keepclassmembers class android.text.StaticLayout$Builder { android.text.StaticLayout build(); }
-keepclassmembers class android.text.StaticLayout$Builder { void access$1000(android.text.StaticLayout$Builder,java.util.Locale); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasSetComposingRegion(java.lang.Class); }
-keepclassmembers class sun.util.ResourceBundleEnumeration { void <init>(java.util.Set,java.util.Enumeration); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class java.util.ResourceBundle$Control$1 { java.lang.Object run(); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class android.widget.AbsListView { void setItemChecked(int,boolean); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasCommitCorrection(java.lang.Class); }
-keepclassmembers class sun.util.ResourceBundleEnumeration { boolean hasMoreElements(); }
-keepclassmembers class sun.util.ResourceBundleEnumeration { java.lang.String nextElement(); }
-keepclassmembers class sun.util.ResourceBundleEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class java.util.jar.Manifest { java.lang.String parseName(byte[],int); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class android.icu.impl.Trie2Writable$1 { void <clinit>(); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(libcore.io.MemoryMappedFile,long,int,boolean); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasRequestCursorUpdate(java.lang.Class); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.util.jar.Manifest { int toLower(int); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasDeleteSurroundingTextInCodePoints(java.lang.Class); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextAppearance(android.content.Context,int); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasGetHandler(java.lang.Class); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Matrix getOrCreateMirrorMatrix(); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasCloseConnection(java.lang.Class); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFKC_CFSingleton { android.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$400(); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class android.text.StaticLayout$Builder { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateShaderMatrix(android.graphics.Bitmap,android.graphics.Paint,android.graphics.Shader,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFKC_CFSingleton { void <clinit>(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$IsAcceptable { void <init>(); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class sun.misc.FloatingDecimal$1 { void <init>(); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class sun.misc.FloatingDecimal$1 { sun.misc.FloatingDecimal$BinaryToASCIIBuffer initialValue(); }
-keepclassmembers class android.icu.text.AnyTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class sun.misc.FloatingDecimal$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { boolean hasCommitContent(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class libcore.io.NioBufferIterator { void checkReadBounds(int,int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.text.AnyTransliterator { void <init>(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$IsAcceptable { void <init>(android.icu.impl.Normalizer2Impl$1); }
-keepclassmembers class libcore.io.NioBufferIterator { void checkDstBounds(int,int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.InputConnectionInspector { void <clinit>(); }
-keepclassmembers class android.icu.text.AnyTransliterator { void <init>(java.lang.String,android.icu.text.UnicodeFilter,java.lang.String,int,android.icu.text.Transliterator,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition { void <init>(int); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.text.AnyTransliterator { android.icu.text.Transliterator getTransliterator(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.BaseDecompositionBlock64 { void <init>(org.ejml.factory.DecompositionInterface,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition { boolean _decompose(); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.BaseDecompositionBlock64 { void convertBlockToRow(int,int,int,double[]); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.BaseDecompositionBlock64 { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class android.icu.text.AnyTransliterator { boolean isWide(int); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class android.icu.text.AnyTransliterator { void register(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.BaseDecompositionBlock64 { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.ArrayList$ListItr { void <init>(java.util.ArrayList,int); }
-keepclassmembers class java.util.Locale$Cache { java.util.Locale createObject(java.util.Locale$LocaleKey); }
-keepclassmembers class java.util.Locale$Cache { void <init>(); }
-keepclassmembers class android.icu.text.AnyTransliterator { android.icu.text.Transliterator safeClone(); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class java.util.ArrayList$ListItr { java.lang.Object previous(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class java.util.Locale$Cache { java.lang.Object createObject(java.lang.Object); }
-keepclassmembers class java.util.Locale$Cache { void <init>(java.util.Locale$1); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.icu.text.AnyTransliterator { int scriptNameToCode(java.lang.String); }
-keepclassmembers class java.util.ArrayList$ListItr { void set(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class android.icu.impl.UCharacterProperty$19 { void <init>(android.icu.impl.UCharacterProperty,int,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition { org.ejml.data.DenseMatrix64F getH(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$19 { int getValue(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class sun.nio.fs.DefaultFileSystemProvider { java.nio.file.spi.FileSystemProvider createProvider(java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEventInternal(int); }
-keepclassmembers class com.xlythe.calculator.material.GraphController$1 { void <init>(int,float,boolean); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class sun.nio.fs.DefaultFileSystemProvider { java.nio.file.spi.FileSystemProvider create(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.HessenbergSimilarDecomposition { org.ejml.data.DenseMatrix64F getQ(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void <init>(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void create(boolean); }
-keepclassmembers class com.xlythe.math.MatrixModule { void <init>(com.xlythe.math.Solver); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class com.xlythe.math.MatrixModule { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class com.xlythe.math.MatrixModule { org.ejml.simple.SimpleMatrix addScalar(org.ejml.simple.SimpleMatrix,double); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void connect(java.lang.String,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void connect(java.net.InetAddress,int); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.Object applyDiv(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void connectToAddress(java.net.InetAddress,int,int); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String applyFunc(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { void setSplitToolbar(boolean); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class sun.security.x509.AVA { sun.security.util.ObjectIdentifier getObjectIdentifier(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { android.animation.Animator setupAnimatorToVisibility(int,long); }
-keepclassmembers class android.widget.AbsListView { boolean isTextFilterEnabled(); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class java.util.Collections$SynchronizedSet { void <init>(java.util.Set,java.lang.Object); }
-keepclassmembers class java.util.Collections$SynchronizedSet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <clinit>(); }
-keepclassmembers class sun.security.x509.X500Name$1 { java.lang.Object[] run(); }
-keepclassmembers class sun.security.x509.X500Name$1 { java.lang.Object run(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <init>(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void doConnect(java.net.InetAddress,int,int); }
-keepclassmembers class android.widget.ListView { void onDetachedFromWindow(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { void setVisibility(int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class sun.util.logging.LoggingSupport { void ensureAvailable(); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void listen(int); }
-keepclassmembers class java.util.Collections$SynchronizedSet { int hashCode(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class sun.util.logging.LoggingSupport { java.lang.Object getLogger(java.lang.String); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class sun.security.x509.X500Name$1 { void <init>(); }
-keepclassmembers class sun.util.logging.LoggingSupport { void setLevel(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class sun.util.logging.LoggingSupport { boolean isAvailable(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { int measureChildView(android.view.View,int,int,int); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { int positionChild(android.view.View,int,int,int,boolean); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { int next(int,int,boolean); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class sun.util.logging.LoggingSupport { java.lang.Object parseLevel(java.lang.String); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void close(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { int available(); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int,int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void reset(); }
-keepclassmembers class sun.util.logging.LoggingSupport { java.lang.String getSimpleFormat(boolean); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class java.lang.CaseMapper$1 { android.icu.text.Transliterator initialValue(); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView { void <clinit>(); }
-keepclassmembers class sun.util.logging.LoggingSupport { void log(java.lang.Object,java.lang.Object,java.lang.String); }
-keepclassmembers class sun.util.logging.LoggingSupport { void <clinit>(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void releaseFD(); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { void <init>(); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { boolean isConnectionResetPending(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { boolean isConnectionReset(); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void setConnectionReset(); }
-keepclassmembers class sun.util.logging.LoggingSupport { boolean isLoggable(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { int lowerCaseHashCode(java.lang.String); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { boolean isClosedOrPending(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void setConnectionResetPending(); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { java.io.FileDescriptor acquireFD(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void socketPreClose(); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { void socketClose(); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { int toLower(int); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { boolean isUpper(int); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$000(android.os.Parcel); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { void <clinit>(); }
-keepclassmembers class java.net.AbstractPlainSocketImpl { int getTimeout(); }
-keepclassmembers class sun.misc.ASCIICaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.ResourceBundle$BundleReference { void <init>(java.util.ResourceBundle,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class org.javia.arity.Constant { int arity(); }
-keepclassmembers class java.util.ResourceBundle$BundleReference { java.util.ResourceBundle$CacheKey getCacheKey(); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class org.javia.arity.Constant { double eval(); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class org.javia.arity.Constant { org.javia.arity.Complex evalComplex(); }
-keepclassmembers class org.javia.arity.Constant { void <init>(org.javia.arity.Complex); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.icu.text.Normalizer$NONEMode { void <init>(); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class android.icu.text.Normalizer$NONEMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class sun.security.x509.AVA { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class sun.security.x509.AVA { int hashCode(); }
-keepclassmembers class android.widget.RemoteViews$2 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class sun.security.x509.AVA { void derEncode(java.io.OutputStream); }
-keepclassmembers class sun.security.x509.AVA { java.lang.String toKeyword(int,java.util.Map); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$3 { void <init>(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class sun.security.x509.AVA { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$3 { void onAnimationFinished(); }
-keepclassmembers class sun.security.x509.AVA { java.lang.String toRFC2253String(java.util.Map); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class sun.security.x509.AVA { boolean equals(java.lang.Object); }
-keepclassmembers class android.transition.CircularPropagation { void <init>(); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.Object applyMult(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { void <init>(); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { void <init>(int,int); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.Object applyPlus(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.Object applyPow(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { org.ejml.simple.SimpleMatrix diag(double[]); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.widget.Toolbar$LayoutParams); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { org.ejml.simple.SimpleMatrix wrap(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class sun.security.x509.AVA { java.lang.String toRFC2253CanonicalString(); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { org.ejml.simple.SimpleBase createMatrix(int,int); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class org.ejml.simple.SimpleMatrix { org.ejml.simple.SimpleMatrix createMatrix(int,int); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$5 { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$5 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$2$1 { void <init>(android.icu.impl.ResourceBundleWrapper$2,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean isItemClickable(android.view.View); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$2$1 { java.io.InputStream run(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.Object applySub(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(int,int); }
-keepclassmembers class sun.security.x509.AVA { boolean isDerString(sun.security.util.DerValue,boolean); }
-keepclassmembers class sun.security.x509.AVA { boolean hasRFC2253Keyword(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$2$1 { java.lang.Object run(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class sun.security.x509.AVA { java.lang.String toKeywordValueString(java.lang.String); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String calculate(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.view.inputmethod.EditorInfo$1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$4 { void onAnimationFinished(); }
-keepclassmembers class android.widget.AbsListView { void handleBoundsChange(); }
-keepclassmembers class android.widget.AbsListView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.icu.text.Normalizer$Unicode32 { android.icu.text.UnicodeSet access$100(); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$4 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$1 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.icu.text.DateFormatSymbols$1 { android.icu.text.DateFormatSymbols createInstance(java.lang.String,android.icu.util.ULocale); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseCache(); }
-keepclassmembers class java.util.ArrayList$SubList { void <init>(java.util.ArrayList,java.util.AbstractList,int,int,int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void createCachedBitmapIfNeeded(int,int); }
-keepclassmembers class android.widget.ListView { void removeUnusedFixedViews(java.util.List); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread { void draw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String clean(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.icu.text.Normalizer$Unicode32 { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class sun.security.x509.AVA { void <clinit>(); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String fact(int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread { void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String dirty(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.widget.AbsListView { int[] getDrawableStateForSelector(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class com.xlythe.math.MatrixModule { int[] lookAfield(java.lang.Object[],int); }
-keepclassmembers class android.content.res.Resources$Theme { void applyStyle(int,boolean); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread { void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean); }
-keepclassmembers class android.content.res.Resources$Theme { void setTo(android.content.res.Resources$Theme); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String numToString(double); }
-keepclassmembers class android.widget.AbsListView { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { void getFolded(); }
-keepclassmembers class com.xlythe.math.MatrixModule { char[] opSplit(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread { void onSelected(android.view.View); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { void <init>(java.lang.String); }
-keepclassmembers class java.util.ArrayList$SubList { int size(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCacheStates(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class io.codetail.animation.ViewAnimationUtils$SimpleAnimationListener { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class android.content.res.Resources$Theme { void setImpl(android.content.res.ResourcesImpl$ThemeImpl); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.os.PatternMatcher$1 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCachedBitmap(int,int); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { java.lang.String foldCase(java.lang.String); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class android.os.PatternMatcher$1 { android.os.PatternMatcher createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { boolean equals(java.lang.Object); }
-keepclassmembers class com.xlythe.math.MatrixModule { org.ejml.simple.SimpleMatrix parseMatrix(java.lang.String); }
-keepclassmembers class android.os.PatternMatcher$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { int hashCode(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray resolveAttributes(int[],int[]); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class android.content.res.Resources$Theme { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.os.PatternMatcher$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$4 { void <init>(); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { java.lang.String getString(); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.icu.util.CaseInsensitiveString { java.lang.String toString(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources getResources(); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String printMatrix(org.ejml.simple.SimpleMatrix); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources$ThemeKey getKey(); }
-keepclassmembers class android.os.PatternMatcher$1 { android.os.PatternMatcher[] newArray(int); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.ZygoteProcess { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.xlythe.math.MatrixModule { double solve(java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class java.util.ArrayList$SubList { java.util.Iterator iterator(); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources,android.content.res.Resources$1); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.ArrayList$SubList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class com.xlythe.math.MatrixModule { java.lang.String evaluateMatrices(java.lang.String); }
-keepclassmembers class android.transition.ChangeScroll { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class android.transition.ChangeScroll { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeScroll { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.AbsListView { boolean performStylusButtonPressAction(android.view.MotionEvent); }
-keepclassmembers class java.util.ArrayList$SubList { java.lang.String outOfBoundsMsg(int); }
-keepclassmembers class android.widget.AbsListView { boolean performLongPress(android.view.View,int,long); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class com.xlythe.math.MatrixModule { boolean isMatrix(java.lang.String); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo getContextMenuInfo(); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { boolean performLongPress(android.view.View,int,long,float,float); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuInternal(float,float,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class android.app.AlertDialog$Builder { android.content.Context getContext(); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class android.util.Property { java.lang.Class getType(); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View,float,float); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setCustomTitle(android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChildInternal(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getName(int,int); }
-keepclassmembers class org.javia.arity.MoreMath { double acosh(double); }
-keepclassmembers class android.support.design.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.javia.arity.MoreMath { double asinh(double); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.UCharacterName { int getCharFromName(int,java.lang.String); }
-keepclassmembers class org.javia.arity.MoreMath { double atanh(double); }
-keepclassmembers class java.util.Formatter$DateTime { boolean isValid(char); }
-keepclassmembers class android.icu.impl.ICUDebug { android.icu.util.VersionInfo getInstanceLenient(java.lang.String); }
-keepclassmembers class org.javia.arity.MoreMath { void <clinit>(); }
-keepclassmembers class org.javia.arity.MoreMath { double combinations(double,double); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.UCharacterName { int getGroupLengths(int,char[],char[]); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class org.javia.arity.MoreMath { double cos(double); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.ICUDebug { boolean enabled(java.lang.String); }
-keepclassmembers class org.javia.arity.MoreMath { double factorial(double); }
-keepclassmembers class org.javia.arity.MoreMath { boolean isPiMultiple(double); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getGroupName(int,int,int); }
-keepclassmembers class org.javia.arity.MoreMath { double lgamma(double); }
-keepclassmembers class android.icu.impl.ICUDebug { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager$Beans { java.lang.Class getClass(java.lang.String); }
-keepclassmembers class org.javia.arity.MoreMath { double permutations(double,double); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class java.util.logging.LogManager$Beans { java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]); }
-keepclassmembers class org.javia.arity.MoreMath { double tan(double); }
-keepclassmembers class org.javia.arity.MoreMath { double sin(double); }
-keepclassmembers class java.util.logging.LogManager$Beans { boolean isBeansPresent(); }
-keepclassmembers class java.util.logging.LogManager$Beans { java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.util.logging.LogManager$Beans { java.lang.Object newPropertyChangeEvent(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$5 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getExtendedName(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$5 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$5 { java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.view.FrameInfo { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.icu.impl.UCharacterName { int getGroup(int); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void <init>(int); }
-keepclassmembers class org.javia.arity.MoreMath { double gcd(double,double); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void markDependency(int,int); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getExtendedOr10Name(int); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void interrupt(java.lang.Thread); }
-keepclassmembers class java.util.logging.LogManager$Beans { void invokePropertyChange(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void markException(int,java.lang.ClassNotFoundException); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class java.util.logging.LogManager$Beans { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { int assign(java.lang.Object); }
-keepclassmembers class java.nio.file.attribute.PosixFilePermissions { java.nio.file.attribute.FileAttribute asFileAttribute(java.util.Set); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class javax.crypto.Cipher$Transform { void <init>(java.lang.String,javax.crypto.Cipher$NeedToSet); }
-keepclassmembers class android.icu.impl.UCharacterName { int getGroupMSB(int); }
-keepclassmembers class javax.crypto.Cipher$Transform { java.lang.String access$300(javax.crypto.Cipher$Transform); }
-keepclassmembers class android.icu.impl.UCharacterName { int getCodepointMSB(int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void finish(int); }
-keepclassmembers class org.javia.arity.Complex { void <init>(); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class org.javia.arity.Complex { void <init>(double,double); }
-keepclassmembers class org.javia.arity.Complex { void <init>(org.javia.arity.Complex); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex normalizeInfinity(); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class javax.crypto.Cipher$Transform { javax.crypto.Cipher$NeedToSet access$400(javax.crypto.Cipher$Transform); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void setObject(int,java.lang.Object); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex swap(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex sqrt1z(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState$1 { void <init>(); }
-keepclassmembers class org.javia.arity.Complex { double abs(); }
-keepclassmembers class java.util.GregorianCalendar { java.lang.String getCalendarType(); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { java.lang.Object lookupObject(int); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getGroupName(int,int); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class org.javia.arity.Complex { double abs2(); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void clear(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex acos(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class android.icu.impl.UCharacterName { int getMaxCharNameLength(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { void grow(); }
-keepclassmembers class android.icu.impl.UCharacterName { void getCharNameCharacters(android.icu.text.UnicodeSet); }
-keepclassmembers class android.widget.TextView { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex acosh(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$21 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$21 { int getValue(int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { java.lang.ClassNotFoundException lookupException(int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$6 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean setAlgorithm(android.icu.impl.UCharacterName$AlgorithmName[]); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean setToken(char[],byte[]); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$6 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex add(org.javia.arity.Complex); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable { int size(); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class android.icu.impl.UCharacterName { void <init>(); }
-keepclassmembers class android.app.ActivityManager$StackId { boolean hasWindowShadow(int); }
-keepclassmembers class org.javia.arity.Complex { double arg(); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean setGroup(char[],byte[]); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class org.javia.arity.Complex { double asReal(); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class android.icu.impl.UCharacterName { java.lang.String getAlgName(int,int); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex asin(); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.impl.UCharacterName { int getGroupChar(java.lang.String,int); }
-keepclassmembers class android.provider.Settings$System$InclusiveFloatRangeValidator { void <init>(float,float); }
-keepclassmembers class android.widget.AbsListView { void invalidateTopGlow(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex asinh(); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class android.widget.AbsListView { void invalidateBottomGlow(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.icu.impl.UCharacterName { int getGroupChar(int,char[],java.lang.String,int); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { void <init>(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex atan(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.app.ActivityManager$StackId { boolean hasWindowDecor(int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { boolean handleScrollBarDragging(android.view.MotionEvent); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex atanh(); }
-keepclassmembers class android.icu.impl.UCharacterName { int getType(int); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean setGroupCountSize(int,int); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.UCharacterName { int getExtendedChar(java.lang.String,int); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class java.security.CodeSigner { void <init>(java.security.cert.CertPath,java.security.Timestamp); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class android.icu.impl.UCharacterName { void add(int[],char); }
-keepclassmembers class java.security.CodeSigner { java.security.Timestamp getTimestamp(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class java.security.CodeSigner { int hashCode(); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean contains(int[],char); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class java.util.BitSet { void checkInvariants(); }
-keepclassmembers class android.icu.impl.UCharacterName { int add(int[],java.lang.String); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class android.icu.impl.UCharacterName { int add(int[],java.lang.StringBuffer); }
-keepclassmembers class android.transition.PathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.UCharacterName { int addAlgorithmName(int); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class java.security.CodeSigner { java.lang.String toString(); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class java.security.CodeSigner { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.UCharacterName { int addExtendedName(int); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex conjugate(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class java.util.BitSet { void <init>(int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex cos(); }
-keepclassmembers class android.icu.impl.UCharacterName { int[] addGroupName(int,int,byte[],int[]); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class java.util.BitSet { void initWords(int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex combinations(org.javia.arity.Complex); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex cosh(); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class java.security.CodeSigner { java.security.cert.CertPath getSignerCertPath(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class java.util.BitSet { int wordIndex(int); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItemView$PopupCallback { void <init>(); }
-keepclassmembers class java.util.Properties { void load0(java.util.Properties$LineReader); }
-keepclassmembers class android.util.Slog { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class android.icu.impl.UCharacterName { void addGroupName(int); }
-keepclassmembers class android.util.Slog { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex div(org.javia.arity.Complex); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int,float); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void drawableStateChanged(); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Properties { java.lang.String loadConvert(char[],int,int,char[]); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newTable(int); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class java.util.GregorianCalendar { int getMaximum(int); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class java.util.BitSet { void ensureCapacity(int); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object maskNull(java.lang.Object); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.GregorianCalendar { int getMinimum(int); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object unmaskNull(java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap { boolean eq(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.BitSet { void expandTo(int); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class java.util.GregorianCalendar { int getLeastMaximum(int); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.icu.impl.UCharacterName { boolean initNameSetsLengths(); }
-keepclassmembers class java.util.WeakHashMap { int hash(java.lang.Object); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex exp(); }
-keepclassmembers class java.util.WeakHashMap { int indexFor(int,int); }
-keepclassmembers class java.util.GregorianCalendar { int getActualMinimum(int); }
-keepclassmembers class java.util.WeakHashMap { void expungeStaleEntries(); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class java.util.GregorianCalendar { int getActualMaximum(int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex gcd(org.javia.arity.Complex); }
-keepclassmembers class android.icu.impl.UCharacterName { int access$200(int[],java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterName { int access$300(int[],java.lang.StringBuffer); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex factorial(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] getTable(); }
-keepclassmembers class java.util.WeakHashMap { int size(); }
-keepclassmembers class java.util.WeakHashMap { boolean isEmpty(); }
-keepclassmembers class java.util.BitSet { void set(int); }
-keepclassmembers class java.util.WeakHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry getEntry(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class org.javia.arity.Complex { boolean isFinite(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class android.icu.impl.UCharacterName { void convert(int[],android.icu.text.UnicodeSet); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class org.javia.arity.Complex { boolean isInfinite(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex lgamma(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap { void resize(int); }
-keepclassmembers class java.util.WeakHashMap { void transfer(java.util.WeakHashMap$Entry[],java.util.WeakHashMap$Entry[]); }
-keepclassmembers class android.widget.TextView$Drawables { boolean hasMetadata(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.icu.impl.UCharacterName { void <clinit>(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex log(); }
-keepclassmembers class android.widget.TextView$Drawables { boolean resolveWithLayoutDirection(int); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.BitSet { boolean get(int); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex mul(org.javia.arity.Complex); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference reallyPollLocked(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class java.lang.ref.PhantomReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void <init>(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex mod(org.javia.arity.Complex); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex mul(double); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class java.util.WeakHashMap { boolean containsNullValue(); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set keySet(); }
-keepclassmembers class java.util.WeakHashMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.PagerAdapter { float getPageWidth(int); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex negate(); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set entrySet(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex permutations(org.javia.arity.Complex); }
-keepclassmembers class java.util.Properties { java.util.Enumeration propertyNames(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1100(android.support.v7.widget.RecyclerView,int,int); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class org.javia.arity.Complex { boolean isNaN(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex pow(org.javia.arity.Complex); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class android.icu.text.NumberingSystem$2 { android.icu.text.NumberingSystem createInstance(java.lang.String,java.lang.Void); }
-keepclassmembers class android.icu.text.NumberingSystem$2 { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void <clinit>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.View,int,java.lang.Object); }
-keepclassmembers class android.icu.text.NumberingSystem$2 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setViewPagerObserver(android.database.DataSetObserver); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class java.util.Properties { void enumerate(java.util.Hashtable); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void cancelTouch(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex set(org.javia.arity.Complex); }
-keepclassmembers class java.util.WeakHashMap { java.util.Collection values(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex set(double,double); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex sin(); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Properties { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex sqrt(); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class java.util.GregorianCalendar { java.lang.Object clone(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex sinh(); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex square(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class java.util.GregorianCalendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class java.util.GregorianCalendar { long getYearOffsetInMillis(); }
-keepclassmembers class java.util.GregorianCalendar { int getWeekYear(); }
-keepclassmembers class android.widget.MenuPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex tan(); }
-keepclassmembers class java.util.GregorianCalendar { boolean isWeekDateSupported(); }
-keepclassmembers class java.util.GregorianCalendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.widget.MenuPopupWindow { android.widget.DropDownListView createDropDownListView(android.content.Context,boolean); }
-keepclassmembers class android.widget.MenuPopupWindow { void setTouchModal(boolean); }
-keepclassmembers class android.widget.MenuPopupWindow { void setHoverListener(android.widget.MenuItemHoverListener); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex sub(org.javia.arity.Complex); }
-keepclassmembers class android.widget.MenuPopupWindow { void onItemHoverEnter(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.widget.MenuPopupWindow { void setEnterTransition(android.transition.Transition); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { boolean storeDirectly(int); }
-keepclassmembers class org.javia.arity.Complex { org.javia.arity.Complex tanh(); }
-keepclassmembers class android.widget.MenuPopupWindow { void onItemHoverExit(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { java.lang.Object putIfCleared(java.lang.Object[],int,java.lang.Object,int); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { int makeKey(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean didChildRangeChange(int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { void <init>(int); }
-keepclassmembers class android.view.animation.BounceInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { int findSimple(int); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep1(); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { java.lang.Object get(int); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchContentChangedIfNecessary(); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class android.icu.text.Collator { boolean getYesOrNo(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { int computeFields(int,int); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.text.Collator { int getIntValue(java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawables(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { java.lang.Object putIfAbsent(int,java.lang.Object,int); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(); }
-keepclassmembers class android.icu.text.Collator { int getReorderCode(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.Collator { void setAttributesFromKeywords(android.icu.util.ULocale,android.icu.text.Collator,android.icu.text.RuleBasedCollator); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder { java.nio.file.spi.FileSystemProvider getDefaultProvider(); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class android.icu.text.Collator { android.icu.text.Collator$ServiceShim getShim(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { java.lang.Object access$2000(java.lang.Object[],int,java.lang.Object,int); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class java.util.BitSet { void <clinit>(); }
-keepclassmembers class java.lang.ref.Reference { void clear(); }
-keepclassmembers class java.lang.ref.Reference { void clearReferent(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl { void <init>(); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$10 { void onAnimationFinished(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { boolean access$2100(int); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLuBase { void <init>(org.ejml.alg.dense.decomposition.lu.LUDecompositionBase); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder { java.nio.file.FileSystem defaultFileSystem(); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLuBase { void improveSol(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.os.Process { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void applyCompoundDrawableTint(); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder { java.nio.file.spi.FileSystemProvider access$000(); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$11 { void <init>(com.xlythe.calculator.material.BasicCalculator,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$11 { void onAnimationFinished(); }
-keepclassmembers class android.widget.TextView { void setPadding(int,int,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ResourceCache { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintInfo { void <init>(); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(int); }
-keepclassmembers class android.support.v7.widget.TintInfo { void clear(); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLuBase { void invert(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep2(); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { void <init>(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { void <init>(sun.security.util.DerValue); }
-keepclassmembers class org.ejml.EjmlParameters { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextLocale(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep3(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLuBase { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLuBase { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class android.icu.text.Collator { android.icu.text.Collator getInstance(android.icu.util.ULocale); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class android.widget.TextView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.TextView { float getTextSize(); }
-keepclassmembers class android.icu.text.Collator { android.icu.text.Collator getInstance(java.util.Locale); }
-keepclassmembers class android.widget.TextView { int getTypefaceStyle(); }
-keepclassmembers class android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet { void <init>(); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet { void start(android.view.DisplayListCanvas); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet { void add(android.view.RenderNodeAnimator); }
-keepclassmembers class android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet { void end(); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouch(android.view.MotionEvent); }
-keepclassmembers class java.util.ResourceBundle$LoaderReference { void <init>(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { boolean isClipPath(); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { void derEncode(java.io.OutputStream); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$2 { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,boolean,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$2 { android.icu.impl.ResourceBundleWrapper load(); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet { boolean isRunning(); }
-keepclassmembers class android.widget.TextView { android.content.res.ColorStateList getTextColors(); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BinaryProperty { void <init>(android.icu.impl.UCharacterProperty,int,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BinaryProperty { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class android.widget.TextView { int getCurrentTextColor(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BinaryProperty { int getSource(); }
-keepclassmembers class com.android.i18n.phonenumbers.MultiFileMetadataSourceImpl { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouchIntercept(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BinaryProperty { boolean contains(int); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void findMinMaxChildLayoutPositions(int[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.GregorianCalendar { int getWeekNumber(long,long); }
-keepclassmembers class android.widget.PopupWindow$3 { void <init>(android.widget.PopupWindow,android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View); }
-keepclassmembers class android.icu.text.Collator { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getDeepestFocusedViewWithId(android.view.View); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class sun.security.x509.UniqueIdentity { void <init>(sun.security.util.DerValue); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { java.lang.Object getValue(); }
-keepclassmembers class sun.security.x509.UniqueIdentity { java.lang.String toString(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class sun.security.x509.UniqueIdentity { void encode(sun.security.util.DerOutputStream,byte); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,java.util.function.Predicate,android.view.View); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { boolean shouldInvalidateEntry(java.lang.Object,int); }
-keepclassmembers class sun.security.util.PropertyExpander$ExpandException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { sun.security.util.ObjectIdentifier getOID(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class sun.net.www.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { float getScrollFactor(); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { java.lang.String getName(); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { boolean shouldInvalidateEntry(android.content.res.ConstantState,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper(); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class sun.net.www.URLConnection { void setProperties(sun.net.www.MessageHeader); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { java.lang.String toString(); }
-keepclassmembers class java.util.GregorianCalendar { long adjustForZoneAndDaylightSavingsTime(int,long,java.util.TimeZone); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { int indexOf(java.lang.Object,java.lang.Object[],int); }
-keepclassmembers class java.lang.Integer$IntegerCache { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { void throwSingleValuedException(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$KeyData { void <init>(java.lang.String,java.lang.String,java.util.Map,java.util.EnumSet); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean hasUpdatedView(); }
-keepclassmembers class java.util.GregorianCalendar { int adjustDstOffsetForInvalidWallClock(long,java.util.TimeZone,int); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { void throwTagException(java.lang.Byte); }
-keepclassmembers class android.widget.RelativeLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class android.widget.ListView { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocus(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class android.widget.RelativeLayout { void requestLayout(); }
-keepclassmembers class java.util.GregorianCalendar { long getFixedDate(sun.util.calendar.BaseCalendar,int,int); }
-keepclassmembers class sun.security.util.PropertyExpander { java.lang.String expand(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { void sortChildren(); }
-keepclassmembers class sun.security.util.PropertyExpander { java.lang.String expand(java.lang.String,boolean); }
-keepclassmembers class sun.security.pkcs.PKCS9Attribute { void <clinit>(); }
-keepclassmembers class android.icu.impl.Trie2 { void <init>(); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.RelativeLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2 { android.icu.impl.Trie2 createFromSerialized(java.nio.ByteBuffer); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.ListView { void wrapHeaderListAdapterInternal(); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout { int getBaseline(); }
-keepclassmembers class sun.net.www.URLConnection { void <clinit>(); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class android.content.UndoOwner { void <init>(java.lang.String,android.content.UndoManager); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class android.content.UndoOwner { java.lang.String toString(); }
-keepclassmembers class java.util.GregorianCalendar { java.util.GregorianCalendar getNormalizedCalendar(); }
-keepclassmembers class java.util.GregorianCalendar { sun.util.calendar.BaseCalendar getJulianCalendarSystem(); }
-keepclassmembers class java.util.GregorianCalendar { boolean isCutoverYear(int); }
-keepclassmembers class java.util.GregorianCalendar { sun.util.calendar.BaseCalendar getCutoverCalendarSystem(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { boolean getFreezesText(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class android.content.UndoOwner { java.lang.Object getData(); }
-keepclassmembers class java.util.GregorianCalendar { long getFixedDateJan1(sun.util.calendar.BaseCalendar$Date,long); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink$AliasType { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink$AliasType { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class com.android.internal.util.Preconditions { void checkArgument(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class java.util.GregorianCalendar { sun.util.calendar.BaseCalendar$Date getCalendarDate(long); }
-keepclassmembers class android.widget.ListView { android.widget.HeaderViewListAdapter wrapHeaderListAdapterInternal(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class com.android.internal.util.Preconditions { java.lang.Object checkNotNull(java.lang.Object); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(int,int,java.util.Locale); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class java.util.GregorianCalendar { sun.util.calendar.BaseCalendar$Date getGregorianCutoverDate(); }
-keepclassmembers class com.android.internal.util.Preconditions { void checkState(boolean,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onPointerUp(android.view.MotionEvent); }
-keepclassmembers class java.util.GregorianCalendar { sun.util.calendar.BaseCalendar$Date getLastJulianDate(); }
-keepclassmembers class java.util.GregorianCalendar { int monthLength(int); }
-keepclassmembers class com.android.internal.util.Preconditions { void checkState(boolean); }
-keepclassmembers class java.util.GregorianCalendar { int monthLength(int,int); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean predictiveItemAnimationsEnabled(); }
-keepclassmembers class java.util.GregorianCalendar { int actualMonthLength(); }
-keepclassmembers class java.text.SimpleDateFormat { void initialize(java.util.Locale); }
-keepclassmembers class android.icu.impl.Trie2 { java.util.Iterator iterator(); }
-keepclassmembers class android.icu.impl.Trie2 { java.util.Iterator iterator(android.icu.impl.Trie2$ValueMapper); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void processAdapterUpdatesAndSetAnimationFlags(); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void initializeCalendar(java.util.Locale); }
-keepclassmembers class java.util.GregorianCalendar { void pinDayOfMonth(); }
-keepclassmembers class java.util.GregorianCalendar { long getCurrentFixedDate(); }
-keepclassmembers class java.util.GregorianCalendar { int internalGetEra(); }
-keepclassmembers class android.icu.impl.Trie2 { int rangeEnd(int,int,int); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.text.SimpleDateFormat { char[] compile(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void pullGlows(float,float,float,float); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { int peek(); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { int read(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$22 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterProperty$22 { int getValue(int); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recoverFocusFromState(); }
-keepclassmembers class java.util.GregorianCalendar { long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { void readFully(byte[],int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void encode(int,int,java.lang.StringBuilder); }
-keepclassmembers class android.widget.AbsListView { boolean checkInputConnectionProxy(android.view.View); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class android.widget.TextView { void setText(int); }
-keepclassmembers class android.icu.impl.Trie2 { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout { int compareLayoutPosition(android.widget.RelativeLayout$LayoutParams,android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { void close(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IsAcceptable { void <init>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$7 { void onAnimationFinished(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IsAcceptable { void <init>(android.icu.impl.UCharacterProperty$1); }
-keepclassmembers class java.io.ObjectInputStream$PeekInputStream { int available(); }
-keepclassmembers class android.widget.TextView { void setInputType(int); }
-keepclassmembers class java.text.SimpleDateFormat { void parseAmbiguousDatesAsAfter(java.util.Date); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$GraphExpansionAnimator { void onUpdate(float); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class java.text.SimpleDateFormat { void initializeDefaultCentury(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class android.widget.RelativeLayout { void measureChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.Format$FieldDelegate); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.widget.TextView { boolean isPasswordInputType(int); }
-keepclassmembers class android.widget.TextView { boolean isVisiblePasswordInputType(int); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class android.widget.RelativeLayout { void measureChild(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void releaseGlows(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void <init>(android.widget.Editor,boolean); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { boolean isASCIISuperset(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { int getChildMeasureSpec(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class java.text.SimpleDateFormat { void subFormat(int,int,java.text.Format$FieldDelegate,java.lang.StringBuffer,boolean); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { boolean onCreateActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetFocusInfo(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetTouch(); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveFocusInfo(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class java.text.SimpleDateFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { android.view.ActionMode$Callback getCustomCallback(); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class android.text.method.WordIterator { void <init>(); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,java.util.List,int,boolean); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void populateMenuWithItems(android.view.Menu); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void getTransferSize(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { java.lang.Object getKey(); }
-keepclassmembers class android.text.method.WordIterator { boolean isBoundary(int); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { java.lang.Object getValue(); }
-keepclassmembers class android.text.method.WordIterator { int nextBoundary(int); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void getTransferName(); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { int hashCode(); }
-keepclassmembers class android.text.method.WordIterator { int prevBoundary(int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { boolean equals(java.lang.Object); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { int readServerResponse(); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class android.text.method.WordIterator { int getPrevWordBeginningOnTwoWordsBoundary(int); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void <init>(android.icu.util.ULocale); }
-keepclassmembers class android.text.method.WordIterator { int getNextWordEndOnTwoWordBoundary(int); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int,boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScrollersInternal(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void updateSelectAllItem(android.view.Menu); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setZeroDigit(char); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int,boolean); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void updateReplaceItem(android.view.Menu); }
-keepclassmembers class sun.security.x509.GeneralNames { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String[] getDigitStrings(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class android.text.method.WordIterator { int getPunctuationBeginning(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String[] getDigitStringsLocal(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setDigitStrings(java.lang.String[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterPunctuation(int); }
-keepclassmembers class android.text.method.WordIterator { int getPunctuationEnd(int); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class sun.security.x509.GeneralNames { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnPunctuation(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void sendServer(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class sun.security.x509.GeneralNames { sun.security.x509.GeneralNames add(sun.security.x509.GeneralName); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class android.text.method.WordIterator { boolean isPunctuationStartBoundary(int); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class android.text.method.WordIterator { boolean isPunctuationEndBoundary(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.lang.String getResponseString(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setGroupingSeparator(char); }
-keepclassmembers class android.text.method.WordIterator { boolean isPunctuation(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { boolean readReply(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setGroupingSeparatorString(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getGroupingSeparatorString(); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void onDestroyActionMode(android.view.ActionMode); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setDecimalSeparator(char); }
-keepclassmembers class java.io.BufferedOutputStream { void flushBuffer(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { boolean issueCommand(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getDecimalSeparatorString(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setDecimalSeparatorString(java.lang.String); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class java.io.BufferedOutputStream { void write(int); }
-keepclassmembers class android.widget.Editor$TextActionModeCallback { void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { android.text.InputFilter[] getFilters(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class sun.security.x509.GeneralNames { java.lang.String toString(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultTracker { void <init>(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void issueCommandCheck(java.lang.String); }
-keepclassmembers class java.io.BufferedOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultTracker { void open(java.lang.Throwable); }
-keepclassmembers class android.widget.RelativeLayout { void applyHorizontalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int[]); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setPerMillString(java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultTracker { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultTracker { void close(java.lang.Throwable); }
-keepclassmembers class android.provider.Settings$System$8 { void <init>(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getPercent(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.net.Socket openPassiveDataConnection(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setPercent(char); }
-keepclassmembers class android.os.StrictMode$StrictModeUnbufferedIOViolation { void <init>(int); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class java.io.BufferedOutputStream { void flush(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getPerMillString(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getSignificantDigit(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setDigit(char); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setPatternSeparator(char); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setInfinity(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setPercentString(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setNaN(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getMinusSign(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setMinusSign(char); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { void <init>(sun.security.util.DerInputStream,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setMinusSignString(java.lang.String); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getPlusSign(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getPlusSignString(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setCurrencySymbol(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setPlusSignString(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setInternationalCurrencySymbol(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void clearOldPositions(); }
-keepclassmembers class android.widget.RelativeLayout { void applyVerticalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { android.icu.util.Currency getCurrency(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String formatWeekday(int,int,boolean,boolean); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setCurrency(android.icu.util.Currency); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { byte[] decode(sun.security.util.DerInputStream); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setMonetaryDecimalSeparator(char); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getMonetaryDecimalSeparatorString(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getDateFormat(int); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getTimeFormat(int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String formatMonth(int,int,int,java.lang.StringBuffer,boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getMonetaryGroupingSeparatorString(); }
-keepclassmembers class android.widget.AbsListView { int access$600(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setMonetaryGroupingSeparatorString(java.lang.String); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollRange(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.net.Socket openDataConnection(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setExponentMultiplicationSign(java.lang.String); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { void encode(byte,java.io.OutputStream); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { char getPadEscape(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { byte[] generateDerEncoding(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1502(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class android.widget.AbsListView { boolean access$1600(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setExponentSeparator(java.lang.String); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { byte[] getDerEncoding(); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class java.text.SimpleDateFormat { void zeroPaddingNumber(int,int,int,java.lang.StringBuffer); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { sun.security.pkcs.PKCS9Attribute getAttribute(sun.security.util.ObjectIdentifier); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setMonetaryDecimalSeparatorString(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$2200(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$2202(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class android.widget.RelativeLayout { android.view.View getRelatedView(int[],int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { android.icu.util.ULocale getULocale(); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.widget.AbsListView { int access$2300(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void considerReleasingGlowsOnScroll(int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class java.text.AttributedString$AttributeMap { void <init>(java.text.AttributedString,int,int,int); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { java.lang.Object getAttributeValue(sun.security.util.ObjectIdentifier); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.util.Locale getLocale(); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class java.text.AttributedString$AttributeMap { java.util.Set entrySet(); }
-keepclassmembers class android.widget.RelativeLayout { int getRelatedViewBaselineOffset(int[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void consumePendingUpdateOperations(); }
-keepclassmembers class android.widget.RelativeLayout { android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int); }
-keepclassmembers class android.widget.RelativeLayout { void centerHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class sun.security.pkcs.PKCS9Attributes { sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[]); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.io.InputStream createInputStream(java.io.InputStream); }
-keepclassmembers class android.widget.RelativeLayout { void centerVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.icu.util.TimeUnit { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.security.PrivilegedActionException { java.lang.Exception getException(); }
-keepclassmembers class java.security.PrivilegedActionException { java.lang.Throwable getCause(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void initialize(android.icu.util.ULocale); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int access$2400(android.widget.AbsListView); }
-keepclassmembers class java.security.PrivilegedActionException { java.lang.String toString(); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { android.webkit.WebViewProviderResponse waitForAndGetProvider(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void defaultOnMeasure(int,int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void access$2900(android.widget.AbsListView); }
-keepclassmembers class java.text.AttributedString$AttributeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient create(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText access$4100(android.widget.AbsListView); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient setConnectTimeout(int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4400(android.widget.AbsListView); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient setReadTimeout(int); }
-keepclassmembers class android.widget.RelativeLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient setProxy(java.net.Proxy); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection access$4200(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void access$4500(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.IdentityHashMap$KeySet { void <init>(java.util.IdentityHashMap); }
-keepclassmembers class android.text.SpannableStringBuilder { void clear(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void tryConnect(java.net.InetSocketAddress,int); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { android.icu.text.DecimalFormatSymbols$CacheData loadData(android.icu.util.ULocale); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.RelativeLayout { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.RelativeLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.WeakHashMap$EntryIterator { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchChildDetached(android.view.View); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.WeakHashMap$EntryIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class java.util.WeakHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.net.Socket doConnect(java.net.InetSocketAddress,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class java.util.WeakHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.icu.text.BreakIterator$BreakIteratorCache { void <init>(android.icu.util.ULocale,android.icu.text.BreakIterator); }
-keepclassmembers class java.util.RegularEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class android.icu.text.EscapeTransliterator$2 { void <init>(); }
-keepclassmembers class android.icu.text.BreakIterator$BreakIteratorCache { android.icu.util.ULocale getLocale(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.text.BreakIterator$BreakIteratorCache { android.icu.text.BreakIterator createBreakInstance(); }
-keepclassmembers class android.widget.RelativeLayout { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayout(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$2 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(android.view.View); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void disconnect(); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class java.util.RegularEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { boolean isConnected(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean removeSpansForChange(int,int,boolean,int); }
-keepclassmembers class android.widget.RelativeLayout { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class java.util.RegularEnumSet { int size(); }
-keepclassmembers class java.lang.Short$ShortCache { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class java.util.RegularEnumSet { boolean isEmpty(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$1 { void <init>(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class java.util.RegularEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient connect(java.net.SocketAddress); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient connect(java.net.SocketAddress,int); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class java.util.RegularEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$1 { boolean hasName(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class java.util.IdentityHashMap$KeySet { void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void initSpacingInfo(android.icu.impl.CurrencyData$CurrencySpacingInfo); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void tryLogin(java.lang.String,char[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$1 { void <clinit>(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider$1 { void <init>(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient login(java.lang.String,char[]); }
-keepclassmembers class java.util.RegularEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class sun.net.ftp.FtpClientProvider$1 { java.lang.Object run(); }
-keepclassmembers class android.icu.text.Transliterator { int transliterate(android.icu.text.Replaceable,int,int); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class android.icu.text.Transliterator { void transliterate(android.icu.text.Replaceable); }
-keepclassmembers class android.icu.text.Transliterator { void <init>(java.lang.String,android.icu.text.UnicodeFilter); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class android.icu.text.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrolled(int,int); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchPendingImportantForAccessibilityChanges(); }
-keepclassmembers class java.text.SimpleDateFormat { android.icu.text.TimeZoneNames getTimeZoneNames(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$1 { void onGlobalLayout(); }
-keepclassmembers class java.io.BufferedReader { void ensureOpen(); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class android.icu.text.Transliterator { void filteredTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean,boolean); }
-keepclassmembers class java.lang.ThreadLocal$ThreadLocalMap$Entry { void <init>(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class java.util.RegularEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.RegularEnumSet { long access$000(java.util.RegularEnumSet); }
-keepclassmembers class java.io.BufferedReader { void fill(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient changeDirectory(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$BlockInvalidateCallback { android.graphics.drawable.Drawable$Callback unwrap(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$BlockInvalidateCallback { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void setLocale(android.icu.util.ULocale,android.icu.util.ULocale); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void close(); }
-keepclassmembers class java.util.RegularEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class android.transition.Slide$4 { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { java.lang.String[] access$000(); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class sun.security.util.SecurityConstants { void <clinit>(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void onMeasure(int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols { android.icu.text.DecimalFormatSymbols$CacheData access$100(android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.UppercaseTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCache { void <init>(); }
-keepclassmembers class android.icu.text.UppercaseTransliterator$1 { void <init>(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.io.InputStream getFileStream(java.lang.String); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$BlockInvalidateCallback { void <init>(android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class com.nineoldandroids.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCache { android.icu.impl.ICUResourceBundleReader createInstance(android.icu.impl.ICUResourceBundleReader$ReaderCacheKey,java.lang.ClassLoader); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCache { void <init>(android.icu.impl.ICUResourceBundleReader$1); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context); }
-keepclassmembers class android.icu.text.Transliterator { void filteredTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources); }
-keepclassmembers class android.icu.text.Transliterator { void setMaximumContextLength(int); }
-keepclassmembers class android.icu.text.Transliterator { java.lang.String getID(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$BlockInvalidateCallback { android.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class android.icu.text.Transliterator { void setID(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void eatRequestLayout(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureBottomGlow(); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class android.widget.TextView { android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int); }
-keepclassmembers class android.text.Hyphenator { void <init>(long,java.nio.ByteBuffer); }
-keepclassmembers class java.io.BufferedReader { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void <init>(); }
-keepclassmembers class android.text.Hyphenator { long getNativePtr(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCache { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.Hyphenator { android.text.Hyphenator get(java.util.Locale); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureLeftGlow(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStarted(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationCancel(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { boolean handleBackInTextActionModeIfNeeded(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient setType(sun.net.ftp.FtpClient$TransferType); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationEnd(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class android.icu.text.Transliterator { int getMaximumContextLength(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureRightGlow(); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.io.InputStream list(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationStart(); }
-keepclassmembers class android.icu.text.Transliterator { void setFilter(android.icu.text.UnicodeFilter); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { int getBaselineOffset(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupColorAnimator(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureTopGlow(); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationUpdate(); }
-keepclassmembers class android.icu.text.Transliterator { android.icu.text.Transliterator getInstance(java.lang.String,int); }
-keepclassmembers class android.icu.text.Transliterator { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpClient completePending(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getAlpha(); }
-keepclassmembers class android.icu.text.Transliterator { android.icu.text.UnicodeFilter getFilter(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub { com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class android.icu.text.Transliterator { android.icu.text.Transliterator getBasicInstance(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.io.InputStream nameList(java.lang.String); }
-keepclassmembers class android.transition.Slide$2 { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void cancel(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void end(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View findContainingItemView(android.view.View); }
-keepclassmembers class android.widget.Editor$SuggestionHelper { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.widget.Editor$SuggestionHelper { android.text.style.SuggestionSpan[] getSortedSuggestionSpans(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { float getAnimatedFraction(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean isInvalidParagraphStart(int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setDuration(long); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean isInvalidParagraphEnd(int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setFloatValues(float,float); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.text.SpannableStringBuilder { int resolveGap(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { sun.net.ftp.FtpReplyCode getLastReplyCode(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int addAndGet(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.lang.String getLastResponseString(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { long getLastTransferSize(); }
-keepclassmembers class android.widget.Editor$SuggestionHelper { int getSuggestionInfo(android.widget.Editor$SuggestionInfo[],android.widget.Editor$SuggestionSpanInfo); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void start(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionEvaluator { void <init>(com.xlythe.calculator.material.CalculatorExpressionTokenizer); }
-keepclassmembers class android.text.Hyphenator { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionEvaluator { void evaluate(java.lang.String,com.xlythe.calculator.material.CalculatorExpressionEvaluator$EvaluateCallback); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void update(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void startInternal(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void resetErrorChangedFlag(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorExpressionEvaluator { com.xlythe.math.Solver getSolver(); }
-keepclassmembers class android.widget.RemoteViews$OnClickHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.content.res.GradientColor { void <init>(); }
-keepclassmembers class javax.crypto.Cipher { void <init>(javax.crypto.CipherSpi,java.security.Provider,java.lang.String,java.lang.String[]); }
-keepclassmembers class java.util.LinkedList$Node { void <init>(java.util.LinkedList$Node,java.lang.Object,java.util.LinkedList$Node); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.text.SpannableStringBuilder { int countSpans(int,int,java.lang.Class,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class android.content.res.GradientColor { void <init>(android.content.res.GradientColor); }
-keepclassmembers class java.text.DontCareFieldPosition { void <init>(); }
-keepclassmembers class java.text.DontCareFieldPosition { java.text.Format$FieldDelegate getFieldDelegate(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.Editor$SuggestionHelper { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.text.DontCareFieldPosition { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class javax.crypto.Cipher { java.lang.String[] tokenizeTransformation(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class android.widget.Editor$SuggestionHelper { java.util.HashMap access$2000(android.widget.Editor$SuggestionHelper); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpansRec(int,int,java.lang.Class,int,java.lang.Object[],int[],int[],int,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class android.icu.text.Transliterator { void registerClass(java.lang.String,java.lang.Class,java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$17 { void <init>(android.icu.impl.UCharacterProperty); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.net.Socket access$700(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$17 { int getValue(int); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.icu.text.Transliterator { void registerFactory(java.lang.String,android.icu.text.Transliterator$Factory); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class android.icu.text.Transliterator { void registerInstance(android.icu.text.Transliterator,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean fling(int,int); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient { java.net.Proxy access$600(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean); }
-keepclassmembers class android.content.res.GradientColor { void updateRootElementState(android.content.res.TypedArray); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.icu.text.Transliterator { void registerSpecialInverse(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.icu.text.Transliterator { java.util.Enumeration getAvailableSources(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onLevelChange(int); }
-keepclassmembers class android.content.res.GradientColor { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class android.icu.text.Transliterator { java.util.Enumeration getAvailableTargets(java.lang.String); }
-keepclassmembers class android.icu.text.Transliterator { java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.content.res.GradientColor { void validateXmlContent(); }
-keepclassmembers class android.icu.text.Transliterator { void <clinit>(); }
-keepclassmembers class android.icu.text.Transliterator { void registerInstance(android.icu.text.Transliterator); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class java.util.Hashtable$EntrySet { int size(); }
-keepclassmembers class android.content.res.GradientColor { android.graphics.Shader getShader(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float); }
-keepclassmembers class android.text.SpannableStringBuilder { int[] checkSortBuffer(int[],int); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$2 { void <init>(java.lang.String); }
-keepclassmembers class java.nio.channels.AsynchronousCloseException { void <init>(); }
-keepclassmembers class android.content.res.GradientColor { android.content.res.GradientColor createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void sort(java.lang.Object[],int[],int[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher createCipher(java.lang.String,java.security.Provider); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class android.widget.TextView { boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean isValid(char); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean isValid(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void siftDown(int,java.lang.Object[],int,int[],int[]); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean isAlpha(char); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.content.res.GradientColor { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean isDigit(char); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.res.GradientColor { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class javax.crypto.Cipher { void updateProviderIfNeeded(); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { int compareSpans(int,int,int[],int[]); }
-keepclassmembers class javax.crypto.Cipher { void chooseProvider(javax.crypto.Cipher$InitType,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransitionRec(int,int,java.lang.Class,int); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.TextView { void setExtracting(android.view.inputmethod.ExtractedTextRequest); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$CaseBinaryProperty { boolean contains(int); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class java.util.zip.ZipFile$ZipEntryIterator { void <init>(java.util.zip.ZipFile); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class android.view.RenderNode { void discardDisplayList(); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$CalculatorState { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$ZipEntryIterator { boolean hasNext(); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class java.util.zip.ZipFile$ZipEntryIterator { boolean hasMoreElements(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$CaseBinaryProperty { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$CalculatorState { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextWatcherDepth(); }
-keepclassmembers class android.icu.text.UnicodeFilter { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$Adapter getAdapter(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.view.RenderNode { boolean setClipToOutline(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.view.RenderNode { boolean getClipToOutline(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getBaseline(); }
-keepclassmembers class android.content.res.GradientColor { void applyItemsAttrsTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class sun.util.calendar.CalendarUtils { boolean isGregorianLeapYear(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class javax.crypto.Cipher { void checkOpmode(int); }
-keepclassmembers class sun.util.calendar.CalendarUtils { boolean isJulianLeapYear(int); }
-keepclassmembers class android.icu.text.Normalizer$NFDMode { android.icu.text.Normalizer2 getNormalizer2(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.icu.text.Normalizer$NFDMode { void <init>(); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class sun.util.calendar.CalendarUtils { long floorDivide(long,long); }
-keepclassmembers class android.icu.text.Normalizer$NFDMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getChildDrawingOrder(int,int); }
-keepclassmembers class sun.util.calendar.CalendarUtils { int floorDivide(int,int,int[]); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key); }
-keepclassmembers class sun.util.calendar.CalendarUtils { int floorDivide(int,int); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String getCalendarName(); }
-keepclassmembers class java.text.SimpleDateFormat { boolean useDateFormatSymbols(); }
-keepclassmembers class javax.crypto.Cipher { void init(int,java.security.Key,java.security.SecureRandom); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.icu.text.UnicodeFilter { int matches(android.icu.text.Replaceable,int[],int,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { boolean isGregorianCalendar(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class java.util.JumboEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class sun.util.calendar.CalendarUtils { int mod(int,int); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class android.content.res.GradientColor { void onColorsChange(); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class sun.util.calendar.CalendarUtils { long mod(long,long); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class sun.util.calendar.CalendarUtils { java.lang.StringBuilder sprintf0d(java.lang.StringBuilder,int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class sun.util.calendar.CalendarUtils { java.lang.StringBuffer sprintf0d(java.lang.StringBuffer,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.graphics.Rect getItemDecorInsetsForChild(android.view.View); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class android.content.res.GradientColor { int getDefaultColor(); }
-keepclassmembers class java.util.JumboEnumSet { boolean isEmpty(); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class android.content.res.GradientColor { android.content.res.ConstantState getConstantState(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class java.util.JumboEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class android.content.res.GradientColor { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { void <init>(); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class java.util.JumboEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.JumboEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class android.content.res.GradientColor { void applyRootAttrsTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.JumboEnumSet { int size(); }
-keepclassmembers class android.content.res.GradientColor { android.content.res.GradientColor obtainForTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.GradientColor { boolean canApplyTheme(); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager(); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayList(long,long); }
-keepclassmembers class android.content.res.GradientColor { int getChangingConfigurations(); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.icu.text.NumberingSystem$1 { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class android.icu.text.NumberingSystem$1 { android.icu.text.NumberingSystem createInstance(java.lang.String,android.icu.text.NumberingSystem$LocaleLookupData); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class java.util.JumboEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.content.res.GradientColor { android.content.res.ComplexColor obtainForTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToOutline(long,boolean); }
-keepclassmembers class android.icu.text.NumberingSystem$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void invalidateGlows(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$3 { void <init>(com.xlythe.calculator.material.PanelSwitchingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$3 { void onAnimationFinished(); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class java.nio.charset.Charset { void checkName(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { boolean atBugLevel(java.lang.String); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.view.RenderNode { boolean nGetClipToOutline(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAttachedToWindow(); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAccessibilityEnabled(); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isComputingLayout(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class javax.crypto.Cipher { void checkCipherState(); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifestFromReference(); }
-keepclassmembers class java.nio.charset.Charset { void cache(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class android.icu.text.UnicodeSet$ScriptExtensionsFilter { void <init>(int); }
-keepclassmembers class android.view.RenderNode { void nRequestPositionUpdates(long,android.view.SurfaceView); }
-keepclassmembers class java.util.jar.JarFile { java.lang.String[] getMetaInfEntryNames(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markItemDecorInsetsDirty(); }
-keepclassmembers class android.view.View$1 { boolean test(android.view.View); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,int); }
-keepclassmembers class sun.security.timestamp.TimestampToken { void <init>(byte[]); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class android.icu.text.UnicodeSet$ScriptExtensionsFilter { boolean contains(int); }
-keepclassmembers class java.lang.reflect.Proxy$ProxyClassFactory { void <init>(); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.view.View$1 { boolean test(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { java.util.Iterator providers(); }
-keepclassmembers class sun.security.timestamp.TimestampToken { sun.security.x509.AlgorithmId getHashAlgorithm(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset lookupViaProviders(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { int leftChild(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markKnownViewsInvalid(); }
-keepclassmembers class android.text.SpannableStringBuilder { int treeRoot(); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class sun.security.timestamp.TimestampToken { java.util.Date getDate(); }
-keepclassmembers class java.lang.reflect.Proxy$ProxyClassFactory { java.lang.Class apply(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class android.text.SpannableStringBuilder { int rightChild(int); }
-keepclassmembers class sun.security.timestamp.TimestampToken { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class android.text.SpannableStringBuilder { int calcMax(int); }
-keepclassmembers class sun.security.timestamp.TimestampToken { byte[] getHashedMessage(); }
-keepclassmembers class javax.crypto.Cipher { byte[] update(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetChildrenHorizontal(int); }
-keepclassmembers class java.util.jar.JarFile { void maybeInstantiateVerifier(); }
-keepclassmembers class sun.security.timestamp.TimestampToken { void parse(byte[]); }
-keepclassmembers class android.icu.text.DecimalFormat { void <init>(java.lang.String,android.icu.text.DecimalFormatSymbols); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetChildrenVertical(int); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset lookup(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset lookup2(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class java.util.jar.JarFile { void initializeVerifier(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class java.util.JumboEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.JumboEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile { byte[] getBytes(java.util.zip.ZipEntry); }
-keepclassmembers class android.text.SpannableStringBuilder { void restoreInvariants(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class java.util.JumboEnumSet { long[] access$000(java.util.JumboEnumSet); }
-keepclassmembers class android.text.SpannableStringBuilder { void invalidateIndex(int); }
-keepclassmembers class android.icu.text.DecimalFormat { void createFromPatternAndSymbols(java.lang.String,android.icu.text.DecimalFormatSymbols); }
-keepclassmembers class android.content.BroadcastReceiver { void <init>(); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.IBinder peekService(android.content.Context,android.content.Intent); }
-keepclassmembers class java.lang.reflect.Proxy$ProxyClassFactory { java.lang.Object apply(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.lang.reflect.Proxy$ProxyClassFactory { void <init>(java.lang.reflect.Proxy$1); }
-keepclassmembers class java.lang.reflect.Proxy$ProxyClassFactory { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getManEntry(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult goAsync(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultCode(int); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class android.content.BroadcastReceiver { int getResultCode(); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultData(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class android.content.BroadcastReceiver { java.lang.String getResultData(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onAttachedToWindow(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.Bundle getResultExtras(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class java.nio.charset.Charset { boolean isSupported(java.lang.String); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { void <init>(java.lang.String,java.net.InetAddress,int); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getAbortBroadcast(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildAttachedToWindow(android.view.View); }
-keepclassmembers class java.nio.charset.Charset { java.util.Iterator access$000(); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class javax.crypto.Cipher { byte[] doFinal(byte[]); }
-keepclassmembers class java.util.jar.JarFile { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { void clearAbortBroadcast(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildDetachedFromWindow(android.view.View); }
-keepclassmembers class android.content.BroadcastReceiver { void abortBroadcast(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { java.net.InetAddress getAddress(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { int getPort(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { java.lang.String getHostName(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isOrderedBroadcast(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.BroadcastReceiver { void setOrderedHint(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultExtras(android.os.Bundle); }
-keepclassmembers class android.content.BroadcastReceiver { void setResult(int,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration access$001(java.util.jar.JarFile); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { boolean isUnresolved(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isInitialStickyBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { void setPendingResult(android.content.BroadcastReceiver$PendingResult); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDetachedFromWindow(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { java.lang.String toString(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onEnterLayoutOrScroll(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult getPendingResult(); }
-keepclassmembers class android.transition.Slide { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.content.BroadcastReceiver { int getSendingUserId(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onExitLayoutOrScroll(); }
-keepclassmembers class android.content.BroadcastReceiver { void setDebugUnregister(boolean); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class android.icu.text.DecimalFormat { boolean isNegative(double); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.transition.Slide { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.icu.text.DecimalFormat { double round(double); }
-keepclassmembers class android.transition.Slide { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean); }
-keepclassmembers class android.transition.Slide { void setSlideEdge(int); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class android.icu.text.DecimalFormat { double multiply(double); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class java.nio.DirectByteBuffer { void <init>(int,long,java.io.FileDescriptor,java.lang.Runnable,boolean); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { void <init>(java.lang.String,java.net.InetAddress,int,java.net.InetSocketAddress$1); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { int access$400(java.net.InetSocketAddress$InetSocketAddressHolder); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { java.net.InetAddress access$500(java.net.InetSocketAddress$InetSocketAddressHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getDebugUnregister(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { java.lang.String access$600(java.net.InetSocketAddress$InetSocketAddressHolder); }
-keepclassmembers class java.net.InetSocketAddress$InetSocketAddressHolder { boolean access$800(java.net.InetSocketAddress$InetSocketAddressHolder); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { boolean isOpen(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void begin(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfoDB$TzData loadTzDataWithFallback(java.lang.String[]); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void end(boolean); }
-keepclassmembers class android.transition.Slide { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void blockedOn(sun.nio.ch.Interruptible); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { boolean access$100(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class java.nio.DirectByteBuffer { void <init>(java.nio.DirectByteBuffer$MemoryRef,int,int,int,int,int,boolean); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfoDB$TzData createFallback(); }
-keepclassmembers class android.transition.Slide { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { boolean access$102(java.nio.channels.spi.AbstractInterruptibleChannel,boolean); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { java.lang.Object access$000(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { java.lang.Thread access$202(java.nio.channels.spi.AbstractInterruptibleChannel,java.lang.Thread); }
-keepclassmembers class java.nio.HeapByteBuffer { void <init>(int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.BufferIterator getBufferIterator(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void populateFallback(); }
-keepclassmembers class java.nio.HeapByteBuffer { void <init>(byte[],int,int); }
-keepclassmembers class java.nio.HeapByteBuffer { void <init>(byte[],int,int,boolean); }
-keepclassmembers class java.nio.HeapByteBuffer { void <init>(byte[],int,int,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer duplicate(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer slice(); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer duplicate(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer asReadOnlyBuffer(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { int getViewLayoutPosition(); }
-keepclassmembers class java.util.HashMap { int hash(java.lang.Object); }
-keepclassmembers class javax.crypto.Cipher { boolean matchAttribute(java.security.Provider$Service,java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer slice(); }
-keepclassmembers class java.nio.HeapByteBuffer { int ix(int); }
-keepclassmembers class java.nio.HeapByteBuffer { byte get(int); }
-keepclassmembers class java.util.HashMap { java.lang.Class comparableClassFor(java.lang.Object); }
-keepclassmembers class java.nio.HeapByteBuffer { byte get(); }
-keepclassmembers class android.icu.text.DecimalFormat { double round(double,double,double,int,boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { byte get(long); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class java.nio.DirectByteBuffer { byte get(); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher$CipherSpiAndProvider tryCombinations(javax.crypto.Cipher$InitParams,java.security.Provider,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class java.nio.DirectByteBuffer { byte get(int); }
-keepclassmembers class java.nio.HeapByteBuffer { boolean isDirect(); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer put(byte); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void validateOffset(int,int); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { boolean isItemRemoved(); }
-keepclassmembers class java.util.HashMap { int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.HashMap { int tableSizeFor(int); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntryIterator { java.lang.Object next(); }
-keepclassmembers class java.nio.HeapByteBuffer { byte _get(int); }
-keepclassmembers class java.nio.DirectByteBuffer { long ix(int); }
-keepclassmembers class org.ejml.factory.SingularMatrixException { void <init>(); }
-keepclassmembers class java.nio.HeapByteBuffer { char getChar(int); }
-keepclassmembers class java.nio.HeapByteBuffer { void <init>(int,int,boolean); }
-keepclassmembers class java.nio.HeapByteBuffer { char getChar(); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.HashMap { void <init>(java.util.Map); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class java.util.HashMap { void putMapEntries(java.util.Map,boolean); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine { void removeContent(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition,boolean); }
-keepclassmembers class java.nio.HeapByteBuffer { void getUnchecked(int,char[],int,int); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine { void copyContent(java.lang.String); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class java.nio.HeapByteBuffer { char getCharUnchecked(int); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$Node getNode(int,java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class com.nineoldandroids.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class java.nio.DirectByteBuffer { boolean isDirect(); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.nio.DirectByteBuffer { char getChar(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZoneUncached(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onMeasure(int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.util.HashMap { java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition,boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { char getChar(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void close(); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.Cipher$CipherSpiAndProvider tryTransformWithProvider(javax.crypto.Cipher$InitParams,java.lang.String[],javax.crypto.Cipher$NeedToSet,java.security.Provider$Service); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.CharBuffer asCharBuffer(); }
-keepclassmembers class java.nio.DirectByteBuffer { char getCharUnchecked(int); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class com.xlythe.calculator.material.view.HistoryLine { boolean onTextContextMenuItem(java.lang.CharSequence); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void checkNotClosed(); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrollStateChanged(int); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrolled(int,int); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$Node[] resize(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class javax.crypto.Cipher { javax.crypto.CipherSpi access$002(javax.crypto.Cipher,javax.crypto.CipherSpi); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class javax.crypto.Cipher { java.security.Provider access$102(javax.crypto.Cipher,java.security.Provider); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { void <init>(org.ejml.factory.QRPDecomposition,boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { void getUnchecked(int,char[],int,int); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.TextView { java.lang.String getSelectedText(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer format(android.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.CharBuffer asCharBuffer(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { boolean modifiesA(); }
-keepclassmembers class java.nio.HeapByteBuffer { int getInt(); }
-keepclassmembers class android.widget.TextView { void setSingleLine(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class java.nio.HeapByteBuffer { int getInt(int); }
-keepclassmembers class java.util.RegularEnumSet$EnumSetIterator { void <init>(java.util.RegularEnumSet); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class javax.crypto.Cipher { java.lang.String[] access$200(javax.crypto.Cipher); }
-keepclassmembers class java.util.HashMap { void treeifyBin(java.util.HashMap$Node[],int); }
-keepclassmembers class java.nio.HeapByteBuffer { void getUnchecked(int,int[],int,int); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { void solve(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.util.RegularEnumSet$EnumSetIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean); }
-keepclassmembers class java.util.RegularEnumSet$EnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class java.util.RegularEnumSet$EnumSetIterator { boolean hasNext(); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class android.icu.text.DecimalFormat { int precision(boolean); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer subformat(int,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean); }
-keepclassmembers class android.widget.PopupWindow$PopupBackgroundView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class android.widget.CheckedTextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.icu.text.DecimalFormat { android.icu.text.PluralRules$FixedDecimal getFixedDecimal(double); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.SolvePseudoInverseQrp { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class android.icu.text.DecimalFormat { android.icu.text.PluralRules$FixedDecimal getFixedDecimal(double,android.icu.text.DigitList); }
-keepclassmembers class java.nio.HeapByteBuffer { java.nio.IntBuffer asIntBuffer(); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class android.icu.text.DecimalFormat { boolean isGroupingPosition(int); }
-keepclassmembers class android.widget.TextView { void onSelectionChanged(int,int); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow$PopupBackgroundView { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class android.widget.CheckedTextView$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class java.util.HashMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class java.nio.DirectByteBuffer { int getInt(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer subformat(java.lang.String,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { int getInt(int); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.nio.DirectByteBuffer { int getInt(long); }
-keepclassmembers class android.util.IntArray { void <init>(); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class android.util.IntArray { void <init>(int); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer subformat(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean); }
-keepclassmembers class java.nio.DirectByteBuffer { void getUnchecked(int,int[],int,int); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class android.util.IntArray { void add(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void ensureCapacity(int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void ensureCapacityInternal(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int newCapacity(int); }
-keepclassmembers class android.icu.text.DecimalFormat { void subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { int hugeCapacity(int); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class java.nio.HeapByteBuffer { float getFloat(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class android.util.IntArray { void ensureCapacity(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int codePointAt(int); }
-keepclassmembers class android.util.IntArray { void clear(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int codePointBefore(int); }
-keepclassmembers class android.util.IntArray { int get(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int offsetByCodePoints(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void postAnimationRunner(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void multAdd_reorder(double,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class java.nio.DirectByteBuffer { java.nio.IntBuffer asIntBuffer(); }
-keepclassmembers class android.util.IntArray { int size(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.StringBuffer subformat(double,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$BinaryConstraint { void <init>(android.icu.text.PluralRules$Constraint,android.icu.text.PluralRules$Constraint); }
-keepclassmembers class java.io.ExpiringCache { void <init>(); }
-keepclassmembers class java.io.ExpiringCache { java.lang.String get(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(java.lang.AbstractStringBuilder); }
-keepclassmembers class java.io.ExpiringCache { void <init>(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class java.io.ExpiringCache { void put(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(java.lang.StringBuffer); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder appendNull(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class java.io.ExpiringCache { java.io.ExpiringCache$Entry entryFor(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void <init>(); }
-keepclassmembers class java.io.ExpiringCache { int access$000(java.io.ExpiringCache); }
-keepclassmembers class java.io.ExpiringCache { void clear(); }
-keepclassmembers class java.io.ExpiringCache { void cleanup(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class android.util.IntArray { void add(int,int); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { java.lang.Object getKey(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(char[]); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { java.lang.Object getValue(); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void repositionShadowingViews(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(char[],int,int); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(boolean); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { java.lang.String toString(); }
-keepclassmembers class android.icu.text.DecimalFormat { void subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(char); }
-keepclassmembers class java.io.ExpiringCache$Entry { long timestamp(); }
-keepclassmembers class java.io.ExpiringCache$Entry { void <init>(long,java.lang.String); }
-keepclassmembers class java.io.ExpiringCache$Entry { void setTimestamp(long); }
-keepclassmembers class java.io.ExpiringCache$Entry { java.lang.String val(); }
-keepclassmembers class java.io.ExpiringCache$Entry { void setVal(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(long); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder append(double); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder delete(int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.AbstractMap$SimpleEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class android.widget.TextView { boolean showContextMenu(); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class android.widget.TextView { boolean showContextMenu(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class java.util.AbstractMap$1$1 { void <init>(java.util.AbstractMap$1); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class java.util.AbstractMap$1$1 { boolean hasNext(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder deleteCharAt(int); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder appendCodePoint(int); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class java.util.AbstractMap$1$1 { java.lang.Object next(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestLayout(); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resumeRequestLayout(boolean); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void multAdd_small(double,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveOldPositions(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void scrollBy(int,int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder insert(int,char[],int,int); }
-keepclassmembers class java.util.HashMap { void reinitialize(); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class java.util.HashMap { void afterNodeRemoval(java.util.HashMap$Node); }
-keepclassmembers class java.util.HashMap { void afterNodeInsertion(boolean); }
-keepclassmembers class java.util.HashMap { void afterNodeAccess(java.util.HashMap$Node); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean scrollByInternal(int,int,android.view.MotionEvent); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { boolean modifiesA(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder insert(int,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { boolean modifiesB(); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.icu.text.TransliteratorParser { void parse(java.lang.String,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder insert(int,char[]); }
-keepclassmembers class android.icu.text.TransliteratorParser { void parseRules(android.icu.text.TransliteratorParser$RuleBody,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { void setMaxSize(int,int); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { void solve(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class android.widget.TextView { boolean isInExtractedMode(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class android.icu.text.TransliteratorParser { void <init>(); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Vector { void copyInto(java.lang.Object[]); }
-keepclassmembers class android.widget.TextView { void onProvideStructure(android.view.ViewStructure); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class java.util.Vector { void <init>(int); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.AbstractStringBuilder insert(int,char); }
-keepclassmembers class java.util.Vector { void grow(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void scrollTo(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void scrollToPosition(int); }
-keepclassmembers class java.util.Vector { int hugeCapacity(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Vector { void setSize(int); }
-keepclassmembers class android.icu.text.DecimalFormat { void addPadding(java.lang.StringBuffer,java.text.FieldPosition,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setAdapter(android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class java.nio.DirectByteBuffer { void <clinit>(); }
-keepclassmembers class java.util.Vector { int size(); }
-keepclassmembers class java.util.Vector { boolean isEmpty(); }
-keepclassmembers class java.util.Vector { int indexOf(java.lang.Object); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Vector { int indexOf(java.lang.Object,int); }
-keepclassmembers class com.xlythe.math.BaseModule$1 { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager$7 { void <init>(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager$7 { java.lang.Object run(); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.Vector { void <init>(java.util.Collection); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Vector { java.lang.Object elementAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setLayoutFrozen(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { java.lang.String getLanguage(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { android.icu.impl.locale.BaseLocale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { java.lang.String getScript(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { java.lang.String getRegion(); }
-keepclassmembers class java.util.Map { boolean remove(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { java.lang.String getVariant(); }
-keepclassmembers class java.util.Vector { void removeElementAt(int); }
-keepclassmembers class java.io.BufferedWriter { void <init>(java.io.Writer); }
-keepclassmembers class java.io.BufferedWriter { void <init>(java.io.Writer,int); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEventInternal(int); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class android.icu.text.TransliteratorParser { int parseRule(java.lang.String,int,int); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class java.io.BufferedWriter { void flushBuffer(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.icu.impl.locale.BaseLocale$1); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class java.util.Vector { void ensureCapacityHelper(int); }
-keepclassmembers class java.io.BufferedWriter { void ensureOpen(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setScrollState(int); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class java.io.BufferedWriter { int min(int,int); }
-keepclassmembers class android.support.v4.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class java.util.Vector { java.lang.Object[] toArray(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { void <init>(java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class java.io.BufferedWriter { void write(java.lang.String,int,int); }
-keepclassmembers class java.util.Vector { java.lang.Object elementData(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { void normalize(java.lang.CharSequence,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class java.util.Vector { java.lang.Object get(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void smoothScrollBy(int,int); }
-keepclassmembers class java.util.Vector { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.util.Vector { void removeAllElements(); }
-keepclassmembers class java.util.Vector { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void stopTextActionMode(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { void normalizeAndAppend(java.lang.CharSequence,boolean,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean startNestedScroll(int); }
-keepclassmembers class android.widget.TextView { boolean canRedo(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopNestedScroll(); }
-keepclassmembers class java.io.BufferedWriter { void newLine(); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { int spanQuickCheckYes(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { void <init>(android.icu.impl.Normalizer2Impl,boolean); }
-keepclassmembers class java.io.BufferedWriter { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean canShare(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { int getQuickCheck(int); }
-keepclassmembers class android.widget.TextView { boolean isDeviceProvisioned(); }
-keepclassmembers class android.widget.TextView { boolean canUndo(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScroll(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { boolean hasBoundaryBefore(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { boolean hasBoundaryAfter(int); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$ComposeNormalizer2 { boolean isInert(int); }
-keepclassmembers class android.widget.TextView { boolean canProcessText(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorParser { void setVariableRange(int,int); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.widget.TextView { boolean canSelectAllText(); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class android.widget.TextView { void paste(int,int,boolean); }
-keepclassmembers class android.icu.text.TransliteratorParser { void checkVariableRange(int,java.lang.String,int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class android.icu.text.TransliteratorParser { void pragmaMaximumBackup(int); }
-keepclassmembers class android.icu.text.TransliteratorParser { void pragmaNormalizeRules(android.icu.text.Normalizer$Mode); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.icu.text.TransliteratorParser { boolean resemblesPragma(java.lang.String,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorParser { int parsePragma(java.lang.String,int,int); }
-keepclassmembers class android.widget.TextView { void shareSelectedText(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class android.widget.TextView { void replaceSelectionWithText(java.lang.CharSequence); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinateUnclamped(float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.icu.text.TransliteratorParser { char parseSet(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class android.icu.text.TransliteratorParser { void syntaxError(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean isInBatchEditMode(); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class java.util.Vector { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.text.TransliteratorParser { int ruleEnd(java.lang.String,int,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class android.icu.text.TransliteratorParser { char getSegmentStandin(int); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { void prepareDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void multTransA_reorder(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class libcore.io.ForwardingOs { void munmap(long,long); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.icu.text.TransliteratorParser { char generateStandInFor(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.widget.TextView { void setCursorPosition_internal(int,int); }
-keepclassmembers class java.security.cert.CertificateEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorParser { char getDotStandIn(); }
-keepclassmembers class android.icu.impl.CurrencyData$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.text.TransliteratorParser { void setSegmentObject(int,android.icu.text.StringMatcher); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class android.icu.impl.CurrencyData$1 { android.icu.impl.CurrencyData$CurrencyDisplayInfo getInstance(android.icu.util.ULocale,boolean); }
-keepclassmembers class android.icu.text.TransliteratorParser { void appendVariableDef(java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class android.view.ViewPropertyAnimator { void <init>(android.view.View); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setDuration(long); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class java.text.Format { java.lang.Object clone(); }
-keepclassmembers class android.widget.RemoteViews { boolean hasLandscapeAndPortraitLayouts(); }
-keepclassmembers class android.view.DisplayListCanvas { boolean nIsAvailable(); }
-keepclassmembers class sun.net.TelnetInputStream { int read(); }
-keepclassmembers class android.icu.text.TransliteratorParser { android.icu.text.RuleBasedTransliterator$Data access$100(android.icu.text.TransliteratorParser); }
-keepclassmembers class android.icu.text.TransliteratorParser { java.util.Map access$000(android.icu.text.TransliteratorParser); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String); }
-keepclassmembers class android.view.DisplayListCanvas { boolean isAvailable(); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.icu.text.TransliteratorParser { java.util.List access$200(android.icu.text.TransliteratorParser); }
-keepclassmembers class android.icu.text.TransliteratorParser { android.icu.text.UnicodeSet access$400(); }
-keepclassmembers class android.widget.TextView { void setSpan_internal(java.lang.Object,int,int,int); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator[]); }
-keepclassmembers class sun.net.TelnetInputStream { void <init>(java.io.InputStream,boolean); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String,java.text.AttributedCharacterIterator$Attribute,java.lang.Object); }
-keepclassmembers class android.icu.text.TransliteratorParser { void access$600(android.icu.text.TransliteratorParser,int,java.lang.String,int); }
-keepclassmembers class sun.net.TelnetInputStream { int read(byte[],int,int); }
-keepclassmembers class android.icu.text.TransliteratorParser { android.icu.text.UnicodeSet access$700(); }
-keepclassmembers class android.icu.text.TransliteratorParser { android.icu.text.TransliteratorParser$ParseData access$900(android.icu.text.TransliteratorParser); }
-keepclassmembers class java.text.Format { java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator$Attribute,java.lang.Object); }
-keepclassmembers class android.icu.text.TransliteratorParser { void access$1000(android.icu.text.TransliteratorParser,java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class android.icu.text.TransliteratorParser { android.icu.text.UnicodeSet access$800(); }
-keepclassmembers class android.icu.text.TransliteratorParser { char access$500(android.icu.text.TransliteratorParser,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$900(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class android.icu.text.TransliteratorParser { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class java.lang.Character { int hashCode(char); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void multTransA_small(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class java.lang.Character { java.lang.String toString(char); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class java.lang.Character { boolean isBmpCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isSurrogate(char); }
-keepclassmembers class java.lang.Character { int charCount(int); }
-keepclassmembers class android.view.DisplayListCanvas { void <clinit>(); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator alpha(float); }
-keepclassmembers class android.widget.RemoteViews { void recalculateMemoryUsage(); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.Character { int codePointAtImpl(char[],int,int); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean isVariationSelector(int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$DecFmtDataSink { void <init>(java.lang.String[]); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$DecFmtDataSink { void put(android.icu.impl.UResource$Key,android.icu.impl.UResource$Value,boolean); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.Character { char highSurrogate(int); }
-keepclassmembers class android.widget.RemoteViews { void addAction(android.widget.RemoteViews$Action); }
-keepclassmembers class java.lang.Character { int codePointBeforeImpl(char[],int,int); }
-keepclassmembers class java.lang.Character { char lowSurrogate(int); }
-keepclassmembers class android.text.method.BaseKeyListener { int getOffsetForBackspaceKey(java.lang.CharSequence,int); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animateProperty(int,float); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Character { void toSurrogates(int,char[],int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animatePropertyBy(int,float,float); }
-keepclassmembers class java.lang.Character { int codePointCount(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setViewVisibility(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewText(int,java.lang.CharSequence); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class java.lang.Character { int offsetByCodePoints(java.lang.CharSequence,int,int); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { void <init>(java.io.FileDescriptor,java.lang.String,boolean,boolean,boolean,java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void multTransB(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class android.view.ViewPropertyAnimator { float getValue(int); }
-keepclassmembers class android.icu.impl.ICUBinary$DataFile { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class java.lang.Character { int offsetByCodePointsImpl(char[],int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { java.nio.channels.FileChannel open(java.io.FileDescriptor,java.lang.String,boolean,boolean,java.lang.Object); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { char[] lookup(java.lang.String); }
-keepclassmembers class android.text.method.BaseKeyListener { int adjustReplacementSpan(java.lang.CharSequence,int,boolean); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { void <init>(android.icu.text.TransliteratorParser); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { android.icu.text.UnicodeMatcher lookupMatcher(int); }
-keepclassmembers class android.icu.impl.ICUBinary$DataFile { java.lang.String toString(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { void ensureOpen(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class android.text.method.BaseKeyListener { int getOffsetForForwardDeleteKey(java.lang.CharSequence,int,android.graphics.Paint); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class android.view.ViewPropertyAnimator { void cancel(); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(int); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { boolean isMatcher(int); }
-keepclassmembers class android.view.Window { void <init>(android.content.Context); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteUntilWordBoundary(android.view.View,android.text.Editable,boolean); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierStart(int); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { boolean isReplacer(int); }
-keepclassmembers class android.icu.text.TransliteratorParser$ParseData { void <init>(android.icu.text.TransliteratorParser,android.icu.text.TransliteratorParser$1); }
-keepclassmembers class android.view.Window { android.content.Context getContext(); }
-keepclassmembers class android.widget.RemoteViews { void setOnClickPendingIntent(int,android.app.PendingIntent); }
-keepclassmembers class android.view.Window { android.view.Window getContainer(); }
-keepclassmembers class android.view.Window { boolean isDestroyed(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync { void <init>(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class android.view.Window { void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean); }
-keepclassmembers class android.view.Window { void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.provider.Settings$System$3 { void <init>(); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class android.view.Window { android.content.res.TypedArray getWindowStyle(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class android.icu.util.UResourceBundle$RootType { android.icu.util.UResourceBundle$RootType[] values(); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class android.icu.util.UResourceBundle$RootType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class android.icu.util.UResourceBundle$RootType { void <clinit>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class org.ejml.data.Matrix64F { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class org.ejml.data.Matrix64F { int getNumCols(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$12 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class org.ejml.data.Matrix64F { int getNumRows(); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$12 { boolean contains(int); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class org.ejml.data.Matrix64F { void reshape(int,int); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class org.ejml.data.Matrix64F { void set(org.ejml.data.Matrix64F); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class java.lang.Character { char forDigit(int,int); }
-keepclassmembers class java.lang.Character { byte getDirectionalityImpl(int); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void mult_reorder(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class org.ejml.data.Complex64F { void <init>(double,double); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class org.ejml.data.Complex64F { double getMagnitude(); }
-keepclassmembers class org.ejml.data.Complex64F { double getReal(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class org.ejml.data.Complex64F { void <init>(); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class org.ejml.data.Complex64F { boolean isReal(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class java.util.zip.ZipEntry { int getMethod(); }
-keepclassmembers class android.view.Window { android.view.WindowManager getWindowManager(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class java.util.zip.ZipEntry { void setExtra0(byte[],boolean); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.view.Window { android.view.Window$Callback getCallback(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class android.widget.RemoteViews { void setInt(int,java.lang.String,int); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class android.view.Window { void setOnWindowDismissedCallback(android.view.Window$OnWindowDismissedCallback); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,java.lang.Object,dalvik.system.DexFile,java.util.List); }
-keepclassmembers class org.ejml.data.Complex64F { void set(double,double); }
-keepclassmembers class android.view.Window { void setCallback(android.view.Window$Callback); }
-keepclassmembers class android.view.DisplayInfo { android.view.Display$Mode getMode(); }
-keepclassmembers class android.icu.text.DecimalFormat { android.icu.text.DecimalFormatSymbols getDecimalFormatSymbols(); }
-keepclassmembers class android.icu.util.ULocale$3 { void <clinit>(); }
-keepclassmembers class android.view.Window { void setLayout(int,int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Object openDexFile(java.lang.String,java.lang.String,int,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class android.view.DisplayInfo { android.view.Display$Mode findMode(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class android.widget.RemoteViews { void setCharSequence(int,java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void beginSection(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormat { void setCurrencyForSymbols(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Object openDexFileNative(java.lang.String,java.lang.String,int,java.lang.ClassLoader,dalvik.system.DexPathList$Element[]); }
-keepclassmembers class android.view.Window { android.view.Window$WindowControllerCallback getWindowControllerCallback(); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void endSection(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,java.lang.Object,dalvik.system.DexFile); }
-keepclassmembers class android.icu.impl.UCharacterProperty$23 { void <init>(android.icu.impl.UCharacterProperty); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void <init>(); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$23 { int getValue(int); }
-keepclassmembers class java.util.zip.ZipEntry { boolean isDirectory(); }
-keepclassmembers class android.view.Window { void setGravity(int); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void visitAllResources(); }
-keepclassmembers class android.icu.text.DecimalFormat { void setRoundingIncrement(android.icu.math.BigDecimal); }
-keepclassmembers class android.icu.text.DecimalFormat { void setRoundingIncrement(double); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void preEnumerate(java.lang.String); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void put(android.icu.impl.UResource$Key,android.icu.impl.UResource$Value,boolean); }
-keepclassmembers class android.view.Window { void setFlags(int,int); }
-keepclassmembers class com.android.internal.policy.DecorView$1 { void <init>(com.android.internal.policy.DecorView,com.android.internal.policy.DecorView$ColorViewState); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.content.res.Configuration,int,int); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixMatrixMult { void mult_small(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.icu.text.DecimalFormat { boolean isScientificNotation(); }
-keepclassmembers class android.view.Window { void setNeedsMenuKey(int); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormat { int getGroupingSize(); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,int,int,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class android.view.Window { void dispatchWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { int index(java.lang.String); }
-keepclassmembers class android.view.Window { boolean hasSoftInputMode(); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class android.app.FragmentContainer { void <init>(); }
-keepclassmembers class android.view.Window { void setCloseOnTouchOutside(boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { int width(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledInverseFromMinor { void inv(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.util.Formatter$Flags flags(java.lang.String); }
-keepclassmembers class android.view.Window { boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { int index(); }
-keepclassmembers class android.view.Window { void setCloseOnTouchOutsideIfNotSet(boolean); }
-keepclassmembers class android.view.Window { int getForcedWindowFlags(); }
-keepclassmembers class android.icu.text.DecimalFormat { void setDecimalSeparatorAlwaysShown(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { int precision(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledInverseFromMinor { void inv2(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class android.view.Window { boolean isOutOfBounds(android.content.Context,android.view.MotionEvent); }
-keepclassmembers class android.view.Window { android.view.WindowManager$LayoutParams getAttributes(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.lang.Object clone(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { char conversion(java.lang.String); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Norm2AllModesSingleton { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void <init>(java.util.Formatter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Norm2AllModesSingleton { java.lang.RuntimeException access$000(android.icu.impl.Norm2AllModes$Norm2AllModesSingleton); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Norm2AllModesSingleton { android.icu.impl.Norm2AllModes access$100(android.icu.impl.Norm2AllModes$Norm2AllModesSingleton); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { long size(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table32 { void <init>(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.view.Window { boolean requestFeature(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Norm2AllModesSingleton { void <init>(java.lang.String,android.icu.impl.Norm2AllModes$1); }
-keepclassmembers class android.view.Window { void removeFeature(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.lang.Object,java.util.Locale); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table32 { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printInteger(java.lang.Object,java.util.Locale); }
-keepclassmembers class java.io.NotActiveException { void <init>(java.lang.String); }
-keepclassmembers class android.view.Window { android.view.View findViewById(int); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void processResource(java.lang.String,android.icu.impl.UResource$Key,android.icu.impl.UResource$Value); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledInverseFromMinor { void inv3(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class android.icu.text.DecimalFormat { void expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledInverseFromMinor { void inv4(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceArray { java.lang.String[] handleGetStringArray(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printDateTime(java.lang.Object,java.util.Locale); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceArray { android.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printFloat(java.lang.Object,java.util.Locale); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceArray { android.icu.util.UResourceBundle handleGet(int,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printCharacter(java.lang.Object); }
-keepclassmembers class android.icu.text.DecimalFormat { void expandAffixes(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceArray { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printString(java.lang.Object,java.util.Locale); }
-keepclassmembers class android.view.Window { int getLocalFeatures(); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceArray { int getType(); }
-keepclassmembers class android.view.Window { boolean hasFeature(int); }
-keepclassmembers class android.view.Window { int getFeatures(); }
-keepclassmembers class android.view.Window { void setDefaultWindowFormat(int); }
-keepclassmembers class android.view.Window { int getDefaultFeatures(android.content.Context); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { android.icu.text.DateFormatSymbols$CalendarDataSink$AliasType processAliasFromValue(java.lang.String,android.icu.impl.UResource$Value); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class android.icu.text.DecimalFormat { int appendAffix(java.lang.StringBuffer,boolean,boolean,java.text.FieldPosition,boolean); }
-keepclassmembers class android.view.Window { boolean haveDimAmount(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printHashCode(java.lang.Object); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeLong(long); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void printBoolean(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeByte(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.String justify(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeShort(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectOutputStream { boolean auditSubclass(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void clear(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeTypeString(java.lang.String); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class java.io.ObjectOutputStream { int getProtocolVersion(); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkDateTime(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject0(java.lang.Object,boolean); }
-keepclassmembers class android.icu.text.DecimalFormat { void formatAffix2Attribute(boolean,android.icu.text.NumberFormat$Field,java.lang.StringBuffer,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkCharacter(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkGeneral(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CalendarDataSink { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void verifySubclass(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClass(java.lang.Class,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.widget.RemoteViews { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { boolean isCustomSubclass(); }
-keepclassmembers class android.icu.text.DecimalFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.icu.text.DecimalFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object,android.icu.text.DecimalFormat$Unit); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class android.icu.text.DecimalFormat { void addAttribute(android.icu.text.NumberFormat$Field,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkInteger(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNonProxyDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkBadFlags(java.util.Formatter$Flags[]); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHandle(int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper { void <init>(android.support.v7.widget.helper.ItemTouchHelper$Callback); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkText(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkFloat(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeProxyDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeArray(java.lang.Object,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeString(java.lang.String,boolean); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class libcore.util.CharsetUtils { byte[] toAsciiBytes(java.lang.String,int,int); }
-keepclassmembers class libcore.util.CharsetUtils { byte[] toIsoLatin1Bytes(java.lang.String,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void checkNumeric(); }
-keepclassmembers class java.util.logging.LogManager$LoggerWeakRef { void <init>(java.util.logging.LogManager,java.util.logging.Logger); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(byte,java.util.Locale); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class libcore.util.CharsetUtils { byte[] toUtf8Bytes(java.lang.String,int,int); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class libcore.util.CharsetUtils { byte[] toBigEndianUtf16Bytes(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(short,java.util.Locale); }
-keepclassmembers class java.util.logging.LogManager$LoggerWeakRef { void dispose(); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class android.view.InputChannel { void nativeDispose(boolean); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(int,java.util.Locale); }
-keepclassmembers class java.util.Currency { void <init>(android.icu.util.Currency); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledInverseFromMinor { void inv5(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(long,java.util.Locale); }
-keepclassmembers class android.view.InputChannel { void <init>(); }
-keepclassmembers class java.util.logging.LogManager$LoggerWeakRef { void setNode(java.util.logging.LogManager$LogNode); }
-keepclassmembers class sun.security.x509.OIDMap$OIDInfo { void <init>(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.Class); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class android.view.InputChannel { void nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.logging.LogManager$LoggerWeakRef { void setParentRef(java.lang.ref.WeakReference); }
-keepclassmembers class java.io.ObjectOutputStream { void writeEnum(java.lang.Enum,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class android.view.InputChannel { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class sun.security.x509.OIDMap$OIDInfo { java.lang.Class getClazz(); }
-keepclassmembers class android.view.InputChannel { void dispose(); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { android.widget.TextView access$1000(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class java.io.ObjectOutputStream { void writeOrdinaryObject(java.lang.Object,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { boolean canConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { android.view.View access$202(com.xlythe.calculator.material.BasicCalculator,android.view.View); }
-keepclassmembers class java.util.logging.Logger$SystemLoggerHelper$1 { java.lang.String run(); }
-keepclassmembers class android.view.InputChannel { void <clinit>(); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class java.util.logging.Logger$SystemLoggerHelper$1 { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.calculator.material.view.EqualsImageButton access$300(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.calculator.material.view.FormattedNumberEditText access$500(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.calculator.material.HistoryAdapter access$400(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.calculator.material.view.DisplayOverlay access$600(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { int getChangingConfigurations(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeSerialData(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { android.animation.Animator access$902(com.xlythe.calculator.material.BasicCalculator,android.animation.Animator); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { android.view.ViewGroup access$800(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class java.util.logging.Logger$SystemLoggerHelper$1 { java.lang.Object run(); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeExternalData(java.io.Externalizable); }
-keepclassmembers class java.io.SerialCallbackContext { void <init>(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.math.History access$700(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteFields(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class java.io.SerialCallbackContext { void check(); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { void <init>(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean); }
-keepclassmembers class android.support.v7.widget.ViewUtils { int combineMeasuredStates(int,int); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class java.io.SerialCallbackContext { void setUsed(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper { java.util.List findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[],java.lang.Object[],int,int); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.util.Currency { int getDefaultFractionDigits(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFatalException(java.io.IOException); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { void setDensity(int); }
-keepclassmembers class android.support.v7.widget.ViewUtils { boolean isLayoutRtl(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void reveal(android.view.View,int,android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { void onDensityChanged(int,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { java.lang.String cleanExpression(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { boolean canApplyTheme(); }
-keepclassmembers class java.io.ObjectOutputStream { void floatsToBytes(float[],int,byte[],int,int); }
-keepclassmembers class java.io.ObjectOutputStream { void doublesToBytes(double[],int,byte[],int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.math.BigInteger,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { java.lang.String getNormalizedExpression(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void incrementGroupId(); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int,java.lang.Object[],int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { boolean canConstantState(); }
-keepclassmembers class java.io.ObjectOutputStream { void access$200(float[],int,byte[],int,int); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { int[] access$002(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,int[]); }
-keepclassmembers class android.icu.text.DecimalFormat { void expandAffixAdjustWidth(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormat { void applyPatternWithoutExpandAffix(java.lang.String,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void access$300(double[],int,byte[],int,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { void <init>(org.ejml.factory.QRPDecomposition,boolean); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void invalidateEqualsButton(); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { int getChangingConfigurations(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { com.xlythe.calculator.material.BasicCalculator$CalculatorState getState(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onBackPressed(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.DrawableWrapper$DrawableWrapperState { int[] access$000(android.graphics.drawable.DrawableWrapper$DrawableWrapperState); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { void invert(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onButtonClick(android.view.View); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(float,java.util.Locale); }
-keepclassmembers class java.io.File$PathStatus { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.io.File$PathStatus { void <init>(java.lang.String,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { void invert(org.ejml.data.Matrix64F); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(double,java.util.Locale); }
-keepclassmembers class sun.security.x509.OIDName { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onEquals(); }
-keepclassmembers class sun.security.x509.OIDName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class sun.security.x509.OIDName { boolean equals(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator$1 { void <init>(com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator,com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class sun.security.x509.OIDName { int getType(); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class sun.security.x509.OIDName { int hashCode(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void <init>(android.support.design.widget.ValueAnimatorCompat$Impl); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void addListener(android.support.design.widget.ValueAnimatorCompat$AnimatorListener); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onError(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener); }
-keepclassmembers class sun.security.x509.OIDName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class sun.security.x509.X509Key { void setKey(sun.security.util.BitArray); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onEvaluate(java.lang.String,java.lang.String,int); }
-keepclassmembers class sun.security.x509.X509Key { void <init>(sun.security.x509.AlgorithmId,sun.security.util.BitArray); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void init(android.animation.AnimatorSet); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { void <init>(java.lang.String); }
-keepclassmembers class sun.security.x509.X509Key { sun.security.util.BitArray getKey(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void cancel(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { float getAnimatedFraction(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void end(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class sun.security.x509.X509Key { java.security.PublicKey parse(sun.security.util.DerValue); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { boolean hasFallback(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { boolean onLongClick(android.view.View); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setFloatValues(float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void start(); }
-keepclassmembers class sun.security.x509.X509Key { java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setDuration(long); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { void upgradeSolution(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { void reset(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void reset(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.BaseLinearSolverQrp { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void start(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { void setupNext(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { java.lang.String next(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void reverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void end(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onPause(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { java.lang.String get(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table { java.lang.String getKey(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { boolean canReverse(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onResult(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void setListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { boolean isLocale(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { java.lang.String getTop(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$Spec { java.util.ResourceBundle getBundle(); }
-keepclassmembers class android.support.v4.os.TraceCompat { void beginSection(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.reflect.Field,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { boolean isRunning(); }
-keepclassmembers class android.support.v4.os.TraceCompat { void endSection(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table { int findTableItem(android.icu.impl.ICUResourceBundleReader,java.lang.CharSequence); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void pause(); }
-keepclassmembers class java.util.Collections$EmptySet { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { boolean isStarted(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { boolean isInfinite(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class java.util.Collections$EmptySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void invalidateOwningView(); }
-keepclassmembers class java.util.Collections$EmptySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class sun.security.jca.ProviderList$3 { void <init>(sun.security.jca.ProviderList); }
-keepclassmembers class sun.security.jca.ProviderList$3 { int size(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI { void resume(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class sun.security.jca.ProviderList$3 { java.security.Provider get(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table { int getResource(android.icu.impl.ICUResourceBundleReader,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class java.util.Collections$EmptySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.Collections$EmptySet { java.lang.Object[] toArray(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class sun.security.jca.ProviderList$3 { java.lang.Object get(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table { boolean getKeyAndValue(int,android.icu.impl.UResource$Key,android.icu.impl.UResource$Value); }
-keepclassmembers class sun.security.x509.X509Key { java.lang.String getAlgorithm(); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class sun.security.x509.X509Key { byte[] getEncoded(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class sun.security.x509.X509Key { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class sun.security.jca.ProviderConfig$2 { java.security.Provider run(); }
-keepclassmembers class sun.security.x509.X509Key { byte[] getEncodedInternal(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table { void <init>(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { long map0(int,long,long); }
-keepclassmembers class sun.security.jca.ProviderConfig$2 { void <init>(sun.security.jca.ProviderConfig); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getSignature(); }
-keepclassmembers class sun.security.x509.X509Key { byte[] encode(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.reflect.Field getField(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onResume(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getClassSignature(java.lang.Class); }
-keepclassmembers class sun.security.jca.ProviderConfig$2 { java.lang.Object run(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { long initIDs(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { int unmap0(long,long); }
-keepclassmembers class sun.security.x509.X509Key { java.lang.String getFormat(); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { int access$000(long,long); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class sun.nio.ch.FileChannelImpl { void <clinit>(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$ICSMotionEventVersionImpl { void <init>(); }
-keepclassmembers class sun.net.www.MeteredStream { void <init>(java.io.InputStream,sun.net.ProgressSource,long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onTextSizeChanged(android.widget.TextView,float); }
-keepclassmembers class sun.security.x509.X509Key { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void onUserInteraction(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper { void moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class sun.security.x509.X509Key { void encode(sun.security.util.DerOutputStream,sun.security.x509.AlgorithmId,sun.security.util.BitArray); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void play(android.animation.Animator); }
-keepclassmembers class sun.net.www.MeteredStream { long skip(long); }
-keepclassmembers class sun.net.www.MeteredStream { void justRead(long); }
-keepclassmembers class sun.net.www.MeteredStream { boolean isMarked(); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class sun.net.www.MeteredStream { void close(); }
-keepclassmembers class android.content.pm.Signature { boolean equals(java.lang.Object); }
-keepclassmembers class sun.net.www.MeteredStream { int available(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { void setState(com.xlythe.calculator.material.BasicCalculator$CalculatorState); }
-keepclassmembers class sun.net.www.MeteredStream { int read(byte[],int,int); }
-keepclassmembers class sun.net.www.MeteredStream { void reset(); }
-keepclassmembers class sun.net.www.MeteredStream { void mark(int); }
-keepclassmembers class android.content.pm.Signature { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.pm.Signature { int hashCode(); }
-keepclassmembers class sun.net.www.MeteredStream { int read(); }
-keepclassmembers class sun.net.www.MeteredStream { boolean markSupported(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { char[] addZeros(char[],int); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$5 { void <init>(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$5 { void onAnimationFinished(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void ensureOpen(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper { boolean scrollIfNecessary(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.String hexDouble(double,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator { boolean saveHistory(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class android.content.pm.Signature { void <init>(android.os.Parcel,android.content.pm.Signature$1); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class android.widget.PopupWindow$1 { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class org.ejml.alg.block.BlockVectorOps { void add_row(int,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.content.pm.Signature { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { boolean hasRelativeRules(); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String,java.security.Provider); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class android.widget.PopupWindow$1 { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.math.BigDecimal,java.util.Locale); }
-keepclassmembers class java.util.zip.InflaterInputStream { boolean markSupported(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void reset(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void mark(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrpHouseCol { boolean modifiesA(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class java.util.ComparableTimSort { void <clinit>(); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveRules(int); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrpHouseCol { void <init>(org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn,boolean); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean); }
-keepclassmembers class java.security.MessageDigest { java.lang.String toString(); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrpHouseCol { void solve(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class java.security.MessageDigest { void reset(); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class java.security.MessageDigest { java.lang.String getAlgorithm(); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class org.ejml.alg.block.BlockVectorOps { void div_row(int,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class android.os.BaseBundle { boolean isEmptyParcel(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { boolean shouldResolveLayoutDirection(int); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class android.os.BaseBundle { boolean isParcelled(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$100(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.os.BaseBundle { void remove(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$200(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$102(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$400(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(java.io.DataInput); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$202(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$300(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$402(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrpHouseCol { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList$1 { boolean hasNext(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$302(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void <init>(java.io.ObjectStreamField[]); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList$1 { void <init>(sun.security.jca.ProviderList$ServiceList); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList$1 { java.security.Provider$Service next(); }
-keepclassmembers class android.icu.text.DecimalFormat { void patternError(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList$1 { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class android.icu.text.DecimalFormat { int getMaximumSignificantDigits(); }
-keepclassmembers class android.icu.text.Normalizer$FCDMode { void <init>(); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class android.icu.text.Normalizer$FCDMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class android.icu.text.DecimalFormat { int getMinimumSignificantDigits(); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class org.ejml.alg.block.BlockVectorOps { double dot_row(int,org.ejml.data.D1Submatrix64F,int,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMinimumSignificantDigits(int); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMaximumSignificantDigits(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getColor(); }
-keepclassmembers class android.os.BaseBundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.icu.text.DecimalFormat { boolean areSignificantDigitsUsed(); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { int indexOfBangSlash(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class android.icu.text.DecimalFormat { void setSignificantDigitsUsed(boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.icu.text.DecimalFormat { void setCurrency(android.icu.util.Currency); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void getPrimFieldValues(java.lang.Object,byte[]); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void setPrimFieldValues(java.lang.Object,byte[]); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.icu.text.DecimalFormat { void _setMaximumFractionDigits(int); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { int hashCode(java.net.URL); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockCholeskyOuterForm { void <init>(boolean); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { int adjustWidth(int,java.util.Formatter$Flags,boolean); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void getObjFieldValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.text.DecimalFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockCholeskyOuterForm { boolean decomposeLower(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { char[] addDot(char[]); }
-keepclassmembers class android.icu.text.DecimalFormat { void setInternalRoundingIncrement(android.icu.math.BigDecimal); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { char[] trailingZeros(char[],int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void setObjFieldValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.util.Calendar,char,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.icu.text.DecimalFormat { void resetActualRounding(); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { java.lang.String retrieveFieldValueName(java.lang.String,int,int,int,java.util.Locale); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflector { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockCholeskyOuterForm { boolean decomposeUpper(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class android.icu.text.DecimalFormat { void setRoundingDouble(double); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { java.lang.String parseContextSpec(java.net.URL,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.content.res.Resources,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class sun.net.www.protocol.jar.Handler { java.lang.String parseAbsoluteSpec(java.lang.String); }
-keepclassmembers class android.icu.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onUnbufferedIO(); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockCholeskyOuterForm { boolean decompose(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class org.ejml.alg.block.BlockVectorOps { double dot_row_col(int,org.ejml.data.D1Submatrix64F,int,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileDescriptor { void <init>(int); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockCholeskyOuterForm { org.ejml.data.BlockMatrix64F getT(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket$(); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class java.io.FileDescriptor { java.io.FileDescriptor dupFd(int); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { com.xlythe.calculator.material.view.SolidLayout access$000(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class android.os.BaseBundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void access$100(com.xlythe.calculator.material.view.CalculatorPadView,com.xlythe.calculator.material.view.SolidLayout,boolean); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void setState(com.xlythe.calculator.material.view.CalculatorPadView$TranslateState); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void resetAnimator(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { float access$200(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { java.lang.String[] getNames(java.lang.String,int,int,java.util.Locale); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void setEnabled(com.xlythe.calculator.material.view.SolidLayout,boolean); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { android.icu.text.DateFormatSymbols getDateFormatSymbols(java.lang.String,java.util.Locale); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { float access$300(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { int toWidth(int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void collapse(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventJellyBeanImpl { void <init>(); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { int toContext(int); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { java.lang.String normalizeCalendarType(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void collapse(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void expand(); }
-keepclassmembers class sun.util.locale.provider.CalendarDataUtility { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int,android.icu.text.Normalizer$Mode); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class java.text.Normalizer$Form { android.icu.text.Normalizer$Mode access$000(java.text.Normalizer$Form); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class android.support.v4.view.GravityCompat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$2 { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$2 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void expand(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class android.support.v4.view.GravityCompat { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { float getCurrentPercent(); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$2 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.icu.impl.UCharacterUtility { boolean isNonCharacter(int); }
-keepclassmembers class android.support.v4.view.GravityCompat { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void handleDown(); }
-keepclassmembers class android.icu.impl.UCharacterUtility { int getNullTermByteSubString(java.lang.StringBuffer,byte[],int); }
-keepclassmembers class android.icu.impl.UCharacterUtility { int toInt(char,char); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.BlockVectorOps { void scale_row(int,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void handleMove(android.view.MotionEvent); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.icu.impl.UCharacterUtility { int skipByteSubString(byte[],int,int,byte); }
-keepclassmembers class android.icu.impl.UCharacterUtility { int compareNullTermByteSubString(java.lang.String,byte[],int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { com.xlythe.calculator.material.view.CalculatorPadView$TranslateState getState(); }
-keepclassmembers class android.icu.impl.UCharacterUtility { int skipNullTermByteSubString(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void handleUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$2 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void hideFab(); }
-keepclassmembers class sun.nio.ch.ChannelInputStream { int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void hideTray(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void onFinishInflate(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder setScript(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void showFab(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void <init>(); }
-keepclassmembers class android.provider.Settings$System$DiscreteValueValidator { void <init>(java.lang.String[]); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView { void onPageSelected(int); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class android.content.res.DrawableCache { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setDensity(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class android.icu.util.ULocale$1 { void <init>(); }
-keepclassmembers class android.icu.util.ULocale$1 { java.lang.String createInstance(java.lang.String,java.lang.Void); }
-keepclassmembers class android.content.res.DrawableCache { boolean shouldInvalidateEntry(android.graphics.drawable.Drawable$ConstantState,int); }
-keepclassmembers class android.content.res.DrawableCache { boolean shouldInvalidateEntry(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void applyDensityScaling(int,int); }
-keepclassmembers class android.content.res.DrawableCache { android.graphics.drawable.Drawable getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.util.ULocale$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onEnabled(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onDeleted(android.content.Context,int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onDisabled(android.content.Context); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onRestored(android.content.Context,int[],int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class java.lang.Short { int hashCode(short); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { void <init>(); }
-keepclassmembers class android.graphics.Region { boolean set(int,int,int,int); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getString(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { int getColumnIndex(); }
-keepclassmembers class android.provider.Settings$Global { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { int getColumnSpan(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { int getRowIndex(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { boolean isSelected(); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void resetTransition(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void clear(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void recycle(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { int getRowSpan(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setGradientColors(int[]); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { boolean isHeading(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setSolidColors(android.content.res.ColorStateList); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void print(java.time.temporal.TemporalAccessor,char,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { void <init>(java.lang.String,sun.util.calendar.Era[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$202(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$100(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$502(android.view.View$ListenerInfo,android.view.View$OnTouchListener); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$402(android.view.View$ListenerInfo,android.view.View$OnKeyListener); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$302(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.LocalGregorianCalendar$Date adjustYear(sun.util.calendar.LocalGregorianCalendar$Date,long,int); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$800(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1400(android.view.View$ListenerInfo); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone); }
-keepclassmembers class java.io.ObjectStreamClass$MemberSignature { void <init>(java.lang.reflect.Field); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow_(java.lang.Throwable); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String); }
-keepclassmembers class sun.security.x509.RFC822Name { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class sun.security.x509.RFC822Name { void parseName(java.lang.String); }
-keepclassmembers class sun.security.x509.RFC822Name { int getType(); }
-keepclassmembers class sun.security.x509.RFC822Name { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamClass$MemberSignature { void <init>(java.lang.reflect.Method); }
-keepclassmembers class java.io.ObjectStreamClass$MemberSignature { void <init>(java.lang.reflect.Constructor); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor,boolean); }
-keepclassmembers class com.android.internal.app.MicroAlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { boolean normalize(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.content.res.Configuration { boolean isLayoutSizeAtLeast(int); }
-keepclassmembers class sun.security.x509.RFC822Name { int hashCode(); }
-keepclassmembers class sun.security.x509.RFC822Name { java.lang.String toString(); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class android.content.res.Configuration { void fixUpLocaleList(); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$6 { boolean onLongClick(android.view.View); }
-keepclassmembers class com.android.internal.app.MicroAlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class sun.security.x509.RFC822Name { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class com.android.internal.app.MicroAlertController { void setupTitle(android.view.ViewGroup); }
-keepclassmembers class com.android.internal.app.MicroAlertController { void setupButtons(android.view.ViewGroup); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { void normalizeMonth(sun.util.calendar.CalendarDate); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { boolean validateEra(sun.util.calendar.Era); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { void normalizeYear(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class sun.util.locale.ParseStatus { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { java.util.jar.JarFile getJarFile(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.CalendarDate getCalendarDate(long,java.util.TimeZone); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class sun.util.locale.ParseStatus { boolean isError(); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate); }
-keepclassmembers class sun.util.locale.ParseStatus { void reset(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { void <init>(java.io.File,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { void <init>(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { void <init>(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar { sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { boolean isFileURL(java.net.URL); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { void close(); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder clear(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { boolean isSuperMan(); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { java.util.jar.JarFile retrieve(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.BaseLocale getBaseLocale(); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.InternalLocaleBuilder clearExtensions(); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class java.util.zip.Inflater { long getBytesWritten(); }
-keepclassmembers class android.view.MotionEvent { int nativeGetActionButton(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class java.util.zip.Inflater { void reset(); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class android.icu.text.PluralRules$SampleType { android.icu.text.PluralRules$SampleType[] values(); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { sun.util.locale.LocaleExtensions getLocaleExtensions(); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { java.lang.String removePrivateuseVariant(java.lang.String); }
-keepclassmembers class java.util.zip.Inflater { boolean ended(); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class java.util.zip.Inflater { void ensureOpen(); }
-keepclassmembers class android.icu.text.PluralRules$SampleType { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.text.PluralRules$SampleType { void <clinit>(); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo { void <init>(java.lang.String[]); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { void setUnicodeLocaleExtension(java.lang.String); }
-keepclassmembers class java.util.zip.Inflater { void reset(long); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { void <init>(); }
-keepclassmembers class java.util.zip.Inflater { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.MatrixCalculator { void <init>(); }
-keepclassmembers class java.util.zip.Inflater { long init(boolean); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.EigenvalueSmall { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.MatrixCalculator { void onButtonClick(android.view.View); }
-keepclassmembers class java.util.zip.Inflater { int inflateBytes(long,byte[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { void similarTransform(int); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo { java.lang.String[] getBeforeSymbols(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.EigenvalueSmall { void value2x2(double,double,double,double); }
-keepclassmembers class java.util.zip.Inflater { void end(long); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.EigenvalueSmall { void symm2x2_fast(double,double,double); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo { java.lang.String[] getAfterSymbols(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { void getDiagonal(double[],double[]); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$ActionMenuPresenterCallback { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$ActionMenuPresenterCallback { void <init>(com.android.internal.policy.PhoneWindow,com.android.internal.policy.PhoneWindow$1); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class java.text.DecimalFormat { java.text.FieldPosition getIcuFieldPosition(java.text.FieldPosition); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean,int); }
-keepclassmembers class java.lang.Math$RandomNumberGeneratorHolder { void <clinit>(); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { void init(java.lang.String); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.EigenvalueSmall { void value2x2_fast(double,double,double,double); }
-keepclassmembers class java.text.DecimalFormat { java.text.NumberFormat$Field toJavaFieldAttribute(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { boolean hasNextService(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void setGravity(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { org.ejml.data.DenseMatrix64F getQ(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void show(); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { void <init>(java.util.ServiceLoader,java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { boolean tryShow(); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void show(int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { com.android.internal.view.menu.MenuPopup getPopup(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class android.animation.LayoutTransition$CleanupCallback { void <init>(java.util.Map,android.view.ViewGroup); }
-keepclassmembers class sun.security.jca.ProviderList$2 { void <init>(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class sun.security.jca.ProviderList$2 { sun.security.jca.ProviderList run(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { boolean tryShow(int,int); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { java.lang.Object nextService(); }
-keepclassmembers class sun.security.jca.ProviderList$2 { java.lang.Object run(); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class android.animation.LayoutTransition$CleanupCallback { void cleanup(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.animation.LayoutTransition$CleanupCallback { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition$CleanupCallback { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { com.android.internal.view.menu.MenuPopup createPopup(); }
-keepclassmembers class com.xlythe.math.Base { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$1 { void <init>(int[],java.lang.String[]); }
-keepclassmembers class com.xlythe.math.Base { com.xlythe.math.Base[] values(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void add_row(int,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,double,org.ejml.data.D1Submatrix64F,int,int,int); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { boolean hasNext(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$1 { java.lang.Object run(); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { java.lang.Object next(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void showPopup(int,int,boolean,boolean); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class com.xlythe.math.Base { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.util.ServiceLoader$LazyIterator { void <init>(java.util.ServiceLoader,java.lang.Class,java.lang.ClassLoader,java.util.ServiceLoader$1); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread$1 { void <init>(android.support.design.widget.ValueAnimatorCompatImplGingerbread); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { boolean computeHouseHolderCol(int,org.ejml.data.D1Submatrix64F,double[],int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { boolean isShowing(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void dismiss(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.DecimalFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread$1 { void run(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper { void onDismiss(); }
-keepclassmembers class com.xlythe.math.Base { int getQuickSerializable(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { boolean computeHouseHolderRow(int,org.ejml.data.D1Submatrix64F,double[],int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { org.ejml.data.Matrix64F getQ(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class android.view.ActionMode { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class android.view.ActionMode { int getType(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double computeTauAndDivideCol(int,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class android.view.ActionMode { void setType(int); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.view.ActionMode { void hide(long); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void failConversion(char,java.lang.Object); }
-keepclassmembers class android.view.ActionMode { void setTitleOptionalHint(boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { char getZero(java.util.Locale); }
-keepclassmembers class java.text.DecimalFormat { java.text.DecimalFormatSymbols getDecimalFormatSymbols(); }
-keepclassmembers class android.provider.Settings { boolean canDrawOverlays(android.content.Context); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <init>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper); }
-keepclassmembers class android.content.res.Configuration { void setLocales(android.os.LocaleList); }
-keepclassmembers class android.content.res.Configuration { android.os.LocaleList getLocales(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double computeTauAndDivideRow(int,org.ejml.data.D1Submatrix64F,int,int,double); }
-keepclassmembers class android.view.ActionMode { void invalidateContentRect(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { void householderSymmetric(int,double); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void failMismatch(java.util.Formatter$Flags,char); }
-keepclassmembers class android.view.MotionEvent { int getActionButton(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.view.PointerIcon { void <init>(int); }
-keepclassmembers class android.view.PointerIcon { android.view.PointerIcon getSystemIcon(android.content.Context,int); }
-keepclassmembers class java.text.DecimalFormat { int getGroupingSize(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager getInstance(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class java.text.DecimalFormat { void setDecimalSeparatorAlwaysShown(boolean); }
-keepclassmembers class java.text.DecimalFormat { boolean isGroupingUsed(); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class android.content.res.Configuration { boolean isScreenRound(); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Object clone(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void computeW_Column(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,double[],double[],int); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.provider.Settings { boolean isCallingPackageAllowedToPerformAppOpsProtectedOperation(android.content.Context,int,java.lang.String,boolean,int,java.lang.String[],boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class android.view.PointerIcon { android.view.PointerIcon load(android.content.res.Resources,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier { void <clinit>(); }
-keepclassmembers class android.icu.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void onReportFullscreenMode(boolean,boolean,java.lang.String); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.net.NetworkSecurityPolicy { void <init>(); }
-keepclassmembers class libcore.net.NetworkSecurityPolicy { void <clinit>(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class libcore.net.NetworkSecurityPolicy { libcore.net.NetworkSecurityPolicy getInstance(); }
-keepclassmembers class java.text.DecimalFormat { void updateFieldsFromIcu(); }
-keepclassmembers class sun.util.logging.PlatformLogger$1 { void <init>(); }
-keepclassmembers class sun.util.logging.PlatformLogger$1 { java.lang.Boolean run(); }
-keepclassmembers class android.transition.Slide$6 { void <init>(); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void computeY_t_V(int,org.ejml.data.D1Submatrix64F,int,double[]); }
-keepclassmembers class android.icu.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class android.provider.Settings { boolean isCallingPackageAllowedToDrawOverlays(android.content.Context,int,java.lang.String,boolean); }
-keepclassmembers class sun.util.logging.PlatformLogger$1 { java.lang.Object run(); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.animation.AnimationHandler$1 { void <init>(android.animation.AnimationHandler); }
-keepclassmembers class io.codetail.animation.SupportAnimator { void <init>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean isActive(android.view.View); }
-keepclassmembers class android.icu.impl.LocaleIDs { java.lang.String threeToTwoLetterLanguage(java.lang.String); }
-keepclassmembers class com.xlythe.math.Point { void <init>(float,float); }
-keepclassmembers class com.xlythe.math.Point { float getY(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void computeZ(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int,double[],double); }
-keepclassmembers class android.icu.impl.LocaleIDs { int findIndex(java.lang.String[],java.lang.String); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void <init>(android.support.v7.widget.ToolbarWidgetWrapper); }
-keepclassmembers class java.util.jar.JarFile$JarFileEntry { void <init>(java.util.jar.JarFile,java.util.zip.ZipEntry); }
-keepclassmembers class android.icu.impl.LocaleIDs { java.lang.String threeToTwoLetterRegion(java.lang.String); }
-keepclassmembers class android.view.PointerIcon { void loadResource(android.content.Context,android.content.res.Resources,int); }
-keepclassmembers class com.xlythe.math.Point { float getX(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean isFullscreenMode(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void setInputChannelLocked(android.view.InputChannel); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void finishInputLocked(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionHouseholder { void init(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void clearConnectionLocked(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void onClick(android.view.View); }
-keepclassmembers class java.text.DecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$20 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.icu.impl.UCharacterProperty$20 { int getValue(int); }
-keepclassmembers class android.icu.impl.LocaleIDs { void <clinit>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$20 { int getMaxValue(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void createPopupWindow(); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void setUp(); }
-keepclassmembers class java.text.DecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class java.text.DecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator$4 { void <init>(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { android.content.Context applyDefaultTheme(android.content.Context); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$Node nextNode(); }
-keepclassmembers class android.widget.PopupWindow$4 { void <init>(android.widget.PopupWindow,android.widget.PopupWindow$PopupDecorView,android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class java.text.DecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void initContentView(); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class java.text.DecimalFormat { void adjustForCurrencyDefaultFractionDigits(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean showSoftInput(android.view.View,int); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean hideSoftInputFromWindow(android.os.IBinder,int); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void divideElementsCol(int,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class android.widget.PopupWindow$4 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean showSoftInput(android.view.View,int,android.os.ResultReceiver); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class android.view.PointerIcon { int getSystemIconTypeIndex(int); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { boolean decomposeQR_block_col(int,org.ejml.data.D1Submatrix64F,double[]); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { java.lang.String getCurrencyPluralPattern(java.lang.String); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void onParentLostFocus(); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void show(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean isShowingUp(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double findMaxCol(int,org.ejml.data.D1Submatrix64F,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { java.lang.Object clone(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void measureContent(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void restartInput(android.view.View); }
-keepclassmembers class android.view.PointerIcon { void <clinit>(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean startInputInner(int,android.os.IBinder,int,int,int); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { void initialize(android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { java.lang.String select(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream { void <init>(sun.net.www.protocol.jar.JarURLConnection,java.io.InputStream); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { void <init>(android.icu.util.ULocale); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int getTextOffset(); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.PointerIcon$1 { void <init>(); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { void setupCurrencyPluralPattern(android.icu.util.ULocale); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.util.TextUtil { java.lang.String formatText(java.lang.String,com.xlythe.math.EquationFormatter,com.xlythe.math.Solver); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusIn(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.util.TextUtil { java.lang.String getCleanText(android.widget.TextView,com.xlythe.math.Solver); }
-keepclassmembers class android.icu.text.CurrencyPluralInfo { void <clinit>(); }
-keepclassmembers class sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream { void close(); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void initializeW(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean updateSuggestions(); }
-keepclassmembers class com.xlythe.calculator.material.util.TextUtil { java.lang.String removeFormatting(com.xlythe.math.Solver,java.lang.String); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int clipVertically(int); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusInLocked(android.view.View); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double findMaxRow(int,org.ejml.data.D1Submatrix64F,int,int); }
-keepclassmembers class com.xlythe.calculator.material.util.TextUtil { int countOccurrences(java.lang.String,char); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void focusOut(android.view.View); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { int getVerticalLocalPosition(int); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void scheduleCheckFocusLocked(android.view.View); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { boolean checkFocusNoStartInput(boolean); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class sun.net.ApplicationProxy { void <init>(java.net.Proxy); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void checkFocus(); }
-keepclassmembers class org.ejml.factory.DecompositionFactory { org.ejml.factory.EigenDecomposition eig(int,boolean,boolean); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void highlightTextDifferences(android.widget.Editor$SuggestionInfo,int,int); }
-keepclassmembers class sun.net.ApplicationProxy { sun.net.ApplicationProxy create(java.net.Proxy); }
-keepclassmembers class org.ejml.factory.DecompositionFactory { org.ejml.factory.EigenDecomposition eig(int,boolean); }
-keepclassmembers class java.lang.reflect.Proxy$KeyFactory { java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class org.ejml.factory.DecompositionFactory { org.ejml.factory.QRPDecomposition qrp(int,int); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { org.ejml.data.BlockMatrix64F initializeQ(org.ejml.data.BlockMatrix64F,int,int,int,boolean); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void replaceCharacterAndClose(java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.Proxy$KeyFactory { void <init>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void closeCurrentInput(); }
-keepclassmembers class java.lang.reflect.Proxy$KeyFactory { void <init>(java.lang.reflect.Proxy$1); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double innerProdCol(int,org.ejml.data.D1Submatrix64F,int,int,int,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean isShowing(); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Proxy$KeyFactory { java.lang.Object apply(java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.nio.ch.IOStatus { long normalize(long); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void <init>(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { boolean access$2100(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class org.ejml.factory.DecompositionFactory { org.ejml.alg.dense.decomposition.hessenberg.TridiagonalSimilarDecomposition tridiagonal(int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { void hide(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry { void <init>(android.content.res.ColorStateList,android.content.res.Configuration); }
-keepclassmembers class sun.nio.ch.IOStatus { boolean check(long); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onClick(android.view.View); }
-keepclassmembers class java.nio.DirectByteBuffer$MemoryRef { void <init>(long); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void setW(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingHistoryAdapter { void <init>(android.content.Context,com.xlythe.math.Solver,com.xlythe.math.History,com.xlythe.calculator.material.floating.FloatingHistoryAdapter$HistoryItemCallback); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void setup(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.ejml.factory.DecompositionFactory { org.ejml.factory.SingularValueDecomposition svd(int,int,boolean,boolean,boolean); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingHistoryAdapter { int getItemCount(); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { android.content.Context access$2800(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { double innerProdRow(int,org.ejml.data.D1Submatrix64F,int,org.ejml.data.D1Submatrix64F,int,int); }
-keepclassmembers class java.security.MessageDigest$Delegate { void engineUpdate(byte[],int,int); }
-keepclassmembers class java.security.MessageDigest$Delegate { void <init>(java.security.MessageDigestSpi,java.lang.String); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void updateSelection(android.view.View,int,int,int,int); }
-keepclassmembers class java.security.MessageDigest$Delegate { void engineUpdate(byte); }
-keepclassmembers class java.security.MessageDigest$Delegate { byte[] engineDigest(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void <init>(com.nineoldandroids.util.Property); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void multAdd_zeros(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow { android.widget.Editor$SuggestionInfo[] access$3000(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class java.security.MessageDigest$Delegate { void engineReset(); }
-keepclassmembers class sun.nio.ch.IOStatus { boolean checkAll(long); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(java.lang.String); }
-keepclassmembers class java.net.JarURLConnection { void parseSpecs(java.net.URL); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void <init>(java.lang.String,com.nineoldandroids.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void viewClicked(android.view.View); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class android.webkit.WebViewProviderResponse$1 { android.webkit.WebViewProviderResponse createFromParcel(android.os.Parcel); }
-keepclassmembers class android.webkit.WebViewProviderResponse$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void <init>(); }
-keepclassmembers class android.webkit.WebViewProviderResponse$1 { void <init>(); }
-keepclassmembers class java.text.DateFormatSymbols { java.text.DateFormatSymbols getInstanceRef(java.util.Locale); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void <init>(com.nineoldandroids.util.Property,com.nineoldandroids.animation.PropertyValuesHolder$1); }
-keepclassmembers class java.text.DateFormatSymbols { java.text.DateFormatSymbols getInstance(java.util.Locale); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { int getAbsoluteGravity(int,int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$2 { void <init>(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class java.text.DateFormatSymbols { java.text.DateFormatSymbols getCachedInstance(java.util.Locale); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getEras(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$2 { java.net.Socket run(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getMonths(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void multBlockAdd_zerosone(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.icu.impl.Trie2$1 { int map(int); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortMonths(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void applyQTran(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getWeekdays(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$2 { java.lang.Object run(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.icu.impl.Trie2$1 { void <init>(); }
-keepclassmembers class libcore.util.NativeAllocationRegistry$CleanerRunner { void run(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortWeekdays(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getTinyMonths(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton$1 { void <init>(android.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.widget.ActionMenuPresenter); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getStandAloneMonths(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getAmPmStrings(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class libcore.util.NativeAllocationRegistry$CleanerRunner { void <init>(sun.misc.Cleaner); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getTinyWeekdays(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton$1 { com.android.internal.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] getZoneStrings(); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortStandAloneMonths(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getTinyStandAloneMonths(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getStandAloneWeekdays(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getShortStandAloneWeekdays(); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { boolean decompose(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getTinyStandAloneWeekdays(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStopped(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStarted(); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { org.ejml.data.BlockMatrix64F getQR(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { void <init>(); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { void <init>(java.util.Map,java.util.Set,java.util.Map); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void setSaveW(boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockMatrix64HouseholderQR { void updateA(org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.text.DateFormatSymbols { void initializeData(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback { void <init>(com.android.internal.view.menu.IconMenuPresenter); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void dispatchKeyEventFromInputMethod(android.view.View,android.view.KeyEvent); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class java.text.DateFormatSymbols { void initializeSupplementaryData(libcore.icu.LocaleData); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.content.res.Resources$ThemeKey { void append(int,boolean); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] getZoneStringsWrapper(); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { android.icu.impl.locale.Extension getExtension(java.lang.Character); }
-keepclassmembers class android.content.res.Resources$ThemeKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { java.util.Set getKeys(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void flushPendingEventsLocked(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] getZoneStringsImpl(boolean); }
-keepclassmembers class sun.util.calendar.Era { java.lang.String getAbbreviation(); }
-keepclassmembers class sun.util.calendar.Era { java.lang.String getName(); }
-keepclassmembers class android.content.res.Resources$ThemeKey { int hashCode(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.content.res.Resources$ThemeKey { void setTo(android.content.res.Resources$ThemeKey); }
-keepclassmembers class android.content.res.Resources$ThemeKey { void <init>(); }
-keepclassmembers class sun.util.calendar.Era { void <init>(java.lang.String,java.lang.String,long,boolean); }
-keepclassmembers class java.text.DateFormatSymbols { void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class java.text.DateFormatSymbols { boolean isSubclassObject(); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { java.lang.String getUnicodeLocaleType(java.lang.String); }
-keepclassmembers class android.content.res.Resources$ThemeKey { android.content.res.Resources$ThemeKey clone(); }
-keepclassmembers class sun.util.calendar.Era { boolean isLocalTime(); }
-keepclassmembers class sun.util.calendar.Era { sun.util.calendar.CalendarDate getSinceDate(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$4 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class sun.util.calendar.Era { long getSince(java.util.TimeZone); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { java.lang.String toID(java.util.SortedMap); }
-keepclassmembers class sun.util.calendar.Era { int hashCode(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$6 { void <init>(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class sun.util.calendar.Era { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class android.icu.impl.locale.LocaleExtensions { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void rank1UpdateMultR_Col(int,org.ejml.data.D1Submatrix64F,int,double); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { void notifyUserAction(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$6 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class sun.util.calendar.Era { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { boolean getBoolean(int); }
-keepclassmembers class android.view.View$MeasureSpec { int makeSafeMeasureSpec(int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getColor(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Cache { android.icu.impl.locale.BaseLocale createObject(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void <init>(android.content.res.Resources); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Cache { void <init>(); }
-keepclassmembers class java.text.DateFormatSymbols { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Cache { android.icu.impl.locale.BaseLocale$Key normalizeKey(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getDimensionPixelSize(int); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.view.Gravity { boolean isVertical(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class android.view.Gravity { boolean isHorizontal(int); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Cache { java.lang.Object normalizeKey(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Cache { java.lang.Object createObject(java.lang.Object); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getInteger(int); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class java.net.Inet4Address { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceEntryName(int); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(java.lang.String); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceName(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence getText(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class org.ejml.alg.block.decomposition.qr.BlockHouseHolder { void scale_row(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,int,int,double); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { boolean isCursorBeingModified(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView access$3800(android.widget.Editor$InsertionPointCursorController); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class com.nineoldandroids.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { boolean isActive(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void invalidateHandle(); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class org.ejml.simple.SimpleBase { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class java.lang.ref.SoftReference { java.lang.Object get(); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class java.net.Inet4Address { byte[] getAddress(); }
-keepclassmembers class android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class java.net.Inet4Address { java.lang.String getHostAddress(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$000(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class java.net.Inet4Address { java.lang.String numericToTextFormat(byte[]); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class java.net.Inet4Address { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class org.ejml.simple.SimpleBase { double determinant(); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase copy(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.nio.file.attribute.PosixFilePermissions$1 { void <init>(java.util.Set); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$1 { void <clinit>(); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class android.icu.text.Collator$ASCII { boolean equalIgnoreCase(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(java.lang.String); }
-keepclassmembers class org.ejml.simple.SimpleBase { double get(int,int); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.data.DenseMatrix64F getMatrix(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase invert(); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class java.util.regex.Matcher { int getMatchedGroupIndex(long,java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class java.util.regex.Matcher { int getMatchedGroupIndex0(long,java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { long getNativeFinalizer(); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class java.util.regex.Matcher { int nativeSize(); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase mult(org.ejml.simple.SimpleBase); }
-keepclassmembers class org.ejml.simple.SimpleBase { int numRows(); }
-keepclassmembers class java.util.regex.Matcher { void <clinit>(); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class org.ejml.simple.SimpleBase { int numCols(); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase minus(org.ejml.simple.SimpleBase); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase pseudoInverse(); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase scale(double); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { void applyStyle(int,boolean); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { void <init>(android.content.res.ResourcesImpl); }
-keepclassmembers class org.ejml.simple.SimpleBase { void set(int,int,double); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase plus(org.ejml.simple.SimpleBase); }
-keepclassmembers class android.graphics.drawable.RippleForeground$2 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleForeground$2 { java.lang.Float get(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { android.content.res.Resources$ThemeKey getKey(); }
-keepclassmembers class java.io.ObjectOutputStream$1 { void <init>(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.RippleForeground$2 { void setValue(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.io.ObjectOutputStream$1 { java.lang.Boolean run(); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { void setTo(android.content.res.ResourcesImpl$ThemeImpl); }
-keepclassmembers class java.io.ObjectOutputStream$1 { java.lang.Object run(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class java.util.IdentityHashMap { int capacity(int); }
-keepclassmembers class java.util.IdentityHashMap { void init(int); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object maskNull(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleForeground$2 { void setValue(java.lang.Object,float); }
-keepclassmembers class java.util.IdentityHashMap { boolean isEmpty(); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(int); }
-keepclassmembers class org.ejml.simple.SimpleBase { org.ejml.simple.SimpleBase transpose(); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { android.content.res.TypedArray obtainStyledAttributes(android.content.res.Resources$Theme,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class org.ejml.simple.SimpleBase { java.lang.String toString(); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.Point { void <init>(int,int); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { android.content.res.TypedArray resolveAttributes(android.content.res.Resources$Theme,int[],int[]); }
-keepclassmembers class java.util.IdentityHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.IdentityHashMap { int nextKeyIndex(int,int); }
-keepclassmembers class android.graphics.Point { void set(int,int); }
-keepclassmembers class java.util.IdentityHashMap { int hash(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class android.content.res.ResourcesImpl$ThemeImpl { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { int getCaseMapCPStart(); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void setText(android.icu.text.Replaceable); }
-keepclassmembers class java.util.IdentityHashMap { boolean resize(int); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void <init>(); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void setLimit(int); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { android.content.pm.FeatureInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void setIndex(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { android.content.pm.FeatureInfo[] newArray(int); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { void <init>(); }
-keepclassmembers class java.util.IdentityHashMap { void closeDeletion(int); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void setContextLimits(int,int); }
-keepclassmembers class android.content.pm.FeatureInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { int replace(java.lang.String); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { boolean didReachLimit(); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { void reset(int); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { int nextCaseMapCP(); }
-keepclassmembers class java.io.OptionalDataException { void <init>(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.util.IdentityHashMap { java.util.Set keySet(); }
-keepclassmembers class android.icu.text.ReplaceableContextIterator { int next(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateCount(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateDrawableIndex(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.util.Property getProperty(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { double getDistance(com.xlythe.math.Point,com.xlythe.math.Point); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { void setMode(int,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { void setMode(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable getStateDrawable(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class java.io.OptionalDataException { void <init>(boolean); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createNativeTreeFromCopy(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createNativeTree(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void onTreeConstructionFinished(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { long getNativeRenderer(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.transition.Slide$3 { void <init>(); }
-keepclassmembers class android.icu.text.NumberingSystem$LocaleLookupData { void <init>(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class java.util.IdentityHashMap { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$DisabledElevationAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$DisabledElevationAnimation { float getTargetShadowSize(); }
-keepclassmembers class android.transition.ChangeTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$3 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean setDensity(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void applyDensityScaling(int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { double square(double); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean isStateful(); }
-keepclassmembers class android.view.View$ForegroundInfo { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { float getAlpha(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$3 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void setViewportSize(float,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$3 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.view.KeyboardShortcutInfo { void <init>(java.lang.CharSequence,char,int); }
-keepclassmembers class android.view.View$ForegroundInfo { boolean access$102(android.view.View$ForegroundInfo,boolean); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.KeyboardShortcutInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean setAlpha(float); }
-keepclassmembers class android.view.View$ForegroundInfo { android.graphics.drawable.Drawable access$1302(android.view.View$ForegroundInfo,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.View$ForegroundInfo { void <init>(android.view.View$1); }
-keepclassmembers class android.view.View$ForegroundInfo { int access$2200(android.view.View$ForegroundInfo); }
-keepclassmembers class android.view.View$ForegroundInfo { boolean access$1802(android.view.View$ForegroundInfo,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void access$000(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.view.View$ForegroundInfo { boolean access$100(android.view.View$ForegroundInfo); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <clinit>(); }
-keepclassmembers class android.view.KeyboardShortcutInfo { void <clinit>(); }
-keepclassmembers class android.view.View$ForegroundInfo { android.graphics.Rect access$2400(android.view.View$ForegroundInfo); }
-keepclassmembers class android.view.View$ForegroundInfo { android.graphics.drawable.Drawable access$1300(android.view.View$ForegroundInfo); }
-keepclassmembers class android.content.UndoManager { void <init>(); }
-keepclassmembers class android.view.View$ForegroundInfo { android.view.View$TintInfo access$2302(android.view.View$ForegroundInfo,android.view.View$TintInfo); }
-keepclassmembers class android.view.View$ForegroundInfo { int access$2202(android.view.View$ForegroundInfo,int); }
-keepclassmembers class android.content.UndoManager { android.content.UndoOwner getOwner(java.lang.String,java.lang.Object); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class android.view.View$ForegroundInfo { android.graphics.Rect access$2500(android.view.View$ForegroundInfo); }
-keepclassmembers class android.content.UndoManager { void saveInstanceState(android.os.Parcel); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class android.view.View$ForegroundInfo { android.view.View$TintInfo access$2300(android.view.View$ForegroundInfo); }
-keepclassmembers class android.view.View$ForegroundInfo { boolean access$1800(android.view.View$ForegroundInfo); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class android.content.UndoManager { void restoreInstanceState(android.os.Parcel,java.lang.ClassLoader); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator { void <init>(); }
-keepclassmembers class android.content.UndoManager { void removeOwner(android.content.UndoOwner); }
-keepclassmembers class android.content.UndoManager { android.content.UndoOwner restoreOwner(android.os.Parcel); }
-keepclassmembers class org.ejml.alg.dense.mult.VectorVectorMult { double innerProd(org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class java.util.Collections$EmptyIterator { void <init>(); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class android.content.UndoManager { void saveOwner(android.content.UndoOwner,android.os.Parcel); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class java.util.Collections$EmptyIterator { java.lang.Object next(); }
-keepclassmembers class android.content.UndoManager { int undo(android.content.UndoOwner[],int); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyIterator { boolean hasNext(); }
-keepclassmembers class java.util.Collections$EmptyIterator { void remove(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class java.util.logging.LogManager$1 { java.util.logging.LogManager run(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void computeRotation(double,double); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyIterator { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveString { void <init>(java.lang.String); }
-keepclassmembers class android.content.UndoManager { int redo(android.content.UndoOwner[],int); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveString { java.lang.String value(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.RippleForeground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.logging.LogManager$1 { java.lang.Object run(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$1 { void <init>(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ActionMenuPresenter { void <init>(android.content.Context); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveString { boolean equals(java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double computeShift(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveString { int hashCode(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class android.content.UndoManager { boolean isInUndo(); }
-keepclassmembers class android.content.UndoManager { int forgetUndos(android.content.UndoOwner[],int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFullScreen(boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double computeWilkinsonShift(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { void checkBuildRulesIdMaps(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class android.content.UndoManager { int forgetRedos(android.content.UndoOwner[],int); }
-keepclassmembers class io.codetail.widget.RevealFrameLayout { void setCenter(float,float); }
-keepclassmembers class java.util.Collections$UnmodifiableSortedMap { void <init>(java.util.SortedMap); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class android.widget.ActionMenuPresenter { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class io.codetail.widget.RevealFrameLayout { void setTarget(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double[] copyDiag(double[]); }
-keepclassmembers class android.content.UndoManager { int countUndos(android.content.UndoOwner[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class android.content.UndoManager { int countRedos(android.content.UndoOwner[]); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double[] copyEigenvalues(double[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double[] copyOff(double[]); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { java.util.Map getLocaleIdToRulesIdMap(android.icu.text.PluralRules$PluralType); }
-keepclassmembers class android.widget.ActionMenuPresenter { void setReserveOverflow(boolean); }
-keepclassmembers class org.javia.arity.DeclarationParser { java.lang.String[] argNames(); }
-keepclassmembers class org.javia.arity.DeclarationParser { void <init>(org.javia.arity.SyntaxException); }
-keepclassmembers class android.widget.ActionMenuPresenter { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.content.UndoManager { void beginUpdate(java.lang.CharSequence); }
-keepclassmembers class android.widget.ActionMenuPresenter { void setItemLimit(int); }
-keepclassmembers class org.javia.arity.DeclarationParser { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class android.widget.ActionMenuPresenter { void setWidthLimit(int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void createBulge(int,double,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void <init>(); }
-keepclassmembers class android.content.UndoManager { void createWorkingState(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void checkSplitPerformImplicit(); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { void <init>(sun.security.util.DerValue); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class android.widget.ActionMenuPresenter { com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class android.widget.ActionMenuPresenter { android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class org.javia.arity.DeclarationParser { void start(); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { android.icu.text.PluralRules getRulesForRulesId(java.lang.String); }
-keepclassmembers class org.javia.arity.DeclarationParser { void push(org.javia.arity.Token); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { byte[] getEncoded(); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { byte[] getEncoded0(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { java.lang.String getRulesIdForLocale(android.icu.util.ULocale,android.icu.text.PluralRules$PluralType); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class android.widget.ActionMenuPresenter { void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView$ItemView); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.content.UndoManager { android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { boolean findNextEigenvalue(); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class android.content.UndoManager { void addOperation(android.content.UndoOperation,int); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { void setCertificateIssuer(javax.security.auth.x500.X500Principal,javax.security.auth.x500.X500Principal); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class android.content.UndoManager { void endUpdate(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void createBulge2by2(int,double,boolean); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { java.lang.String toString(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void eigenvalue2by2(int); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.content.UndoManager { void pushWorkingState(); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.content.UndoManager { int commitState(android.content.UndoOwner); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void exceptionalShift(); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { android.icu.util.UResourceBundle getPluralBundle(); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { android.icu.text.PluralRules forLocale(android.icu.util.ULocale,android.icu.text.PluralRules$PluralType); }
-keepclassmembers class android.content.UndoManager { android.content.UndoManager$UndoState getTopUndo(android.content.UndoOwner[]); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void incrementSteps(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void clearSourceNode(); }
-keepclassmembers class java.util.Collections$SingletonMap { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.PluralRulesLoader { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$SingletonMap { boolean isEmpty(); }
-keepclassmembers class sun.util.locale.BaseLocale$Cache { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void moveToNextSplit(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void init(double[],double[],int); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { boolean isZero(int); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$RgKeyValueTypeHandler { void <init>(); }
-keepclassmembers class android.content.UndoManager { boolean matchOwners(android.content.UndoManager$UndoState,android.content.UndoOwner[]); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class java.util.Collections$SingletonMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class sun.util.locale.BaseLocale$Cache { sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class sun.util.locale.BaseLocale$Cache { sun.util.locale.BaseLocale$Key normalizeKey(sun.util.locale.BaseLocale$Key); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void solveEigenvectorDuplicateEigenvalue(double,int,boolean); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { boolean nextSplit(); }
-keepclassmembers class android.content.UndoManager { int findPrevState(java.util.ArrayList,android.content.UndoOwner[],int); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$RgKeyValueTypeHandler { void <clinit>(); }
-keepclassmembers class sun.util.locale.BaseLocale$Cache { java.lang.Object normalizeKey(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$RgKeyValueTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class java.io.File { boolean isInvalid(); }
-keepclassmembers class java.util.Collections$SingletonMap { java.util.Set keySet(); }
-keepclassmembers class sun.util.locale.BaseLocale$Cache { java.lang.Object createObject(java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void performImplicitSingleStep(double,boolean); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class android.content.UndoManager { int findNextState(java.util.ArrayList,android.content.UndoOwner[],int); }
-keepclassmembers class java.io.File { int getPrefixLength(); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.io.File); }
-keepclassmembers class android.widget.ActionMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class java.util.logging.LogRecord { int defaultThreadID(); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { sun.security.x509.Extension getExtension(sun.security.util.ObjectIdentifier); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { void parse(sun.security.util.DerValue); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$ValueIterator { void <init>(java.util.TreeMap,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { int compareTo(sun.security.x509.X509CRLEntryImpl); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void removeBulge(int); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator { void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void solveUsingTriangle(double,int,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { sun.security.x509.CertificateIssuerExtension getCertificateIssuerExtension(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator { void register(); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class java.util.TreeMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { void solveWithLU(double,int,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void removeBulgeEnd(int); }
-keepclassmembers class android.icu.text.UnescapeTransliterator { void <init>(java.lang.String,char[]); }
-keepclassmembers class sun.security.x509.X509CRLEntryImpl { int compareTo(java.lang.Object); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.icu.text.UnescapeTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.icu.text.EscapeTransliterator$5 { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$5 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String getCanonicalPath(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void reset(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$COWIterator { void <init>(java.lang.Object[],int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { boolean extractVectors(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class java.io.File { java.lang.String slashify(java.lang.String,boolean); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$COWIterator { boolean hasNext(); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class android.view.DragAndDropPermissions { void <init>(com.android.internal.view.IDragAndDropPermissions); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void resetSteps(); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class android.view.DragAndDropPermissions { android.view.DragAndDropPermissions obtain(android.view.DragEvent); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$COWIterator { java.lang.Object next(); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void setSubmatrix(int,int); }
-keepclassmembers class java.text.FieldPosition { int getBeginIndex(); }
-keepclassmembers class android.view.DragAndDropPermissions { boolean take(android.os.IBinder); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double[] swapDiag(double[]); }
-keepclassmembers class android.icu.text.TransliteratorIDParser$Specs { void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { double[] swapOff(double[]); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void setQ(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$FieldDelegate getFieldDelegate(); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean showOverflowMenu(); }
-keepclassmembers class android.view.DragAndDropPermissions { boolean takeTransient(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.symm.SymmetricQREigenHelper { void updateQ(int,int,double,double); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class android.view.DragAndDropPermissions { void release(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class java.text.FieldPosition { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class java.text.FieldPosition { java.lang.String toString(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInflaterInputStream { void <init>(java.util.zip.ZipFile,java.util.zip.ZipFile$ZipFileInputStream,java.util.zip.Inflater,int); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInflaterInputStream { void close(); }
-keepclassmembers class java.text.FieldPosition { int hashCode(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { boolean findQandR(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class android.widget.Editor$SuggestionSpanInfo { void <init>(); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean dismissPopupMenus(); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class android.view.DragAndDropPermissions { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInflaterInputStream { void fill(); }
-keepclassmembers class android.widget.Editor$SuggestionSpanInfo { void <init>(android.widget.Editor$1); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean hideSubMenus(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class java.text.FieldPosition { boolean matchesField(java.text.Format$Field,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class java.text.FieldPosition { boolean access$200(java.text.FieldPosition,java.text.Format$Field,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean isOverflowMenuShowing(); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class android.widget.ActionMenuPresenter { boolean hideOverflowMenu(); }
-keepclassmembers class io.codetail.widget.RevealView { void <init>(android.content.Context); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInflaterInputStream { int available(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { org.ejml.data.DenseMatrix64F[] getEigenvectors(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$13 { void <init>(android.icu.impl.UCharacterProperty); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$13 { int getValue(int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$DisplayAnimator { void <init>(com.xlythe.calculator.material.view.CalculatorPadView,float,float); }
-keepclassmembers class io.codetail.widget.RevealView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvector { boolean process(org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable getFrame(int); }
-keepclassmembers class io.codetail.widget.RevealView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.ClassCastException { void <init>(); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class io.codetail.widget.RevealView { void setTarget(android.view.View); }
-keepclassmembers class io.codetail.widget.RevealView { void setRevealColor(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class io.codetail.widget.RevealView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class io.codetail.widget.RevealView { void setCenter(float,float); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.Intent$ShortcutIconResource { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class android.content.Intent$ShortcutIconResource { void <init>(); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass0(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class android.content.Intent$ShortcutIconResource { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$DisplayAnimator { void onUpdate(float); }
-keepclassmembers class android.content.Intent$ShortcutIconResource { android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class android.view.Display$Mode { void <init>(int,int,int,float); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$Hangul { boolean isHangulWithoutJamoT(char); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void completeDeferredDestroyActionMode(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void dispatchMenuVisibilityChanged(boolean); }
-keepclassmembers class android.content.Intent$ShortcutIconResource { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.Display$Mode { float getRefreshRate(); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$Hangul { int decompose(int,java.lang.Appendable); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$2 { void onGlobalLayout(); }
-keepclassmembers class android.view.Display$Mode { int getModeId(); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.widget.ActionMenuPresenter { android.widget.ActionMenuPresenter$OverflowPopup access$1100(android.widget.ActionMenuPresenter); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class android.widget.ActionMenuPresenter { com.android.internal.view.menu.MenuBuilder access$1400(android.widget.ActionMenuPresenter); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class android.widget.ActionMenuPresenter { android.widget.ActionMenuPresenter$OpenOverflowRunnable access$1200(android.widget.ActionMenuPresenter); }
-keepclassmembers class android.widget.ActionMenuPresenter { com.android.internal.view.menu.MenuBuilder access$1300(android.widget.ActionMenuPresenter); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class android.view.Display$Mode { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class android.widget.ActionMenuPresenter { android.widget.ActionMenuPresenter$OverflowPopup access$1102(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter$OverflowPopup); }
-keepclassmembers class libcore.io.MemoryMappedFile { void close(); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class android.graphics.drawable.DrawableInflater { void <init>(android.content.res.Resources,java.lang.ClassLoader); }
-keepclassmembers class libcore.io.MemoryMappedFile { void checkNotClosed(); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.view.Display$Mode { void <init>(android.os.Parcel,android.view.Display$1); }
-keepclassmembers class android.icu.text.TimeZoneNames { java.lang.String getDisplayName(java.lang.String,android.icu.text.TimeZoneNames$NameType,long); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.MemoryMappedFile { int size(); }
-keepclassmembers class android.icu.text.TimeZoneNames { android.icu.text.TimeZoneNames getInstance(android.icu.util.ULocale); }
-keepclassmembers class android.view.Display$Mode { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object access$200(); }
-keepclassmembers class android.icu.text.TimeZoneNames { android.icu.text.TimeZoneNames getInstance(java.util.Locale); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List access$300(java.lang.Class[]); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List access$600(java.util.List); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.Method[],java.lang.Class[][]); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class access$700(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.Method[],java.lang.Class[][]); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class java.lang.reflect.Proxy { void access$500(java.util.List); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.Comparator access$400(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class android.graphics.drawable.DrawableInflater { android.graphics.drawable.Drawable inflateFromXml(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class android.icu.text.TimeZoneNames { void <clinit>(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void <init>(android.widget.TextView); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.DrawableInflater { android.graphics.drawable.Drawable inflateFromTag(java.lang.String); }
-keepclassmembers class android.icu.text.TitlecaseTransliterator$1 { void <init>(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class android.icu.text.TitlecaseTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.EscapeTransliterator$1 { void <init>(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.io.File,int); }
-keepclassmembers class android.icu.text.TimeZoneNames { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { boolean moveSharedPreferencesFrom(android.content.Context,java.lang.String); }
-keepclassmembers class android.icu.text.TimeZoneNames { android.icu.text.TimeZoneNames$Factory access$100(); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$15 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPreferencesPath(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteSharedPreferences(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$15 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDataDir(); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$5 { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class com.xlythe.calculator.material.view.GraphView { void setZoomLevel(float); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.InputStream); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.graphics.drawable.DrawableInflater { android.graphics.drawable.Drawable inflateFromClass(java.lang.String); }
-keepclassmembers class io.codetail.animation.ViewAnimationUtils { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class java.util.PropertyResourceBundle { java.lang.Object handleGetObject(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class java.util.PropertyResourceBundle { java.util.Enumeration getKeys(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { boolean isStartHandle(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class io.codetail.animation.ViewAnimationUtils { com.nineoldandroids.animation.Animator$AnimatorListener getRevealFinishListener(io.codetail.animation.RevealAnimator,android.graphics.Rect); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { void updateSelection(int); }
-keepclassmembers class android.graphics.drawable.DrawableInflater { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { boolean moveDatabaseFrom(android.content.Context,java.lang.String); }
-keepclassmembers class android.widget.PopupMenu$2 { void onDismiss(); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { void updatePosition(float,float); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$2 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class java.net.SocksSocketImpl$1 { void <init>(java.net.SocksSocketImpl,java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.ParseStatus { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void showForActionMode(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.widget.PopupMenu$2 { void <init>(android.widget.PopupMenu); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$Cache { void <init>(int); }
-keepclassmembers class java.net.SocksSocketImpl$1 { java.lang.Void run(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class android.icu.impl.locale.ParseStatus { boolean isError(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$Cache { void moveToFront(java.lang.Object[],int); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class java.net.SocksSocketImpl$1 { java.lang.Object run(); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$6 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Trie2$Range { void <init>(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$Cache { java.lang.Object forName(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void hideForActionMode(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$6 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { int access$1200(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class io.codetail.animation.ViewAnimationUtils { io.codetail.animation.SupportAnimator createCircularReveal(android.view.View,int,int,float,float); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { int access$1202(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$6 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { int access$1600(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$6 { void setValue(java.lang.Object,float); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class android.content.ContextWrapper { boolean canStartActivityForResult(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean checkShowingFlags(boolean,boolean,boolean); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class org.ejml.alg.dense.linsol.qr.LinearSolverQrBlock64 { void <init>(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void updateVisibility(boolean); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(byte[]); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int applyAlpha(int,float); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigNativeToJava(int); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void doShow(boolean); }
-keepclassmembers class java.util.jar.JarVerifier { void beginEntry(java.util.jar.JarEntry,sun.security.util.ManifestEntryVerifier); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigJavaToNative(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { int currentStart(); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { int currentEnd(); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { boolean isDone(); }
-keepclassmembers class java.util.jar.JarVerifier { void update(int,sun.security.util.ManifestEntryVerifier); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { java.lang.String next(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void doHide(boolean); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[]); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { boolean hasNext(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$5 { void onClick(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.jar.JarVerifier { void processEntry(sun.security.util.ManifestEntryVerifier); }
-keepclassmembers class android.app.Activity { void onStateNotSaved(); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { android.icu.impl.locale.StringTokenIterator setStart(int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] getArray(); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { java.lang.String current(); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class java.lang.reflect.WeakCache$LookupValue { int hashCode(); }
-keepclassmembers class java.lang.reflect.WeakCache$LookupValue { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter { void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void setArray(java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int,int); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$2 { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.locale.StringTokenIterator { int nextDelimiter(int); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { void positionAndAdjustForCrossingHandles(int); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class java.lang.reflect.WeakCache$LookupValue { void <init>(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int size(); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteractionRoot(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.util.jar.JarVerifier { void update(int,byte[],int,int,sun.security.util.ManifestEntryVerifier); }
-keepclassmembers class android.app.Activity { boolean isLocalVoiceInteractionSupported(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int); }
-keepclassmembers class android.app.Activity { void startLocalVoiceInteraction(android.os.Bundle); }
-keepclassmembers class android.app.Activity { void onLocalVoiceInteractionStarted(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$LocaleEntry { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int); }
-keepclassmembers class android.app.Activity { void stopLocalVoiceInteraction(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void animateToMode(boolean); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class java.lang.Integer { int formatUnsignedInt(int,int,char[],int,int); }
-keepclassmembers class android.app.Activity { void onLocalVoiceInteractionStopped(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { boolean positionNearEdgeOfScrollingView(float,boolean); }
-keepclassmembers class java.lang.Integer { java.lang.String toUnsignedString0(int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean shouldAnimateContextView(); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { boolean isAtRtlRun(android.text.Layout,int); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { float getHorizontal(android.text.Layout,int); }
-keepclassmembers class android.app.Activity { void onProvideAssistContent(android.app.assist.AssistContent); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { float getHorizontal(android.text.Layout,int,boolean); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { void <init>(com.android.internal.view.menu.MenuBuilder,android.view.LayoutInflater,boolean); }
-keepclassmembers class java.lang.Integer { void getChars(int,int,char[]); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { void setForceShowIcon(boolean); }
-keepclassmembers class java.util.jar.JarVerifier { java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[]); }
-keepclassmembers class android.app.Activity { boolean showAssist(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean needMirroring(); }
-keepclassmembers class android.widget.Editor$SelectionHandleView { int getOffsetAtCoordinate(android.text.Layout,int,float); }
-keepclassmembers class android.content.pm.ActivityInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class org.javia.arity.CompiledFunction { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { com.android.internal.view.menu.MenuBuilder getAdapterMenu(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class android.app.Activity { void requestShowKeyboardShortcuts(); }
-keepclassmembers class android.app.Activity { void dismissKeyboardShortcutsHelper(); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { int getCount(); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { com.android.internal.view.menu.MenuItemImpl getItem(int); }
-keepclassmembers class java.util.jar.JarVerifier { boolean nothingToVerify(); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class org.javia.arity.CompiledFunction { void <init>(int,byte[],double[],double[],org.javia.arity.Function[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { long getItemId(int); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class android.content.pm.ActivityInfo { void <init>(android.os.Parcel,android.content.pm.ActivityInfo$1); }
-keepclassmembers class org.javia.arity.CompiledFunction { double evalComplexToReal(double[],org.javia.arity.EvalContext); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$4 { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class java.lang.Integer { int stringSize(int); }
-keepclassmembers class org.javia.arity.CompiledFunction { int execComplex(org.javia.arity.EvalContext,int); }
-keepclassmembers class java.util.jar.JarVerifier { void doneWithMeta(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$4 { void setValue(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class android.app.Activity { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RippleForeground$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class com.android.internal.view.menu.MenuAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean isInMultiWindowMode(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.Activity { boolean isInPictureInPictureMode(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getSystemServiceName(java.lang.Class); }
-keepclassmembers class android.app.Activity { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class org.javia.arity.CompiledFunction { int execReal(org.javia.arity.EvalContext,int); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object,java.lang.Object[],int); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$4 { java.lang.Float get(android.graphics.drawable.RippleForeground); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class android.app.Activity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class android.app.Activity { void enterPictureInPictureMode(); }
-keepclassmembers class android.app.Activity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean access$000(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String,int); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class org.javia.arity.CompiledFunction { org.javia.arity.Function makeOpFunction(int); }
-keepclassmembers class android.content.ContextWrapper { int checkSelfPermission(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.view.View access$100(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.ActionBarContainer access$200(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.ActionBarContainer access$300(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int access$400(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.animation.Animator access$502(com.android.internal.app.WindowDecorActionBar,android.animation.Animator); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.ActionBarOverlayLayout access$600(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean access$700(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean access$800(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class org.javia.arity.CompiledFunction { int arity(); }
-keepclassmembers class org.javia.arity.CompiledFunction { double eval(double[],org.javia.arity.EvalContext); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean access$900(boolean,boolean,boolean); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class java.lang.Integer { int hashCode(int); }
-keepclassmembers class android.app.Activity { void onLowMemory(); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.ActionBarContextView access$1000(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class org.javia.arity.CompiledFunction { org.javia.arity.Complex eval(org.javia.arity.Complex[],org.javia.arity.EvalContext); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer getInteger(java.lang.String,java.lang.Integer); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar access$1100(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer getInteger(java.lang.String,int); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer decode(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class org.javia.arity.CompiledFunction { int execWithoutCheck(org.javia.arity.EvalContext,int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$3 { void onClick(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class java.util.Vector$Itr { void <init>(java.util.Vector); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class java.util.Vector$Itr { boolean hasNext(); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class java.lang.Integer { int highestOneBit(int); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class android.widget.LinearLayout { boolean allViewsAreGoneBefore(int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class android.icu.impl.UCharacterProperty$NormInertBinaryProperty { void <init>(android.icu.impl.UCharacterProperty,int,int); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.content.res.Resources); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class android.widget.RemoteViews$1 { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.icu.impl.UCharacterProperty$NormInertBinaryProperty { boolean contains(int); }
-keepclassmembers class java.util.Vector$Itr { java.lang.Object next(); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class android.support.graphics.drawable.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.OverScroller { int getFinalY(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDeviceProtectedStorageContext(); }
-keepclassmembers class android.content.ContextWrapper { android.view.Display getDisplay(); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createCredentialProtectedStorageContext(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getOpacity(); }
-keepclassmembers class android.content.ContextWrapper { boolean isDeviceProtectedStorage(); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Activity { void setContentView(int); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$3 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.content.pm.PackageItemInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.Activity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$3 { void run(); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton$1 { void <clinit>(); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class android.content.ContextWrapper { boolean isCredentialProtectedStorage(); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class java.util.Vector$Itr { void checkForComodification(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.Vector$Itr { void <init>(java.util.Vector,java.util.Vector$1); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getAlpha(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void onFailure(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void finish(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void onSuccess(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorCreateShortCutActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAllowCaching(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void computeVectorSize(); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class android.app.Activity { void onContentChanged(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(boolean); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { void exitFreeformMode(); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class android.app.Activity { int getWindowStackId(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.app.Activity { void enterPictureInPictureModeIfPossible(); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureActionButtonIsNonZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void <init>(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class android.app.Activity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class android.icu.impl.UCaseProps { void readData(java.nio.ByteBuffer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.icu.impl.UCaseProps { void <init>(); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void accessCheck(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void throwAccessCheckException(java.lang.Object); }
-keepclassmembers class android.icu.impl.UCaseProps { void addPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.impl.UCaseProps { int getExceptionsOffset(int); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean hasSlot(int,int); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean propsHasException(int); }
-keepclassmembers class android.app.Activity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void valueCheck(java.lang.Object); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class android.icu.impl.UCaseProps { byte slotOffset(int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void throwCCE(); }
-keepclassmembers class android.icu.impl.UCaseProps { long getSlotValueAndOffset(int,int,int); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class org.javia.arity.CompiledFunction { int execWithoutCheckComplex(org.javia.arity.EvalContext,int,int); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class android.icu.impl.UCaseProps { int tolower(int); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void <init>(android.content.Context,android.content.res.TypedArray); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class android.icu.impl.UCaseProps { int getSlotValue(int,int,int); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getColor(int,int); }
-keepclassmembers class android.icu.impl.UCaseProps { void addCaseClosure(int,android.icu.text.UnicodeSet); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$7 { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class java.util.TreeMap$EntryIterator { void <init>(java.util.TreeMap,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.TreeMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$7 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class java.util.TreeMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.os.Parcel { long nativeAppendFrom(long,long,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$7 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class android.os.Parcel { long nativeFreeBuffer(long); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$7 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$7 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class com.android.internal.policy.DecorView { void <init>(android.content.Context,int,com.android.internal.policy.PhoneWindow,android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignCoordinateFromPadding(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void <init>(android.support.v7.widget.LinearLayoutManager); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getInt(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignFromView(android.view.View); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(android.view.SearchEvent); }
-keepclassmembers class android.icu.impl.UCaseProps { int strcmpMax(java.lang.String,int,int); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getResourceId(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean addStringCaseClosure(java.lang.String,android.icu.text.UnicodeSet); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateTree(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateTreeFromCopy(long,long); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class android.app.Activity { android.view.SearchEvent getSearchEvent(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean nSetRootAlpha(long,float); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignFromViewAndKeepVisibleRect(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetAllowCaching(long,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int nDraw(long,long,long,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateFullPath(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long getNativeTree(); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateFullPath(long); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nUpdateFullPathProperties(long,float,int,float,int,float,float,float,float,float,int,int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nUpdateFullPathFillGradient(long,long); }
-keepclassmembers class android.icu.impl.UCaseProps { int getType(int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void recycle(); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nUpdateFullPathStrokeGradient(long,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateClipPath(); }
-keepclassmembers class android.icu.impl.UCaseProps { int getTypeOrIgnorable(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateClipPath(long); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float nGetRootAlpha(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateGroup(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetName(long,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long nCreateGroup(long); }
-keepclassmembers class android.app.Activity { void setTheme(int); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean nGetGroupProperties(long,float[],int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean hasValue(int); }
-keepclassmembers class android.icu.impl.UCaseProps { int getDotType(int); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isSoftDotted(int); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetPathString(long,java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nAddChild(long,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isCaseSensitive(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.os.Parcel { void updateNativeSize(long); }
-keepclassmembers class android.icu.impl.UCaseProps { int getCaseLocale(android.icu.util.ULocale,int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int nGetStrokeColor(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetStrokeColor(long,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetRendererViewportSize(long,float,float); }
-keepclassmembers class android.app.Activity { void requestPermissions(java.lang.String[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int nGetFillColor(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void reset(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nSetFillColor(long,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean nGetFullPathProperties(long,byte[],int); }
-keepclassmembers class android.app.Activity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.app.Activity { boolean shouldShowRequestPermissionRationale(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isFollowedByCasedLetter(android.icu.impl.UCaseProps$ContextIterator,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$400(long,long); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class java.io.FilterOutputStream { void write(byte[]); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void nUpdateGroupProperties(long,float,float,float,float,float,float,float); }
-keepclassmembers class com.android.internal.policy.DecorView { void setBackgroundFallback(int); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isPrecededBySoftDotted(android.icu.impl.UCaseProps$ContextIterator); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$600(long,float,float); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.content.res.Resources,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom$1 { java.lang.Boolean run(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean access$700(long,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float access$800(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$1600(long); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isPrecededBy_I(android.icu.impl.UCaseProps$ContextIterator); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$1700(); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom$1 { void <init>(); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$1800(long,long); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom$1 { java.lang.Object run(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$300(long); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean access$1900(long,float[],int); }
-keepclassmembers class android.app.Activity { void cancelInputsAndStartExitTransition(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$2000(long,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$2100(long,float,float,float,float,float,float,float); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isFollowedByMoreAbove(android.icu.impl.UCaseProps$ContextIterator); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class java.time.temporal.ChronoField { void <init>(java.lang.String,int,java.lang.String,java.time.temporal.TemporalUnit,java.time.temporal.TemporalUnit,java.time.temporal.ValueRange); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean isFollowedByDotAbove(android.icu.impl.UCaseProps$ContextIterator); }
-keepclassmembers class android.app.Activity { android.os.Bundle transferSpringboardActivityOptions(android.os.Bundle); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.icu.impl.UCaseProps { int toFullLower(int,android.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,android.icu.util.ULocale,int[]); }
-keepclassmembers class java.time.temporal.ChronoField { void <init>(java.lang.String,int,java.lang.String,java.time.temporal.TemporalUnit,java.time.temporal.TemporalUnit,java.time.temporal.ValueRange,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void access$001(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.FloatingActionButtonImpl createImpl(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$2$1 { void <init>(com.xlythe.calculator.material.HexCalculator$2); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$3700(); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$3900(long,java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator$2$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$4800(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.FloatingActionButtonImpl getImpl(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$4900(long); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$5000(long,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean access$5200(long,byte[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$5100(long,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int getSizeDimension(int); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$5300(long,long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$5400(long,long); }
-keepclassmembers class android.widget.CheckedTextView$SavedState$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void access$5500(long,float,int,float,int,float,float,float,float,float,int,int,int); }
-keepclassmembers class android.widget.Button { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,boolean,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int resolveAdjustedSize(int,int); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$5600(long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$6100(long); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void drawableStateChanged(); }
-keepclassmembers class android.icu.impl.UCaseProps { int toUpperOrTitle(int,android.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,android.icu.util.ULocale,int[],boolean); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { long access$3800(long); }
-keepclassmembers class java.time.temporal.ChronoField { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { boolean getContentRect(android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$16 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.logging.Level { java.lang.String computeLocalizedLevelName(java.util.Locale); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int getSizeDimension(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo { void <init>(); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.util.logging.Level { java.lang.String getCachedLocalizedLevelName(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.icu.impl.UCaseProps { int toFullUpper(int,android.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,android.icu.util.ULocale,int[]); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class libcore.util.NativeAllocationRegistry$CleanerThunk { void <init>(libcore.util.NativeAllocationRegistry,long); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean superDispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.logging.Level { java.lang.String getLocalizedLevelName(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onAttachedToWindow(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onDetachedFromWindow(); }
-keepclassmembers class android.icu.impl.UCaseProps { int toFullTitle(int,android.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,android.icu.util.ULocale,int[]); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level findLevel(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeDoubleArray(double[]); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { void onRtlPropertiesChanged(int); }
-keepclassmembers class libcore.util.NativeAllocationRegistry$CleanerThunk { void run(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onMeasure(int,int); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean superDispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isOutOfInnerBounds(int,int); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isOutOfBounds(int,int); }
-keepclassmembers class android.os.Parcel { double[] createDoubleArray(); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class android.os.Parcel { java.lang.String[] createStringArray(); }
-keepclassmembers class android.icu.impl.UCaseProps { int toFullFolding(int,java.lang.StringBuilder,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class io.codetail.animation.RevealAnimator$RevealFinishedGingerbread { void <init>(io.codetail.animation.RevealAnimator,android.graphics.Rect); }
-keepclassmembers class com.android.internal.policy.DecorView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class java.util.logging.Level { java.lang.String access$000(java.util.logging.Level); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String,boolean,java.util.logging.Level$1); }
-keepclassmembers class java.util.logging.Level { int access$100(java.util.logging.Level); }
-keepclassmembers class java.util.logging.Level { java.lang.String access$200(java.util.logging.Level); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class android.icu.impl.UCaseProps { boolean hasBinaryProperty(int,int); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setImageResource(int); }
-keepclassmembers class android.os.Parcel { void writeTypedList(java.util.List); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { int getOrientation(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$3 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$3 { boolean onLongClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setVisibility(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class android.app.Activity { boolean canStartActivityForResult(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class com.android.internal.policy.DecorView { void onMeasure(int,int); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.icu.impl.UCaseProps { int getTypeFromProps(int); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.icu.impl.UCaseProps { int getTypeAndIgnorableFromProps(int); }
-keepclassmembers class android.icu.impl.UCaseProps { int getDelta(int); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ValueType { android.icu.impl.locale.KeyTypeData$ValueType valueOf(java.lang.String); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChildFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ValueType { void <init>(java.lang.String,int); }
-keepclassmembers class java.security.Signature$Delegate { void <init>(java.security.SignatureSpi,java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.security.Signature$Delegate { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ValueType { void <clinit>(); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class java.security.Signature$Delegate { java.security.SignatureSpi newInstance(java.security.Provider$Service); }
-keepclassmembers class android.icu.impl.UCaseProps { void <clinit>(); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class android.app.Activity { android.net.Uri onProvideReferrer(); }
-keepclassmembers class android.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo { void <init>(android.widget.MenuPopupWindow,com.android.internal.view.menu.MenuBuilder,int); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class java.nio.file.StandardOpenOption { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class java.nio.file.StandardOpenOption { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo { android.widget.ListView getListView(); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class java.security.Signature$Delegate { void chooseFirstProvider(); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$1 { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class com.android.internal.policy.DecorView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$1 { android.icu.impl.ResourceBundleWrapper createInstance(java.lang.String,android.icu.impl.ResourceBundleWrapper$Loader); }
-keepclassmembers class android.os.Parcel { void writeParcelableCreator(android.os.Parcelable); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class android.app.Activity { void finish(int); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void <init>(android.icu.impl.Normalizer2Impl,java.lang.Appendable,int); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class java.security.Signature$Delegate { void chooseProvider(int,java.security.Key,java.security.SecureRandom); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean showContextMenuForChild(android.view.View,float,float); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean showContextMenuForChildInternal(android.view.View,float,float); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { android.util.Property getProperty(java.lang.String); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { int length(); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { java.lang.StringBuilder getStringBuilder(); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { boolean equals(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { int getLastCC(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void setLastChar(char); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void append(int,int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void append(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class java.security.Signature$Delegate { void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom); }
-keepclassmembers class libcore.icu.NativeConverter { long getNativeFinalizer(); }
-keepclassmembers class libcore.icu.NativeConverter { long getNativeSize(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { android.icu.impl.Normalizer2Impl$ReorderingBuffer append(char); }
-keepclassmembers class libcore.icu.NativeConverter { void <clinit>(); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void appendZeroCC(int); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode startActionMode(android.view.View,android.view.ActionMode$Callback,int); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$1 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { android.icu.impl.Normalizer2Impl$ReorderingBuffer flushAndAppendZeroCC(java.lang.CharSequence,int,int); }
-keepclassmembers class java.security.Signature$Delegate { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String[] getZoneIDs(); }
-keepclassmembers class com.android.internal.policy.DecorView { void cleanupPrimaryActionMode(); }
-keepclassmembers class java.io.ExpiringCache$1 { void <init>(java.io.ExpiringCache); }
-keepclassmembers class com.android.internal.policy.DecorView { void cleanupFloatingActionModeViews(); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String getZoneID(int); }
-keepclassmembers class java.security.Signature$Delegate { boolean engineVerify(byte[]); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void remove(); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void flush(); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void removeSuffix(int); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { android.icu.impl.Normalizer2Impl$ReorderingBuffer append(java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { void startChanging(); }
-keepclassmembers class com.android.internal.policy.DecorView { void finishChanging(); }
-keepclassmembers class android.icu.impl.ZoneMeta { int getZoneIndex(java.lang.String); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class java.security.Signature$Delegate { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void insert(int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { void setWindowBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class java.io.ExpiringCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void setIterator(); }
-keepclassmembers class android.webkit.WebViewFactory$MissingWebViewPackageException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class android.webkit.WebViewFactory$MissingWebViewPackageException { void <init>(java.lang.Exception); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { int previousCC(); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { void skipPrevious(); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String getCanonicalCLDRID(java.lang.String); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$ReorderingBuffer { java.lang.Appendable append(char); }
-keepclassmembers class java.security.Signature$Delegate { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setWindowFrame(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.jar.JarEntry); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String findCLDRCanonicalID(java.lang.String); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class com.android.internal.policy.DecorView { int getColorViewTopInset(int,int); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class com.android.internal.policy.DecorView { int getColorViewBottomInset(int,int); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.policy.DecorView { int getColorViewRightInset(int,int); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isNavBarToRightEdge(int,int); }
-keepclassmembers class android.transition.PatternPathMotion { void setPatternPath(android.graphics.Path); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isNavBarToLeftEdge(int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { int getNavBarSize(int,int,int); }
-keepclassmembers class android.app.Activity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class android.icu.text.Normalizer$NFKD32ModeImpl { android.icu.text.Normalizer$ModeImpl access$500(); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class android.icu.text.Normalizer$NFKD32ModeImpl { void <clinit>(); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class android.transition.PatternPathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.WindowInsets updateColorViews(android.view.WindowInsets,boolean); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class android.os.Parcel { java.lang.Object readTypedObject(android.os.Parcelable$Creator); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] createTypedArray(android.os.Parcelable$Creator); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.app.Activity { android.app.ActivityOptions getActivityOptions(); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class android.icu.text.Normalizer$NFCModeImpl { android.icu.text.Normalizer$ModeImpl access$800(); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class android.icu.text.Normalizer$NFCModeImpl { void <clinit>(); }
-keepclassmembers class android.icu.impl.ZoneMeta { boolean parseCustomID(java.lang.String,int[]); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void <clinit>(); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class android.app.Activity { void setVrModeEnabled(boolean,android.content.ComponentName); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void ensurePreDrawListener(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int); }
-keepclassmembers class java.math.Division { int divideArrayByInt(int[],int[],int,int); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String getCustomID(java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class android.os.StrictMode { void noteResourceMismatch(java.lang.Object); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int); }
-keepclassmembers class android.graphics.drawable.RippleForeground$LogDecelerateInterpolator { void <init>(float,float,float); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onAttachedToWindow(); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onDetachedFromWindow(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$LogDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onPaddingUpdated(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.ZoneMeta { java.lang.String formatCustomID(int,int,int,boolean); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { boolean requirePreDrawListener(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionXOnScreen(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class com.android.internal.policy.DecorView { int calculateStatusBarColor(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionYOnScreen(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class android.graphics.drawable.RippleForeground$LogDecelerateInterpolator { float computeLog(float); }
-keepclassmembers class sun.util.logging.PlatformLogger$LoggerProxy { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.policy.DecorView { int getCurrentColor(com.android.internal.policy.DecorView$ColorViewState); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateColorViewInt(com.android.internal.policy.DecorView$ColorViewState,int,int,int,boolean,boolean,int,boolean,boolean); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void updatePadding(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(dalvik.system.DexFile,java.io.File); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class android.icu.impl.ZoneMeta { void <clinit>(); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void <init>(android.content.Context,android.view.Window); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File); }
-keepclassmembers class java.util.logging.LogManager$5 { void <init>(java.util.logging.LogManager,java.lang.String,java.util.logging.Logger); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar setMenu(android.view.Menu); }
-keepclassmembers class sun.security.util.BitArray { int subscript(int); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class sun.security.util.BitArray { void <init>(int); }
-keepclassmembers class sun.security.util.BitArray { int position(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String getDexPath(); }
-keepclassmembers class sun.security.util.BitArray { void <init>(int,byte[]); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class android.app.Activity { android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class java.util.logging.LogManager$5 { java.lang.Object run(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void <clinit>(); }
-keepclassmembers class sun.security.util.BitArray { void <init>(boolean[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class java.net.SocketInputStream { void <init>(java.net.AbstractPlainSocketImpl); }
-keepclassmembers class sun.security.util.BitArray { void <init>(sun.security.util.BitArray); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar setContentRect(android.graphics.Rect); }
-keepclassmembers class sun.security.util.BitArray { boolean get(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar show(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar updateLayout(); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void dismiss(); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames { java.lang.String getMetaZoneID(java.lang.String,long); }
-keepclassmembers class sun.security.util.BitArray { void set(int,boolean); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void hide(); }
-keepclassmembers class java.net.SocketInputStream { int socketRead0(java.io.FileDescriptor,byte[],int,int,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void doShow(); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames { java.lang.String getMetaZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames$NameType); }
-keepclassmembers class java.net.SocketInputStream { int socketRead(java.io.FileDescriptor,byte[],int,int,int); }
-keepclassmembers class sun.security.util.BitArray { int length(); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames { java.lang.String getTimeZoneDisplayName(java.lang.String,android.icu.text.TimeZoneNames$NameType); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.SocketInputStream { int read(byte[],int,int); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class android.icu.text.TimeZoneNames$DefaultTimeZoneNames { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.Class findClass(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class java.net.SocketInputStream { int read(byte[],int,int,int); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class sun.security.util.BitArray { byte[] toByteArray(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { java.util.List getShowingMenuItemsReferences(java.util.List); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { java.util.List getVisibleAndEnabledMenuItems(android.view.Menu); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void registerOrientationHandler(); }
-keepclassmembers class java.nio.IntBuffer { void <init>(int,int,int,int,int[],int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { boolean isCurrentlyShowing(java.util.List); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class sun.security.util.BitArray { java.lang.Object clone(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void unregisterOrientationHandler(); }
-keepclassmembers class sun.security.util.BitArray { java.lang.String toString(); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class java.nio.IntBuffer { void <init>(int,int,int,int); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateColorViewTranslations(); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { boolean isIconOnlyMenuItem(android.view.MenuItem); }
-keepclassmembers class sun.security.util.BitArray { sun.security.util.BitArray truncate(); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class java.net.SocketInputStream { long skip(long); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.WindowInsets updateStatusGuard(android.view.WindowInsets); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.view.View createMenuItemButton(android.content.Context,android.view.MenuItem); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class java.net.SocketInputStream { int read(); }
-keepclassmembers class java.nio.IntBuffer { java.nio.IntBuffer get(int[]); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.view.ViewGroup createContentContainer(android.content.Context); }
-keepclassmembers class sun.security.util.BitArray { void <clinit>(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$2 { void <init>(int); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class java.net.SocketInputStream { void close(); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$Loader { void <init>(android.icu.impl.ResourceBundleWrapper$1); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper$Loader { void <init>(); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$2 { boolean hasName(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.xlythe.math.Module { int getBinSeparatorDistance(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class java.nio.file.StandardCopyOption { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.widget.PopupWindow createPopupWindow(android.view.ViewGroup); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$2 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class com.xlythe.math.Module { void <init>(com.xlythe.math.Solver); }
-keepclassmembers class java.net.SocketInputStream { int available(); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class com.xlythe.math.Module { char getDecSeparator(); }
-keepclassmembers class com.xlythe.math.Module { int getDecSeparatorDistance(); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class com.xlythe.math.Module { int getHexSeparatorDistance(); }
-keepclassmembers class com.xlythe.math.Module { char getDecimalPoint(); }
-keepclassmembers class com.xlythe.math.Module { char getMatrixSeparator(); }
-keepclassmembers class com.xlythe.math.Module { char getBinSeparator(); }
-keepclassmembers class com.xlythe.math.Module { com.xlythe.math.Solver getSolver(); }
-keepclassmembers class com.xlythe.math.Module { char getHexSeparator(); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class sun.nio.cs.ThreadLocalCoders$2 { void <clinit>(); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { java.lang.String toJavaFormatString(); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.animation.AnimatorSet createEnterAnimation(android.view.View); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { int getDigits(char[]); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { void appendTo(java.lang.Appendable); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { boolean isNegative(); }
-keepclassmembers class org.javia.arity.OptCodeGen { void <init>(org.javia.arity.SyntaxException); }
-keepclassmembers class android.graphics.Path { void addCircle(float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.animation.AnimatorSet createExitAnimation(android.view.View,int,android.animation.Animator$AnimatorListener); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { boolean isExceptional(); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { int getDecimalExponent(); }
-keepclassmembers class org.javia.arity.OptCodeGen { org.javia.arity.CompiledFunction getFun(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup access$000(com.android.internal.widget.FloatingToolbar); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.content.Context applyDefaultTheme(android.content.Context); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { boolean access$102(com.android.internal.widget.FloatingToolbar,boolean); }
-keepclassmembers class sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.widget.PopupWindow access$800(android.view.ViewGroup); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.animation.AnimatorSet access$1000(android.view.View); }
-keepclassmembers class org.javia.arity.OptCodeGen { void push(org.javia.arity.Token); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.view.ViewGroup access$700(android.content.Context); }
-keepclassmembers class org.javia.arity.Symbol { void <init>(java.lang.String,double,boolean); }
-keepclassmembers class org.javia.arity.Symbol { void <init>(java.lang.String,double,double,boolean); }
-keepclassmembers class org.javia.arity.Symbol { void <init>(java.lang.String,int,byte,boolean,int); }
-keepclassmembers class java.nio.file.StandardCopyOption { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateNavigationGuard(android.view.WindowInsets); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.view.View access$2100(android.content.Context,android.view.MenuItem); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { boolean access$2200(android.view.MenuItem); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar { android.animation.AnimatorSet access$1200(android.view.View,int,android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int hashCode(); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class org.javia.arity.Symbol { org.javia.arity.Symbol makeArg(java.lang.String,int); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class org.javia.arity.Symbol { void <init>(java.lang.String,org.javia.arity.Function); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isProjected(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { char first(); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { char current(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class com.nineoldandroids.view.ViewPropertyAnimatorICS$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { char next(); }
-keepclassmembers class com.nineoldandroids.view.ViewPropertyAnimatorICS$1 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateNavigationGuardColor(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { boolean bidiagonalization(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { char setIndex(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class com.nineoldandroids.view.ViewPropertyAnimatorICS$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class org.javia.arity.Symbol { org.javia.arity.Symbol makeVmOp(java.lang.String,int); }
-keepclassmembers class org.javia.arity.Symbol { org.javia.arity.Symbol newEmpty(org.javia.arity.Symbol); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { void <init>(boolean,boolean,boolean,boolean); }
-keepclassmembers class com.android.internal.policy.DecorView { void drawableChanged(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getRunStart(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getRunStart(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getBeginIndex(); }
-keepclassmembers class com.nineoldandroids.view.ViewPropertyAnimatorICS$1 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getEndIndex(); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getIndex(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { boolean computeUWV(); }
-keepclassmembers class android.graphics.Path { long mutateNI(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$2 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class org.javia.arity.Symbol { org.javia.arity.Symbol setKey(java.lang.String,int); }
-keepclassmembers class org.javia.arity.Symbol { boolean isEmpty(); }
-keepclassmembers class android.graphics.Path { long readOnlyNI(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class android.graphics.Path { void transform(android.graphics.Matrix,android.graphics.Path); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$2 { void <init>(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class org.javia.arity.Symbol { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getRunLimit(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class org.javia.arity.Symbol { java.lang.String toString(); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { int getRunLimit(); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { void makeSingularPositive(); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BiDiIntProperty { void <init>(android.icu.impl.UCharacterProperty); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class org.javia.arity.Symbol { int hashCode(); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$BiDiIntProperty { int getMaxValue(int); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_addCircle(long,float,float,float,int); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { void setup(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class com.android.internal.policy.DecorView { void onAttachedToWindow(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Path { void native_transform(long,long,long); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean test(android.view.View); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { java.util.Map getAttributes(); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$3 { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean test(java.lang.Object); }
-keepclassmembers class org.javia.arity.OptCodeGen { void start(); }
-keepclassmembers class libcore.util.BasicLruCache { void evictAll(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { java.util.Set getAllAttributeKeys(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View$1); }
-keepclassmembers class java.util.AbstractSet { boolean removeAll(java.util.Collection); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$1002(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.app.Activity { boolean isOverlayWithDecorCaptionEnabled(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class android.icu.text.Normalizer$NFDModeImpl { android.icu.text.Normalizer$ModeImpl access$400(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class android.app.Activity { void setOverlayWithDecorCaptionEnabled(boolean); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { void undoTranspose(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { java.text.AttributedString getString(); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { char internalSetIndex(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.text.Normalizer$NFDModeImpl { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class java.text.AttributedString$AttributedStringIterator { void updateRunInfo(); }
-keepclassmembers class sun.security.x509.AVAKeyword { void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { double[] getSingularValues(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.DenseMatrix64F getU(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class android.app.Activity { void showLockTaskEscapeMessage(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class sun.security.x509.AVAKeyword { boolean isCompliant(int); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$IDEnumeration { void <init>(java.util.Enumeration); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode createActionMode(int,android.view.ActionMode$Callback2,android.view.View); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class com.android.internal.policy.DecorView { void setHandledActionMode(android.view.ActionMode); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$IDEnumeration { java.lang.String nextElement(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$IDEnumeration { boolean hasMoreElements(); }
-keepclassmembers class android.icu.text.Normalizer$Mode { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.Matrix64F getU(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$IDEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class android.support.v4.widget.Space { int getDefaultSize2(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.Matrix64F getV(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class android.support.v4.widget.Space { void onMeasure(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.DenseMatrix64F getV(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.DenseMatrix64F getW(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class sun.security.x509.AVAKeyword { java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode createStandaloneActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void suspendChildInvalidation(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void resumeChildInvalidation(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class java.util.LinkedHashMap$LinkedValueIterator { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class sun.security.x509.AVAKeyword { boolean hasKeyword(sun.security.util.ObjectIdentifier,int); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { void <init>(android.icu.text.UnicodeSet,java.util.ArrayList,int); }
-keepclassmembers class com.android.internal.policy.DecorView { void endOnGoingFadeAnimation(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setHandledPrimaryActionMode(android.view.ActionMode); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { boolean inputModified(); }
-keepclassmembers class sun.security.x509.AVAKeyword { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.SvdImplicitQrDecompose { org.ejml.data.Matrix64F getW(org.ejml.data.Matrix64F); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAccelerateDecelerateInterpolator(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createBounceInterpolator(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAnticipateInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAccelerateInterpolator(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createDecelerateInterpolator(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAnticipateOvershootInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createCycleInterpolator(float); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class java.util.Collections$SingletonSet { void <init>(java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family,java.util.Map); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createOvershootInterpolator(float); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean shouldAnimatePrimaryActionModeView(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class java.util.Collections$SingletonSet { int size(); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void layoutMenuItems(java.util.List,android.view.MenuItem$OnMenuItemClickListener,int); }
-keepclassmembers class java.util.Collections$SingletonSet { java.util.Iterator iterator(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode createFloatingActionMode(android.view.View,android.view.ActionMode$Callback2); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.policy.DecorView { void enableCaption(boolean); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setHandledFloatingActionMode(android.view.ActionMode); }
-keepclassmembers class com.android.internal.policy.DecorView { void setWindow(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class java.util.Collections$SingletonSet { boolean contains(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void hide(); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { boolean isShowing(); }
-keepclassmembers class com.android.internal.policy.DecorView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { boolean needsStringSpanUTF16(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void dismiss(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void updateCoordinates(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { boolean contains(int); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { void addToSpanNotSet(int); }
-keepclassmembers class com.android.internal.policy.DecorView { void onResourcesLoaded(android.view.LayoutInflater,int); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback$1 { float getInterpolation(float); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void refreshCoordinatesAndOverflowDirection(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int span(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanWithStrings(java.lang.CharSequence,int,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback$1 { void <init>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void loadBackgroundDrawablesIfNeeded(); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$WholeBundle { void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundleReader); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void multTransABlockMinus(double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void multTransABlockMinus_U(double[],double[],int,int,int,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class com.android.internal.policy.DecorView { com.android.internal.widget.DecorCaptionView createDecorCaptionView(android.view.LayoutInflater); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class android.icu.text.UnicodeSet$VersionFilter { void <init>(android.icu.util.VersionInfo); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.icu.text.UnicodeSet$VersionFilter { boolean contains(int); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void runShowAnimation(); }
-keepclassmembers class java.util.zip.ZipUtils { java.nio.file.attribute.FileTime winTimeToFileTime(long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void runHideAnimation(); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class com.android.internal.policy.DecorView { com.android.internal.widget.DecorCaptionView inflateDecorCaptionView(android.view.LayoutInflater); }
-keepclassmembers class sun.net.www.protocol.file.FileURLConnection { void connect(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void cancelDismissAndHideAnimations(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void runDismissAnimation(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class sun.net.www.protocol.file.FileURLConnection { void <init>(java.net.URL,java.io.File); }
-keepclassmembers class android.icu.text.Normalizer$NFKDModeImpl { android.icu.text.Normalizer$ModeImpl access$600(); }
-keepclassmembers class android.icu.text.Normalizer$NFKDModeImpl { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void cancelOverflowAnimations(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setDecorCaptionShade(android.content.Context,com.android.internal.widget.DecorCaptionView); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void multTransBBlockMinus(double[],double[],int,int,int,int,int,int); }
-keepclassmembers class java.util.zip.ZipUtils { java.nio.file.attribute.FileTime unixTimeToFileTime(long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator$3 { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setLightDecorCaptionShade(com.android.internal.widget.DecorCaptionView); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void setDarkDecorCaptionShade(com.android.internal.widget.DecorCaptionView); }
-keepclassmembers class android.icu.text.NormalizationTransliterator { void register(); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.internal.policy.DecorView { android.graphics.drawable.Drawable getResizingBackgroundDrawable(android.content.Context,int,int,boolean); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void multTransBBlockMinus_L(double[],double[],int,int,int,int,int,int); }
-keepclassmembers class java.util.zip.ZipUtils { int get16(byte[],int); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanAndCount(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition,android.icu.util.OutputInt); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class android.icu.text.NormalizationTransliterator { void <init>(java.lang.String,android.icu.text.Normalizer2); }
-keepclassmembers class com.android.internal.policy.DecorView { android.graphics.drawable.Drawable enforceNonTranslucentBackground(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class java.util.zip.ZipUtils { long get32(byte[],int); }
-keepclassmembers class sun.net.www.protocol.file.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class android.icu.text.NormalizationTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView { int getStackId(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.zip.ZipUtils { long get64(byte[],int); }
-keepclassmembers class java.util.UnknownFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void jumpToCurrentState(); }
-keepclassmembers class sun.net.www.protocol.file.FileURLConnection { java.security.Permission getPermission(); }
-keepclassmembers class sun.net.www.protocol.file.FileURLConnection { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanContainedAndCount(java.lang.CharSequence,int,android.icu.util.OutputInt); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class android.icu.impl.UCharacterProperty$3 { boolean contains(int); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class java.util.UnknownFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.icu.text.NormalizationTransliterator { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setPanelsStatesAtRestingPosition(); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerBounds(android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class android.icu.text.NormalizationTransliterator { void <init>(java.lang.String,android.icu.text.Normalizer2,android.icu.text.NormalizationTransliterator$1); }
-keepclassmembers class com.android.internal.policy.DecorView { void initResizingPaints(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerBoundsInternal(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanBack(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.icu.impl.UCharacterProperty$3 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class com.android.internal.policy.DecorView { void releaseThreadedRenderer(); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void symmRankNMinus_L(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isResizing(); }
-keepclassmembers class com.android.internal.policy.DecorView { void initializeElevation(); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateElevation(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void updateOverflowHeight(int); }
-keepclassmembers class com.android.internal.policy.DecorView { java.lang.String getTitleSuffix(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.internal.policy.DecorView { float dipToPx(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int resolveGravity(int,int,int,int,int); }
-keepclassmembers class com.android.internal.policy.DecorView { boolean isShowingCaption(); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateLogTag(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void refreshViewPort(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void updatePopupSize(); }
-keepclassmembers class com.android.internal.policy.DecorView { com.android.internal.widget.ActionBarContextView access$000(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { int getAdjustedToolbarWidth(int); }
-keepclassmembers class com.android.internal.policy.DecorView { java.lang.String toString(); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.GraphController$2 { void onGlobalLayout(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.widget.PopupWindow access$100(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.policy.DecorView { void updateAvailableWidth(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.animation.ObjectAnimator access$300(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.policy.DecorView { void access$200(com.android.internal.policy.DecorView); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.content.Context access$400(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode access$500(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.policy.DecorView { java.lang.Runnable access$600(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setZeroTouchableSurface(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setContentAreaAsTouchableSurface(); }
-keepclassmembers class com.android.internal.policy.DecorView { android.animation.ObjectAnimator access$302(com.android.internal.policy.DecorView,android.animation.ObjectAnimator); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.policy.DecorView { android.view.ActionMode access$502(com.android.internal.policy.DecorView,android.view.ActionMode); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class com.android.internal.policy.DecorView { void access$700(com.android.internal.policy.DecorView); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setTouchableSurfaceInsetsComputer(); }
-keepclassmembers class java.text.MessageFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.policy.DecorView { com.android.internal.policy.PhoneWindow access$800(com.android.internal.policy.DecorView); }
-keepclassmembers class org.ejml.alg.block.BlockInnerRankUpdate { void symmRankNMinus_U(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class android.icu.text.StringMatcher { void <init>(java.lang.String,int,android.icu.text.RuleBasedTransliterator$Data); }
-keepclassmembers class android.icu.text.StringMatcher { void <init>(java.lang.String,int,int,int,android.icu.text.RuleBasedTransliterator$Data); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { boolean isInRTLMode(); }
-keepclassmembers class java.text.MessageFormat$Field { void <clinit>(); }
-keepclassmembers class android.icu.text.StringMatcher { int matches(android.icu.text.Replaceable,int[],int,boolean); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { java.util.List layoutMainPanelItems(java.util.List,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanNot(java.lang.CharSequence,int,android.icu.util.OutputInt); }
-keepclassmembers class android.view.View$DragShadowBuilder { void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void show(android.graphics.Rect); }
-keepclassmembers class android.view.View$DragShadowBuilder { void <init>(android.view.View); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { boolean hasOverflow(); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { void <init>(int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class android.icu.text.TransliterationRule { void <init>(java.lang.String,int,int,java.lang.String,int,int,android.icu.text.UnicodeMatcher[],boolean,boolean,android.icu.text.RuleBasedTransliterator$Data); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { void invert(org.ejml.data.Matrix64F); }
-keepclassmembers class android.view.View$DragShadowBuilder { void onDrawShadow(android.graphics.Canvas); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanNotBack(java.lang.CharSequence,int); }
-keepclassmembers class android.text.MeasuredText { void finish(); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { void invert(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { boolean modifiesA(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { short makeSpanLengthByte(int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic,android.text.StaticLayout$Builder); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void layoutOverflowPanelItems(java.util.List); }
-keepclassmembers class android.icu.text.StringMatcher { java.lang.String toPattern(boolean); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { boolean setA(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class android.icu.text.StringMatcher { boolean matchesIndexValue(int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { boolean matches16(java.lang.CharSequence,int,java.lang.String,int); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { boolean matches16CPB(java.lang.CharSequence,int,int,java.lang.String,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedHashMapEntry nextNode(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void preparePopupContent(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void refreshPadding(); }
-keepclassmembers class android.icu.text.StringMatcher { int replace(android.icu.text.Replaceable,int,int,int[]); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanOne(android.icu.text.UnicodeSet,java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledWindowTouchSlop(); }
-keepclassmembers class android.icu.text.StringMatcher { java.lang.String toReplacerPattern(boolean); }
-keepclassmembers class android.view.ViewConfiguration { long getDefaultActionModeHideDuration(); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollFactor(); }
-keepclassmembers class android.icu.text.TransliterationRule { int getIndexValue(); }
-keepclassmembers class android.view.ViewConfiguration { boolean hasPermanentMenuKey(); }
-keepclassmembers class android.icu.text.StringMatcher { void resetMatch(); }
-keepclassmembers class android.icu.text.TransliterationRule { int getAnteContextLength(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { int getOverflowWidth(); }
-keepclassmembers class android.icu.impl.UnicodeSetStringSpan { int spanOneBack(android.icu.text.UnicodeSet,java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void clearPanels(); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class android.icu.text.TransliterationRule { boolean masks(android.icu.text.TransliterationRule); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLayoutDirectionChanged(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$1 { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class com.xlythe.math.History { void <init>(int,java.io.DataInput); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.ejml.alg.dense.linsol.svd.SolvePseudoInverseSvd { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class com.xlythe.math.History { void <init>(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { int calculateOverflowHeight(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void <clinit>(); }
-keepclassmembers class com.xlythe.math.History { void notifyChanged(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class android.icu.text.TransliterationRule { int posBefore(android.icu.text.Replaceable,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setButtonTagAndClickListener(android.view.View,android.view.MenuItem); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$AliasEntry { void <init>(java.lang.String); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class com.xlythe.math.History { void clear(); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.math.History { void enter(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.TransliterationRule { boolean matchesIndexValue(int); }
-keepclassmembers class com.xlythe.math.History { com.xlythe.math.HistoryEntry current(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void maybeComputeTransitionDurationScale(); }
-keepclassmembers class android.icu.text.TransliterationRule { int matchAndReplace(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class java.io.DefaultFileSystem { java.io.FileSystem getFileSystem(); }
-keepclassmembers class android.icu.text.TransliterationRule { int posAfter(android.icu.text.Replaceable,int); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$4 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$4 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.view.ViewGroup createMainPanel(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.widget.ImageButton createOverflowButton(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$4 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$6 { void <init>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel createOverflowPanel(); }
-keepclassmembers class com.xlythe.math.History { java.util.List getEntries(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$6 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class com.xlythe.math.History { void setObserver(com.xlythe.math.History$Observer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { void <init>(java.util.TimeZone); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { sun.util.calendar.BaseCalendar$Date setNormalizedDate(int,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { void <init>(); }
-keepclassmembers class com.xlythe.math.History { void write(java.io.DataOutput); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { boolean isOverflowAnimating(); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { boolean hit(int); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { boolean hit(long); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { void setCache(int,long,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setSize(android.view.View,android.util.Size); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { void setSize(android.view.View,int,int); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { int getCachedYear(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int); }
-keepclassmembers class android.icu.text.TransliterationRule { java.lang.String toString(); }
-keepclassmembers class android.util.MathUtils { int addOrThrow(int,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { int getLineHeight(android.content.Context); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.view.MenuItem$OnMenuItemClickListener access$600(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class sun.util.calendar.BaseCalendar$Date { long getCachedJan1(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.widget.PopupWindow access$1100(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.view.animation.Animation$AnimationListener createOverflowAnimationListener(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.view.ViewGroup access$500(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { int hashCode(); }
-keepclassmembers class android.icu.text.TransliterationRule { java.lang.String toRule(boolean); }
-keepclassmembers class javax.crypto.JceSecurity { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.util.Size measure(android.view.View); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.util.Size access$2400(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$2$1 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator$2); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$2$1 { void onEvaluate(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper access$3000(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.content.Context access$3200(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$15 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.util.Size access$3100(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getKeyline(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getTopSortedChildren(java.util.List); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean hasDependencies(android.view.View); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { android.util.Size access$3300(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup { boolean access$2300(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChild(android.view.View,int); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleArray { java.lang.String handleNextLine(); }
-keepclassmembers class android.icu.text.DigitList { boolean isZero(); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class android.icu.text.DigitList { void <init>(); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class android.transition.SidePropagation { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleArray { void <init>(java.lang.String[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChildWithAnchor(android.view.View,android.view.View,int); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$1 { void <init>(); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void <init>(java.util.List); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void <init>(java.util.List,int); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleArray { void reset(); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void <init>(java.lang.String,android.icu.text.UnicodeFilter,android.icu.text.Transliterator[],int); }
-keepclassmembers class android.transition.SidePropagation { void setSide(int); }
-keepclassmembers class android.icu.text.DigitList { byte getDigitValue(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$3 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChildWithKeyline(android.view.View,int,int); }
-keepclassmembers class java.nio.channels.FileChannel { void <clinit>(); }
-keepclassmembers class android.icu.text.DigitList { void ensureCapacity(int,int); }
-keepclassmembers class sun.util.logging.PlatformLogger$JavaLoggerProxy { void <init>(java.lang.String,sun.util.logging.PlatformLogger$Level); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class sun.util.logging.PlatformLogger$JavaLoggerProxy { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void offsetChildByInset(android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void init(java.util.List,int,boolean); }
-keepclassmembers class android.text.BoringLayout$Metrics { void reset(); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { void <clinit>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class sun.util.logging.PlatformLogger$JavaLoggerProxy { void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String); }
-keepclassmembers class android.text.BoringLayout$Metrics { void access$000(android.text.BoringLayout$Metrics); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$14 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$14 { int getValue(int); }
-keepclassmembers class sun.util.logging.PlatformLogger$JavaLoggerProxy { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(android.support.graphics.drawable.PathParser$PathDataNode); }
-keepclassmembers class android.icu.text.DigitList { void set(java.lang.String,int); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { boolean setBlockDataMode(boolean); }
-keepclassmembers class android.icu.text.CompoundTransliterator { void computeMaximumContextLength(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void skipBlockData(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { boolean getBlockDataMode(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void <init>(java.io.ObjectInputStream,java.io.InputStream); }
-keepclassmembers class java.time.DateTimeException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Base64 { java.util.Base64$Decoder getMimeDecoder(); }
-keepclassmembers class java.time.DateTimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.icu.text.DigitList { void set(double,int,boolean); }
-keepclassmembers class android.icu.text.DigitList { void round(int); }
-keepclassmembers class sun.util.logging.PlatformLogger$JavaLoggerProxy { boolean isLoggable(sun.util.logging.PlatformLogger$Level); }
-keepclassmembers class android.icu.text.DigitList { boolean wasRounded(); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int readBlockHeader(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class android.icu.text.DigitList { void set(long); }
-keepclassmembers class java.lang.reflect.Proxy$Key1 { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.text.DigitList { void set(long,int); }
-keepclassmembers class android.icu.text.DigitList { boolean shouldRoundUp(int); }
-keepclassmembers class java.lang.reflect.Proxy$Key1 { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void refill(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.icu.text.DigitList { void set(java.math.BigInteger,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class java.lang.reflect.Proxy$Key1 { void <init>(java.lang.Class); }
-keepclassmembers class android.icu.text.CompoundTransliterator { android.icu.text.Transliterator safeClone(); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class com.nineoldandroids.animation.FloatKeyframeSet { void <init>(com.nineoldandroids.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.icu.text.DigitList { void setBigDecimalDigits(java.lang.String,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int peek(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int currentBlockRemaining(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isLaidOut(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int read(); }
-keepclassmembers class android.icu.text.DigitList { void set(java.math.BigDecimal,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { byte peekByte(); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean performIntercept(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.icu.text.DigitList { void set(android.icu.math.BigDecimal,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatLollipop { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { long skip(long); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int read(byte[],int,int); }
-keepclassmembers class android.icu.text.DigitList { void <clinit>(); }
-keepclassmembers class java.net.ServerSocket { void setImpl(); }
-keepclassmembers class java.net.ServerSocket { java.net.SocketImpl getImpl(); }
-keepclassmembers class java.io.ObjectInputStream { byte readByte(); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int available(); }
-keepclassmembers class java.net.ServerSocket { void createImpl(); }
-keepclassmembers class java.lang.InstantiationException { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { long readLong(); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class java.net.ServerSocket { void bind(java.net.SocketAddress,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.io.ObjectInputStream { short readShort(); }
-keepclassmembers class java.net.ServerSocket { void checkOldImpl(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void close(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { void clear(); }
-keepclassmembers class android.animation.Animator { void resume(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int read(byte[],int,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject0(boolean); }
-keepclassmembers class android.animation.Animator { void pause(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream { void verifySubclass(); }
-keepclassmembers class java.io.ObjectInputStream { boolean auditSubclass(java.lang.Class); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void prepareChildren(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table16 { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table16 { void <init>(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void resetTouchBehaviors(); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.ServerSocket { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readFully(byte[],int,int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void <init>(); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.view.WindowId { void <clinit>(); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object checkResolve(java.lang.Object); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { boolean readBoolean(); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class android.view.WindowId { void <init>(android.view.IWindowId); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class java.net.Parts { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void addEigenvalue(double); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readTypeString(); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class org.ejml.data.RowD1Matrix64F { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveGravity(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveKeylineGravity(int); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { byte readByte(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveAnchoredChildGravity(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void addEigenvalue(double,double); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNull(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setInsetOffsetX(android.view.View,int); }
-keepclassmembers class android.support.design.internal.BaselineLayout { int getBaseline(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void removeListeners(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void performImplicitDoubleStep(int,int,double,double,double); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readHandle(boolean); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class android.support.design.internal.BaselineLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class java.net.Parts { java.lang.String getPath(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int readUnsignedShort(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setInsetOffsetY(android.view.View,int); }
-keepclassmembers class java.net.Parts { java.lang.String getQuery(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class java.net.Parts { java.lang.String getRef(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { short readShort(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void addPreDrawListener(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { boolean compareAndSetWaitStatus(int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class java.util.logging.LogManager$Cleaner { void <init>(java.util.logging.LogManager); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readClass(boolean); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class java.io.ObjectInputStream { boolean isCustomSubclass(); }
-keepclassmembers class android.support.design.internal.BaselineLayout { void onMeasure(int,int); }
-keepclassmembers class java.net.SocksSocketImpl { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(boolean); }
-keepclassmembers class java.util.logging.LogManager$Cleaner { void <init>(java.util.logging.LogManager,java.util.logging.LogManager$1); }
-keepclassmembers class java.net.SocksSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int readInt(); }
-keepclassmembers class java.net.ServerSocket { void setBound(); }
-keepclassmembers class java.net.ServerSocket { void setCreated(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readProxyDesc(boolean); }
-keepclassmembers class org.javia.arity.VM { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { long readLong(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNonProxyDesc(boolean); }
-keepclassmembers class io.codetail.animation.RevealAnimator$RevealFinishedIceCreamSandwich { void <init>(io.codetail.animation.RevealAnimator,android.graphics.Rect); }
-keepclassmembers class java.net.SocksSocketImpl { void superConnectServer(java.lang.String,int,int); }
-keepclassmembers class java.net.ServerSocket { java.net.SocketImpl access$000(java.net.ServerSocket); }
-keepclassmembers class com.android.internal.policy.DecorView$3 { void <init>(com.android.internal.policy.DecorView); }
-keepclassmembers class java.net.SocksSocketImpl { void privilegedConnect(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.policy.DecorView$3 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.android.internal.policy.DecorView$ColorViewState { void <init>(int,int,int,int,int,java.lang.String,int,int); }
-keepclassmembers class android.util.Log$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView$3 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.net.SocksSocketImpl { int remainingMillis(long); }
-keepclassmembers class java.net.SocksSocketImpl { boolean authenticate(byte,java.io.InputStream,java.io.BufferedOutputStream,long); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void addComputedEigen2x2(int,int); }
-keepclassmembers class java.net.ServerSocket { void <clinit>(); }
-keepclassmembers class java.net.SocksSocketImpl { int readSocksReply(java.io.InputStream,byte[],long); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void drawableStateChanged(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readBooleans(boolean[],int,int); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readChars(char[],int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readArray(boolean); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedValues { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readString(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void ensurePreDrawListener(); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class android.widget.Editor$EditOperation { void <init>(android.widget.Editor,java.lang.String,int,java.lang.String); }
-keepclassmembers class java.util.LinkedHashMap$LinkedValues { java.util.Iterator iterator(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void addEigenAt(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean bulgeDoubleStepQn(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class android.widget.ViewSwitcher { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Enum readEnum(boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean bulgeDoubleStepQn(int,double,double,double,double,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readShorts(short[],int,int); }
-keepclassmembers class java.net.SocksSocketImpl { void connectV4(java.io.InputStream,java.io.OutputStream,java.net.InetSocketAddress,long); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readOrdinaryObject(boolean); }
-keepclassmembers class android.widget.Editor$EditOperation { int getNewTextEnd(); }
-keepclassmembers class android.widget.ViewSwitcher { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.widget.Editor$EditOperation { void commit(); }
-keepclassmembers class android.widget.Editor$EditOperation { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.Editor$EditOperation { int getOldTextEnd(); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator$Data { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.javia.arity.ContextFunction { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readInts(int[],int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getChildRect(android.view.View,boolean,android.graphics.Rect); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class org.javia.arity.ContextFunction { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyChanged(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator$Data { android.icu.text.UnicodeMatcher lookupMatcher(int); }
-keepclassmembers class android.widget.Editor$EditOperation { void redo(); }
-keepclassmembers class android.widget.Editor$EditOperation { boolean mergeWith(android.widget.Editor$EditOperation); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(double); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void nodesToPath(android.support.graphics.drawable.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator$Data { android.icu.text.UnicodeReplacer lookupReplacer(int); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(double,double); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(); }
-keepclassmembers class sun.security.jca.ProviderList$1 { void <init>(java.lang.String,double,java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDescendantRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class sun.security.jca.ProviderList$1 { java.security.Provider$Service getService(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void readExternalData(java.io.Externalizable,java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.Editor$EditOperation { boolean mergeDeleteWith(android.widget.Editor$EditOperation); }
-keepclassmembers class android.widget.Editor$EditOperation { boolean mergeInsertWith(android.widget.Editor$EditOperation); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(double,double,org.javia.arity.EvalContext); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getLastChildRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(double,org.javia.arity.EvalContext); }
-keepclassmembers class android.widget.FrameLayout { void setForegroundGravity(int); }
-keepclassmembers class java.io.ObjectInputStream { void readSerialData(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readFloats(float[],int,int); }
-keepclassmembers class org.javia.arity.ContextFunction { double eval(double[]); }
-keepclassmembers class java.net.SocksSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View); }
-keepclassmembers class android.widget.Editor$EditOperation { boolean mergeReplaceWith(android.widget.Editor$EditOperation); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex eval(org.javia.arity.Complex); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readLongs(long[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean bulgeSingleStepQn(int); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex,org.javia.arity.EvalContext); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex); }
-keepclassmembers class android.widget.Editor$EditOperation { void undo(); }
-keepclassmembers class android.widget.Editor$EditOperation { void modifyText(android.text.Editable,int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class java.io.ObjectInputStream { void skipCustomData(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { void readDoubles(double[],int,int); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.EvalContext); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumWidth(); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex eval(org.javia.arity.Complex[]); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class android.widget.Editor$EditOperation { java.lang.String getTypeString(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void offsetChildToAnchor(android.view.View,int); }
-keepclassmembers class android.widget.Editor$EditOperation { java.lang.String toString(); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex evalComplex(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean bulgeSingleStepQn(int,double,double,double,boolean); }
-keepclassmembers class org.javia.arity.ContextFunction { org.javia.arity.Complex[] toComplex(double[],org.javia.arity.EvalContext); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { java.lang.String readLongUTF(); }
-keepclassmembers class android.icu.impl.locale.LocaleSyntaxException { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.locale.LocaleSyntaxException { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.io.IOException readFatalException(); }
-keepclassmembers class android.widget.Editor$EditOperation { boolean access$6100(android.widget.Editor$EditOperation,android.widget.Editor$EditOperation); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { java.lang.String readUTFBody(long); }
-keepclassmembers class android.widget.Editor$EditOperation { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class java.io.ObjectInputStream { void bytesToFloats(byte[],int,float[],int,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$2 { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.ClassLoader latestUserDefinedLoader(); }
-keepclassmembers class android.widget.Editor$EditOperation { void forceMergeWith(android.widget.Editor$EditOperation); }
-keepclassmembers class java.io.ObjectInputStream { void bytesToDoubles(byte[],int,double[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean createBulgeSingleStep(int,double); }
-keepclassmembers class android.widget.ImageView { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object cloneArray(java.lang.Object); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void eigen2by2_scale(double,double,double,double); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onAttachedToWindow(); }
-keepclassmembers class android.widget.ImageView { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { long readUTFSpan(java.lang.StringBuilder,long); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onChildViewsChanged(int); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { void handleReset(); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class java.io.ObjectInputStream { boolean access$500(java.io.ObjectInputStream); }
-keepclassmembers class org.ejml.alg.block.BlockTriangularSolver { void solve(int,boolean,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,boolean); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class java.io.ObjectInputStream { void access$600(java.io.ObjectInputStream); }
-keepclassmembers class java.io.ObjectInputStream { void access$700(byte[],int,float[],int,int); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class android.widget.ImageView { void setImageResource(int); }
-keepclassmembers class org.ejml.alg.block.BlockTriangularSolver { void solveBlock(int,boolean,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,boolean,boolean); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.io.ObjectInputStream { void access$800(byte[],int,double[],int,int); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb { void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void <init>(java.util.ResourceBundle); }
-keepclassmembers class java.net.SocksSocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void exceptionalShift(int,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { java.lang.Object handleGetObject(java.lang.String); }
-keepclassmembers class java.net.SocksSocketImpl { java.lang.String getUserName(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void initKeysVector(); }
-keepclassmembers class java.net.SocksSocketImpl { int getPort(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { java.lang.String getLocaleID(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb { void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { org.ejml.data.Complex64F[] getEigenvalues(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb { void onSelected(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void implicitDoubleStep(int,int); }
-keepclassmembers class java.net.SocksSocketImpl { void access$000(java.net.SocksSocketImpl,java.lang.String,int,int); }
-keepclassmembers class java.net.SocksSocketImpl { int getLocalPort(); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { android.icu.util.UResourceBundle getParent(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { android.icu.impl.ResourceBundleWrapper getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.SocksSocketImpl { java.io.InputStream access$102(java.net.SocksSocketImpl,java.io.InputStream); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { java.lang.String getBaseName(); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void finishInput(com.android.internal.view.IInputMethodClient); }
-keepclassmembers class java.net.SocksSocketImpl { java.io.OutputStream access$202(java.net.SocksSocketImpl,java.io.OutputStream); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class java.net.SocksSocketImpl { void <clinit>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb { void <init>(); }
-keepclassmembers class java.net.SocksSocketImpl { void close(); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet); }
-keepclassmembers class java.net.SocksSocketImpl { java.lang.String access$300(java.net.SocksSocketImpl); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.net.SocksSocketImpl { int access$400(java.net.SocksSocketImpl); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { void <clinit>(); }
-keepclassmembers class android.icu.math.MathContext { void <init>(int,int); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.icu.math.MathContext { void <init>(int,int,boolean,int); }
-keepclassmembers class java.io.ObjectInputStream$BlockDataInputStream { int readUTFChar(java.lang.StringBuilder,long); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getDisabledThemeAttrColor(android.content.Context,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { android.icu.impl.ResourceBundleWrapper instantiateBundle(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.icu.util.UResourceTypeMismatchException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int,float); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class com.xlythe.calculator.material.GraphController { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { boolean localeIDStartsWithLangSubtag(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ImageView { android.widget.ImageView$ScaleType getScaleType(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onMeasure(int,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { android.icu.impl.ResourceBundleWrapper access$100(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix getImageMatrix(); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.icu.math.MathContext { boolean isValidRound(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { int getType(); }
-keepclassmembers class com.xlythe.calculator.material.GraphController { com.xlythe.calculator.material.view.GraphView access$000(com.xlythe.calculator.material.GraphController); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void <init>(java.util.ResourceBundle,android.icu.impl.ResourceBundleWrapper$1); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void incrementSteps(); }
-keepclassmembers class com.xlythe.calculator.material.GraphController { void access$100(com.xlythe.calculator.material.GraphController); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void access$300(android.icu.impl.ResourceBundleWrapper,java.util.ResourceBundle); }
-keepclassmembers class android.icu.math.MathContext { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean isReal2x2(int,int); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { java.lang.String access$502(android.icu.impl.ResourceBundleWrapper,java.lang.String); }
-keepclassmembers class org.ejml.alg.block.BlockTriangularSolver { void solveL(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,boolean); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { boolean access$600(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void access$700(android.icu.impl.ResourceBundleWrapper,java.util.ResourceBundle); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { boolean access$800(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { boolean isZero(int,int); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { android.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onLayoutChild(android.view.View,int); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawableFromUri(android.net.Uri); }
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void performImplicitDoubleStep(int,int,double,double); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { java.lang.String access$402(android.icu.impl.ResourceBundleWrapper,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.icu.text.Normalizer$NFKC32ModeImpl { android.icu.text.Normalizer$ModeImpl access$900(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock { void <init>(java.util.concurrent.locks.ReentrantReadWriteLock); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { android.icu.util.UResourceBundle handleGet(int,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.widget.FrameLayout { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.icu.text.Normalizer$NFKC32ModeImpl { void <clinit>(); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onMeasureChild(android.view.View,int,int,int,int); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class com.nineoldandroids.animation.KeyframeSet { void <init>(com.nineoldandroids.animation.Keyframe[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void performImplicitSingleStep(int,int,double); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { java.lang.String findString(java.lang.String); }
-keepclassmembers class com.nineoldandroids.animation.KeyframeSet { com.nineoldandroids.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class org.ejml.alg.block.BlockTriangularSolver { void solveR(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,boolean); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void <init>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.file.Files { java.nio.file.spi.FileSystemProvider provider(java.nio.file.Path); }
-keepclassmembers class android.icu.text.TransliterationRuleSet { void <init>(); }
-keepclassmembers class android.icu.text.TransliterationRuleSet { int getMaximumContextLength(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { void <init>(android.icu.impl.ICUResourceBundle$WholeBundle,int); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class android.icu.text.TransliterationRuleSet { void addRule(android.icu.text.TransliterationRule); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.icu.text.TransliterationRuleSet { void freeze(); }
-keepclassmembers class android.icu.text.Normalizer$NFCMode { android.icu.text.Normalizer2 getNormalizer2(int); }
-keepclassmembers class android.icu.text.Normalizer$NFCMode { void <init>(); }
-keepclassmembers class android.icu.impl.ResourceBundleWrapper { void access$900(android.icu.impl.ResourceBundleWrapper); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.nio.file.Files { java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[]); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.icu.text.Normalizer$NFCMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$2 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator,android.view.View); }
-keepclassmembers class java.nio.file.Files { java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$2 { void onClick(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceTable { java.lang.Object handleGetObject(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.icu.text.TransliterationRuleSet { boolean transliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class java.nio.file.Files { java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class java.nio.file.Files { java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixVectorDrawableTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { long access$100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$202(android.animation.LayoutTransition,long); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void setQ(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen { void setup(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$600(android.animation.LayoutTransition); }
-keepclassmembers class org.ejml.ops.MatrixFeatures { boolean hasUncountable(org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$400(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater { java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(); }
-keepclassmembers class android.animation.LayoutTransition { long access$1000(android.animation.LayoutTransition); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReferenceFieldUpdater { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1400(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <init>(android.os.Parcel,android.content.pm.ApplicationInfo$1); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.content.pm.ApplicationInfo { void <clinit>(); }
-keepclassmembers class java.nio.file.Files { java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class java.io.SerializablePermission { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void recordLastChildRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void removePreDrawListener(); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class sun.security.util.DerInputBuffer { void <init>(byte[]); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class sun.security.util.DerInputBuffer { sun.security.util.DerInputBuffer dup(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class java.nio.file.Files { boolean deleteIfExists(java.nio.file.Path); }
-keepclassmembers class sun.security.util.DerInputBuffer { void <init>(byte[],int,int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class sun.security.util.DerInputBuffer { int getPos(); }
-keepclassmembers class sun.security.util.DerInputBuffer { byte[] toByteArray(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi); }
-keepclassmembers class sun.security.util.DerInputBuffer { int peek(); }
-keepclassmembers class sun.security.util.DerInputBuffer { boolean equals(sun.security.util.DerInputBuffer); }
-keepclassmembers class java.nio.file.Files { void delete(java.nio.file.Path); }
-keepclassmembers class sun.security.util.DerInputBuffer { byte[] getSlice(int,int); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class sun.security.util.DerInputBuffer { void truncate(int); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setVisibility(int); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class sun.security.util.DerInputBuffer { java.math.BigInteger getBigInteger(int,boolean); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class sun.security.util.DerInputBuffer { int getInteger(int); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class com.nineoldandroids.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class sun.security.util.DerInputBuffer { byte[] getBitString(int); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void <init>(); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean test(android.view.View); }
-keepclassmembers class sun.security.util.DerInputBuffer { byte[] getBitString(); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean test(java.lang.Object); }
-keepclassmembers class sun.security.util.DerInputBuffer { sun.security.util.BitArray getUnalignedBitString(); }
-keepclassmembers class android.support.design.widget.VisibilityAwareImageButton { void internalSetVisibility(int,boolean); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View$1); }
-keepclassmembers class sun.security.util.DerInputBuffer { java.util.Date getUTCTime(int); }
-keepclassmembers class sun.security.util.DerInputBuffer { java.util.Date getGeneralizedTime(int); }
-keepclassmembers class android.support.design.widget.VisibilityAwareImageButton { void setVisibility(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelMenuPresenterCallback { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class sun.security.util.DerInputBuffer { java.util.Date getTime(int,boolean); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class android.widget.ImageView { void setImageAlpha(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PanelMenuPresenterCallback { void <init>(com.android.internal.policy.PhoneWindow,com.android.internal.policy.PhoneWindow$1); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void <init>(); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class android.widget.ImageView { void onVisibilityAggregated(boolean); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void init(java.nio.ByteBuffer); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void <init>(java.nio.ByteBuffer,java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules parseDescription(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$State { void <clinit>(); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules$Constraint parseConstraint(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { android.icu.impl.ICUResourceBundleReader getReader(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$State { com.xlythe.calculator.material.floating.FloatingCalculator$State[] values(); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class android.util.Log$ImmediateLogWriter { int getWritten(); }
-keepclassmembers class android.util.Log$ImmediateLogWriter { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.util.Log$ImmediateLogWriter { void close(); }
-keepclassmembers class android.util.Log$ImmediateLogWriter { void write(char[],int,int); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.util.Log$ImmediateLogWriter { void flush(); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.TransliteratorIDParser$SingleID parseFilterID(java.lang.String,int[]); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.TransliteratorIDParser$SingleID parseSingleID(java.lang.String,int[],int); }
-keepclassmembers class org.ejml.ops.MatrixFeatures { boolean isOrthogonal(org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int getRootResource(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int getIndexesInt(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { boolean getNoFallback(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int RES_GET_TYPE(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int RES_GET_OFFSET(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { boolean URES_IS_ARRAY(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int getResourceByteOffset(int); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { boolean URES_IS_TABLE(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int RES_GET_INT(int); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { char[] getChars(int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int[] getInts(int,int); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class org.ejml.ops.MatrixFeatures { boolean isSymmetric(org.ejml.data.DenseMatrix64F,double); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.UnicodeSet parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { char[] getTable16KeyOffsets(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { char[] getTableKeyOffsets(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int getInt(int); }
-keepclassmembers class org.ejml.ops.MatrixFeatures { boolean isUpperTriangle(org.ejml.data.DenseMatrix64F,int,double); }
-keepclassmembers class com.android.internal.view.IInputMethodManager$Stub$Proxy { void notifyUserAction(int); }
-keepclassmembers class android.icu.impl.CacheValue { android.icu.impl.CacheValue getInstance(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String makeKeyStringFromBytes(byte[],int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int[] getTable32KeyOffsets(int); }
-keepclassmembers class android.icu.impl.CacheValue { boolean futureInstancesWillBeStrong(); }
-keepclassmembers class android.icu.impl.CacheValue { void <init>(); }
-keepclassmembers class android.icu.text.DisplayContext$Type { void <clinit>(); }
-keepclassmembers class android.icu.text.DisplayContext$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.CacheValue { boolean isNull(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getKey32String(int); }
-keepclassmembers class android.icu.impl.CacheValue { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void setKeyFromKey32(int,android.icu.impl.UResource$Key); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getStringV2(int); }
-keepclassmembers class com.android.internal.widget.BackgroundFallback { void <init>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getKey16String(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int compareKeys(java.lang.CharSequence,char); }
-keepclassmembers class com.android.internal.widget.BackgroundFallback { void setDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int compareKeys32(java.lang.CharSequence,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void setKeyFromKey16(int,android.icu.impl.UResource$Key); }
-keepclassmembers class com.android.internal.widget.BackgroundFallback { boolean hasFallback(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class android.icu.text.PluralRules { java.text.ParseException unexpected(java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.file.Files { long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[]); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { boolean parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,android.icu.text.UnicodeSet[]); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.icu.text.PluralRules { java.lang.String nextToken(java.lang.String[],int,java.lang.String); }
-keepclassmembers class java.nio.file.Files { long copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String makeStringFromBytes(int,int); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getString(int); }
-keepclassmembers class android.widget.Editor$2 { void <init>(android.widget.Editor); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { java.util.List instantiateList(java.util.List); }
-keepclassmembers class android.icu.util.ICUUncheckedIOException { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules$Rule parseRule(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules { void addRange(java.lang.StringBuilder,double,double,boolean); }
-keepclassmembers class android.icu.util.ICUUncheckedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$1 { void <init>(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.view.ViewGroup { boolean isShowingContextMenuWithCoords(); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View,float,float); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules$RuleList parseRuleChain(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules { java.lang.String format(double); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules forLocale(android.icu.util.ULocale); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules forLocale(java.util.Locale); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getAlias(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int); }
-keepclassmembers class android.icu.util.ICUUncheckedIOException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.icu.text.PluralRules { void <init>(android.icu.text.PluralRules$RuleList); }
-keepclassmembers class android.icu.text.PluralRules { int hashCode(); }
-keepclassmembers class android.icu.text.PluralRules { boolean isValidKeyword(java.lang.String); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class android.icu.text.PluralRules { java.lang.String select(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class java.util.AbstractList { java.lang.Object remove(int); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { java.lang.String STVtoID(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int[] getIntVector(int); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { android.icu.impl.ICUResourceBundleReader$Array getArray(int); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { java.lang.String[] IDtoSTV(java.lang.String); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { android.icu.impl.ICUResourceBundleReader$Table getTable(int); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { void registerSpecialInverse(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class java.util.AbstractList { void removeRange(int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String getFullName(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { int getDefaultPort(); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.TransliteratorIDParser$Specs parseFilterID(java.lang.String,int[],boolean); }
-keepclassmembers class java.util.AbstractList { void rangeCheckForAdd(int); }
-keepclassmembers class java.util.AbstractList { void clear(); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class java.util.AbstractList { java.lang.String outOfBoundsMsg(int); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean caseIgnoreMatch(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class android.icu.text.PluralRules { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { android.icu.impl.ICUResourceBundleReader access$200(); }
-keepclassmembers class android.icu.text.PluralRules { boolean equals(android.icu.text.PluralRules); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void <init>(java.nio.ByteBuffer,java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundleReader$1); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class sun.util.locale.LocaleUtils { int caseIgnoreCompare(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.TransliteratorIDParser$SingleID specsToID(android.icu.text.TransliteratorIDParser$Specs,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int[] access$400(); }
-keepclassmembers class sun.util.locale.LocaleUtils { char toUpper(char); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.nio.CharBuffer access$600(android.icu.impl.ICUResourceBundleReader); }
-keepclassmembers class sun.util.locale.LocaleUtils { char toLower(char); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$700(android.icu.impl.ICUResourceBundleReader); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$800(android.icu.impl.ICUResourceBundleReader); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$900(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class sun.util.locale.LocaleUtils { java.lang.String toLowerString(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$1000(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String access$1200(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { java.lang.String access$1100(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$1300(android.icu.impl.ICUResourceBundleReader,java.lang.CharSequence,char); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class android.icu.text.PluralRules { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$1400(android.icu.impl.ICUResourceBundleReader,java.lang.CharSequence,int); }
-keepclassmembers class sun.util.locale.LocaleUtils { java.lang.String toUpperString(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void access$1500(android.icu.impl.ICUResourceBundleReader,int,android.icu.impl.UResource$Key); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void access$1600(android.icu.impl.ICUResourceBundleReader,int,android.icu.impl.UResource$Key); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { char[] access$1700(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { android.icu.text.TransliteratorIDParser$SingleID specsToSpecialInverse(android.icu.text.TransliteratorIDParser$Specs); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { char[] access$1800(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int[] access$1900(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { int access$2200(int); }
-keepclassmembers class sun.util.locale.LocaleUtils { java.lang.String toTitleString(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isUpper(char); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isLower(char); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorIDParser { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isAlpha(char); }
-keepclassmembers class android.view.ViewGroup { void makeOptionalFitsSystemWindows(); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isAlphaString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class android.icu.text.PluralRules { void access$500(java.lang.StringBuilder,double,double,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable[] getChildren(); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isNumeric(char); }
-keepclassmembers class android.icu.text.PluralRules { void <clinit>(); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isNumericString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean setLayoutDirection(int,int); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.lang.String); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isAlphaNumeric(char); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isAlphaNumericString(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int,java.nio.charset.Charset); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void updateDensity(android.content.res.Resources); }
-keepclassmembers class java.util.jar.JarFile$JarEntryIterator { void <init>(java.util.jar.JarFile); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isEmpty(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile$JarEntryIterator { boolean hasNext(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchVisibilityAggregated(boolean); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isEmpty(java.util.Set); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class java.util.jar.JarFile$JarEntryIterator { boolean hasMoreElements(); }
-keepclassmembers class java.nio.file.Files { void <clinit>(); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isEmpty(java.util.Map); }
-keepclassmembers class android.view.ViewGroup { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class sun.util.locale.LocaleUtils { boolean isEmpty(java.util.List); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class java.util.jar.JarFile$JarEntryIterator { void <init>(java.util.jar.JarFile,java.util.jar.JarFile$1); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$CodepointsTypeHandler { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { void <init>(java.util.Formatter$FormatSpecifier,java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$CodepointsTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$CodepointsTypeHandler { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { int scale(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { boolean hasDot(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void bringChildToFront(android.view.View); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { boolean setBlockDataMode(boolean); }
-keepclassmembers class android.icu.text.PluralRules { android.icu.text.PluralRules$Rule access$600(java.lang.String); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { char[] mantissa(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { char[] toCharArray(java.lang.StringBuilder); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { char[] exponent(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEnterExitInPreN(android.view.DragEvent); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$1 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void write(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void flush(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void close(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void write(byte[],int,int,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class android.icu.impl.UBiDiProps$IsAcceptable { void <init>(); }
-keepclassmembers class android.icu.impl.UBiDiProps$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class java.util.zip.ZipFile { long getEntry(long,byte[],boolean); }
-keepclassmembers class android.icu.impl.UBiDiProps$IsAcceptable { void <init>(android.icu.impl.UBiDiProps$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { boolean hasStableIds(); }
-keepclassmembers class java.util.zip.ZipFile { void freeEntry(long,long); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyDataSetChanged(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void drain(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(long); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeBlockHeader(int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class java.util.Locale$1 { void <clinit>(); }
-keepclassmembers class java.lang.ref.FinalizerReference { java.lang.Object getReferent(); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class java.util.Formatter$FormatSpecifier$BigDecimalLayout { void layout(java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeShort(int); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class sun.misc.Unsafe { int arrayBaseOffset(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeInt(int); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.Inflater getInflater(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDragStart(android.view.View); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { void <init>(int,float); }
-keepclassmembers class sun.misc.Unsafe { int arrayIndexScale(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void warnIfClosed(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$100(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class sun.misc.Unsafe { int getArrayIndexScaleForComponentType(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { int assign(java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapLong(java.lang.Object,long,long,long); }
-keepclassmembers class sun.security.util.DerInputStream { void <init>(byte[]); }
-keepclassmembers class java.util.zip.ZipFile { void releaseInflater(java.util.zip.Inflater); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { int lookup(java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { int getIntVolatile(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { int getArrayBaseOffsetForComponentType(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeLong(long); }
-keepclassmembers class sun.security.util.DerInputStream { void init(byte[],int,int); }
-keepclassmembers class sun.misc.Unsafe { void putLongVolatile(java.lang.Object,long,long); }
-keepclassmembers class android.support.v7.widget.TintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class sun.misc.Unsafe { long getLongVolatile(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { void putInt(java.lang.Object,long,int); }
-keepclassmembers class sun.misc.Unsafe { int getInt(java.lang.Object,long); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class sun.misc.Unsafe { long getLong(java.lang.Object,long); }
-keepclassmembers class android.support.v7.widget.TintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { void clear(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { boolean requirePreDrawListener(); }
-keepclassmembers class android.icu.text.TimeZoneNames$NameType { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { int size(); }
-keepclassmembers class sun.misc.Unsafe { void putLong(java.lang.Object,long,long); }
-keepclassmembers class android.icu.text.TimeZoneNames$NameType { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { void insert(java.lang.Object,int); }
-keepclassmembers class android.icu.text.PluralRules$RangeConstraint { void <init>(int,boolean,android.icu.text.PluralRules$Operand,boolean,double,double,long[]); }
-keepclassmembers class android.support.design.widget.MathUtils { float constrain(float,float,float); }
-keepclassmembers class sun.misc.Unsafe { byte getByte(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { void putBoolean(java.lang.Object,long,boolean); }
-keepclassmembers class sun.misc.Unsafe { boolean getBoolean(java.lang.Object,long); }
-keepclassmembers class sun.security.util.DerInputStream { void <init>(sun.security.util.DerInputBuffer); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeBytes(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getZipEntry(java.lang.String,long); }
-keepclassmembers class sun.misc.Unsafe { void putByte(java.lang.Object,long,byte); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { void growSpine(); }
-keepclassmembers class sun.misc.Unsafe { char getChar(java.lang.Object,long); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerInputStream subStream(int,boolean); }
-keepclassmembers class sun.misc.Unsafe { short getShort(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { void putChar(java.lang.Object,long,char); }
-keepclassmembers class sun.util.locale.StringTokenIterator { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$CompoundRBTEntry { void <init>(java.lang.String,java.util.List,java.util.List,android.icu.text.UnicodeSet); }
-keepclassmembers class sun.misc.Unsafe { double getDouble(java.lang.Object,long); }
-keepclassmembers class sun.misc.Unsafe { void putFloat(java.lang.Object,long,float); }
-keepclassmembers class sun.misc.Unsafe { float getFloat(java.lang.Object,long); }
-keepclassmembers class sun.security.util.DerInputStream { byte[] toByteArray(); }
-keepclassmembers class sun.misc.Unsafe { void putShort(java.lang.Object,long,short); }
-keepclassmembers class sun.misc.Unsafe { void putDouble(java.lang.Object,long,double); }
-keepclassmembers class sun.security.util.DerInputStream { int getInteger(); }
-keepclassmembers class sun.util.locale.StringTokenIterator { java.lang.String current(); }
-keepclassmembers class android.icu.text.PluralRules$RangeConstraint { boolean isFulfilled(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.icu.text.TransliteratorRegistry$CompoundRBTEntry { android.icu.text.Transliterator getInstance(); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { void growEntries(); }
-keepclassmembers class sun.util.locale.StringTokenIterator { int currentStart(); }
-keepclassmembers class sun.util.locale.StringTokenIterator { int currentEnd(); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class sun.util.locale.StringTokenIterator { boolean isDone(); }
-keepclassmembers class sun.security.util.DerInputStream { java.math.BigInteger getBigInteger(); }
-keepclassmembers class java.io.ObjectOutputStream$HandleTable { int hash(java.lang.Object); }
-keepclassmembers class sun.util.locale.StringTokenIterator { sun.util.locale.StringTokenIterator setStart(int); }
-keepclassmembers class sun.util.locale.StringTokenIterator { java.lang.String next(); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.BitArray getUnalignedBitString(); }
-keepclassmembers class sun.misc.Unsafe { int getAndAddInt(java.lang.Object,long,int); }
-keepclassmembers class java.util.zip.ZipFile { int size(); }
-keepclassmembers class sun.util.locale.StringTokenIterator { int nextDelimiter(int); }
-keepclassmembers class sun.util.locale.StringTokenIterator { boolean hasNext(); }
-keepclassmembers class sun.misc.Unsafe { long getAndAddLong(java.lang.Object,long,long); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeBooleans(boolean[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class sun.security.util.DerInputStream { void getBytes(byte[]); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeChars(char[],int,int); }
-keepclassmembers class sun.security.util.DerInputStream { byte[] getOctetString(); }
-keepclassmembers class android.content.pm.ServiceInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void <init>(); }
-keepclassmembers class android.content.pm.ServiceInfo { void <init>(android.os.Parcel,android.content.pm.ServiceInfo$1); }
-keepclassmembers class android.content.pm.ServiceInfo { void <clinit>(); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.ObjectIdentifier getOID(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int,int[],int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] getSequence(int,boolean); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] getSequence(int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,java.lang.String,int,int); }
-keepclassmembers class android.icu.text.PluralRules$RangeConstraint { java.lang.String toString(); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] getSet(int,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int); }
-keepclassmembers class java.util.zip.ZipFile { void close(long); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeShorts(short[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { void ensureOpen(); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] getSet(int); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] getSet(int,boolean,boolean); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverSafe { void <init>(org.ejml.factory.LinearSolver); }
-keepclassmembers class java.util.zip.ZipFile { void ensureOpenOrZipException(); }
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator { float getInterpolation(float); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void copyFrom(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] readVector(int); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverSafe { boolean modifiesA(); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverSafe { boolean modifiesB(); }
-keepclassmembers class java.util.zip.ZipFile { long open(java.lang.String,int,long,boolean); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void setPrimaryColor(int); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue[] readVector(int,boolean); }
-keepclassmembers class java.util.zip.ZipFile { int getTotal(long); }
-keepclassmembers class java.util.zip.ZipFile { int read(long,long,long,byte[],int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class java.util.zip.ZipFile { long getEntryTime(long); }
-keepclassmembers class java.util.zip.ZipFile { boolean startsWithLOC(long); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverSafe { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeInts(int[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { int getEntryMethod(long); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void setBackgroundColor(int); }
-keepclassmembers class java.util.zip.ZipFile { long getEntrySize(long); }
-keepclassmembers class java.util.zip.ZipFile { long getEntryCSize(long); }
-keepclassmembers class java.util.zip.ZipFile { long getEntryCrc(long); }
-keepclassmembers class java.util.zip.ZipFile { byte[] getEntryBytes(long,int); }
-keepclassmembers class java.util.zip.ZipFile { int getEntryFlag(long); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Map access$000(java.util.zip.ZipFile); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class java.util.zip.ZipFile { void access$100(java.util.zip.ZipFile,java.util.zip.Inflater); }
-keepclassmembers class java.util.zip.ZipFile { void access$200(java.util.zip.ZipFile); }
-keepclassmembers class java.util.zip.ZipFile { int access$300(java.util.zip.ZipFile); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void setIcon(android.graphics.Bitmap); }
-keepclassmembers class java.util.zip.ZipFile { long access$400(java.util.zip.ZipFile); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeFloats(float[],int,int); }
-keepclassmembers class android.view.ViewGroup { int getAndVerifyPreorderedIndex(int,int,boolean); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String,int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getBackgroundColor(); }
-keepclassmembers class org.ejml.alg.dense.linsol.LinearSolverSafe { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class java.util.zip.ZipFile { void access$1000(long,long); }
-keepclassmembers class sun.security.util.DerInputStream { sun.security.util.DerValue getDerValue(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeLongs(long[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { void access$1300(java.util.zip.ZipFile); }
-keepclassmembers class java.util.zip.ZipFile { long access$1100(long); }
-keepclassmembers class java.util.zip.ZipFile { int access$1400(long,long,long,byte[],int,int); }
-keepclassmembers class java.util.zip.ZipFile { void <clinit>(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class sun.security.util.DerInputStream { java.util.Date getUTCTime(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeDoubles(double[],int,int); }
-keepclassmembers class sun.security.util.DerInputStream { java.util.Date getGeneralizedTime(); }
-keepclassmembers class sun.security.util.DerInputStream { int getLength(); }
-keepclassmembers class sun.security.util.DerInputStream { int getByte(); }
-keepclassmembers class sun.security.util.DerInputStream { int getLength(java.io.InputStream); }
-keepclassmembers class sun.security.util.DerInputStream { int peekByte(); }
-keepclassmembers class sun.security.util.DerInputStream { int getLength(int,java.io.InputStream); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { long getUTFLength(java.lang.String); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int,boolean); }
-keepclassmembers class sun.security.util.DerInputStream { void mark(int); }
-keepclassmembers class sun.security.util.DerInputStream { void reset(); }
-keepclassmembers class sun.security.util.DerInputStream { int available(); }
-keepclassmembers class java.util.logging.LogManager$3 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class java.util.logging.LogManager$3 { java.lang.Void run(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class java.util.logging.LogManager$3 { java.lang.Object run(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$10$1 { void onAnimationFinished(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$10$1 { void <init>(com.xlythe.view.floating.FloatingView$10); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$3 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeUTF(java.lang.String,long); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeLongUTF(java.lang.String,long); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeByte(int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl$1 { void <init>(android.support.design.widget.FloatingActionButtonImpl); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class java.io.ObjectOutputStream$BlockDataOutputStream { void writeUTFBody(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class android.icu.impl.StringRange$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator { void <init>(float[]); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.zip.ZipFile { long access$1200(long); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class android.view.ViewPropertyAnimator$1 { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class java.nio.channels.NonReadableChannelException { void <init>(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class sun.misc.FloatingDecimal$ASCIIToBinaryBuffer { void <init>(boolean,int,char[],int); }
-keepclassmembers class sun.misc.FloatingDecimal$ASCIIToBinaryBuffer { double doubleValue(); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList { void doCallbacks(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList { void clear(); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList { java.io.ObjectInputStream$ValidationList$Callback access$400(java.io.ObjectInputStream$ValidationList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.icu.text.Normalizer2 { android.icu.text.Normalizer2 getNFCInstance(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$1 { void onGlobalLayout(); }
-keepclassmembers class android.icu.text.Normalizer2 { android.icu.text.Normalizer2 getNFDInstance(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class android.icu.text.Normalizer2 { android.icu.text.Normalizer2 getNFKDInstance(); }
-keepclassmembers class android.icu.text.Normalizer2 { android.icu.text.Normalizer2 getNFKCInstance(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int[] getState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void jumpToCurrentState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean onLevelChange(int); }
-keepclassmembers class android.icu.text.Normalizer2 { java.lang.String normalize(java.lang.CharSequence); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setChangingConfigurations(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat { void <clinit>(); }
-keepclassmembers class android.icu.text.Normalizer2 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspot(float,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean setState(int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.content.res.ResourcesImpl { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.view.DisplayAdjustments); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildTouchDispatchChildList(); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class android.content.res.ResourcesImpl { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.view.ThreadedRenderer { boolean isAvailable(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class android.content.res.ResourcesImpl { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class sun.misc.FloatingDecimal$ASCIIToBinaryBuffer { float floatValue(); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.content.res.ResourcesImpl { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class android.content.res.ResourcesImpl { java.lang.String getResourceName(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class android.content.res.ResourcesImpl { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.content.res.ResourcesImpl { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { void <init>(java.lang.String,android.icu.text.SymbolTable,java.text.ParsePosition); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class android.content.res.ResourcesImpl { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { boolean atEnd(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void addPendingAnimator(int,float,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { int next(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void addTargetAnimator(java.lang.String,android.animation.Animator); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void prepareLocalAnimators(android.animation.AnimatorSet,android.content.res.Resources); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { boolean isEscaped(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { boolean inVariable(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { java.lang.Object getPos(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property getProperty(java.lang.String); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { void setPos(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void addChild(android.graphics.drawable.VectorDrawable$VObject); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { void skipIgnored(int); }
-keepclassmembers class android.content.res.ResourcesImpl { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.animation.Animator prepareLocalAnimator(int); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { java.lang.String lookahead(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void setTree(com.android.internal.util.VirtualRefBasePtr); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewPager$2 { void <init>(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { long getNativePtr(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { void jumpahead(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void inflatePendingAnimators(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class com.xlythe.math.GraphModule { void <init>(com.xlythe.math.Solver); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.content.res.ResourcesImpl { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { int _current(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean access$100(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$18 { void <init>(com.xlythe.view.floating.FloatingView,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean onStateChange(int[]); }
-keepclassmembers class sun.misc.FloatingDecimal$ASCIIToBinaryBuffer { void <clinit>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$18 { void onAnimationFinished(); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int getPropertyIndex(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int getNativeSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager$SystemLoggerContext { void <init>(java.util.logging.LogManager); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.logging.LogManager$SystemLoggerContext { java.util.logging.Logger demandLogger(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$3 { void <init>(); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { boolean shouldWrap(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.Context wrap(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ByteArrayOutputStream { void ensureCapacity(int); }
-keepclassmembers class sun.security.util.DerOutputStream { void <init>(); }
-keepclassmembers class sun.security.util.DerOutputStream { void write(byte,byte[]); }
-keepclassmembers class java.io.ByteArrayOutputStream { void grow(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class sun.security.util.DerOutputStream { void write(byte,sun.security.util.DerOutputStream); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$4 { void <init>(com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$4 { void onAnimationFinished(); }
-keepclassmembers class java.io.ByteArrayOutputStream { int hugeCapacity(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class sun.security.util.DerOutputStream { void putDerValue(sun.security.util.DerValue); }
-keepclassmembers class sun.security.util.DerOutputStream { void putBoolean(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.IInputContext$Stub { void <init>(); }
-keepclassmembers class android.icu.impl.RuleCharacterIterator { void _advance(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class sun.security.util.DerOutputStream { void putInteger(java.math.BigInteger); }
-keepclassmembers class sun.security.util.DerOutputStream { void putInteger(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { long access$200(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class com.android.internal.view.IInputContext$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class sun.security.util.DerOutputStream { void putIntegerContents(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$900(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1100(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1000(); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1400(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1500(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1200(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.util.Property access$1300(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getAndVerifyPreorderedView(java.util.ArrayList,android.view.View[],int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class sun.security.util.DerOutputStream { void putUnalignedBitString(sun.security.util.BitArray); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.content.res.ResourcesImpl { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class sun.security.util.DerOutputStream { void putTruncatedUnalignedBitString(sun.security.util.BitArray); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class sun.security.util.DerOutputStream { void putOctetString(byte[]); }
-keepclassmembers class sun.security.util.DerOutputStream { void putNull(); }
-keepclassmembers class android.content.res.ResourcesImpl { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class sun.security.util.DerOutputStream { void putOID(sun.security.util.ObjectIdentifier); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.view.ViewGroup { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.content.res.ResourcesImpl { void flushLayoutCache(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class sun.security.util.DerOutputStream { void putOrderedSetOf(byte,sun.security.util.DerEncoder[]); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.graphics.drawable.Drawable loadDrawable(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme,boolean); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class sun.security.util.DerOutputStream { void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator); }
-keepclassmembers class android.view.ViewGroup { int getNumChildrenForAccessibility(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class sun.security.util.DerOutputStream { void putIA5String(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockInnerCholesky { boolean lower(org.ejml.data.D1Submatrix64F); }
-keepclassmembers class sun.security.util.DerOutputStream { void writeString(java.lang.String,byte,java.lang.String); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockInnerCholesky { boolean lower(double[],int,int); }
-keepclassmembers class sun.security.util.DerOutputStream { void putUTCTime(java.util.Date); }
-keepclassmembers class sun.security.util.DerOutputStream { void putGeneralizedTime(java.util.Date); }
-keepclassmembers class sun.security.util.DerOutputStream { void putTime(java.util.Date,byte); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class android.content.res.ResourcesImpl { void cacheDrawable(android.util.TypedValue,boolean,android.content.res.DrawableCache,android.content.res.Resources$Theme,boolean,long,android.graphics.drawable.Drawable); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockInnerCholesky { boolean upper(double[],int,int); }
-keepclassmembers class org.ejml.alg.block.decomposition.chol.BlockInnerCholesky { boolean upper(org.ejml.data.D1Submatrix64F); }
-keepclassmembers class android.widget.ForwardingListener { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.widget.ForwardingListener { void <init>(android.view.View); }
-keepclassmembers class sun.security.util.DerOutputStream { void derEncode(java.io.OutputStream); }
-keepclassmembers class sun.security.util.DerOutputStream { void <clinit>(); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class sun.security.util.DerOutputStream { void putPrintableString(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class android.widget.ForwardingListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class java.util.TreeMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class android.content.res.ResourcesImpl { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class android.widget.ForwardingListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap$Values { int size(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.TreeMap$Values { boolean contains(java.lang.Object); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$6 { void <init>(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$6 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.widget.ForwardingListener { boolean onTouchObserved(android.view.MotionEvent); }
-keepclassmembers class sun.security.util.DerOutputStream { void putLength(int); }
-keepclassmembers class android.transition.Explode { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Explode { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class android.transition.Explode { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.content.res.ResourcesImpl { android.graphics.drawable.Drawable loadDrawableForCookie(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { java.lang.String sanitizeString(java.lang.String); }
-keepclassmembers class android.transition.Explode { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.ForwardingListener { void clearCallbacks(); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class android.widget.ForwardingListener { boolean onTouchForwarded(android.view.MotionEvent); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.util.Formatter,java.lang.String,int); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ComplexColor loadComplexColorFromName(android.content.res.Resources,android.content.res.Resources$Theme,android.util.TypedValue,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class android.view.ThreadedRenderer { void <clinit>(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ComplexColor loadComplexColor(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String nextInt(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[]); }
-keepclassmembers class org.ejml.ops.CommonOps { void addEquals(org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class org.ejml.ops.CommonOps { void changeSign(org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.transition.Explode { void <clinit>(); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F[] columnsToVector(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F[]); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ColorStateList loadColorStateList(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class java.util.TreeMap$Values { void <init>(java.util.TreeMap); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void back(int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { boolean isEnd(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int getEndIdx(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ColorStateList getColorStateListFromInt(android.util.TypedValue,long); }
-keepclassmembers class java.security.Signature$CipherAdapter { void <init>(javax.crypto.Cipher); }
-keepclassmembers class org.ejml.ops.CommonOps { double det(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.security.Signature$CipherAdapter { void engineInitSign(java.security.PrivateKey); }
-keepclassmembers class java.security.Signature$CipherAdapter { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F diag(org.ejml.data.DenseMatrix64F,int,double[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class java.security.Signature$CipherAdapter { void engineInitSign(java.security.PrivateKey,java.security.SecureRandom); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.icu.text.DecimalFormat$Unit { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ComplexColor loadComplexColorForCookie(android.content.res.Resources,android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.text.DecimalFormat$Unit { void writeSuffix(java.lang.StringBuffer); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.security.Signature$CipherAdapter { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.icu.text.DecimalFormat$Unit { void writePrefix(java.lang.StringBuffer); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class sun.security.jca.ServiceId { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void initializeScrollIndicatorsInternal(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F diag(double[]); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char peek(); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.view.View { android.view.View$ScrollabilityCache getScrollCache(); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Class getType(); }
-keepclassmembers class java.security.Signature$CipherAdapter { boolean engineVerify(byte[]); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { boolean nextIsInt(); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetLeft(); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetTop(); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetRight(); }
-keepclassmembers class android.view.WindowInsets { int getSystemWindowInsetBottom(); }
-keepclassmembers class android.view.View { boolean isOnScrollbarThumb(float,float); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class android.view.View { boolean isOnScrollbar(float,float); }
-keepclassmembers class android.view.View { boolean isOnVerticalScrollbarThumb(float,float); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatSpecifier getFormatSpecifier(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.view.View { boolean isOnHorizontalScrollbarThumb(float,float); }
-keepclassmembers class org.ejml.ops.CommonOps { double elementMaxAbs(org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class android.view.View { boolean isDraggingScrollBar(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.View { void setScrollIndicators(int); }
-keepclassmembers class android.transition.Slide$1 { void <init>(); }
-keepclassmembers class java.lang.Package { java.lang.String getName(); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class android.view.View { void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.view.View { void setScrollIndicators(int,int); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class android.content.res.ResourcesImpl { android.content.res.ResourcesImpl$ThemeImpl newThemeImpl(); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.content.res.ResourcesImpl { void <clinit>(); }
-keepclassmembers class android.view.View { void setOnLongClickListener(android.view.View$OnLongClickListener); }
-keepclassmembers class android.view.View { void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class android.view.WindowInsets { int getStableInsetLeft(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F extract(org.ejml.data.DenseMatrix64F,int,int,int,int); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class android.view.WindowInsets { int getStableInsetTop(); }
-keepclassmembers class android.view.WindowInsets { int getStableInsetBottom(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$TranslateState { void <clinit>(); }
-keepclassmembers class java.lang.Package { int hashCode(); }
-keepclassmembers class org.ejml.ops.CommonOps { void extract(org.ejml.data.Matrix64F,int,int,int,int,org.ejml.data.Matrix64F,int,int); }
-keepclassmembers class java.text.FieldPosition$Delegate { void <init>(java.text.FieldPosition); }
-keepclassmembers class java.lang.Package { java.lang.String toString(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeStableInsets(); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$TranslateState { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.WindowInsets { boolean shouldAlwaysConsumeNavBar(); }
-keepclassmembers class java.text.FieldPosition$Delegate { void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class android.view.View { void registerPendingFrameMetricsObservers(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class java.text.FieldPosition$Delegate { void <init>(java.text.FieldPosition,java.text.FieldPosition$1); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.security.AlgorithmParameters { void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class org.ejml.ops.CommonOps { void fill(org.ejml.data.D1Matrix64F,double); }
-keepclassmembers class java.security.AlgorithmParameters { java.security.AlgorithmParameters getInstance(java.lang.String); }
-keepclassmembers class android.graphics.Paint$NoImagePreloadHolder { void <clinit>(); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F identity(int); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class java.lang.Package { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.ClassLoader); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F identity(int,int); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class org.ejml.ops.CommonOps { void insert(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F,int,int); }
-keepclassmembers class org.ejml.ops.CommonOps { boolean invert(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.view.View { boolean performContextClick(float,float); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class java.security.AlgorithmParameters { void init(byte[]); }
-keepclassmembers class android.view.View { boolean performContextClick(); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback$2 { void <init>(); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class android.view.WindowInsets { int getStableInsetRight(); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback$2 { float getInterpolation(float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { void <init>(boolean); }
-keepclassmembers class java.security.AlgorithmParameters { byte[] getEncoded(); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class android.view.View { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void dispatchFitSystemWindows(android.graphics.Rect); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class android.view.View { void setOnKeyListener(android.view.View$OnKeyListener); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class java.security.AlgorithmParameters { java.lang.String toString(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { org.ejml.data.DenseMatrix64F getEigenVector(int); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class android.content.ClipDescription { boolean toShortStringTypesOnly(java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { org.ejml.data.Matrix64F getEigenVector(int); }
-keepclassmembers class org.ejml.ops.CommonOps { void mult(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { org.ejml.data.Complex64F getEigenvalue(int); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.WatchedDoubleStepQRDecomposition { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.view.ViewGroup { void dispatchViewAdded(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,int); }
-keepclassmembers class android.view.ViewGroup { void dispatchViewRemoved(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onAttachedToWindow(); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class android.view.View { void setOnTouchListener(android.view.View$OnTouchListener); }
-keepclassmembers class org.ejml.ops.CommonOps { void multAdd(double,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.View { void setRevealOnFocusHint(boolean); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(long); }
-keepclassmembers class java.lang.Package { void <clinit>(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable$HandleList { void <init>(); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable$HandleList { void add(int); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable$HandleList { int size(); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class java.io.ObjectInputStream$HandleTable$HandleList { int get(int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { void <init>(com.xlythe.view.floating.FloatingView,int,int); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class org.ejml.ops.CommonOps { void multTransA(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { com.xlythe.view.floating.FloatingView$DynamicUpdate access$2900(com.xlythe.view.floating.FloatingView$AnimationTask); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class org.ejml.ops.CommonOps { void multTransB(org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F,org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { int calculateY(); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { int calculateX(); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F[] rowsToVector(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F[]); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { void run(); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask { void setAnimationFinishedListener(com.xlythe.view.floating.AnimationFinishedListener); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { void <init>(org.ejml.data.D1Matrix64F,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class org.ejml.ops.CommonOps { void pinv(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { double get(int,int); }
-keepclassmembers class org.ejml.ops.CommonOps { void scale(double,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { int getCols(); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { int getRows(); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { void set(int,int,double); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class org.ejml.ops.CommonOps { void setIdentity(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.icu.util.MeasureUnit$3 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.icu.util.MeasureUnit$3 { android.icu.util.MeasureUnit create(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$9 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$9 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoInternal(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$9 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$9 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.view.View { void onProvideStructure(android.view.ViewStructure); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class java.util.logging.LogManager { void <init>(java.lang.Void); }
-keepclassmembers class org.ejml.ops.CommonOps { void subEquals(org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.icu.text.PluralRules$Rule { void <init>(java.lang.String,android.icu.text.PluralRules$Constraint,android.icu.text.PluralRules$FixedDecimalSamples,android.icu.text.PluralRules$FixedDecimalSamples); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb { void <init>(); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Void checkSubclassPermissions(); }
-keepclassmembers class android.animation.RevealAnimator { void <init>(android.view.View,int,int,float,float); }
-keepclassmembers class org.ejml.data.D1Submatrix64F { void <init>(org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.icu.text.PluralRules$Rule { java.lang.String getKeyword(); }
-keepclassmembers class android.icu.text.PluralRules$Rule { boolean appliesTo(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class java.util.logging.LogManager { void ensureLogManagerInitialized(); }
-keepclassmembers class android.icu.text.PluralRules$Rule { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.view.View { void onProvideVirtualStructure(android.view.ViewStructure); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.view.View { void populateVirtualStructure(android.view.ViewStructure,android.view.accessibility.AccessibilityNodeProvider,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getProperty(int); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class android.icu.text.PluralRules$Rule { int hashCode(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getAdditional(int,int); }
-keepclassmembers class android.icu.text.PluralRules$Rule { android.icu.text.PluralRules$FixedDecimalSamples access$300(android.icu.text.PluralRules$Rule); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class java.util.logging.LogManager { void readPrimordialConfiguration(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void updateSelection(int,int,int,int,int,int); }
-keepclassmembers class android.icu.text.PluralRules$Rule { android.icu.text.PluralRules$FixedDecimalSamples access$400(android.icu.text.PluralRules$Rule); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void viewClicked(boolean); }
-keepclassmembers class android.widget.Editor$EditOperation$1 { void <init>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { android.icu.util.VersionInfo getAge(int); }
-keepclassmembers class org.ejml.ops.CommonOps { org.ejml.data.DenseMatrix64F transpose(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.icu.impl.UCharacterProperty { boolean isgraphPOSIX(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty { boolean hasBinaryProperty(int,int); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams { void <init>(); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void displayCompletions(android.view.inputmethod.CompletionInfo[]); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getType(int); }
-keepclassmembers class org.ejml.ops.CommonOps { void transpose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$9 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getIntPropertyValue(int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$1 { void <init>(com.android.internal.view.menu.MenuPopupHelper); }
-keepclassmembers class com.android.internal.view.menu.MenuPopupHelper$1 { void onDismiss(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getSource(int); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getMask(int); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager$LoggerContext getUserContext(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager$LoggerContext getSystemContext(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getEuropeanDigit(int); }
-keepclassmembers class java.util.logging.LogManager { java.util.List contexts(); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger demandLogger(java.lang.String,java.lang.String,java.lang.Class); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int digit(int); }
-keepclassmembers class sun.security.pkcs.ParsingException { void <init>(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger demandSystemLogger(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getMaxValues(int); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Class getClassInstance(java.lang.String); }
-keepclassmembers class android.icu.impl.Trie2$ValueWidth { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.Trie2$ValueWidth { void <clinit>(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { double getUnicodeNumericValue(int); }
-keepclassmembers class java.util.logging.LogManager { void loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void drainLoggerRefQueueBounded(); }
-keepclassmembers class android.icu.impl.BMPSet { void <init>(int[],int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getIntPropertyMaxValue(int); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class java.util.logging.LogManager { void doSetLevel(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2$ValueWidth { android.icu.impl.Trie2$ValueWidth[] values(); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.String); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.logging.LogManager { void doSetParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int getNumericTypeValue(int); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.icu.impl.BMPSet { boolean contains(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int ntvGetType(int); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class android.view.View { void populateAccessibilityNodeInfoDrawingOrderInParent(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { void <init>(); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheKey { java.lang.Object valueOf(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$6 { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.BMPSet { int span(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition,android.icu.util.OutputInt); }
-keepclassmembers class java.util.HashMap$Values { int size(); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheKey { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheKey { int hashCode(); }
-keepclassmembers class java.util.HashMap$Values { boolean contains(java.lang.Object); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class java.lang.reflect.WeakCache$CacheKey { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager { void resetLogger(java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String[] parseClassNames(java.lang.String); }
-keepclassmembers class android.view.View { int numViewsForAccessibility(android.view.View); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class com.android.internal.view.IInputMethodSession$Stub$Proxy { void updateExtractedText(int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point,boolean); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidLayout { void setPreventParentTouchEvents(boolean); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { void <init>(); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean setInfo(int,int,byte,byte); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidLayout { void setPreventChildTouchEvents(boolean); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class java.security.cert.CRLException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean setFactor(char[]); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class android.graphics.Rect { int centerY(); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean setFactorString(byte[]); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean contains(int); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { void appendName(int,java.lang.StringBuffer); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class java.util.logging.LogManager { boolean getBooleanProperty(java.lang.String,boolean); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean setPrefix(java.lang.String); }
-keepclassmembers class android.os.LocaleList$1 { void <init>(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Level getLevelProperty(java.lang.String,java.util.logging.Level); }
-keepclassmembers class android.os.LocaleList$1 { android.os.LocaleList createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class android.view.inputmethod.EditorInfo { void <clinit>(); }
-keepclassmembers class android.graphics.Rect { boolean contains(android.graphics.Rect); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class android.icu.impl.BMPSet { int spanBack(java.lang.CharSequence,int,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class android.os.LocaleList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class android.graphics.Rect { void offsetTo(int,int); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { int getChar(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void initializeGlobalHandlers(); }
-keepclassmembers class java.util.logging.LogManager { void checkPermission(); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixDimensionException { void <init>(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void setLevelsOnExistingLoggers(); }
-keepclassmembers class android.graphics.Rect { boolean intersects(int,int,int,int); }
-keepclassmembers class android.view.View { int getNextFocusForwardId(); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager access$200(); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { int add(int[],int); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger access$600(java.util.logging.LogManager); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty { android.icu.text.UnicodeSet addPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class java.util.logging.LogManager { boolean access$700(java.util.logging.LogManager); }
-keepclassmembers class java.util.logging.LogManager { boolean access$800(java.util.logging.LogManager); }
-keepclassmembers class java.time.Instant { java.time.Instant ofEpochSecond(long,long); }
-keepclassmembers class java.util.logging.LogManager { void access$900(java.util.logging.LogManager); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger access$602(java.util.logging.LogManager,java.util.logging.Logger); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Level access$1100(); }
-keepclassmembers class java.util.logging.LogManager { void access$1200(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class android.content.UndoOperation { void <init>(android.content.UndoOwner); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFCSingleton { android.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$200(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NFCSingleton { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String[] access$1400(java.util.logging.LogManager,java.lang.String); }
-keepclassmembers class java.time.Instant { java.time.Instant from(java.time.temporal.TemporalAccessor); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class android.content.UndoOperation { android.content.UndoOwner getOwner(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.ref.ReferenceQueue access$1500(java.util.logging.LogManager); }
-keepclassmembers class android.content.UndoOperation { java.lang.Object getOwnerData(); }
-keepclassmembers class java.util.logging.LogManager { void access$1600(java.util.logging.LogManager); }
-keepclassmembers class android.content.UndoOperation { boolean matchOwner(android.content.UndoOwner); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class android.content.UndoOperation { boolean hasData(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$1 { void <init>(); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class android.content.UndoOperation { boolean allowMerge(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$1 { int map(int); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,com.android.internal.view.IDragAndDropPermissions,java.lang.Object,boolean); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class java.util.logging.LogManager { void access$1300(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class java.time.Instant { void <init>(long,int); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,com.android.internal.view.IDragAndDropPermissions,boolean); }
-keepclassmembers class sun.misc.FloatingDecimal { java.lang.String toJavaFormatString(float); }
-keepclassmembers class android.icu.impl.BMPSet { void set32x64Bits(int[],int,int); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class java.time.Instant { java.time.Instant create(long,int); }
-keepclassmembers class sun.misc.FloatingDecimal { void appendTo(double,java.lang.Appendable); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { boolean compareFactorString(int[],int,java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class sun.misc.FloatingDecimal { void appendTo(float,java.lang.Appendable); }
-keepclassmembers class sun.misc.FloatingDecimal { double parseDouble(java.lang.String); }
-keepclassmembers class android.view.View { android.view.WindowInsets getRootWindowInsets(); }
-keepclassmembers class android.icu.impl.UCharacterName$AlgorithmName { java.lang.String getFactorString(int[],int); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Class access$100(java.lang.String); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty { void upropsvec_addPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(double); }
-keepclassmembers class java.io.ObjectStreamClass$ExceptionInfo { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Authenticator { java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class sun.misc.FloatingDecimal { java.lang.String toJavaFormatString(double); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(double,boolean); }
-keepclassmembers class java.io.ObjectStreamClass$ExceptionInfo { java.io.InvalidClassException newInvalidClassException(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { boolean access$000(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int access$100(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int access$200(int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.icu.impl.UCharacterProperty { int[] access$300(); }
-keepclassmembers class android.icu.impl.UCharacterProperty { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl { void <init>(); }
-keepclassmembers class android.icu.impl.BMPSet { void initBits(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class android.view.DragEvent { com.android.internal.view.IDragAndDropPermissions getDragAndDropPermissions(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(java.io.ObjectStreamClass); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { java.lang.Long run(); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class java.io.ObjectStreamClass$1 { java.lang.Object run(); }
-keepclassmembers class android.view.View { boolean getFitsSystemWindows(); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class sun.misc.FloatingDecimal { float parseFloat(java.lang.String); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class android.view.View { void requestApplyInsets(); }
-keepclassmembers class android.view.View { void makeOptionalFitsSystemWindows(); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.view.View { android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$BinaryToASCIIBuffer getBinaryToASCIIBuffer(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.view.View { void requestFitSystemWindows(); }
-keepclassmembers class android.view.View { void getOutsets(android.graphics.Rect); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(float); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator$2 { void <init>(); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class android.icu.impl.BMPSet { int findCodePoint(int,int,int); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class android.view.View { boolean isHapticFeedbackEnabled(); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class android.widget.ViewAnimator { void showNext(); }
-keepclassmembers class android.icu.impl.BMPSet { boolean containsSlow(int,int,int); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$ASCIIToBinaryConverter readJavaFormatString(java.lang.String); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class javax.crypto.Cipher$CipherSpiAndProvider { void <init>(javax.crypto.CipherSpi,java.security.Provider); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class android.widget.ViewAnimator { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.os.ParcelableCompat$CompatCreator { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.ViewAnimator { void setDisplayedChild(int); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class android.widget.ViewAnimator { void showOnly(int); }
-keepclassmembers class android.widget.ViewAnimator { void removeViewAt(int); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.widget.ViewAnimator { void showOnly(int,boolean); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class android.widget.ViewAnimator { void removeAllViews(); }
-keepclassmembers class android.widget.ViewAnimator { void removeViewInLayout(android.view.View); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class java.lang.AndroidHardcodedSystemProperties { void <clinit>(); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class android.icu.impl.BMPSet { void <clinit>(); }
-keepclassmembers class android.widget.ViewAnimator { android.view.View getCurrentView(); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class android.widget.ViewAnimator { void removeView(android.view.View); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class android.widget.ViewAnimator { int getBaseline(); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <init>(); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class android.view.View { boolean isContextClickable(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean arrayContains(int[],int); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class java.nio.file.TempFileHelper$PosixPermissions { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$1 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.time.Instant { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class java.lang.InheritableThreadLocal { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { long createCacheKey(android.util.TypedValue); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class java.lang.InheritableThreadLocal { java.lang.ThreadLocal$ThreadLocalMap getMap(java.lang.Thread); }
-keepclassmembers class java.lang.InheritableThreadLocal { void createMap(java.lang.Thread,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.icu.impl.UCharacterProperty$11 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void checkVectorDrawableSetup(android.content.Context); }
-keepclassmembers class android.icu.impl.UCharacterProperty$11 { boolean contains(int); }
-keepclassmembers class sun.nio.ch.NativeThread { long current(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context,android.content.res.ColorStateList); }
-keepclassmembers class sun.nio.ch.NativeThread { void signal(long); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class sun.misc.FloatingDecimal { sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(int); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback { void setShowDialogForSubmenu(boolean); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.support.v7.widget.AppCompatDrawableManager get(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class android.support.design.widget.StateListAnimator$Tuple { void <init>(int[],android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]); }
-keepclassmembers class org.javia.arity.RPN { void <init>(org.javia.arity.SyntaxException); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { void <init>(java.util.TimeZone); }
-keepclassmembers class org.javia.arity.RPN { boolean isOperand(int); }
-keepclassmembers class org.javia.arity.RPN { void popHigher(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintListFromCache(android.content.Context,int); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.icu.text.TransliteratorIDParser$SingleID { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class org.javia.arity.RPN { org.javia.arity.Token top(); }
-keepclassmembers class android.icu.text.TransliteratorIDParser$SingleID { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { int getNormalizedYear(); }
-keepclassmembers class android.view.View { android.view.View findAccessibilityFocusHost(boolean); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { void setNormalizedYear(int); }
-keepclassmembers class android.icu.text.TransliteratorIDParser$SingleID { android.icu.text.Transliterator getInstance(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { void setLocalEra(sun.util.calendar.Era); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { void setLocalYear(int); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean isVectorDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class java.util.LinkedHashMap { void linkNodeLast(java.util.LinkedHashMap$LinkedHashMapEntry); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuff$Mode getTintMode(int); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class org.javia.arity.RPN { void push(org.javia.arity.Token); }
-keepclassmembers class java.util.LinkedHashMap { void reinitialize(); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class sun.util.calendar.LocalGregorianCalendar$Date { java.lang.String toString(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class java.util.LinkedHashMap { void transferLinks(java.util.LinkedHashMap$LinkedHashMapEntry,java.util.LinkedHashMap$LinkedHashMapEntry); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node); }
-keepclassmembers class org.javia.arity.RPN { void setConsumer(org.javia.arity.TokenConsumer); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class java.util.LinkedHashMap { void afterNodeRemoval(java.util.HashMap$Node); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class sun.misc.CompoundEnumeration { void <init>(java.util.Enumeration[]); }
-keepclassmembers class java.util.LinkedHashMap { void afterNodeInsertion(boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class java.text.DontCareFieldPosition$1 { void <init>(java.text.DontCareFieldPosition); }
-keepclassmembers class sun.misc.CompoundEnumeration { boolean next(); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class java.util.LinkedHashMap { void afterNodeAccess(java.util.HashMap$Node); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.text.DontCareFieldPosition$1 { void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class sun.misc.CompoundEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class sun.misc.CompoundEnumeration { boolean hasMoreElements(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class org.javia.arity.RPN { void start(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class sun.misc.FloatingDecimal { java.lang.String stripLeadingZeros(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class sun.misc.FloatingDecimal { int getHexDigit(java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void access$000(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Set keySet(); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$100(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Collection values(); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.widget.EditText access$1000(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$1100(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class sun.misc.FloatingDecimal { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Set entrySet(); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$1300(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { float access$1400(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$1500(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$1600(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.widget.TextView access$1700(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { float access$1800(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$1900(com.xlythe.calculator.material.view.DisplayOverlay,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$200(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$2000(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$2100(com.xlythe.calculator.material.view.DisplayOverlay,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.icu.text.Normalizer { java.lang.String normalize(java.lang.String,android.icu.text.Normalizer$Mode,int); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$2200(com.xlythe.calculator.material.view.DisplayOverlay,android.view.View,android.view.View); }
-keepclassmembers class android.icu.text.Normalizer { java.lang.String normalize(java.lang.String,android.icu.text.Normalizer$Mode); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$2300(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.support.v7.widget.RecyclerView access$300(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { com.xlythe.calculator.material.view.GraphView access$400(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean access$500(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { java.lang.String access$600(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int access$700(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$900(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void ensureTemplateViewExists(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]); }
-keepclassmembers class java.nio.channels.NonWritableChannelException { void <init>(); }
-keepclassmembers class android.view.View { boolean isTemporarilyDetached(); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { android.view.View access$1200(com.xlythe.calculator.material.view.DisplayOverlay); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void evaluateHeight(); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class android.transition.Recolor { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { float getCurrentPercent(); }
-keepclassmembers class android.transition.Recolor { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.transition.Recolor { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int getLeft(android.view.View,android.view.View); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int getRecyclerHeight(); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int getRight(android.view.View,android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { int getTop(android.view.View,android.view.View); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { float getRange(); }
-keepclassmembers class java.io.ObjectStreamConstants { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { com.xlythe.calculator.material.view.DisplayOverlay$TranslateState getTranslateState(); }
-keepclassmembers class android.transition.TransitionPropagation { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void handleDown(); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SpecialType { android.icu.impl.locale.KeyTypeData$SpecialType valueOf(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void handleMove(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SpecialType { void <init>(java.lang.String,int,android.icu.impl.locale.KeyTypeData$SpecialTypeHandler); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void handleUp(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SpecialType { void <clinit>(); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean isScrolledToEnd(); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void setState(com.xlythe.calculator.material.view.DisplayOverlay$TranslateState); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class java.net.InetAddress$InetAddressHolder { void <init>(); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class java.net.InetAddress$InetAddressHolder { void init(java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void collapse(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void collapse(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.net.InetAddress$InetAddressHolder { java.lang.String getHostName(); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.view.View { boolean dispatchVisibilityAggregated(boolean); }
-keepclassmembers class android.view.View { void onVisibilityAggregated(boolean); }
-keepclassmembers class com.android.internal.policy.DecorView$2 { void <init>(com.android.internal.policy.DecorView); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { void <init>(java.util.WeakHashMap); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void expand(); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void expand(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { java.util.List deepCopy(); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,int,int,int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean hasDisplayEntry(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(int); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void allocArrays(int); }
-keepclassmembers class android.view.View { void getWindowDisplayFrame(android.graphics.Rect); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { com.xlythe.calculator.material.HistoryAdapter getAdapter(); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class android.view.View { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.net.InetAddress$InetAddressHolder { int getAddress(); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class sun.security.x509.X509CertImpl { void <init>(sun.security.util.DerValue,byte[]); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean isCollapsed(); }
-keepclassmembers class java.util.jar.JarException { void <init>(java.lang.String); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer flip(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.lang.Enum { java.lang.String name(); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class android.view.View { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.util.WeakHashMap$EntrySet { int size(); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer clear(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class java.nio.Buffer { int nextGetIndex(); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { void <init>(java.net.Inet6Address); }
-keepclassmembers class sun.security.x509.X509CertImpl { void derEncode(java.io.OutputStream); }
-keepclassmembers class java.nio.Buffer { int nextGetIndex(int); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void onFinishInflate(); }
-keepclassmembers class java.lang.Enum { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.nio.Buffer { int nextPutIndex(); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class sun.security.x509.X509CertImpl { byte[] getEncoded(); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class sun.security.x509.X509CertImpl { byte[] getEncodedInternal(); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { void setAddr(byte[]); }
-keepclassmembers class java.nio.Buffer { int checkIndex(int); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <init>(); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { void init(byte[],int); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class java.nio.Buffer { int checkIndex(int,int); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class android.view.HandlerActionQueue$HandlerAction { void <init>(java.lang.Runnable,long); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class android.view.View { boolean checkInputConnectionProxy(android.view.View); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { void <init>(android.view.View); }
-keepclassmembers class com.nineoldandroids.animation.ObjectAnimator { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay { void scrollToMostRecent(); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.Buffer { int markValue(); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.View { android.view.ContextMenu$ContextMenuInfo getContextMenuInfo(); }
-keepclassmembers class android.view.HandlerActionQueue$HandlerAction { boolean matches(java.lang.Runnable); }
-keepclassmembers class android.view.View { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { void createContextMenu(android.view.ContextMenu); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.nio.Buffer { void discardMark(); }
-keepclassmembers class com.nineoldandroids.animation.ObjectAnimator { com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class java.nio.Buffer { void checkBounds(int,int,int); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$3 { void <init>(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.view.View { boolean isHovered(); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { boolean isAnyLocalAddress(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$3 { void onItemHoverExit(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$3 { void onItemHoverEnter(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class sun.util.logging.LoggingSupport$1 { void <init>(); }
-keepclassmembers class android.icu.text.CurrencyMetaInfo$CurrencyDigits { void <init>(int,int); }
-keepclassmembers class sun.util.logging.LoggingSupport$1 { sun.util.logging.LoggingProxy run(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class sun.util.logging.LoggingSupport$1 { java.lang.Object run(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfNull(); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.lang.Object get(java.lang.String); }
-keepclassmembers class java.net.Inet6Address$Inet6AddressHolder { void <init>(java.net.Inet6Address,java.net.Inet6Address$1); }
-keepclassmembers class android.widget.ListPopupWindow$2 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.text.BreakTransliterator$ReplaceableCharacterIterator { void <init>(android.icu.text.Replaceable,int,int,int); }
-keepclassmembers class com.nineoldandroids.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class com.nineoldandroids.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean isEmpty(); }
-keepclassmembers class java.text.RuleBasedCollator { void <init>(android.icu.text.RuleBasedCollator); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class java.text.RuleBasedCollator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class android.icu.text.Normalizer { void <clinit>(); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$4 { void <init>(java.lang.String); }
-keepclassmembers class java.security.Provider$Service { void <init>(java.security.Provider); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class java.security.Provider$Service { void addAlias(java.lang.String); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class com.nineoldandroids.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class java.security.Provider$Service { void addAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.lang.String toString(); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class android.view.View { boolean handleScrollBarDragging(android.view.MotionEvent); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.security.PublicKey getPublicKey(); }
-keepclassmembers class android.icu.impl.UCaseProps$IsAcceptable { void <init>(); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getType(); }
-keepclassmembers class android.icu.util.Currency$EquivalenceRelation { void <init>(); }
-keepclassmembers class android.icu.impl.UCaseProps$IsAcceptable { boolean isDataVersionAcceptable(byte[]); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAlgorithm(); }
-keepclassmembers class android.icu.util.Currency$EquivalenceRelation { android.icu.util.Currency$EquivalenceRelation add(java.lang.Object[]); }
-keepclassmembers class java.security.Provider$Service { java.security.Provider getProvider(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { void <clinit>(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getClassName(); }
-keepclassmembers class android.icu.impl.UCaseProps$IsAcceptable { void <init>(android.icu.impl.UCaseProps$1); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAttribute(java.lang.String); }
-keepclassmembers class sun.security.x509.X509CertImpl { sun.security.x509.SerialNumber getSerialNumberObject(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstance(java.lang.Object); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.security.Principal getSubjectDN(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator { void <init>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator { float computeLog(float,int); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask$1 { void <init>(com.xlythe.view.floating.FloatingView$AnimationTask,com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.icu.util.Currency$EquivalenceRelation { void <init>(android.icu.util.Currency$1); }
-keepclassmembers class sun.security.x509.X509CertImpl { java.security.Principal getIssuerDN(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$AnimationTask$1 { void onAnimationFinished(); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator { void <init>(com.android.internal.widget.FloatingToolbar$1); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator { void <clinit>(); }
-keepclassmembers class sun.security.x509.GeneralName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class sun.security.x509.GeneralName { void <init>(sun.security.util.DerValue,boolean); }
-keepclassmembers class sun.security.x509.X509CertImpl { byte[] getTBSCertificate(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.security.Provider$Service { boolean isValid(); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.lang.Throwable$WrappedPrintWriter { java.lang.Object lock(); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class java.lang.Throwable$WrappedPrintWriter { void println(java.lang.Object); }
-keepclassmembers class android.view.View { void setScrollX(int); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class android.view.View { void setScrollY(int); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class java.lang.Throwable$WrappedPrintWriter { void <init>(java.io.PrintWriter); }
-keepclassmembers class java.security.Provider$Service { java.lang.Class getImplClass(); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class android.view.View { int getMeasuredWidthAndState(); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { char[] getBuffer(); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { void <init>(int,sun.misc.FormattedFloatingDecimal$Form,sun.misc.FloatingDecimal$BinaryToASCIIConverter); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { boolean equals(java.lang.Object); }
-keepclassmembers class sun.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class sun.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class android.widget.RadioButton { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstanceGeneric(java.lang.Object); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class sun.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { int compareTo(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { int hashCode(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$3 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class sun.security.x509.X509CertImpl { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class java.io.DataOutputStream { void incCount(int); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.security.Provider$Service { boolean supportsParameter(java.lang.Object); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { android.icu.impl.locale.BaseLocale$Key normalize(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { int getExponentRounded(); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { char[] getMantissa(); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { int applyPrecision(int,char[],int,int); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { java.lang.String access$000(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class java.security.Provider$Service { boolean hasKeyAttributes(); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { java.lang.String access$100(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { java.lang.String access$200(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class android.icu.impl.locale.BaseLocale$Key { java.lang.String access$300(android.icu.impl.locale.BaseLocale$Key); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { char[] getExponent(); }
-keepclassmembers class android.view.View { void forceHasOverlappingRendering(boolean); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { void fillCompatible(int,char[],int,int,boolean); }
-keepclassmembers class java.io.DataOutputStream { int writeUTF(java.lang.String,java.io.DataOutput); }
-keepclassmembers class java.security.Provider$Service { java.lang.Class getKeyClass(java.lang.String); }
-keepclassmembers class java.net.SocksSocketImpl$2 { void <init>(java.net.SocksSocketImpl,java.net.InetAddress); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class java.security.Provider$Service { boolean supportsKeyFormat(java.security.Key); }
-keepclassmembers class java.net.SocksSocketImpl$2 { java.lang.Object run(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$2 { void <init>(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$2 { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$2 { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class java.security.Provider$Service { boolean supportsKeyClass(java.security.Key); }
-keepclassmembers class java.security.Provider$Service { java.lang.String toString(); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class java.security.Provider$Service { boolean access$000(java.security.Provider$Service); }
-keepclassmembers class java.security.Provider$Service { void <init>(java.security.Provider,java.security.Provider$1); }
-keepclassmembers class java.security.Provider$Service { java.lang.String access$302(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class java.security.Provider$Service { java.lang.String access$402(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class java.security.Provider$Service { void access$500(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class java.security.Provider$Service { java.lang.String access$602(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUConfig { java.lang.String get(java.lang.String); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class java.security.Provider$Service { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUConfig { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.util.BytesTrie$Result { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.util.BytesTrie$Result { boolean hasValue(); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class sun.security.x509.X509CertImpl { boolean[] getKeyUsage(); }
-keepclassmembers class android.icu.impl.ICUConfig { void <clinit>(); }
-keepclassmembers class android.icu.util.BytesTrie$Result { boolean hasNext(); }
-keepclassmembers class android.icu.util.BytesTrie$Result { void <clinit>(); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$9 { void <init>(); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class java.net.SocksSocketImpl$2 { java.net.PasswordAuthentication run(); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class android.view.View { void setY(float); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class android.view.View { void setX(float); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { char[] create(boolean,int); }
-keepclassmembers class android.icu.impl.ICUBinary { void addDataFilesFromPath(java.lang.String,java.util.List); }
-keepclassmembers class android.view.View { void setClipToOutline(boolean); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { void fillDecimal(int,char[],int,int,boolean); }
-keepclassmembers class org.javia.arity.FunctionStack { void <init>(); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class org.javia.arity.FunctionStack { void clear(); }
-keepclassmembers class org.javia.arity.FunctionStack { org.javia.arity.Function pop(); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class org.javia.arity.FunctionStack { void push(org.javia.arity.Function); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class android.view.View { boolean getClipToOutline(); }
-keepclassmembers class android.icu.impl.ICUBinary { void addDataFilesFromFolder(java.io.File,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class org.javia.arity.FunctionStack { org.javia.arity.Function[] toArray(); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[]); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.icu.impl.ICUBinary { int compareKeys(java.lang.CharSequence,java.nio.ByteBuffer,int); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,int,int,int,byte[],int); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer get(byte[]); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class android.provider.Settings$System$InclusiveIntegerRangeValidator { void <init>(int,int); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { void fillScientific(int,char[],int,int,boolean); }
-keepclassmembers class android.icu.util.ULocale$Category { android.icu.util.ULocale$Category[] values(); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getData(java.lang.String); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,int,int,int); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getData(java.lang.ClassLoader,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getRequiredData(java.lang.String); }
-keepclassmembers class android.icu.util.ULocale$Category { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getData(java.lang.ClassLoader,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.transition.ChangeTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class sun.security.x509.X509CertImpl { void parse(sun.security.util.DerValue,byte[]); }
-keepclassmembers class android.icu.util.ULocale$Category { void <clinit>(); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getDataFromFile(java.lang.String); }
-keepclassmembers class sun.security.x509.CertificateVersion { int getVersion(); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer mapFile(java.io.File); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal { void <clinit>(); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class android.transition.ChangeTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class java.nio.ByteBuffer { java.lang.String toString(); }
-keepclassmembers class sun.security.x509.CertificateVersion { void <init>(); }
-keepclassmembers class android.icu.impl.ICUBinary { android.icu.util.VersionInfo readHeaderAndDataVersion(java.nio.ByteBuffer,int,android.icu.impl.ICUBinary$Authenticate); }
-keepclassmembers class android.transition.ChangeTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class android.icu.impl.ICUBinary { int readHeader(java.nio.ByteBuffer,int,android.icu.impl.ICUBinary$Authenticate); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler { java.net.URL getEntryUrlOrNull(java.lang.String); }
-keepclassmembers class java.nio.ByteBuffer { boolean equals(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$13 { void <init>(com.xlythe.calculator.material.BasicCalculator,int,java.lang.String); }
-keepclassmembers class java.nio.ByteBuffer { boolean equals(byte,byte); }
-keepclassmembers class java.nio.ByteBuffer { int compareTo(java.nio.ByteBuffer); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$13 { void onAnimationFinished(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler { java.util.zip.ZipEntry findEntryWithDirectoryFallback(java.util.jar.JarFile,java.lang.String); }
-keepclassmembers class sun.security.x509.CertificateVersion { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteOrder order(); }
-keepclassmembers class android.icu.impl.ICUBinary { int compareKeys(java.lang.CharSequence,byte[],int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer order(java.nio.ByteOrder); }
-keepclassmembers class sun.security.x509.CertificateVersion { java.lang.String toString(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler { java.util.jar.JarFile access$000(libcore.io.ClassPathURLStreamHandler); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class sun.security.x509.CertificateVersion { void encode(java.io.OutputStream); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class sun.security.x509.X509CertImpl { byte[] getEncodedInternal(java.security.cert.Certificate); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class java.io.ObjectOutputStream$ReplaceTable { void <init>(int,float); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream$ReplaceTable { void assign(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class sun.security.x509.CertificateVersion { void construct(sun.security.util.DerValue); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class java.nio.ByteBuffer { int hashCode(); }
-keepclassmembers class java.io.ObjectOutputStream$ReplaceTable { java.lang.Object lookup(java.lang.Object); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class java.io.ObjectOutputStream$ReplaceTable { void clear(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.io.ObjectOutputStream$ReplaceTable { void grow(); }
-keepclassmembers class sun.security.x509.CertificateVersion { java.lang.Integer get(java.lang.String); }
-keepclassmembers class android.support.v4.content.ContextCompat { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUBinary { void skipBytes(java.nio.ByteBuffer,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class android.icu.impl.ICUBinary { java.lang.String getString(java.nio.ByteBuffer,int,int); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class java.nio.ByteBuffer { int compare(byte,byte); }
-keepclassmembers class android.icu.impl.ICUBinary { char[] getChars(java.nio.ByteBuffer,int,int); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { void <init>(); }
-keepclassmembers class sun.security.x509.CertificateVersion { int compare(int); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { void <init>(int,float,int); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class android.icu.impl.ICUBinary { int[] getInts(java.nio.ByteBuffer,int,int); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer sliceWithOrder(java.nio.ByteBuffer); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer getByteBufferFromInputStreamAndCloseStream(java.io.InputStream); }
-keepclassmembers class java.lang.Throwable$WrappedPrintStream { void <init>(java.io.PrintStream); }
-keepclassmembers class java.lang.Throwable$WrappedPrintStream { java.lang.Object lock(); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.content.ContextCompat { int getColor(android.content.Context,int); }
-keepclassmembers class java.lang.Throwable$WrappedPrintStream { void println(java.lang.Object); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { void cleanStaleEntries(); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class sun.util.locale.LocaleObjectCache { java.lang.Object normalizeKey(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class android.transition.ChangeTransform { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.icu.impl.ICUBinary { java.nio.ByteBuffer access$100(java.io.File); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.ICUBinary { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class android.icu.impl.ICUBinary { android.icu.util.VersionInfo getVersionInfoFromCompactInt(int); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class java.nio.ByteBuffer { int compareTo(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void setCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { com.android.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class android.view.View { android.os.Handler getHandler(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.View { android.view.HandlerActionQueue getRunQueue(); }
-keepclassmembers class android.view.View { android.view.ThreadedRenderer getHardwareRenderer(); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void addItemView(android.view.View,int); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup$3$1 { void <init>(com.android.internal.view.menu.CascadingMenuPopup$3,com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { void setId(int); }
-keepclassmembers class java.lang.ThreadLocal { int nextHashCode(); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { void onInitializeMenu(android.view.Menu); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class com.android.internal.view.menu.BaseMenuPresenter { boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { boolean performMenuItemAction(android.view.MenuItem); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class java.lang.ThreadLocal { void remove(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { void initializeAccessibilityActions(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$ThreadLocalMap getMap(java.lang.Thread); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.ThreadLocal { void createMap(java.lang.Thread,java.lang.Object); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class java.lang.ThreadLocal { int access$400(java.lang.ThreadLocal); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { boolean fireIntent(android.content.Intent); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object setInitialValue(); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { java.util.List getSupportedActivities(); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$ThreadLocalMap createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class android.icu.util.MeasureUnit$2 { void <init>(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo); }
-keepclassmembers class android.icu.util.MeasureUnit$2 { android.icu.util.MeasureUnit create(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { android.content.Intent createProcessTextIntent(); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { java.lang.CharSequence getLabel(android.content.pm.ResolveInfo); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class java.nio.charset.Charset$2 { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.nio.charset.Charset$2 { java.lang.Object run(); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$3$1 { void onAnimationFinished(); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.view.View { void setScrollBarDefaultDelayBeforeFade(int); }
-keepclassmembers class android.transition.Slide$5 { void <init>(); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Bundle { void setDefusable(boolean); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class java.nio.charset.Charset$2 { java.nio.charset.Charset run(); }
-keepclassmembers class android.widget.Editor$ProcessTextIntentActionsHandler { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.View { boolean canScrollHorizontally(int); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class android.view.View { void getScrollIndicatorBounds(android.graphics.Rect); }
-keepclassmembers class org.ejml.ops.MatrixIO { void print(java.io.PrintStream,org.ejml.data.Matrix64F,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { int getContainer16Resource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.view.View { void onDrawScrollIndicators(android.graphics.Canvas); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { int getSize(); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class org.ejml.ops.MatrixIO { void print(java.io.PrintStream,org.ejml.data.Matrix64F,java.lang.String); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { int getContainer32Resource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { int getResource(android.icu.impl.ICUResourceBundleReader,java.lang.String); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Container { void <init>(); }
-keepclassmembers class android.view.View { void getHorizontalScrollBarBounds(android.graphics.Rect); }
-keepclassmembers class java.security.Timestamp { void <init>(java.util.Date,java.security.cert.CertPath); }
-keepclassmembers class java.security.Timestamp { java.util.Date getTimestamp(); }
-keepclassmembers class java.security.Timestamp { java.security.cert.CertPath getSignerCertPath(); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class java.security.Timestamp { int hashCode(); }
-keepclassmembers class org.ejml.data.D1Matrix64F { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double div(int,double); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class java.security.Timestamp { boolean equals(java.lang.Object); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double get(int); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double minus(int,double); }
-keepclassmembers class java.security.Timestamp { java.lang.String toString(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double plus(int,double); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class android.view.View { void getVerticalScrollBarBounds(android.graphics.Rect); }
-keepclassmembers class android.os.Bundle { void remove(java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class android.view.View { void getRoundVerticalScrollBarBounds(android.graphics.Rect); }
-keepclassmembers class org.ejml.ops.MatrixIO { void print(java.io.PrintStream,org.ejml.data.Matrix64F); }
-keepclassmembers class com.nineoldandroids.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class org.ejml.data.D1Matrix64F { void set(org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class android.view.View { void getStraightVerticalScrollBarBounds(android.graphics.Rect); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.provider.Settings$System$7 { void <init>(); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double times(int,double); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,int,int); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.icu.util.TimeZone$ConstantZone { void <init>(int,java.lang.String); }
-keepclassmembers class android.os.Bundle { void putParcelableArray(java.lang.String,android.os.Parcelable[]); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class android.os.Message { void recycle(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.os.Message { void recycleUnchecked(); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class android.icu.util.TimeZone$ConstantZone { android.icu.util.TimeZone freeze(); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.os.Bundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.view.ViewGroup$4 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup$4 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class android.icu.util.TimeZone$ConstantZone { void <init>(int,java.lang.String,android.icu.util.TimeZone$1); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup$4 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.widget.Editor$SuggestionsPopupWindow$1 { void <init>(android.widget.Editor$SuggestionsPopupWindow); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$14 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.transition.ChangeClipBounds { void <clinit>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$14 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class android.os.Message { boolean isInUse(); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class org.ejml.data.D1Matrix64F { double set(int,double); }
-keepclassmembers class android.os.Bundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { void <init>(); }
-keepclassmembers class android.icu.impl.Pair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo$RangeInfo); }
-keepclassmembers class android.icu.impl.Pair { android.icu.impl.Pair of(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class android.icu.impl.Pair { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$1 { android.icu.impl.ICUResourceBundle createInstance(java.lang.String,android.icu.impl.ICUResourceBundle$Loader); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float); }
-keepclassmembers class android.os.Bundle { android.os.Bundle getBundle(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { android.icu.text.PluralRules$RuleList finish(); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { android.icu.text.PluralRules$RuleList addRule(android.icu.text.PluralRules$Rule); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class android.icu.impl.Pair { int hashCode(); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashMapEntry { void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void <init>(int,float,float,float); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { android.icu.text.PluralRules$Rule selectRule(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable[] getParcelableArray(java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { int getType(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { float getMin(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { float getCurrent(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { java.lang.String select(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { float getMax(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getParcelableArrayList(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void recycle(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void clear(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { java.util.Set getKeywords(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$RangeInfo { void <clinit>(); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$1 { void <init>(); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int,java.math.MathContext); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { void <init>(android.icu.text.PluralRules$1); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { boolean access$200(android.icu.text.PluralRules$RuleList); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { boolean access$202(android.icu.text.PluralRules$RuleList,boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class java.net.PlainSocketImpl { void socketSetOption(int,boolean,java.lang.Object); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class java.net.PlainSocketImpl { void socketCreate(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { void socketConnect(java.net.InetAddress,int,int); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class java.net.PlainSocketImpl { void socketBind(java.net.InetAddress,int); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class java.net.PlainSocketImpl { void socketListen(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float cross(float,float,float,float); }
-keepclassmembers class java.net.PlainSocketImpl { void socketAccept(java.net.SocketImpl); }
-keepclassmembers class java.net.PlainSocketImpl { int socketAvailable(); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class android.icu.text.PluralRules$RuleList { java.lang.String toString(); }
-keepclassmembers class java.net.PlainSocketImpl { void socketSetOption0(int,boolean,java.lang.Object); }
-keepclassmembers class android.view.View { android.view.WindowId getWindowId(); }
-keepclassmembers class java.net.PlainSocketImpl { int socketGetOption(int,java.lang.Object); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class android.view.View { android.view.Display getDisplay(); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class android.view.View { int combineVisibility(int,int); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter { void <init>(); }
-keepclassmembers class android.icu.impl.locale.Extension { void <init>(char); }
-keepclassmembers class android.os.BaseBundle$NoImagePreloadHolder { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.Extension { void <init>(char,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.Extension { java.lang.String getValue(); }
-keepclassmembers class android.icu.impl.locale.Extension { java.lang.String getID(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { org.ejml.data.DenseMatrix64F getU(org.ejml.data.DenseMatrix64F,boolean,boolean); }
-keepclassmembers class android.icu.impl.locale.Extension { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { java.util.ArrayList getSkippedScrap(); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class java.net.PlainSocketImpl { void socketClose0(boolean); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void <init>(byte[]); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getMatrixScale(android.graphics.Matrix); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$9 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void parse(sun.security.util.DerInputStream); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$DisplayAnimator { void <init>(com.xlythe.calculator.material.view.DisplayOverlay,float,float); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$DisplayAnimator { void onUpdate(float); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void parse(sun.security.util.DerInputStream,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getAlpha(); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { void getDiagonal(double[],double[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setAlpha(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { org.ejml.data.Matrix64F getU(org.ejml.data.Matrix64F,boolean,boolean); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class java.text.Collator { java.text.Collator getInstance(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { org.ejml.data.DenseMatrix64F getV(org.ejml.data.DenseMatrix64F,boolean,boolean); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.text.Collator { java.text.Collator getInstance(java.util.Locale); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class java.text.Collator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fullyDetachScrapViews(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { org.ejml.data.Matrix64F getV(org.ejml.data.Matrix64F,boolean,boolean); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void parseNetscapeCertChain(sun.security.util.DerValue); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.icu.impl.Trie2_32 { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2_32 { int get(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onRelease(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.icu.impl.Trie2_32 { int getFromU16SingleLead(char); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void parseSignedData(sun.security.util.DerValue); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.icu.impl.Trie2_32 { int rangeEnd(int,int,int); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.bidiagonal.BidiagonalDecompositionTall { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class java.text.Collator { void <init>(android.icu.text.Collator); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$2 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$2 { boolean onKey(android.view.View,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { boolean equals(java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator { void <init>(com.xlythe.calculator.material.view.DisplayOverlay,float,float); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { int hashCode(); }
-keepclassmembers class android.animation.ObjectAnimator { boolean shouldAutoCancel(android.animation.AnimationHandler$AnimationFrameCallback); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.String toString(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator { int mixColors(float,int,int); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$ComplexAnimator { float scale(float,float); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator,java.lang.Object[],int,int); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter$MenuAdapter { void <init>(com.android.internal.view.menu.ListMenuPresenter); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter$MenuAdapter { int getCount(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void parseOldSignedData(sun.security.util.DerValue); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { void <init>(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter$MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection$1 { void <init>(libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection,java.io.InputStream); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter$MenuAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.view.View { void onRenderNodeDetached(android.view.RenderNode); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$9 { void onAnimationFinished(); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class org.javia.arity.Token { void <init>(int,int,int,int); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class org.javia.arity.Token { boolean isDerivative(); }
-keepclassmembers class org.javia.arity.CompiledFunction$1 { void <init>(); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class org.javia.arity.CompiledFunction$1 { int arity(); }
-keepclassmembers class android.content.Intent$ShortcutIconResource$1 { void <init>(); }
-keepclassmembers class org.javia.arity.CompiledFunction$1 { double eval(double); }
-keepclassmembers class org.javia.arity.Token { org.javia.arity.Token setAlpha(java.lang.String); }
-keepclassmembers class org.javia.arity.Token { org.javia.arity.Token setValue(double); }
-keepclassmembers class org.javia.arity.Token { java.lang.String toString(); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class sun.security.pkcs.PKCS7 { sun.security.pkcs.SignerInfo verify(sun.security.pkcs.SignerInfo,byte[]); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void <init>(android.content.Context,android.view.ActionMode$Callback2,android.view.View); }
-keepclassmembers class sun.security.pkcs.PKCS7 { sun.security.pkcs.SignerInfo[] verify(byte[]); }
-keepclassmembers class sun.security.pkcs.PKCS7 { sun.security.pkcs.ContentInfo getContentInfo(); }
-keepclassmembers class android.content.res.GradientColor$GradientColorFactory { void <init>(android.content.res.GradientColor); }
-keepclassmembers class sun.security.pkcs.PKCS7 { java.security.cert.X509Certificate[] getCertificates(); }
-keepclassmembers class sun.security.pkcs.PKCS7 { java.security.cert.X509Certificate getCertificate(java.math.BigInteger,sun.security.x509.X500Name); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class sun.security.pkcs.PKCS7 { void populateCertIssuerNames(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void setFloatingToolbar(com.android.internal.widget.FloatingToolbar); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void invalidate(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void invalidateContentRect(); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.view.animation.AnimationUtils$AnimationState { void <init>(); }
-keepclassmembers class android.view.animation.AnimationUtils$AnimationState { void <init>(android.view.animation.AnimationUtils$1); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void repositionToolbar(); }
-keepclassmembers class sun.security.pkcs.PKCS7 { boolean isOldStyle(); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection$1 { void close(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { boolean intersectsClosed(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeAlpha(int,int); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { boolean isContentRectWithinBounds(); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class android.app.Dialog { void dismiss(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeColors(int,int); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeComponent(int,int,int,int,int); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void finish(); }
-keepclassmembers class android.app.Dialog { void dismissDialog(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { android.view.Menu getMenu(); }
-keepclassmembers class java.math.BigDecimal { int scale(); }
-keepclassmembers class android.app.Dialog { void sendDismissMessage(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void hide(long); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { android.view.View getCustomView(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$14 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context,int); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void checkToolbarInitialized(); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void onStop(); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$14 { int getViewTypeCount(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { void reset(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$14 { int getItemViewType(int); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper access$000(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$14 { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger unscaledValue(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { com.android.internal.view.menu.MenuBuilder access$200(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class com.android.internal.view.FloatingActionMode { android.view.ActionMode$Callback2 access$100(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int setAlphaComponent(int,int); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class android.icu.text.BreakIterator { android.icu.text.BreakIterator getWordInstance(android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.BreakIterator { android.icu.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Array32 { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Array32 { void <init>(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class java.lang.InternalError { void <init>(); }
-keepclassmembers class java.lang.InternalError { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class java.lang.InternalError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class java.lang.InternalError { void <init>(java.lang.Throwable); }
-keepclassmembers class android.app.Dialog { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Dialog { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class android.app.Dialog { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.app.Dialog { void onContentChanged(); }
-keepclassmembers class android.app.Dialog { void onAttachedToWindow(); }
-keepclassmembers class android.app.Dialog { void onDetachedFromWindow(); }
-keepclassmembers class android.icu.text.BreakIterator { android.icu.text.BreakIterator getBreakInstance(android.icu.util.ULocale,int); }
-keepclassmembers class android.icu.text.BreakIterator { android.icu.text.BreakIterator$BreakIteratorServiceShim getShim(); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class android.app.Dialog { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.security.x509.OIDMap { void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.Class); }
-keepclassmembers class android.app.Dialog { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.jar.Attributes { void <init>(java.util.jar.Attributes); }
-keepclassmembers class sun.security.x509.OIDMap { java.lang.String getName(sun.security.util.ObjectIdentifier); }
-keepclassmembers class android.app.Dialog { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { void <init>(sun.util.calendar.BaseCalendar$Date); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.text.BreakIterator { void <clinit>(); }
-keepclassmembers class android.app.Dialog { android.view.View onCreatePanelView(int); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { int getYear(); }
-keepclassmembers class android.app.Dialog { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String putValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class android.app.Dialog { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.app.Dialog { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { int getMonth(); }
-keepclassmembers class sun.security.x509.OIDMap { void <clinit>(); }
-keepclassmembers class android.app.Dialog { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.app.Dialog { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class sun.security.x509.OIDMap { java.lang.Class getClass(sun.security.util.ObjectIdentifier); }
-keepclassmembers class android.app.Dialog { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Dialog { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class java.util.jar.Attributes { void putAll(java.util.Map); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set keySet(); }
-keepclassmembers class android.icu.text.Normalizer$NFKCMode { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class org.javia.arity.Compiler { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class android.icu.text.Normalizer$NFKCMode { android.icu.text.Normalizer2 getNormalizer2(int); }
-keepclassmembers class java.util.TimSort { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class android.widget.ListView$FixedViewInfo { void <init>(android.widget.ListView); }
-keepclassmembers class org.javia.arity.Compiler { org.javia.arity.Function compile(org.javia.arity.Symbols,java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object clone(); }
-keepclassmembers class android.icu.text.Normalizer$NFKCMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$Type { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { int getDayOfMonth(); }
-keepclassmembers class android.util.MapCollections$MapIterator { boolean hasNext(); }
-keepclassmembers class android.util.MapCollections$MapIterator { void <init>(android.util.MapCollections); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { long getTimeOfDay(); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.support.v4.view.AbsSavedState$1); }
-keepclassmembers class android.webkit.WebViewProviderResponse { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object getKey(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.support.v4.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class android.webkit.WebViewProviderResponse { void <init>(android.os.Parcel,android.webkit.WebViewProviderResponse$1); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object getValue(); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class android.app.Dialog { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.webkit.WebViewProviderResponse { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class org.javia.arity.Compiler { org.javia.arity.Function compileSimple(org.javia.arity.Symbols,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class android.app.Dialog { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class org.javia.arity.Compiler { org.javia.arity.FunctionAndName compileWithName(org.javia.arity.Symbols,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.app.Dialog { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class java.util.jar.Attributes { void read(java.util.jar.Manifest$FastInputStream,byte[]); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class android.util.MapCollections$MapIterator { java.lang.Object next(); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class java.lang.reflect.WeakCache$Factory { void <init>(java.lang.reflect.WeakCache,java.lang.Object,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.reflect.WeakCache$Factory { java.lang.Object get(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener); }
-keepclassmembers class android.app.Dialog { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class sun.util.calendar.ImmutableGregorianDate { java.lang.String toString(); }
-keepclassmembers class java.lang.reflect.WeakCache$Factory { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class android.animation.PropertyValuesHolder$1 { void <init>(android.animation.PropertyValuesHolder); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class android.app.Dialog { void cancel(); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class java.util.AbstractList$ListItr { void <init>(java.util.AbstractList,int); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { void <init>(android.content.Context); }
-keepclassmembers class java.util.AbstractList$ListItr { void set(java.lang.Object); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView$ItemView); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState$1 { void setValue(android.graphics.drawable.VectorDrawable$VectorDrawableState,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState$1 { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$1 { java.lang.Object getValueAtFraction(float); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState$1 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState$1 { void setValue(java.lang.Object,float); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class sun.security.x509.CRLExtensions { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { void addItemView(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.support.graphics.drawable.AndroidResources { void <clinit>(); }
-keepclassmembers class sun.security.x509.CRLExtensions { void init(sun.security.util.DerInputStream); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class org.javia.arity.SyntaxException { org.javia.arity.SyntaxException set(java.lang.String,int); }
-keepclassmembers class sun.security.x509.CRLExtensions { void parseExtension(sun.security.x509.Extension); }
-keepclassmembers class org.javia.arity.SyntaxException { java.lang.String toString(); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { java.lang.String toBcpKey(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,int,int,boolean); }
-keepclassmembers class org.ejml.alg.dense.misc.ImplCommonOps_Matrix64F { void extract(org.ejml.data.Matrix64F,int,int,org.ejml.data.Matrix64F,int,int,int,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class com.android.internal.view.menu.IconMenuPresenter { int getNumActualItemsShown(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { java.lang.String toLegacyKey(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { java.lang.String toBcpType(java.lang.String,java.lang.String,android.icu.util.Output,android.icu.util.Output); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$8 { void <init>(com.xlythe.calculator.material.BasicCalculator,android.animation.Animator); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$8 { void onAnimationFinished(); }
-keepclassmembers class sun.security.x509.CRLExtensions { void encode(java.io.OutputStream,boolean); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class java.math.BigDecimal { int compareAbsoluteValues(long,long); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { java.lang.String toLegacyType(java.lang.String,java.lang.String,android.icu.util.Output,android.icu.util.Output); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { com.android.internal.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setGravity(int); }
-keepclassmembers class java.math.BigDecimal { int compareForRounding(long,long); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.icu.impl.Trie2$Trie2Iterator { void <init>(android.icu.impl.Trie2,android.icu.impl.Trie2$ValueMapper); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { boolean tryShow(); }
-keepclassmembers class org.javia.arity.SyntaxException { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { android.view.SubMenu setHeaderTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { void initFromResourceBundle(); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class com.android.internal.view.menu.SubMenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class android.icu.impl.Trie2$Trie2Iterator { android.icu.impl.Trie2$Range next(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class sun.security.x509.CRLExtensions { sun.security.x509.Extension get(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void dismiss(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void addMenu(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { java.io.PrintStream outputStream(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void show(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void onDismiss(); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getTimeInstance(int,java.util.Locale); }
-keepclassmembers class sun.security.x509.CRLExtensions { java.util.Collection getAllExtensions(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateInstance(int,java.util.Locale); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { sun.util.logging.PlatformLogger$Level deriveEffectiveLevel(sun.util.logging.PlatformLogger$Level); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { boolean isShowing(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void onMeasure(int,int); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { boolean isLoggable(sun.util.logging.PlatformLogger$Level); }
-keepclassmembers class sun.security.x509.CRLExtensions { void <clinit>(); }
-keepclassmembers class java.security.cert.CRL { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Trie2$Trie2Iterator { int rangeEndLS(char); }
-keepclassmembers class android.icu.impl.Trie2$Trie2Iterator { java.lang.Object next(); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { java.lang.String format(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.icu.impl.Trie2$Trie2Iterator { boolean hasNext(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$Impl { void <init>(); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class sun.security.pkcs.ESSCertId { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ReorderCodeTypeHandler { void <clinit>(); }
-keepclassmembers class sun.security.pkcs.ESSCertId { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { java.lang.String getCallerInfo(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ReorderCodeTypeHandler { void <init>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$ReorderCodeTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { void getKeyInfo(android.icu.util.UResourceBundle); }
-keepclassmembers class sun.util.logging.PlatformLogger$DefaultLoggerProxy { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class android.os.ServiceSpecificException { void <init>(int,java.lang.String); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat get(int,int,int,java.util.Locale); }
-keepclassmembers class android.icu.impl.Norm2AllModes { void <init>(android.icu.impl.Normalizer2Impl); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { void getTypeInfo(android.icu.util.UResourceBundle); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.impl.Norm2AllModes getInstanceFromSingleton(android.icu.impl.Norm2AllModes$Norm2AllModesSingleton); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { android.view.ViewTreeObserver access$202(com.android.internal.view.menu.StandardMenuPopup,android.view.ViewTreeObserver); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class sun.nio.ch.NativeThreadSet { void <init>(int); }
-keepclassmembers class android.os.ServiceSpecificException { java.lang.String toString(); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class sun.nio.ch.NativeThreadSet { int add(); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { android.view.ViewTreeObserver access$200(com.android.internal.view.menu.StandardMenuPopup); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.impl.Norm2AllModes getNFKCInstance(); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.impl.Norm2AllModes getNFKC_CFInstance(); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.impl.Norm2AllModes$Normalizer2WithImpl getN2WithImpl(int); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup { android.view.ViewTreeObserver$OnGlobalLayoutListener access$300(com.android.internal.view.menu.StandardMenuPopup); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class sun.nio.ch.NativeThreadSet { void remove(int); }
-keepclassmembers class sun.nio.ch.NativeThreadSet { void signalAndWait(); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.text.Normalizer2 getFCDNormalizer2(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class android.icu.impl.Norm2AllModes { void <init>(android.icu.impl.Normalizer2Impl,android.icu.impl.Norm2AllModes$1); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class android.icu.impl.Norm2AllModes { void <clinit>(); }
-keepclassmembers class sun.security.jca.ProviderConfig$1 { void <init>(sun.security.jca.ProviderConfig); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class sun.security.jca.ProviderConfig$1 { java.lang.Boolean run(); }
-keepclassmembers class sun.nio.ch.NativeThreadSet { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class sun.security.jca.ProviderConfig$1 { java.lang.Object run(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class sun.security.pkcs.SigningCertificateInfo { void <init>(byte[]); }
-keepclassmembers class sun.security.pkcs.SigningCertificateInfo { java.lang.String toString(); }
-keepclassmembers class sun.security.pkcs.SigningCertificateInfo { void parse(byte[]); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class sun.net.ftp.impl.DefaultFtpClientProvider { void <init>(); }
-keepclassmembers class sun.net.ftp.impl.DefaultFtpClientProvider { sun.net.ftp.FtpClient createFtpClient(); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView$3 { void <init>(android.widget.PopupWindow$PopupDecorView); }
-keepclassmembers class java.util.ResourceBundle$Control$CandidateListCache { void <init>(); }
-keepclassmembers class java.util.ResourceBundle$Control$CandidateListCache { java.util.List createObject(sun.util.locale.BaseLocale); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isInetSocket(java.io.FileDescriptor); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isInetDomain(int); }
-keepclassmembers class android.icu.util.ICUCloneNotSupportedException { void <init>(java.lang.Throwable); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyList { java.util.Iterator iterator(); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class com.xlythe.calculator.material.HistoryAdapter$2 { boolean onLongClick(android.view.View); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class android.view.View { void invalidateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Collections$EmptyList { boolean isEmpty(); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] finishToArray(java.lang.Object[],java.util.Iterator); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object[] toArray(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onDetachedFromWindow(); }
-keepclassmembers class java.util.Collections$EmptyList { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.ResourceBundle$Control$CandidateListCache { java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.AbstractCollection { int hugeCapacity(int); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class android.icu.impl.Norm2AllModes { android.icu.impl.Norm2AllModes getNFCInstance(); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.Collections$EmptyList { int hashCode(); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$TemplateHolder { void <init>(); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class java.util.AbstractCollection { boolean retainAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$TemplateHolder { void <init>(com.xlythe.calculator.material.view.DisplayOverlay$1); }
-keepclassmembers class android.view.View { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Collections$EmptyList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.ResourceBundle$Control$CandidateListCache { java.lang.Object createObject(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class java.util.ResourceBundle$Control$CandidateListCache { void <init>(java.util.ResourceBundle$1); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper$1 { void <init>(com.android.internal.policy.DecorView$ActionModeCallback2Wrapper,com.android.internal.widget.ActionBarContextView); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void init(android.content.Context); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper$1 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int next(int,int,boolean); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.view.ViewCompat$Api24ViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postAddActionBarHideOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postRemoveActionBarHideOffset(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void addActionBarHideOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldHideActionBarOnFling(float,float); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL$2 { void <init>(io.codetail.animation.SupportAnimatorPreL,android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class java.util.Base64$Encoder { void <init>(boolean,byte[],int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void <init>(android.content.Context,android.view.View$OnClickListener,com.xlythe.calculator.material.floating.FloatingHistoryAdapter$HistoryItemCallback,com.xlythe.math.Solver,com.xlythe.math.History); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void applyListener(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int positionChild(android.view.View,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void setUpHistory(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getActionBarHideOffset(); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void setVisibility(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void haltActionBarHideOffsetAnimations(); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.view.View { void setBackgroundColor(int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { android.content.Context getContext(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { int getCount(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { android.view.View getViewAt(int); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void removeActionBarHideOffset(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onMeasure(int,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void restoreState(android.os.Parcelable,java.lang.ClassLoader); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void setEnabled(android.view.View,boolean); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void startUpdate(android.view.ViewGroup); }
-keepclassmembers class java.util.ArrayList$Itr { void <init>(java.util.ArrayList); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.util.ArrayList$Itr { boolean hasNext(); }
-keepclassmembers class java.util.ArrayList$Itr { java.lang.Object next(); }
-keepclassmembers class android.icu.text.PluralRules$Factory { void <init>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.util.ArrayList$Itr { void remove(); }
-keepclassmembers class android.icu.text.PluralRules$Factory { android.icu.impl.PluralRulesLoader getDefaultFactory(); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int measureChildView(android.view.View,int,int,int); }
-keepclassmembers class android.view.View { android.content.res.ColorStateList getBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.PorterDuff$Mode getBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class java.util.Base64$Encoder { char[] access$200(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class java.util.Base64$Encoder { char[] access$300(); }
-keepclassmembers class android.view.ViewStub { void onMeasure(int,int); }
-keepclassmembers class java.util.Base64$Encoder { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.ViewStub { void setVisibility(int); }
-keepclassmembers class android.view.View { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter { void finishUpdate(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewStub { android.view.View inflate(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class android.graphics.Paint { long getNativeInstance(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class android.graphics.Paint { int nGetFlags(long); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class android.graphics.Paint { void nSetFlags(long,int); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class android.view.View { boolean isForegroundInsidePadding(); }
-keepclassmembers class android.view.View { void setBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { int getForegroundGravity(); }
-keepclassmembers class java.util.ArrayList$Itr { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class android.view.View { void setForegroundGravity(int); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class android.view.View { void setForegroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class android.graphics.Paint { void nSetDither(long,boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void setActionBarHideOffset(int); }
-keepclassmembers class sun.util.calendar.Gregorian { void <init>(); }
-keepclassmembers class android.icu.text.NumberingSystem { void <init>(); }
-keepclassmembers class android.view.View { void setForegroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem getInstance(java.lang.String,int,boolean,java.lang.String); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.Gregorian$Date getCalendarDate(long,java.util.TimeZone); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem getInstance(android.icu.util.ULocale); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.CalendarDate getCalendarDate(long,java.util.TimeZone); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.view.View { void applyForegroundTint(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void pullChildren(); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class sun.util.calendar.Gregorian { sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone); }
-keepclassmembers class android.graphics.Paint { void nSetFilterBitmap(long,boolean); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class org.javia.arity.Declaration { void <clinit>(); }
-keepclassmembers class org.javia.arity.Declaration { void <init>(); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class android.icu.impl.UCharacterProperty$16 { void <init>(android.icu.impl.UCharacterProperty); }
-keepclassmembers class org.javia.arity.Declaration { void parse(java.lang.String,org.javia.arity.Lexer,org.javia.arity.DeclarationParser); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$16 { int getValue(int); }
-keepclassmembers class android.graphics.Paint { int nGetColor(long); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { void nSetColor(long,int); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.graphics.Paint { int nGetAlpha(long); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem lookupInstanceByLocale(android.icu.text.NumberingSystem$LocaleLookupData); }
-keepclassmembers class android.view.View { void onDrawForeground(android.graphics.Canvas); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void nSetAlpha(long,int); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.graphics.Paint { float nGetStrokeWidth(long); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.graphics.Paint { void nSetStrokeWidth(long,float); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.Paint { void nSetStrokeMiter(long,float); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.graphics.Paint { void nSetAntiAlias(long,boolean); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem getInstanceByName(java.lang.String); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem lookupInstanceByName(java.lang.String); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.icu.text.NumberingSystem { boolean isValidDigitString(java.lang.String); }
-keepclassmembers class android.icu.text.NumberingSystem { int getRadix(); }
-keepclassmembers class android.view.View { void setPaddingRelative(int,int,int,int); }
-keepclassmembers class android.icu.impl.CurrencyData { void <clinit>(); }
-keepclassmembers class android.icu.text.NumberingSystem { java.lang.String getName(); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.icu.text.NumberingSystem { boolean isAlgorithmic(); }
-keepclassmembers class android.icu.text.NumberingSystem { android.icu.text.NumberingSystem access$000(java.lang.String); }
-keepclassmembers class android.icu.text.NumberingSystem { void <clinit>(); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class java.security.AllPermission { void <init>(); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class android.graphics.Paint { void nSetFakeBoldText(long,boolean); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter$1 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter,com.xlythe.calculator.material.floating.FloatingHistoryAdapter); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class java.security.AllPermission { java.lang.String getActions(); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorPageAdapter$1 { void notifyDataSetChanged(); }
-keepclassmembers class android.view.View { int getPaddingEnd(); }
-keepclassmembers class sun.security.pkcs.PKCS7$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress$InetAddressHolder holder(); }
-keepclassmembers class sun.security.pkcs.PKCS7$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class java.net.InetAddress { void <init>(); }
-keepclassmembers class android.graphics.Paint { void setTextLocales(android.os.LocaleList); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.graphics.Paint { void syncTextLocalesWithMinikin(); }
-keepclassmembers class android.view.View { void resetPaddingToInitialValues(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class java.security.Provider { void <init>(java.lang.String,double,java.lang.String); }
-keepclassmembers class java.net.InetAddress { boolean isAnyLocalAddress(); }
-keepclassmembers class android.graphics.Paint { boolean isElegantTextHeight(); }
-keepclassmembers class java.security.Provider { java.lang.String getName(); }
-keepclassmembers class android.graphics.Paint { boolean nIsElegantTextHeight(long); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class android.graphics.Paint { void nSetElegantTextHeight(long,boolean); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class java.security.Provider { java.lang.String toString(); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.Paint { float nGetTextSize(long); }
-keepclassmembers class android.graphics.Paint { void nSetTextSize(long,float); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { float nGetTextScaleX(long); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class android.icu.text.NumberingSystem { java.lang.String getDescription(); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.graphics.Paint { void nSetTextSkewX(long,float); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntrySet { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.graphics.Paint { void setHyphenEdit(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntrySet { int size(); }
-keepclassmembers class org.ejml.alg.block.BlockInnerTriangularSolver { void solveL(double[],double[],int,int,int,int,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostFromNameService(java.net.InetAddress); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.graphics.Paint { float nGetFontMetrics(long,long,android.graphics.Paint$FontMetrics); }
-keepclassmembers class java.security.Provider { java.util.Set entrySet(); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class android.graphics.Paint { int nGetFontMetricsInt(long,long,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class android.graphics.Paint { void nSetTextScaleX(long,float); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class java.security.Provider { java.util.Collection values(); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class java.security.Provider { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean isActivated(); }
-keepclassmembers class android.view.View { boolean toGlobalMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class io.codetail.animation.SupportAnimatorLollipop { void <init>(android.animation.Animator); }
-keepclassmembers class org.ejml.alg.block.BlockInnerTriangularSolver { void solveLTransB(double[],double[],int,int,int,int,int); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class io.codetail.animation.SupportAnimatorLollipop { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String,int,int); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class io.codetail.animation.SupportAnimatorLollipop { android.animation.Animator setDuration(long); }
-keepclassmembers class io.codetail.animation.SupportAnimatorLollipop { io.codetail.animation.SupportAnimatorLollipop setDuration(long); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.BlockInnerTriangularSolver { void solveTransL(double[],double[],int,int,int,int,int); }
-keepclassmembers class java.security.Provider { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class io.codetail.animation.SupportAnimatorLollipop { void start(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$1 { void <init>(); }
-keepclassmembers class android.view.View { int[] getLocationOnScreen(); }
-keepclassmembers class java.security.Provider { java.util.Set keySet(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLoopbackAddress(); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class libcore.io.Memory { void unsafeBulkGet(java.lang.Object,int,int,byte[],int,int,boolean); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class android.view.View { void transformFromViewToWindowSpace(int[]); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedEnd(android.view.View); }
-keepclassmembers class org.ejml.alg.block.BlockInnerTriangularSolver { void solveTransU(double[],double[],int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedMeasurement(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedMeasurementInOther(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedStart(android.view.View); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.BlockInnerTriangularSolver { void solveU(double[],double[],int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEnd(); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEndAfterPadding(); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEndPadding(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getStartAfterPadding(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTotalSpace(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$3 { void <init>(); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$3 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { void offsetChildren(int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getMode(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(java.util.function.Predicate); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,java.util.function.Predicate); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class android.view.View { void setId(int); }
-keepclassmembers class android.view.View { void setIsRootNamespace(boolean); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTransformedEndWithDecoration(android.view.View); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress anyLocalAddress(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.view.View { java.lang.Object getTag(int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceInt { int getInt(); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.content.IntentFilter$1 { void <init>(); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceInt { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class android.view.View { void setTagInternal(int,java.lang.Object); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class android.view.View { void setKeyedTag(int,java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void setTitleOptionalHint(boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams); }
-keepclassmembers class libcore.io.Memory { short peekShortNative(long); }
-keepclassmembers class libcore.io.Memory { short peekShort(long,boolean); }
-keepclassmembers class libcore.io.Memory { void peekCharArray(long,char[],int,int,boolean); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void invalidate(); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void finish(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { android.view.Menu getMenu(); }
-keepclassmembers class java.security.Provider { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { android.view.View getCustomView(); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class java.security.Provider { void checkInitialized(); }
-keepclassmembers class java.security.Provider { void check(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class com.android.internal.view.StandaloneActionMode { void <init>(android.content.Context,com.android.internal.widget.ActionBarContextView,android.view.ActionMode$Callback,boolean); }
-keepclassmembers class java.security.Provider { void putId(); }
-keepclassmembers class java.security.Provider { boolean checkLegacy(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class org.javia.arity.FunctionAndName { void <init>(org.javia.arity.Function,java.lang.String); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTransformedStartWithDecoration(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean shouldDodge(android.view.View,int); }
-keepclassmembers class java.security.Provider { java.lang.Object implRemove(java.lang.Object); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceInt { int getType(); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class android.icu.text.UFormat { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class android.icu.text.UFormat { void setLocale(android.icu.util.ULocale,android.icu.util.ULocale); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class android.view.View { boolean isInLayout(); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean checkAnchorChanged(); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,int,int); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { android.support.design.widget.CoordinatorLayout$Behavior getBehavior(); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable { void <init>(android.graphics.drawable.Drawable[],long); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void acceptNestedScroll(boolean); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean isNestedScrollAccepted(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetChangedAfterNestedScroll(); }
-keepclassmembers class java.text.ParseException { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$4 { void <init>(com.android.internal.view.FloatingActionMode); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetTouchBehaviorTracking(); }
-keepclassmembers class com.android.internal.view.FloatingActionMode$4 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { void <init>(); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class android.util.ArrayMap { void <init>(int,boolean); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable { void <init>(android.graphics.drawable.Drawable[],long,com.xlythe.calculator.material.drawable.AnimatingDrawable$1); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable { android.graphics.drawable.Drawable[] access$000(com.xlythe.calculator.material.drawable.AnimatingDrawable); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetNestedScroll(); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable { void setFrame(android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.Paint { float getRunAdvance(char[],int,int,int,int,boolean,int); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class java.security.Provider { java.lang.Object implPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$2 { void <init>(android.support.v7.widget.helper.ItemTouchHelper); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class java.security.Provider { void ensureLegacyParsed(); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class android.graphics.Paint { float getRunAdvance(java.lang.CharSequence,int,int,int,int,boolean,int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$12 { void <init>(java.lang.String); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class android.os.Handler { void removeCallbacksAndMessages(java.lang.Object); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class java.security.Provider { java.lang.String[] getTypeAndAlgorithm(java.lang.String); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class java.security.Provider { void removeInvalidServices(java.util.Map); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable { void access$100(com.xlythe.calculator.material.drawable.AnimatingDrawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.graphics.Paint { long nInit(); }
-keepclassmembers class android.graphics.Paint { long nInitWithPaint(long); }
-keepclassmembers class android.view.View { void startAnimation(android.view.animation.Animation); }
-keepclassmembers class java.security.Provider { void parseLegacyPut(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class android.graphics.Paint { int nGetStyle(long); }
-keepclassmembers class android.graphics.Paint { void nSetStyle(long,int); }
-keepclassmembers class android.graphics.Paint { void nSetStrokeCap(long,int); }
-keepclassmembers class android.graphics.Paint { void nSetStrokeJoin(long,int); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class android.view.View { int getMinimumHeight(); }
-keepclassmembers class android.view.View { int getMinimumWidth(); }
-keepclassmembers class android.graphics.Paint { long nSetShader(long,long); }
-keepclassmembers class android.graphics.Paint { long nSetColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long nSetXfermode(long,long); }
-keepclassmembers class android.icu.text.PluralRules$1 { void <init>(); }
-keepclassmembers class android.graphics.Paint { long nSetPathEffect(long,long); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.icu.text.PluralRules$1 { boolean isFulfilled(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.graphics.Paint { long nSetTypeface(long,long); }
-keepclassmembers class android.graphics.Paint { int nSetTextLocales(long,java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$1 { java.lang.String toString(); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.graphics.Paint { void nSetTextLocalesByMinikinLangListId(long,int); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(java.io.ObjectStreamClass,java.lang.Class); }
-keepclassmembers class android.graphics.Paint { float nGetTextAdvances(long,long,char[],int,int,int,int,int,float[],int); }
-keepclassmembers class android.graphics.Paint { float nGetTextAdvances(long,long,java.lang.String,int,int,int,int,int,float[],int); }
-keepclassmembers class java.io.ObjectStreamClass$2 { java.lang.Void run(); }
-keepclassmembers class android.graphics.Paint { int nGetTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.icu.impl.ICUData$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUData$2 { java.io.InputStream run(); }
-keepclassmembers class android.graphics.Paint { long nGetNativeFinalizer(); }
-keepclassmembers class android.icu.impl.ICUData$2 { java.lang.Object run(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.graphics.Paint { void nSetShadowLayer(long,float,float,float,int); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class android.view.InputChannel$1 { void <init>(); }
-keepclassmembers class android.graphics.Paint { float nGetLetterSpacing(long); }
-keepclassmembers class android.graphics.Paint { void nSetLetterSpacing(long,float); }
-keepclassmembers class android.view.InputChannel$1 { android.view.InputChannel createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Paint { void nSetFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class android.graphics.Paint { void nSetHyphenEdit(long,int); }
-keepclassmembers class android.graphics.Paint { float nGetRunAdvance(long,long,char[],int,int,int,int,boolean,int); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class java.security.Permission { java.lang.String getName(); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { long mix64(long); }
-keepclassmembers class android.graphics.Paint { long access$000(); }
-keepclassmembers class android.view.InputChannel$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { java.lang.Object run(); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { void localInit(); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.ViewPager { void <clinit>(); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { void setSeed(long); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int,int); }
-keepclassmembers class android.graphics.Paint { void nSet(long,long); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class android.view.View { void setSystemUiVisibility(int); }
-keepclassmembers class android.view.View { int getSystemUiVisibility(); }
-keepclassmembers class android.view.View { int getWindowSystemUiVisibility(); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.graphics.Paint { int nGetTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Proxy$KeyX { void <init>(java.lang.Class[]); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.support.v4.view.ViewPager { void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo); }
-keepclassmembers class java.lang.reflect.Proxy$KeyX { int hashCode(); }
-keepclassmembers class java.lang.reflect.Proxy$KeyX { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class java.lang.reflect.Proxy$KeyX { boolean equals(java.lang.ref.WeakReference[],java.lang.ref.WeakReference[]); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.util.ArrayMap { java.util.Set entrySet(); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.NavigableMap); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.View { boolean startDragAndDrop(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class android.app.Application { void dispatchActivityCreated(android.app.Activity,android.os.Bundle); }
-keepclassmembers class android.icu.text.StringReplacer { void <init>(java.lang.String,android.icu.text.RuleBasedTransliterator$Data); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class android.icu.text.StringReplacer { int replace(android.icu.text.Replaceable,int,int,int[]); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean isEmpty(); }
-keepclassmembers class android.icu.util.VersionInfo { android.icu.util.VersionInfo getInstance(java.lang.String); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void <init>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { java.lang.String addOperator(java.lang.String,char); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { java.lang.String getDecimal(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { android.graphics.Rect getEpicenterBounds(); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { java.lang.String getValue(android.content.Context,int); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void setOnClickListeners(android.content.Context,int,android.widget.RemoteViews); }
-keepclassmembers class android.icu.util.VersionInfo { android.icu.util.VersionInfo getInstance(int,int,int,int); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$102(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class android.app.Application { java.lang.Object[] collectComponentCallbacks(); }
-keepclassmembers class java.security.Provider { void addEngine(java.lang.String,boolean,java.lang.String); }
-keepclassmembers class android.app.Application { java.lang.Object[] collectActivityLifecycleCallbacks(); }
-keepclassmembers class java.security.Provider { java.util.Map access$900(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.security.Provider { void <clinit>(); }
-keepclassmembers class java.security.Provider { java.util.Set getServices(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int); }
-keepclassmembers class android.icu.util.VersionInfo { android.icu.util.VersionInfo getInstance(int); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.icu.text.StringReplacer { java.lang.String toReplacerPattern(boolean); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.View { boolean callDragEventHandler(android.view.DragEvent); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void setValue(android.content.Context,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$6 { void <init>(java.lang.String); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeySet { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$6 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,float); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeySet { int size(); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$6 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.icu.impl.UResource$Value { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$6 { void setValue(java.lang.Object,float); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { int getProbe(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewPager { void completeScroll(boolean); }
-keepclassmembers class java.util.LinkedHashMap$LinkedKeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { int advanceProbe(int); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class android.icu.impl.UResource$Value { java.lang.String toString(); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { com.android.internal.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.icu.util.VersionInfo { int compareTo(android.icu.util.VersionInfo); }
-keepclassmembers class android.icu.util.VersionInfo { void <init>(int); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.icu.util.VersionInfo { int getInt(int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { void <init>(); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.View { void checkForLongClick(int,float,float); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.icu.impl.UCharacterProperty$CombiningClassIntProperty { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$CombiningClassIntProperty { int getMaxValue(int); }
-keepclassmembers class android.support.v4.view.ViewPager { int determineTargetPage(int,float,int,int); }
-keepclassmembers class java.util.concurrent.ThreadLocalRandom { void <clinit>(); }
-keepclassmembers class android.view.View { android.view.View inflate(android.content.Context,int,android.view.ViewGroup); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.icu.text.StringReplacer { void <init>(java.lang.String,int,android.icu.text.RuleBasedTransliterator$Data); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$10 { void onAnimationFinished(); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageScrolled(int,float,int); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.view.View { boolean dispatchDragEnterExitInPreN(android.view.DragEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageSelected(int); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuPopup { boolean shouldPreserveIconSpacing(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { void enableLayers(boolean); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class android.support.v4.view.ViewPager { void endDrag(); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$17 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class sun.util.calendar.CalendarSystem { void <init>(); }
-keepclassmembers class sun.util.calendar.CalendarSystem { sun.util.calendar.Gregorian getGregorianCalendar(); }
-keepclassmembers class sun.util.calendar.CalendarSystem { sun.util.calendar.CalendarSystem forName(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.icu.impl.IllegalIcuArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewPager { int getClientWidth(); }
-keepclassmembers class sun.util.calendar.CalendarSystem { java.util.Properties getCalendarProperties(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition(); }
-keepclassmembers class android.icu.impl.IllegalIcuArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class android.widget.ImageButton { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class android.icu.impl.IllegalIcuArgumentException { android.icu.impl.IllegalIcuArgumentException initCause(java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$RotationWatcher$1 { void <init>(com.android.internal.policy.PhoneWindow$RotationWatcher); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class android.icu.impl.IllegalIcuArgumentException { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton$State { void <clinit>(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class android.icu.util.VersionInfo { void <clinit>(); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class com.xlythe.calculator.material.view.EqualsImageButton$State { com.xlythe.calculator.material.view.EqualsImageButton$State[] values(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isDecorView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isGutterDrag(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void setSplitToolbar(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageScrolled(int); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class com.xlythe.calculator.material.widget.CalculatorWidget { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean performDrag(float); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void setContentHeight(int); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class sun.util.calendar.CalendarSystem { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void initTitle(); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class android.support.v4.view.ViewPager { void recomputeScrollPosition(int,int,int,int); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void initForMode(android.view.ActionMode); }
-keepclassmembers class android.icu.impl.UCharacterProperty$4 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class java.util.regex.Pattern { long getNativeFinalizer(); }
-keepclassmembers class java.util.regex.Pattern { int nativeSize(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$4 { boolean contains(int); }
-keepclassmembers class java.util.regex.Pattern { void <clinit>(); }
-keepclassmembers class android.provider.Settings$System$9 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeNonDecorViews(); }
-keepclassmembers class android.support.v4.view.ViewPager { void requestParentDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean resetTouch(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void closeMode(); }
-keepclassmembers class android.support.v4.view.ViewPager { void scrollToItem(int,boolean,int,boolean); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void killMode(); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$13 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$13 { void onAnimationFinished(); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.view.ViewPager { void sortChildDrawingOrder(); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { int getVisibleDecimalDigitCount(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class android.support.v4.view.ViewPager { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { void <init>(double,int,long); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class android.app.ActivityManager { boolean isLowRamDeviceStatic(); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class android.view.View { android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int); }
-keepclassmembers class android.view.View { void setPointerIcon(android.view.PointerIcon); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class java.io.Writer { void write(java.lang.String); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { void <init>(double,int); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { int getFractionalDigits(double,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener); }
-keepclassmembers class android.view.View { android.view.ViewPropertyAnimator animate(); }
-keepclassmembers class android.app.ActivityManager { boolean isHighEndGfx(); }
-keepclassmembers class com.xlythe.math.Persist { void <clinit>(); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class com.xlythe.math.Persist { void <init>(android.content.Context); }
-keepclassmembers class com.xlythe.math.Persist { com.xlythe.math.Base getMode(); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class android.support.v4.view.ViewPager { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.xlythe.math.Persist { void load(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { int getVisibleFractionCount(java.lang.String); }
-keepclassmembers class com.xlythe.math.Persist { void save(); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { double get(android.icu.text.PluralRules$Operand); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { android.icu.text.PluralRules$Operand getOperand(java.lang.String); }
-keepclassmembers class com.xlythe.math.Persist { void setMode(com.xlythe.math.Base); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceIntVector { int getType(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceIntVector { int[] getIntVector(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceIntVector { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class org.javia.arity.ByteStack { void <init>(); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView { void setTitleOptional(boolean); }
-keepclassmembers class org.javia.arity.ByteStack { void clear(); }
-keepclassmembers class org.javia.arity.ByteStack { byte pop(); }
-keepclassmembers class org.javia.arity.ByteStack { void push(byte); }
-keepclassmembers class java.util.WeakHashMap$ValueIterator { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimal { java.lang.String toString(); }
-keepclassmembers class java.util.WeakHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class org.javia.arity.ByteStack { byte[] toArray(); }
-keepclassmembers class java.util.WeakHashMap$ValueIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScrollHorizontally(int); }
-keepclassmembers class java.nio.file.TempFileHelper { java.nio.file.Path generatePath(java.lang.String,java.lang.String,java.nio.file.Path); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { int parse(java.lang.String,int,int,android.icu.text.TransliteratorParser); }
-keepclassmembers class java.net.InetAddress$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.net.InetAddress$1 { java.net.InetAddress[] lookupAllHostAddr(java.lang.String,int); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { int parseSection(java.lang.String,int,int,android.icu.text.TransliteratorParser,java.lang.StringBuffer,android.icu.text.UnicodeSet,boolean); }
-keepclassmembers class java.net.InetAddress$1 { java.lang.String getHostByAddr(byte[]); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$7 { void <init>(com.xlythe.calculator.material.BasicCalculator,io.codetail.widget.RevealView); }
-keepclassmembers class java.nio.file.TempFileHelper { java.nio.file.Path create(java.nio.file.Path,java.lang.String,java.lang.String,boolean,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$7 { void onAnimationFinished(); }
-keepclassmembers class java.lang.Thread { int nextThreadNum(); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class java.lang.Thread { void blockedOn(sun.nio.ch.Interruptible); }
-keepclassmembers class java.lang.Thread { long nextThreadID(); }
-keepclassmembers class java.lang.Thread { void sleep(long); }
-keepclassmembers class java.lang.Thread { void sleep(java.lang.Object,long,int); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] nativeGetEvents(long,char[]); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class java.lang.Thread { void sleep(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class java.lang.Thread { void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class android.animation.Keyframe { void setFraction(float); }
-keepclassmembers class android.support.v4.view.ViewPager { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean shouldDrawRoundScrollbar(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void <init>(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void <init>(sun.security.util.DerInputBuffer); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { android.icu.text.Transliterator get(java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void put(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void init(int[],int); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean access$2700(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void put(java.lang.String,android.icu.text.Transliterator$Factory,boolean); }
-keepclassmembers class java.nio.file.TempFileHelper { java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]); }
-keepclassmembers class android.animation.Keyframe { java.lang.Class getType(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void put(java.lang.String,java.lang.String,int,boolean); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void put(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void put(java.lang.String,android.icu.text.Transliterator,boolean); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(com.android.i18n.phonenumbers.MetadataSource,java.util.Map); }
-keepclassmembers class android.view.View { int access$3100(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class android.view.View { boolean access$3200(android.view.View); }
-keepclassmembers class java.io.Writer { void write(java.lang.String,int,int); }
-keepclassmembers class com.xlythe.math.Persist { com.xlythe.math.History getHistory(); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.util.Enumeration getAvailableSources(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.util.Enumeration getAvailableTargets(java.lang.String); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.support.v4.view.ViewPager { void drawableStateChanged(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$18 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.nio.file.TempFileHelper { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void init2(java.lang.Thread); }
-keepclassmembers class sun.security.util.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$18 { int getValue(int); }
-keepclassmembers class sun.security.util.ObjectIdentifier { int hashCode(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class sun.security.util.ObjectIdentifier { int[] toIntArray(); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class java.net.URI { boolean isOpaque(); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void registerEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean); }
-keepclassmembers class java.net.URI { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class org.javia.arity.Derivative { void <init>(org.javia.arity.Function); }
-keepclassmembers class org.javia.arity.Derivative { int arity(); }
-keepclassmembers class org.javia.arity.Derivative { double eval(double); }
-keepclassmembers class java.net.URI { java.lang.String getAuthority(); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void registerEntry(java.lang.String,java.lang.Object,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView$VisibilityAnimListener { void <init>(com.android.internal.widget.AbsActionBarView); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$UTF16Plus { boolean isSurrogateLead(int); }
-keepclassmembers class java.net.URI { java.lang.String getUserInfo(); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView$VisibilityAnimListener { com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView$VisibilityAnimListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void registerEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean); }
-keepclassmembers class android.icu.impl.UCharacterProperty$18 { int getMaxValue(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$UTF16Plus { boolean equal(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView$VisibilityAnimListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String getQuery(); }
-keepclassmembers class java.net.URI { java.lang.String getPath(); }
-keepclassmembers class android.icu.impl.Normalizer2Impl$UTF16Plus { boolean equal(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.widget.AbsActionBarView$VisibilityAnimListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void registerSTV(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.util.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { void removeSTV(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.lang.Object[] findInDynamicStore(android.icu.text.TransliteratorRegistry$Spec,android.icu.text.TransliteratorRegistry$Spec,java.lang.String); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class java.net.URI { int hashCode(); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { byte[] pack(byte[],int,int,int,int); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class android.support.v4.view.ViewPager { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Thread { void join(long); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.lang.Object[] findInBundle(android.icu.text.TransliteratorRegistry$Spec,android.icu.text.TransliteratorRegistry$Spec,java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewPager { int getCurrentItem(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataSource); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.lang.Object[] findInStaticStore(android.icu.text.TransliteratorRegistry$Spec,android.icu.text.TransliteratorRegistry$Spec,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { byte[] getTBSCertificate(); }
-keepclassmembers class android.icu.text.PluralRules$2 { void <clinit>(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { int pack7Oid(byte[],int,int,byte[],int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(); }
-keepclassmembers class java.lang.Thread { boolean isDaemon(); }
-keepclassmembers class java.lang.Thread { void checkAccess(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Array { void <init>(); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForPosition(int); }
-keepclassmembers class android.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(int); }
-keepclassmembers class sun.security.util.ObjectIdentifier { int pack7Oid(int,byte[],int); }
-keepclassmembers class android.view.Surface$CompatibleCanvas { void <init>(android.view.Surface); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class sun.security.pkcs.PKCS7$WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class java.lang.Thread { void setContextClassLoader(java.lang.ClassLoader); }
-keepclassmembers class java.lang.Thread { boolean holdsLock(java.lang.Object); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class android.view.View$BaseSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.net.URI { int toUpper(char); }
-keepclassmembers class java.lang.Thread { boolean nativeHoldsLock(java.lang.Object); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.lang.Object[] find(java.lang.String); }
-keepclassmembers class sun.security.util.ObjectIdentifier { int pack7Oid(java.math.BigInteger,byte[],int); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { java.lang.Object[] find(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.Surface$CompatibleCanvas { void <init>(android.view.Surface,android.view.Surface$1); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void check(byte[]); }
-keepclassmembers class android.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.support.v4.view.ViewPager { void onAttachedToWindow(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkCount(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDetachedFromWindow(); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class java.net.URI { int toLower(char); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkFirstComponent(int); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class android.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { void removeContext(); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkSecondComponent(int,int); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkSecondComponent(int,java.math.BigInteger); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] getEvents(char[]); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { boolean isValidOutput(android.icu.text.TransliteratorParser); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class java.net.URI { int hash(int,java.lang.String); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class android.icu.text.TransliteratorRegistry { android.icu.text.Transliterator instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { boolean isValidInput(android.icu.text.TransliteratorParser); }
-keepclassmembers class android.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class android.widget.ListPopupWindow { int getHorizontalOffset(); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkOtherComponent(int,int); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkFirstComponent(java.math.BigInteger); }
-keepclassmembers class android.widget.ListPopupWindow { int getVerticalOffset(); }
-keepclassmembers class java.net.URI { int normalizedHash(int,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void setHorizontalOffset(int); }
-keepclassmembers class java.lang.Thread { void parkFor$(long); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class android.widget.ListPopupWindow { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class android.widget.ListPopupWindow { void setVerticalOffset(int); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void checkOtherComponent(int,java.math.BigInteger); }
-keepclassmembers class android.widget.ListPopupWindow { void setDropDownGravity(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class sun.security.util.ObjectIdentifier { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class java.net.URI { int hashIgnoringCase(int,java.lang.String); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getWithFallback(java.lang.String); }
-keepclassmembers class java.lang.Thread { void parkUntil$(long); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.lang.Thread { void unpark$(); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.icu.text.TransliteratorParser$RuleHalf { void <init>(android.icu.text.TransliteratorParser$1); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class sun.security.util.ObjectIdentifier { sun.security.util.ObjectIdentifier newInternal(int[]); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow { void show(); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle findWithFallback(java.lang.String); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String findStringWithFallback(java.lang.String); }
-keepclassmembers class java.net.URI { void checkPath(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle findTopLevel(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String getStringWithFallback(java.lang.String); }
-keepclassmembers class java.net.URI { void appendAuthority(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void getAllItemsWithFallback(java.lang.String,android.icu.impl.UResource$Sink); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void getAllItemsWithFallback(android.icu.impl.UResource$Key,android.icu.impl.ICUResourceBundleReader$ReaderValue,android.icu.impl.UResource$Sink); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.widget.ListPopupWindow { void dismiss(); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class java.net.URI { void appendSchemeSpecificPart(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { java.lang.Runnable registerNativeAllocation(java.lang.Object,long); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class java.io.OutputStreamWriter { void flushBuffer(); }
-keepclassmembers class android.widget.ListPopupWindow { void removePromptView(); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { void <init>(java.lang.ClassLoader,long,long); }
-keepclassmembers class java.io.OutputStreamWriter { void write(char[],int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class android.icu.text.PluralRanges { void <init>(); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { void registerNativeAllocation(long); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { long access$100(libcore.util.NativeAllocationRegistry); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { void applyFreeFunction(long,long); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { void registerNativeFree(long); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { long access$000(libcore.util.NativeAllocationRegistry); }
-keepclassmembers class android.icu.text.PluralRanges { void add(android.icu.impl.StandardPlural,android.icu.impl.StandardPlural,android.icu.impl.StandardPlural); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class libcore.util.NativeAllocationRegistry { void access$200(long); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewPager { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.net.URI { void appendFragment(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int[] access$000(android.graphics.drawable.RotateDrawable$RotateState); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int[] access$002(android.graphics.drawable.RotateDrawable$RotateState,int[]); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class java.net.URI { java.lang.String toString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View$CheckForLongPress { void setAnchor(float,float); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class android.widget.FastScroller { void updateOffsetAndRange(); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class java.net.URI { void defineString(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class java.net.URI { void defineSchemeSpecificPart(); }
-keepclassmembers class android.icu.text.PluralRanges { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class android.icu.text.PluralRanges { int hashCode(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void <init>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class android.icu.text.PluralRanges { int compareTo(android.icu.text.PluralRanges); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class android.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class android.icu.text.PluralRanges { java.lang.String toString(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class android.icu.text.PluralRanges { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void end(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void cancel(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle findResourceWithFallback(java.lang.String,android.icu.util.UResourceBundle,android.icu.util.UResourceBundle); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { float getAnimatedFraction(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.icu.text.TitlecaseTransliterator { void <init>(android.icu.util.ULocale); }
-keepclassmembers class android.icu.text.TitlecaseTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.icu.text.PluralRanges { android.icu.text.PluralRanges freeze(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.icu.text.TitlecaseTransliterator { void register(); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.provider.Settings$System$2 { void <init>(); }
-keepclassmembers class android.content.pm.PackageManager$NameNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceString { int getType(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class java.util.AbstractSequentialList { java.util.Iterator iterator(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setFloatValues(float,float); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle findResourceWithFallback(java.lang.String[],int,android.icu.impl.ICUResourceBundle,android.icu.util.UResourceBundle); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceString { java.lang.String getString(); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setDuration(long); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void start(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String findStringWithFallback(java.lang.String,android.icu.util.UResourceBundle,android.icu.util.UResourceBundle); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onMeasure(int,int); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class sun.security.action.GetPropertyAction { java.lang.String run(); }
-keepclassmembers class sun.security.action.GetPropertyAction { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceString { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class sun.security.action.GetPropertyAction { java.lang.Object run(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.ListPopupWindow { android.os.Handler access$700(android.widget.ListPopupWindow); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$ResizePopupRunnable access$600(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.DropDownListView access$500(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class android.content.pm.PermissionInfo { void <init>(android.os.Parcel,android.content.pm.PermissionInfo$1); }
-keepclassmembers class android.content.pm.PermissionInfo { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$DefaultParser { void <init>(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$2 { void onClick(android.view.View); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { int getResDepth(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class java.net.Socket$3 { java.io.OutputStream run(); }
-keepclassmembers class java.net.Socket$3 { java.lang.Object run(); }
-keepclassmembers class java.net.Socket$3 { void <init>(java.net.Socket); }
-keepclassmembers class android.support.v4.view.ViewPager { void onPageScrolled(int,float,int); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class android.content.pm.PermissionInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void getResPathKeys(java.lang.String[],int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { int getRowCount(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { int getColumnCount(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { int countPathKeys(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void getResPathKeys(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void recycle(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { boolean isHierarchical(); }
-keepclassmembers class sun.security.action.GetPropertyAction { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { int getSelectionMode(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void clear(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { int hashCode(); }
-keepclassmembers class android.icu.text.UnicodeSet$GeneralCategoryMaskFilter { void <init>(int); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.icu.text.UnicodeSet$GeneralCategoryMaskFilter { boolean contains(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundle$OpenType); }
-keepclassmembers class java.net.URI { long lowMask(java.lang.String); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class java.net.URI { long highMask(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class java.net.URI { long lowMask(char,char); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$1 { void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$1 { void onAnimationUpdate(); }
-keepclassmembers class com.xlythe.calculator.material.Clipboard { void copy(android.content.Context,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.net.URI { long highMask(char,char); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean,int); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean localeIDStartsWithLangSubtag(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundle$OpenType); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.net.URI { void appendEncoded(java.lang.StringBuffer,char); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.net.URI { java.lang.String quote(java.lang.String,long,long); }
-keepclassmembers class java.net.URI { void appendEscape(java.lang.StringBuffer,byte); }
-keepclassmembers class java.net.URI { boolean match(char,long,long); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$DefaultParser { void <init>(sun.net.ftp.impl.FtpClient,sun.net.ftp.impl.FtpClient$1); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle get(java.lang.String,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.DrawableWrapper$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class sun.misc.FloatingDecimal$HexFloatPattern { void <clinit>(); }
-keepclassmembers class java.net.URI { int decode(char); }
-keepclassmembers class sun.misc.FloatingDecimal$HexFloatPattern { java.util.regex.Pattern access$200(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle createBundle(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String getLocaleID(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateLocalState(); }
-keepclassmembers class java.net.URI { byte decode(char,char); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.util.ULocale getULocale(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorListener); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getParent(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class java.net.URI { java.lang.String decode(java.lang.String); }
-keepclassmembers class java.util.AbstractMap$1 { void <init>(java.util.AbstractMap); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationCancel(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String getKey(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationEnd(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean getNoFallback(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { java.lang.String getBaseName(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getBundle(android.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class android.icu.text.PluralRules$OrConstraint { boolean isFulfilled(android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class android.icu.text.PluralRules$OrConstraint { void <init>(android.icu.text.PluralRules$Constraint,android.icu.text.PluralRules$Constraint); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void <init>(android.icu.impl.ICUResourceBundle,java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$OrConstraint { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void <init>(android.icu.impl.ICUResourceBundle$WholeBundle); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo readTimeZone(java.lang.String,libcore.io.BufferIterator,long); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle getAliasedResource(android.icu.impl.ICUResourceBundle,java.lang.String[],int,java.lang.String,int,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class java.util.AbstractMap$1 { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationStart(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLayoutDirectionChanged(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class java.net.URI { long access$200(); }
-keepclassmembers class java.net.URI { boolean access$300(char,long,long); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.UCharacterProperty$7 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.net.URI { long access$500(); }
-keepclassmembers class java.net.URI { long access$400(); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void ensureOpen(); }
-keepclassmembers class java.net.URI { java.lang.String access$702(java.net.URI,java.lang.String); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class java.net.URI { long access$600(); }
-keepclassmembers class java.net.URI { long access$100(); }
-keepclassmembers class java.net.URI { long access$900(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$7 { boolean contains(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class java.net.URI { java.lang.String access$002(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String access$1102(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { long access$800(); }
-keepclassmembers class sun.nio.cs.StreamDecoder { sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream,java.lang.Object,java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String access$1002(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { long access$1300(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.URI { java.lang.String access$1402(java.net.URI,java.lang.String); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Collections$1 { void <init>(java.lang.Object); }
-keepclassmembers class java.net.URI { java.lang.String access$1502(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { long access$1900(); }
-keepclassmembers class sun.nio.cs.StreamDecoder { sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream,java.lang.Object,java.nio.charset.Charset); }
-keepclassmembers class java.net.URI { long access$1700(); }
-keepclassmembers class java.net.URI { long access$1600(); }
-keepclassmembers class java.net.URI { long access$2100(); }
-keepclassmembers class java.net.URI { java.lang.String access$2302(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { long access$2000(); }
-keepclassmembers class java.net.URI { long access$1800(); }
-keepclassmembers class java.net.URI { long access$2800(); }
-keepclassmembers class java.net.URI { long access$2600(); }
-keepclassmembers class java.net.URI { long access$1200(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.net.URI { java.lang.String access$2402(java.net.URI,java.lang.String); }
-keepclassmembers class sun.nio.cs.StreamDecoder { int read0(); }
-keepclassmembers class java.net.URI { java.lang.String access$2202(java.net.URI,java.lang.String); }
-keepclassmembers class java.net.URI { long access$2700(); }
-keepclassmembers class java.net.URI { long access$3400(); }
-keepclassmembers class java.net.URI { long access$3200(); }
-keepclassmembers class java.net.URI { long access$3500(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class java.net.URI { long access$3300(); }
-keepclassmembers class java.net.URI { long access$3600(); }
-keepclassmembers class java.net.URI { long access$3000(); }
-keepclassmembers class java.net.URI { long access$3100(); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,long[],byte[],int[],byte[],long); }
-keepclassmembers class sun.nio.cs.StreamDecoder { int read(char[],int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(int); }
-keepclassmembers class java.net.URI { int access$2502(java.net.URI,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void close(); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void <init>(java.io.InputStream,java.lang.Object,java.nio.charset.Charset); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.util.UResourceBundle findTopLevel(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void <init>(java.io.InputStream,java.lang.Object,java.nio.charset.CharsetDecoder); }
-keepclassmembers class java.net.URI { long access$2900(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.widget.LinearLayout$LayoutParams); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean access$500(android.icu.impl.ICUResourceBundle); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$12 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.impl.ICUResourceBundle access$600(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundle$OpenType); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean access$000(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { android.icu.util.UResourceBundle getParent(); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$12 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { boolean access$700(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class java.lang.reflect.Proxy$Key2 { void <init>(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void updateDensity(android.content.res.Resources); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class java.lang.reflect.Proxy$Key2 { int hashCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class sun.nio.cs.StreamDecoder { int readBytes(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class java.lang.reflect.Proxy$Key2 { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl { void <init>(android.icu.impl.ICUResourceBundle$WholeBundle); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl { android.icu.impl.ICUResourceBundle createBundleObject(java.lang.String,int,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class sun.nio.cs.StreamDecoder { int implRead(char[],int,int); }
-keepclassmembers class android.icu.text.Quantifier { void <init>(android.icu.text.UnicodeMatcher,int,int); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL { void <init>(com.nineoldandroids.animation.Animator); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class android.icu.text.Quantifier { int matches(android.icu.text.Replaceable,int[],int,boolean); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.Shader { long nativeSetLocalMatrix(long,long); }
-keepclassmembers class android.icu.text.Quantifier { java.lang.String toPattern(boolean); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL { io.codetail.animation.SupportAnimatorPreL setDuration(long); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl { int getResource(); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class sun.net.ftp.FtpProtocolException { void <init>(java.lang.String); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL { void start(); }
-keepclassmembers class sun.net.ftp.FtpProtocolException { void <init>(java.lang.String,sun.net.ftp.FtpReplyCode); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class libcore.util.ZoneInfo { int findTransitionIndex(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class sun.nio.cs.StreamDecoder { boolean inReady(); }
-keepclassmembers class sun.nio.cs.StreamDecoder { boolean implReady(); }
-keepclassmembers class android.icu.text.Quantifier { boolean matchesIndexValue(int); }
-keepclassmembers class libcore.util.ZoneInfo { int findOffsetIndexForTimeInSeconds(long); }
-keepclassmembers class sun.util.locale.LocaleSyntaxException { int getErrorIndex(); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class io.codetail.animation.SupportAnimatorPreL { android.animation.Animator setDuration(long); }
-keepclassmembers class libcore.util.ZoneInfo { int findOffsetIndexForTimeInMilliseconds(long); }
-keepclassmembers class sun.util.locale.LocaleSyntaxException { void <init>(java.lang.String,int); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void implClose(); }
-keepclassmembers class libcore.util.ZoneInfo { long roundDownMillisToSeconds(long); }
-keepclassmembers class sun.nio.cs.StreamDecoder { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfo { long roundUpMillisToSeconds(long); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffsetsByUtcTime(long,int[]); }
-keepclassmembers class sun.nio.ch.FileDispatcher { void <init>(); }
-keepclassmembers class com.android.internal.os.RoSystemProperties { void <clinit>(); }
-keepclassmembers class android.icu.text.NameUnicodeTransliterator { void register(); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.widget.ActionMenuPresenter$2 { void <init>(android.widget.ActionMenuPresenter); }
-keepclassmembers class android.icu.text.NameUnicodeTransliterator { void <init>(android.icu.text.UnicodeFilter); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class android.icu.text.NameUnicodeTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setAdapter(android.support.v4.view.PagerAdapter); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceContainer { int getSize(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceContainer { int getContainerResource(int); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { void <init>(); }
-keepclassmembers class android.icu.text.Normalizer$NFD32ModeImpl { android.icu.text.Normalizer$ModeImpl access$200(); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeView(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.icu.text.Normalizer$NFD32ModeImpl { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceContainer { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItem(int); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceContainer { void <init>(android.icu.impl.ICUResourceBundle$WholeBundle); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceContainer { android.icu.util.UResourceBundle createBundleObject(int,java.lang.String,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class android.transition.ArcMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void checkInput(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumHorizontalAngle(float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class android.os.UserHandle { int getIdentifier(); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumVerticalAngle(float); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class android.util.LongArray { void <init>(int); }
-keepclassmembers class android.transition.ArcMotion { void setMaximumAngle(float); }
-keepclassmembers class android.util.LongArray { void add(int,long); }
-keepclassmembers class android.icu.text.Transliterator$Position { void <init>(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean,int); }
-keepclassmembers class android.util.LongArray { void add(long); }
-keepclassmembers class android.icu.text.Transliterator$Position { void <init>(int,int,int,int); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class android.util.LongArray { void <init>(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void mult(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class android.util.LongArray { void clear(); }
-keepclassmembers class android.util.LongArray { void ensureCapacity(int); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View,int,int,int); }
-keepclassmembers class android.util.LongArray { void addAll(android.util.LongArray); }
-keepclassmembers class android.transition.ArcMotion { float toTangent(float); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { void <init>(android.content.Context); }
-keepclassmembers class android.util.LongArray { android.util.LongArray clone(); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View,int); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class android.util.LongArray { long get(int); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { int getItemViewType(android.view.MenuItem); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { int getViewTypeCount(); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.PopupMenu { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollState(int); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { int calculateWidth(android.view.MenuItem); }
-keepclassmembers class android.util.LongArray { int indexOf(long); }
-keepclassmembers class android.support.v4.view.ViewPager { void smoothScrollTo(int,int,int); }
-keepclassmembers class android.icu.text.Transliterator$Position { void <clinit>(); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { android.view.View getView(android.view.MenuItem,int,android.view.View); }
-keepclassmembers class android.widget.PopupMenu { void show(); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions fromBundle(android.os.Bundle); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile$1 { java.util.jar.JarFile run(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$NoopNormalizer2 { void <init>(); }
-keepclassmembers class android.transition.ArcMotion { void <clinit>(); }
-keepclassmembers class android.util.LongArray { int size(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile$1 { void <init>(java.io.InputStream,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { android.view.View getIconOnlyView(android.view.MenuItem,int,android.view.View); }
-keepclassmembers class android.widget.PopupMenu { android.widget.PopupMenu$OnMenuItemClickListener access$000(android.widget.PopupMenu); }
-keepclassmembers class android.widget.PopupMenu { android.view.Menu getMenu(); }
-keepclassmembers class android.widget.PopupMenu { android.widget.PopupMenu$OnDismissListener access$100(android.widget.PopupMenu); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class android.widget.PopupMenu { void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multMinus(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile$1 { java.lang.Object run(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper { android.widget.TextView getStringTitleView(android.view.MenuItem,int,android.view.View); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getCurrencyInstance(java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(java.util.Locale); }
-keepclassmembers class java.net.Inet6AddressImpl { void <init>(); }
-keepclassmembers class java.net.Inet6AddressImpl { java.net.InetAddress[] lookupAllHostAddr(java.lang.String,int); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(java.util.Locale); }
-keepclassmembers class java.net.Inet6AddressImpl { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class java.text.NumberFormat { java.lang.Object clone(); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.net.Inet6AddressImpl { java.lang.String getHostByAddr(byte[]); }
-keepclassmembers class android.provider.Settings$System$1 { void <init>(); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo$SpacingType { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo$SpacingType { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IntProperty { void <init>(android.icu.impl.UCharacterProperty,int,int,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IntProperty { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IntProperty { int getSource(); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale,int); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IntProperty { int getValue(int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$IntProperty { int getMaxValue(int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { void <init>(int); }
-keepclassmembers class java.security.cert.CertificateParsingException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView$2 { void <init>(android.widget.PopupWindow$PopupDecorView,android.view.View,android.transition.Transition$TransitionListener); }
-keepclassmembers class java.security.cert.CertificateParsingException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void <init>(android.content.Context,android.view.View,int,int,boolean); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup$1 { void <init>(com.android.internal.view.menu.StandardMenuPopup); }
-keepclassmembers class android.widget.PopupWindow$PopupDecorView$2 { void onTransitionEnd(android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { int generateCacheKey(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.net.Inet6AddressImpl { java.net.InetAddress anyLocalAddress(); }
-keepclassmembers class java.net.Inet6AddressImpl { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void <init>(com.android.internal.app.WindowDecorActionBar,android.content.Context,android.view.ActionMode$Callback); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout); }
-keepclassmembers class android.support.v4.view.ViewCompat { void <clinit>(); }
-keepclassmembers class sun.net.ftp.FtpClient { void <init>(); }
-keepclassmembers class sun.net.ftp.FtpClient { int defaultPort(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { android.view.Menu getMenu(); }
-keepclassmembers class sun.net.ftp.FtpClient { sun.net.ftp.FtpClient create(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void finish(); }
-keepclassmembers class java.net.Inet6AddressImpl { java.lang.String getHostByAddr0(byte[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multPlus(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class java.net.Inet6AddressImpl { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.widget.MenuPopupWindow createPopupWindow(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void show(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1); }
-keepclassmembers class android.support.v4.view.ViewCompat { int combineMeasuredStates(int,int); }
-keepclassmembers class sun.net.ftp.FtpClient { sun.net.ftp.FtpClient setBinaryType(); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { boolean dispatchOnCreate(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void invalidate(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void dismiss(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class java.io.StringWriter { void write(java.lang.String); }
-keepclassmembers class sun.net.ftp.FtpClient { sun.net.ftp.FtpClient setAsciiType(); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { int getInitialMenuPosition(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { void setTitleOptionalHint(boolean); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multMinusTransA(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class java.io.StringWriter { void close(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void addMenu(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getElevation(android.view.View); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { int getNextMenuPosition(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$ActionModeImpl { android.view.View getCustomView(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredState(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorSettings { boolean useRadians(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.CalculatorSettings { void setRadiansEnabled(android.content.Context,boolean); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void showMenu(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.icu.text.Normalizer$NFKDMode { android.icu.text.Normalizer2 getNormalizer2(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumHeight(android.view.View); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void onFailure(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void finish(); }
-keepclassmembers class android.icu.text.Normalizer$NFKDMode { void <init>(android.icu.text.Normalizer$1); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void onSuccess(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multPlusTransA(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class android.icu.text.Normalizer$NFKDMode { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void <init>(); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil$CaseInsensitiveKey { void <init>(java.lang.String); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil$CaseInsensitiveKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.CheckedTextView { void setChecked(boolean); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isLaidOut(android.view.View); }
-keepclassmembers class java.util.ArrayList { void ensureCapacityInternal(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getZ(android.view.View); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultMinus(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.widget.CheckedTextView { boolean isChecked(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$7 { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculatorOpenShortCutActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.view.Display$Mode$1 { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.view.MenuItem findMenuItemForSubmenu(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class java.util.ArrayList { void ensureExplicitCapacity(int); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class android.view.Display$Mode$1 { android.view.Display$Mode createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil$CaseInsensitiveKey { int hashCode(); }
-keepclassmembers class android.icu.text.EscapeTransliterator$7 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.view.View findParentViewForSubmenu(com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class java.util.ArrayList { void grow(int); }
-keepclassmembers class android.app.Service { android.app.Application getApplication(); }
-keepclassmembers class java.math.Conversion { java.lang.String bigInteger2String(java.math.BigInteger,int); }
-keepclassmembers class android.app.Service { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.view.Display$Mode$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class java.util.ArrayList { int hugeCapacity(int); }
-keepclassmembers class android.app.Service { boolean onUnbind(android.content.Intent); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class android.app.Service { void onTrimMemory(int); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultMinusTransA(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.widget.CheckedTextView { void setVisibility(int); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.app.Service { void onTaskRemoved(android.content.Intent); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.app.Service { void stopSelf(); }
-keepclassmembers class android.widget.CheckedTextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.app.Service { void onLowMemory(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.widget.CheckedTextView { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class android.app.Service { boolean stopSelfResult(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.app.Service { void onRebind(android.content.Intent); }
-keepclassmembers class android.support.v4.view.ViewCompat { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.app.Service { void setForeground(boolean); }
-keepclassmembers class android.widget.CheckedTextView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.app.Service { void stopSelf(int); }
-keepclassmembers class android.widget.CheckedTextView { void updatePadding(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { boolean isShowing(); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multTransA(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class android.app.Service { void startForeground(int,android.app.Notification); }
-keepclassmembers class android.app.Service { void stopForeground(boolean); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.app.Service { void stopForeground(int); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setupForSetSelection(int,int); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void onDismiss(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.CheckedTextView { void setBasePadding(boolean); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.widget.CheckedTextView { boolean isCheckMarkAtStart(); }
-keepclassmembers class android.widget.CheckedTextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$4 { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader,android.icu.impl.ICUResourceBundle$OpenType,java.lang.String); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setElevation(android.view.View,float); }
-keepclassmembers class android.widget.ListView$FocusSelector { java.lang.Runnable setupFocusIfValid(int); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.View$2 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ListView$FocusSelector { void onLayoutComplete(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$BackgroundProperty { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$4 { android.icu.impl.ICUResourceBundle load(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.view.View$2 { void setValue(android.view.View,float); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class android.app.Service { void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object); }
-keepclassmembers class android.view.View$2 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.CheckedTextView { int[] onCreateDrawableState(int); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.CheckedTextView { void drawableStateChanged(); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class android.view.View$2 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.widget.CheckedTextView { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.graphics.NinePatch$InsetStruct { android.graphics.Rect scaleInsets(int,int,int,int,float); }
-keepclassmembers class android.view.View$2 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CheckedTextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class org.ejml.alg.block.BlockMultiplication { void multTransB(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.util.ArrayList { void fastRemove(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.widget.CheckedTextView { void <clinit>(); }
-keepclassmembers class android.widget.CheckedTextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class sun.net.www.MessageHeader { void <init>(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultPlus(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$OnPreDrawListener { void <init>(android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class com.android.internal.view.IInputMethodClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.util.ArrayList { java.lang.String outOfBoundsMsg(int); }
-keepclassmembers class java.util.Collections$SetFromMap { void <init>(java.util.Map); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setGravity(int); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultPlusTransA(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class com.android.internal.view.IInputMethodClient$Stub { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.view.ViewTreeObserver access$200(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.view.ViewTreeObserver$OnGlobalLayoutListener access$300(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { java.util.List access$000(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.view.ViewTreeObserver access$202(com.android.internal.view.menu.CascadingMenuPopup,android.view.ViewTreeObserver); }
-keepclassmembers class java.util.Collections$SetFromMap { boolean add(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.CascadingMenuPopup { android.os.Handler access$400(com.android.internal.view.menu.CascadingMenuPopup); }
-keepclassmembers class sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry { void <init>(sun.net.www.protocol.jar.URLJarFile,java.util.jar.JarEntry); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultPlusTransB(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.Collections$SetFromMap { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class android.content.pm.ConfigurationInfo { void <init>(android.os.Parcel,android.content.pm.ConfigurationInfo$1); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long,int); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString { java.lang.String value(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString { int hashCode(); }
-keepclassmembers class java.util.ArrayList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateDefaultImpl(); }
-keepclassmembers class sun.net.www.MessageHeader { void add(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ArrayList { java.util.List subList(int,int); }
-keepclassmembers class java.time.temporal.TemporalQueries { java.time.temporal.TemporalQuery zone(); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class java.util.ArrayList { java.util.ListIterator listIterator(); }
-keepclassmembers class java.nio.StringCharBuffer { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class java.time.temporal.TemporalQueries { void <clinit>(); }
-keepclassmembers class java.lang.Long { java.lang.String toUnsignedString0(long,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.ArrayList { void subListRangeCheck(int,int,int); }
-keepclassmembers class java.lang.Long { java.lang.String toBinaryString(long); }
-keepclassmembers class java.nio.StringCharBuffer { void <init>(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.text.StaticLayout$LineBreaks { void <init>(); }
-keepclassmembers class sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString { boolean equals(java.lang.Object); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultSet(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class java.nio.StringCharBuffer { java.nio.CharBuffer duplicate(); }
-keepclassmembers class android.os.StrictMode$StrictModeResourceMismatchViolation { void <init>(int,java.lang.Object); }
-keepclassmembers class java.nio.StringCharBuffer { char get(); }
-keepclassmembers class sun.net.www.MessageHeader { void grow(); }
-keepclassmembers class java.lang.Long { void getChars(long,int,char[]); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Long { int formatUnsignedLong(long,int,char[],int,int); }
-keepclassmembers class java.nio.StringCharBuffer { java.lang.String toString(int,int); }
-keepclassmembers class java.nio.StringCharBuffer { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.util.ArrayList { void sort(java.util.Comparator); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.nio.StringCharBuffer { char get(int); }
-keepclassmembers class java.nio.StringCharBuffer { java.nio.CharBuffer subSequence(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class java.lang.Long { int stringSize(long); }
-keepclassmembers class java.util.ArrayList { int access$100(java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultSetTransA(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class java.util.ArrayList { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.PopupWindow { void setEnterTransition(android.transition.Transition); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { android.icu.impl.locale.LanguageTag parse(java.lang.String,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class android.widget.PopupWindow { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.PopupWindow { void setExitTransition(android.transition.Transition); }
-keepclassmembers class org.ejml.alg.block.BlockInnerMultiplication { void blockMultSetTransB(double[],double[],double[],int,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.widget.PopupWindow { android.transition.Transition getTransition(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$002(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.util.ResourceBundle$1 { java.lang.Object handleGetObject(java.lang.String); }
-keepclassmembers class java.util.ResourceBundle$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.FontListParser$Axis { void <init>(int,float); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$TypeInfoType { android.icu.impl.locale.KeyTypeData$TypeInfoType[] values(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseLanguage(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$TypeInfoType { android.icu.impl.locale.KeyTypeData$TypeInfoType valueOf(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$TypeInfoType { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$TypeInfoType { void <init>(java.lang.String,int); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { void <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseExtlangs(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { long getNativePtr(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { boolean equals(java.lang.Object); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { java.math.BigInteger getSerial(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { int getNativeSize(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isStateful(); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean canApplyTheme(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseScript(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { int hashCode(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { int compareTo(java.lang.Object); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class android.widget.PopupWindow { void setAllowScrollingAnchorParent(boolean); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseRegion(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseVariants(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class java.lang.Long { int hashCode(long); }
-keepclassmembers class sun.security.x509.X509CRLImpl$X509IssuerSerial { int compareTo(sun.security.x509.X509CRLImpl$X509IssuerSerial); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class android.widget.Editor$SuggestionHelper$SuggestionSpanComparator { void <init>(android.widget.Editor$SuggestionHelper); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationPause(android.animation.Animator); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parseExtensions(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.widget.Editor$SuggestionHelper$SuggestionSpanComparator { int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(int,int,float,float); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.widget.PopupWindow { void setTouchModal(boolean); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class com.nineoldandroids.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class java.lang.Long { int compareUnsigned(long,long); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean parsePrivateuse(android.icu.impl.locale.StringTokenIterator,android.icu.impl.locale.ParseStatus); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class android.util.SparseBooleanArray { int hashCode(); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class android.widget.PopupWindow { void setClipToScreenEnabled(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[]); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addViewInt(android.view.View,int,boolean); }
-keepclassmembers class android.widget.Editor$SuggestionHelper$SuggestionSpanComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class android.util.SparseBooleanArray { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class android.widget.Editor$SuggestionHelper$SuggestionSpanComparator { void <init>(android.widget.Editor$SuggestionHelper,android.widget.Editor$1); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { android.icu.impl.locale.LanguageTag parseLocale(android.icu.impl.locale.BaseLocale,android.icu.impl.locale.LocaleExtensions); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$5 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$5 { void onAnimationFinished(); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class android.view.RenderNodeAnimator { void pause(); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.widget.ActionMenuPresenter$1 { void <init>(android.widget.ActionMenuPresenter); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void resume(); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierStream { void <init>(java.util.jar.Manifest,java.util.jar.JarEntry,java.io.InputStream,java.util.jar.JarVerifier); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierStream { int read(); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class android.view.RenderNodeAnimator { long getTotalDuration(); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isRunning(); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.widget.PopupWindow { android.widget.PopupWindow$PopupBackgroundView createBackgroundView(android.view.View); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachViewInternal(int,android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getChildMeasureSpec(int,int,int,int,boolean); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierStream { int read(byte[],int,int); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int chooseSize(int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierStream { void close(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierStream { int available(); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String getLanguage(); }
-keepclassmembers class android.widget.PopupWindow { android.widget.PopupWindow$PopupDecorView createDecorView(android.view.View); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.util.List getExtlangs(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.util.List getExtensions(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String getRegion(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String getScript(); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isLanguage(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { int computeGravity(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.util.List getVariants(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String getPrivateuse(); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateRevealAnimator(int,int,float,float); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isExtlang(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayoutParams(android.os.IBinder); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isScript(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isRegion(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isExtensionSingleton(java.lang.String); }
-keepclassmembers class java.security.AccessController { java.security.AccessControlContext getContext(); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isMeasurementUpToDate(int,int,int); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isVariant(java.lang.String); }
-keepclassmembers class sun.util.calendar.BaseCalendar { boolean normalize(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$H { void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper); }
-keepclassmembers class android.icu.impl.ICUData { java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isPrivateusePrefix(java.lang.String); }
-keepclassmembers class sun.util.calendar.BaseCalendar { void <init>(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isPrivateusePrefixChar(char); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isExtensionSingletonChar(char); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizeRegion(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizeLanguage(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizeScript(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizeVariant(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUData { void checkStreamForBinaryData(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUData { java.io.InputStream getStream(java.lang.ClassLoader,java.lang.String,boolean); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int,int,int); }
-keepclassmembers class android.icu.impl.ICUData { java.io.InputStream getStream(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isExtensionSubtag(java.lang.String); }
-keepclassmembers class android.icu.impl.ICUData { java.io.InputStream getStream(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizePrivateuse(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { boolean isCompatVectorFromResourcesEnabled(); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getYearLength(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addView(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addDisappearingView(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addDisappearingView(android.view.View,int); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getMonthLength(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { boolean isPrivateuseSubtag(java.lang.String); }
-keepclassmembers class sun.util.calendar.BaseCalendar { void normalizeMonth(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { java.lang.String canonicalizeExtension(java.lang.String); }
-keepclassmembers class android.support.design.widget.AnimationUtils { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUData { void <clinit>(); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getMonthLength(int,int); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void ensureOpen(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addView(android.view.View); }
-keepclassmembers class android.icu.impl.locale.LanguageTag { void <clinit>(); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class sun.util.calendar.BaseCalendar { long getDayOfYear(int,int,int); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class sun.util.calendar.BaseCalendar { long getFixedDate(sun.util.calendar.CalendarDate); }
-keepclassmembers class sun.util.calendar.BaseCalendar { long getDayOfYear(sun.util.calendar.CalendarDate); }
-keepclassmembers class sun.nio.cs.StreamEncoder { sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.lang.String); }
-keepclassmembers class sun.util.calendar.BaseCalendar { long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void attachView(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void flushBuffer(); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class sun.nio.cs.StreamEncoder { sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class android.widget.PopupWindow { boolean tryFitVertical(android.view.WindowManager$LayoutParams,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void write(char[],int,int); }
-keepclassmembers class sun.util.calendar.BaseCalendar { void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long); }
-keepclassmembers class android.os.Trace { void beginSection(java.lang.String); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { boolean positionInDisplayVertical(android.view.WindowManager$LayoutParams,int,int,int,int,int,boolean); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void <init>(); }
-keepclassmembers class android.os.Trace { void endSection(); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void <init>(java.io.OutputStream,java.lang.Object,java.nio.charset.CharsetEncoder); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void <init>(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachViewAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getDayOfWeekFromFixedDate(long); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class sun.nio.cs.StreamEncoder { boolean isOpen(); }
-keepclassmembers class android.widget.PopupWindow { boolean positionInDisplayHorizontal(android.view.WindowManager$LayoutParams,int,int,int,int,int,boolean); }
-keepclassmembers class android.widget.PopupWindow { boolean tryFitHorizontal(android.view.WindowManager$LayoutParams,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getGregorianYearFromFixedDate(long); }
-keepclassmembers class sun.util.calendar.BaseCalendar { int getDayOfWeek(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View findViewByPosition(int); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void writeBytes(); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void flushLeftoverChar(java.nio.CharBuffer,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { void getPropertyValues(android.animation.PropertyValuesHolder$PropertyValues); }
-keepclassmembers class sun.util.calendar.BaseCalendar { boolean isLeapYear(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.io.Bits { boolean getBoolean(byte[],int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class java.io.Bits { char getChar(byte[],int); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class sun.util.calendar.BaseCalendar { void <clinit>(); }
-keepclassmembers class java.io.Bits { short getShort(byte[],int); }
-keepclassmembers class java.io.Bits { int getInt(byte[],int); }
-keepclassmembers class sun.util.calendar.BaseCalendar { boolean isLeapYear(int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$1 { android.icu.text.DecimalFormatSymbols$CacheData createInstance(android.icu.util.ULocale,java.lang.Void); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.Bits { long getLong(byte[],int); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void implWrite(char[],int,int); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$1 { void <init>(); }
-keepclassmembers class java.io.Bits { float getFloat(byte[],int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Class getValueType(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.Rect getTransitionEpicenter(); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$1 { java.lang.Object createInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void implFlushBuffer(); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getChildCount(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getBottomDecorationHeight(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getBaseline(); }
-keepclassmembers class java.io.Bits { double getDouble(byte[],int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionBlock { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void dismissImmediate(android.view.View,android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionBlock { void <init>(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View getChildAt(int); }
-keepclassmembers class java.io.Bits { void putBoolean(byte[],int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { double computeBulgeScale(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionBlock { void getDiagonal(double[],double[]); }
-keepclassmembers class java.io.Bits { void putShort(byte[],int,short); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void <init>(); }
-keepclassmembers class java.io.Bits { void putChar(byte[],int,char); }
-keepclassmembers class java.io.Bits { void putLong(byte[],int,long); }
-keepclassmembers class sun.nio.cs.StreamEncoder { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionBlock { org.ejml.data.Matrix64F getQ(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class java.io.Bits { void putInt(byte[],int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.hessenberg.TridiagonalDecompositionBlock { org.ejml.data.DenseMatrix64F getQ(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class java.io.Bits { void putFloat(byte[],int,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class java.io.Bits { void putDouble(byte[],int,double); }
-keepclassmembers class org.javia.arity.Lexer { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedMeasuredHeight(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedMeasuredWidth(android.view.View); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedBottom(android.view.View); }
-keepclassmembers class android.os.ParcelableParcel$1 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedRight(android.view.View); }
-keepclassmembers class com.android.internal.widget.ScrollBarUtils { int getThumbOffset(int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedLeft(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void performDynamicStep(); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedTop(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup$2 { void <init>(com.android.internal.view.menu.StandardMenuPopup); }
-keepclassmembers class com.android.internal.widget.ScrollBarUtils { int getThumbLength(int,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup$2 { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void performScriptedStep(); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View getFocusedChild(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getHeightMode(); }
-keepclassmembers class org.javia.arity.Lexer { void <init>(org.javia.arity.SyntaxException); }
-keepclassmembers class com.android.internal.view.menu.StandardMenuPopup$2 { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.javia.arity.Lexer { org.javia.arity.Token nextToken(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getLayoutDirection(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getHeight(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void rotatorPushRight(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getMinimumWidth(); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getMinimumHeight(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingLeft(); }
-keepclassmembers class org.javia.arity.Lexer { void init(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void attachToAnchor(android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { boolean access$002(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingBottom(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void pushRight(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingTop(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getLeftDecorationWidth(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { void detachFromAnchor(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getRightDecorationWidth(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingRight(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void rotatorPushRight2(int,int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { boolean access$1400(android.widget.PopupWindow); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPosition(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { int[] access$1500(); }
-keepclassmembers class android.animation.AnimationHandler$MyFrameCallbackProvider { void <init>(android.animation.AnimationHandler); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean _process(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getTopDecorationHeight(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class android.animation.AnimationHandler$MyFrameCallbackProvider { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$1 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator,com.xlythe.calculator.material.view.CalculatorEditText); }
-keepclassmembers class android.animation.AnimationHandler$MyFrameCallbackProvider { long getFrameDelay(); }
-keepclassmembers class android.widget.PopupWindow { void access$800(android.widget.PopupWindow,android.view.View,android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect); }
-keepclassmembers class java.util.Hashtable$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Hashtable$KeySet { int size(); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture { void <init>(); }
-keepclassmembers class sun.security.x509.URIName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class java.util.Hashtable$KeySet { void <init>(java.util.Hashtable); }
-keepclassmembers class org.javia.arity.Lexer { void scan(java.lang.String,org.javia.arity.TokenConsumer); }
-keepclassmembers class java.util.Hashtable$KeySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.icu.util.Currency$CurrencyUsage { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Hashtable$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class sun.security.x509.URIName { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture { boolean set(java.lang.Object); }
-keepclassmembers class android.animation.AnimationHandler$MyFrameCallbackProvider { void <init>(android.animation.AnimationHandler,android.animation.AnimationHandler$1); }
-keepclassmembers class android.icu.util.Currency$CurrencyUsage { void <clinit>(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator$5 { void <init>(); }
-keepclassmembers class sun.security.x509.URIName { sun.security.x509.URIName nameConstraint(sun.security.util.DerValue); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture { java.lang.Object get(); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean checkForAndHandleZeros(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$EntryFuture { void <init>(java.io.ObjectStreamClass$1); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$1 { boolean onLongClick(android.view.View); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset$1 { void <init>(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class java.nio.charset.Charset$1 { boolean getNext(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getWidthMode(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getWidth(); }
-keepclassmembers class sun.security.x509.URIName { void <init>(java.net.URI,java.lang.String,sun.security.x509.DNSName); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void computeRotator(double,double); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean hasFlexibleChildInBothOrientations(); }
-keepclassmembers class java.nio.charset.Charset$1 { boolean hasNext(); }
-keepclassmembers class sun.security.x509.URIName { java.lang.String toString(); }
-keepclassmembers class java.nio.charset.Charset$1 { java.lang.Object next(); }
-keepclassmembers class sun.security.x509.URIName { int getType(); }
-keepclassmembers class java.text.ChoiceFormat { void applyPattern(java.lang.String); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class sun.security.x509.URIName { java.lang.Object getHostObject(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class sun.security.x509.URIName { int hashCode(); }
-keepclassmembers class sun.security.x509.URIName { java.lang.String getHost(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isSmoothScrolling(); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String); }
-keepclassmembers class java.nio.charset.Charset$1 { java.nio.charset.spi.CharsetProvider next(); }
-keepclassmembers class sun.security.x509.URIName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void eigenBB_2x2(int); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void exceptionShift(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void layoutDecoratedWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void createBulge(int,double,double,boolean); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$9 { void run(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.util.List); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class android.widget.ArrayAdapter { void add(java.lang.Object); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$9 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { int getNumberOfSingularValues(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { double getSingularValue(int); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { double[] getSingularValues(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class java.net.URL { boolean isValidProtocol(java.lang.String); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo$SpacingPattern { void <init>(java.lang.String,int); }
-keepclassmembers class android.icu.text.LowercaseTransliterator { void register(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.icu.text.LowercaseTransliterator { void <init>(android.icu.util.ULocale); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void measureChildWithMargins(android.view.View,int,int); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo$SpacingPattern { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void incrementSteps(); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void initParam(int,int); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class android.icu.text.FunctionReplacer { void <init>(android.icu.text.Transliterator,android.icu.text.UnicodeReplacer); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class android.widget.ArrayAdapter { void clear(); }
-keepclassmembers class sun.security.x509.CertificateSerialNumber { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.CurrencyData$CurrencySpacingInfo$SpacingPattern { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class java.text.ChoiceFormat { void <init>(java.lang.String); }
-keepclassmembers class android.icu.text.LowercaseTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class sun.security.x509.CertificateSerialNumber { void encode(java.io.OutputStream); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean beginBatchEdit(); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Font readFont(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean isDiagonalZero(int); }
-keepclassmembers class android.icu.text.FunctionReplacer { java.lang.String toReplacerPattern(boolean); }
-keepclassmembers class android.widget.ArrayAdapter { void notifyDataSetChanged(); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Throwable$PrintStreamOrWriter); }
-keepclassmembers class java.net.URL { void checkSpecifyHandler(java.lang.SecurityManager); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean endBatchEdit(); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.zip.ZStreamRef { void <init>(long); }
-keepclassmembers class sun.security.x509.CertificateSerialNumber { sun.security.x509.SerialNumber get(java.lang.String); }
-keepclassmembers class java.text.ChoiceFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void moveView(int,int); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class java.util.zip.ZStreamRef { long address(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void closeConnection(); }
-keepclassmembers class java.util.zip.ZStreamRef { void clear(); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean isOffZero(int); }
-keepclassmembers class java.text.ChoiceFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean clearMetaKeyStates(int); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Axis readAxis(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(android.view.LayoutInflater,int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void offsetChildrenHorizontal(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void offsetChildrenVertical(int); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean commitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class java.lang.Throwable { void printEnclosedStackTrace(java.lang.Throwable$PrintStreamOrWriter,java.lang.StackTraceElement[],java.lang.String,java.lang.String,java.util.Set); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean nextSplit(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean commitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean performEditorAction(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onAttachedToWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.icu.text.FunctionReplacer { int replace(android.icu.text.Replaceable,int,int,int[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean performContextMenuAction(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void performImplicitSingleStep(double,double,boolean); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class java.net.URL { int getDefaultPort(); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean performPrivateCommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.FontListParser { void <clinit>(); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean commitText(java.lang.CharSequence,int); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection$FtpInputStream { void <init>(sun.net.www.protocol.ftp.FtpURLConnection,sun.net.ftp.FtpClient,java.io.InputStream); }
-keepclassmembers class java.text.ChoiceFormat { double nextDouble(double); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection$FtpInputStream { void close(); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { int getMeasuredHeightWithMargins(android.view.View); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { boolean requestCursorUpdates(int); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean isCollapsed(android.view.View); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.icu.text.PluralRules$Operand { android.icu.text.PluralRules$Operand[] values(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class android.icu.text.PluralRules$Operand { android.icu.text.PluralRules$Operand valueOf(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void drawableStateChanged(); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class sun.security.x509.CertificateSerialNumber { void <init>(sun.security.util.DerValue); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class java.text.ChoiceFormat { double nextDouble(double,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { boolean process(); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class java.lang.Throwable { void setStackTrace(java.lang.StackTraceElement[]); }
-keepclassmembers class java.text.ChoiceFormat { double[] doubleArraySize(double[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.View getTabContainer(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void removeBulgeLeft(int,boolean); }
-keepclassmembers class java.text.ChoiceFormat { java.lang.String[] doubleArraySize(java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class java.net.URL { java.net.URLStreamHandler getURLStreamHandler(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onFinishInflate(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable[] getSuppressed(); }
-keepclassmembers class android.icu.text.PluralRules$Operand { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean shouldAllowTextWithIcon(); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class sun.net.DefaultProgressMeteringPolicy { void <init>(); }
-keepclassmembers class sun.net.DefaultProgressMeteringPolicy { boolean shouldMeterInput(java.net.URL,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View onInterceptFocusSearch(android.view.View,int); }
-keepclassmembers class sun.net.DefaultProgressMeteringPolicy { int getProgressUpdateThreshold(); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$PrivateUseKeyValueTypeHandler { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void updateTextButtonVisibility(); }
-keepclassmembers class android.icu.text.PluralRules$Operand { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onItemsChanged(android.support.v7.widget.RecyclerView); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toMillis(long); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$PrivateUseKeyValueTypeHandler { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$PrivateUseKeyValueTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalSamples { void <init>(android.icu.text.PluralRules$SampleType,java.util.Set,boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean hasText(); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { void <init>(); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { sun.net.www.protocol.jar.JarFileFactory getInstance(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { boolean isClipPath(); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalSamples { android.icu.text.PluralRules$FixedDecimalSamples parse(java.lang.String); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { java.net.URLConnection getConnection(java.util.jar.JarFile); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onLayoutCompleted(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void resetSteps(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerAfter(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Void checkCreateClassLoader(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerBefore(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { double selectWilkinsonShift(double); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onClick(android.view.View); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { java.util.jar.JarFile get(java.net.URL,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.Void,java.lang.ClassLoader); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onLongClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onScrollStateChanged(int); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { void close(java.util.jar.JarFile); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onMeasure(int,int); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { java.util.jar.JarFile getCachedJarFile(java.net.URL); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { java.security.Permission getPermission(java.util.jar.JarFile); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalSamples { void checkDecimal(android.icu.text.PluralRules$SampleType,android.icu.text.PluralRules$FixedDecimal); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.net.www.protocol.jar.JarFileFactory { void <clinit>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findBootstrapClassOrNull(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void setFastValues(boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void setMatrix(int,int,double[],double[]); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.icu.text.PluralRules$FixedDecimalSamples { java.lang.String toString(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$7 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$7 { void <init>(); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getSystemResource(java.lang.String); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <clinit>(); }
-keepclassmembers class android.content.pm.InstrumentationInfo { void <init>(android.os.Parcel,android.content.pm.InstrumentationInfo$1); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getBootstrapResource(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getSystemResources(java.lang.String); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getOurStackTrace(); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getBootstrapResources(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void setSubmatrix(int,int); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void setUt(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void setVt(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.ForwardingListener$DisallowIntercept { void <init>(android.widget.ForwardingListener); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getParent(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPadding(int,int,int,int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void updateRotator(org.ejml.data.DenseMatrix64F,int,int,double,double); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { boolean onCreateActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { void <init>(com.android.internal.policy.DecorView,android.view.ActionMode$Callback); }
-keepclassmembers class android.text.Emoji { boolean isRegionalIndicatorSymbol(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.text.Emoji { boolean isEmojiModifierBase(int); }
-keepclassmembers class android.text.Emoji { boolean isEmojiModifier(int); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class android.widget.ForwardingListener$DisallowIntercept { void <init>(android.widget.ForwardingListener,android.widget.ForwardingListener$1); }
-keepclassmembers class android.text.Emoji { boolean isEmoji(int); }
-keepclassmembers class android.text.Emoji { boolean isKeycapBase(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class android.text.Emoji { void <clinit>(); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { void onDestroyActionMode(android.view.ActionMode); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void setVisibility(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SubdivisionKeyValueTypeHandler { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeViewAt(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { android.content.pm.ActivityInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SubdivisionKeyValueTypeHandler { void <init>(android.icu.impl.locale.KeyTypeData$1); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { android.content.pm.ActivityInfo[] newArray(int); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$DisplayAnimator$1 { void <init>(com.xlythe.calculator.material.view.CalculatorPadView$DisplayAnimator,com.xlythe.calculator.material.view.CalculatorPadView); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class android.icu.impl.UCharacterProperty$9 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class com.xlythe.calculator.material.view.CalculatorPadView$DisplayAnimator$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.icu.impl.UCharacterProperty$9 { boolean contains(int); }
-keepclassmembers class android.icu.text.Normalizer$ModeImpl { void <init>(android.icu.text.Normalizer2); }
-keepclassmembers class android.icu.text.Normalizer$ModeImpl { android.icu.text.Normalizer2 access$300(android.icu.text.Normalizer$ModeImpl); }
-keepclassmembers class android.icu.text.Normalizer$ModeImpl { void <init>(android.icu.text.Normalizer2,android.icu.text.Normalizer$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void requestLayout(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setAutoMeasureEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$SubdivisionKeyValueTypeHandler { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasureSpecs(int,int); }
-keepclassmembers class com.android.internal.policy.DecorView$ActionModeCallback2Wrapper { void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect); }
-keepclassmembers class java.security.cert.X509CRL { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimension(android.graphics.Rect,int,int); }
-keepclassmembers class android.icu.impl.UBiDiProps { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixVectorMult { void mult(org.ejml.data.RowD1Matrix64F,org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.icu.impl.UBiDiProps { void readData(java.nio.ByteBuffer); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimension(int,int); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimensionFromChildren(int,int); }
-keepclassmembers class java.util.WeakHashMap$Values { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class sun.security.x509.CertificateValidity { java.util.Date getNotBefore(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class sun.security.x509.CertificateValidity { java.util.Date getNotAfter(); }
-keepclassmembers class java.util.WeakHashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.util.WeakHashMap$Values { int size(); }
-keepclassmembers class sun.security.x509.CertificateValidity { void construct(sun.security.util.DerValue); }
-keepclassmembers class java.util.WeakHashMap$Values { boolean contains(java.lang.Object); }
-keepclassmembers class android.icu.impl.UBiDiProps { void addPropertyStarts(android.icu.text.UnicodeSet); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { int getColor(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class java.util.WeakHashMap$Values { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.transition.TransitionInflater { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionInflater from(android.content.Context); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class sun.security.x509.CertificateValidity { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition inflateTransition(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getClass(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getMaxValue(int); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class android.graphics.Color { float luminance(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { boolean isMirrored(int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup); }
-keepclassmembers class sun.security.x509.CertificateValidity { java.lang.String toString(); }
-keepclassmembers class sun.security.x509.CertificateValidity { void encode(java.io.OutputStream); }
-keepclassmembers class android.graphics.Color { int parseColor(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void stopSmoothScroller(); }
-keepclassmembers class android.icu.impl.UBiDiProps { boolean isJoinControl(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getJoiningType(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getJoiningGroup(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getPairedBracketType(int); }
-keepclassmembers class sun.security.x509.CertificateValidity { java.util.Date get(java.lang.String); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getClassFromProps(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { int getMirrorCodePoint(int); }
-keepclassmembers class android.icu.impl.UBiDiProps { boolean getFlagFromProps(int,int); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class android.icu.impl.UBiDiProps { boolean isBidiControl(int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.icu.impl.UBiDiProps { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { boolean isAutoMirrored(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void setAutoMirrored(boolean); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixVectorMult { void multTransA_reorder(org.ejml.data.RowD1Matrix64F,org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier$SunProviderHolder { void <clinit>(); }
-keepclassmembers class sun.security.util.ManifestEntryVerifier$SunProviderHolder { java.security.Provider access$000(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { long getFrameTime(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int combineMeasuredStates(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredState(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.mult.MatrixVectorMult { void multTransA_small(org.ejml.data.RowD1Matrix64F,org.ejml.data.D1Matrix64F,org.ejml.data.D1Matrix64F); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class com.xlythe.calculator.material.view.NumberEditText { android.text.Editable$Factory getEditableFactory(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class javax.crypto.Cipher$SpiAndProviderUpdater { void <init>(javax.crypto.Cipher,java.security.Provider,javax.crypto.CipherSpi); }
-keepclassmembers class javax.crypto.Cipher$SpiAndProviderUpdater { void setCipherSpiImplAndProvider(javax.crypto.CipherSpi,java.security.Provider); }
-keepclassmembers class javax.crypto.Cipher$SpiAndProviderUpdater { javax.crypto.Cipher$CipherSpiAndProvider updateAndGetSpiAndProvider(javax.crypto.Cipher$InitParams,javax.crypto.CipherSpi,java.security.Provider); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$5 { void <init>(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$5 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void tickleInvalidationFlag(android.view.View); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$500(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class android.view.KeyboardShortcutGroup { void <init>(java.lang.CharSequence,java.util.List); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.view.KeyboardShortcutGroup { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.transition.TransitionInflater { java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class android.view.KeyboardShortcutGroup { void addItem(android.view.KeyboardShortcutInfo); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable$1 { void <init>(com.xlythe.calculator.material.drawable.AnimatingDrawable); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLayoutDirectionChanged(int); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$RuntimeAction { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { void <init>(boolean); }
-keepclassmembers class android.view.KeyboardShortcutGroup { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews$RuntimeAction { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { android.icu.impl.CurrencyData$CurrencyDisplayInfo getWithFallback(boolean); }
-keepclassmembers class sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer { void <init>(double,float); }
-keepclassmembers class sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer { double doubleValue(); }
-keepclassmembers class android.view.KeyboardShortcutGroup { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { java.lang.String getName(java.lang.String); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { java.lang.String getPluralName(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearColorFilter(); }
-keepclassmembers class sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer { float floatValue(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { java.lang.String getSymbol(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { java.util.Map getUnitPatterns(); }
-keepclassmembers class java.net.NetPermission { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { android.icu.impl.CurrencyData$CurrencyFormatInfo getFormatInfo(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { android.icu.impl.CurrencyData$CurrencySpacingInfo getSpacingInfo(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class android.icu.impl.CurrencyData$DefaultInfo { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class sun.security.pkcs.SignerInfo { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class sun.security.pkcs.SignerInfo { void <init>(sun.security.util.DerInputStream,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class java.util.jar.JarVerifier$3 { void <init>(java.util.jar.JarVerifier); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isAutoMirrored(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { void <init>(org.ejml.alg.dense.decomposition.hessenberg.TridiagonalSimilarDecomposition,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { void <init>(android.icu.impl.Normalizer2Impl); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onStateChange(int[]); }
-keepclassmembers class sun.security.pkcs.SignerInfo { java.security.cert.X509Certificate getCertificate(sun.security.pkcs.PKCS7); }
-keepclassmembers class android.transition.TransitionInflater { void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class sun.security.pkcs.SignerInfo { void derEncode(java.io.OutputStream); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { boolean computeEigenValues(); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class sun.security.pkcs.SignerInfo { java.util.ArrayList getCertificateChain(sun.security.pkcs.PKCS7); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { void normalizeAndAppend(java.lang.CharSequence,boolean,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class javax.crypto.Cipher$NeedToSet { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class javax.crypto.Cipher$NeedToSet { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath$1 { android.util.PathParser$PathData get(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { int spanQuickCheckYes(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { boolean extractSeparate(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { int getQuickCheck(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { void normalize(java.lang.CharSequence,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { boolean hasBoundaryBefore(int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.Drawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class org.ejml.alg.dense.decomposition.svd.implicitqr.SvdImplicitQrAlgorithm { void removeBulgeRight(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath$1 { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { boolean hasBoundaryAfter(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class sun.security.pkcs.SignerInfo { sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,java.io.InputStream); }
-keepclassmembers class android.icu.impl.Norm2AllModes$DecomposeNormalizer2 { boolean isInert(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath$1 { void set(android.graphics.drawable.VectorDrawable$VPath,android.util.PathParser$PathData); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class sun.security.pkcs.SignerInfo { sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[]); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { boolean extractTogether(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCacheKey { int hashCode(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void <init>(android.os.Looper,android.view.inputmethod.InputConnection); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int,int,int); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class android.app.Activity$HostCallbacks { void <init>(android.app.Activity); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionManager createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup); }
-keepclassmembers class java.util.Collections$EmptyMap { int size(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { android.view.inputmethod.InputConnection getInputConnection(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { boolean isFinished(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Collection values(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set keySet(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { java.lang.String getInputMethodId(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class android.transition.TransitionInflater { void loadTransition(android.util.AttributeSet,android.view.ViewGroup,android.transition.TransitionManager); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void setInputMethodId(java.lang.String); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { org.ejml.data.DenseMatrix64F getEigenVector(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { org.ejml.data.Complex64F getEigenvalue(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setSurfaceInsets(android.view.View,boolean,boolean); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.support.v7.widget.ActionMenuView$LayoutParams); }
-keepclassmembers class java.util.logging.LogManager$2 { void <init>(java.util.logging.LogManager,java.util.logging.LogManager); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.transition.TransitionInflater { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SymmetricQRAlgorithmDecomposition { org.ejml.data.Matrix64F getEigenVector(int); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager$2 { java.lang.Object run(); }
-keepclassmembers class sun.security.pkcs.SignerInfo { sun.security.x509.AlgorithmId getDigestAlgorithmId(); }
-keepclassmembers class android.icu.util.MeasureUnit$1 { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$2 { void <init>(com.xlythe.view.floating.FloatingView); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context); }
-keepclassmembers class android.icu.util.MeasureUnit$1 { android.icu.util.MeasureUnit create(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.pkcs.SignerInfo { sun.security.x509.AlgorithmId getDigestEncryptionAlgorithmId(); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12 { void onMeasure(int,int); }
-keepclassmembers class android.icu.util.ICUException { void <init>(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager$2 { void <clinit>(); }
-keepclassmembers class android.icu.util.ICUException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class android.icu.impl.ICUData$3 { void <init>(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12 { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.impl.ICUData$3 { java.io.InputStream run(); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.pkcs.SignerInfo { java.security.Timestamp getTimestamp(); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class java.security.SecurityPermission { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.ICUData$3 { java.lang.Object run(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <init>(int,java.lang.CharSequence); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { int getId(); }
-keepclassmembers class sun.security.pkcs.SignerInfo { void verifyTimestamp(sun.security.timestamp.TimestampToken); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { java.lang.CharSequence getLabel(); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { boolean equals(java.lang.Object); }
-keepclassmembers class sun.security.pkcs.SignerInfo { java.lang.String toString(); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$ReaderCacheKey { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class sun.security.pkcs.ContentInfo { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.icu.text.Normalizer$QuickCheckResult { void <init>(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { android.util.ArraySet access$000(); }
-keepclassmembers class android.icu.text.Normalizer$QuickCheckResult { void <init>(int,android.icu.text.Normalizer$1); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { java.lang.String toString(); }
-keepclassmembers class sun.security.pkcs.ContentInfo { void <init>(sun.security.util.DerInputStream,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.PropertyValuesHolder[] loadValues(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class sun.security.pkcs.ContentInfo { sun.security.util.DerValue getContent(); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void finishComposingText(); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class sun.security.pkcs.ContentInfo { byte[] getData(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class android.icu.impl.StringRange { java.util.Collection expand(java.lang.String,java.lang.String,boolean,java.util.Collection); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean isEmpty(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class sun.security.pkcs.ContentInfo { byte[] getContentBytes(); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void closeConnection(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.icu.impl.StringRange { void add(int,int,int[],int[],java.lang.StringBuilder,java.util.Collection); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { int hashCode(); }
-keepclassmembers class android.util.Log { int logger_entry_max_payload_native(); }
-keepclassmembers class android.util.Log { int printlns(int,int,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.AnimatorInflater { int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void dispatchMessage(android.os.Message); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class sun.security.pkcs.ContentInfo { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class java.lang.Float { int hashCode(float); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { void executeMessage(android.os.Message); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class android.graphics.drawable.Drawable { float scaleFromDensity(float,int,int); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class android.icu.impl.StringRange { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { int scaleFromDensity(int,int,int,boolean); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class android.animation.AnimatorInflater { int inferValueTypeFromValues(android.content.res.TypedArray,int,int); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class android.icu.util.ULocale$Type { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class java.nio.Bits { char makeChar(byte,byte); }
-keepclassmembers class android.icu.util.ULocale$Type { void <init>(android.icu.util.ULocale$1); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveDensity(android.content.res.Resources,int); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class java.nio.Bits { char getCharL(java.nio.ByteBuffer,int); }
-keepclassmembers class android.util.Log { int access$000(); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder after(android.animation.Animator); }
-keepclassmembers class java.nio.Bits { char getCharB(java.nio.ByteBuffer,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class sun.security.x509.CertificateAlgorithmId { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class android.graphics.drawable.Drawable { void rethrowAsRuntimeException(java.lang.Exception); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class sun.security.x509.CertificateAlgorithmId { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar { void <init>(char); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar { char value(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar { int hashCode(); }
-keepclassmembers class sun.security.x509.CertificateAlgorithmId { void encode(java.io.OutputStream); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class sun.security.x509.CertificateAlgorithmId { sun.security.x509.AlgorithmId get(java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.PropertyValuesHolder loadPvh(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { int caseIgnoreCompare(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { char toUpper(char); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { char toLower(char); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { java.lang.String toLowerString(java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { java.lang.String toUpperString(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { java.lang.String toTitleString(java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class android.view.WindowId$1 { void <init>(); }
-keepclassmembers class android.os.ParcelableParcel { android.os.Parcel getParcel(); }
-keepclassmembers class android.os.ParcelableParcel { void <init>(java.lang.ClassLoader); }
-keepclassmembers class java.nio.Bits { int makeInt(byte,byte,byte,byte); }
-keepclassmembers class java.nio.Bits { int getIntL(java.nio.ByteBuffer,int); }
-keepclassmembers class java.nio.Bits { int getIntB(java.nio.ByteBuffer,int); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isAlpha(char); }
-keepclassmembers class android.os.ParcelableParcel { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isNumeric(char); }
-keepclassmembers class android.os.ParcelableParcel { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isAlphaString(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isNumericString(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void backspace(); }
-keepclassmembers class java.nio.Bits { int getInt(java.nio.ByteBuffer,int,boolean); }
-keepclassmembers class java.util.ArrayDeque { boolean add(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isAlphaNumericString(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean isAlphaNumeric(char); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class sun.security.jca.GetInstance { java.security.Provider$Service getService(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void clear(); }
-keepclassmembers class sun.security.jca.GetInstance { java.security.Provider$Service getService(java.lang.String,java.lang.String,java.security.Provider); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Keyframe loadKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int); }
-keepclassmembers class android.animation.AnimatorInflater { void distributeKeyframes(android.animation.Keyframe[],float,int,int); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class java.util.TimeZone { int getOffsets(long,int[]); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class sun.security.jca.GetInstance { java.util.List getServices(java.util.List); }
-keepclassmembers class sun.security.jca.GetInstance { sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int[] access$000(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState); }
-keepclassmembers class sun.security.jca.GetInstance { java.util.List getServices(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.nio.Bits { char getChar(java.nio.ByteBuffer,int,boolean); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int[] access$002(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,int[]); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceText(int); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class android.icu.impl.SoftCache { java.lang.Object getInstance(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$RotationWatcher { void <init>(); }
-keepclassmembers class android.icu.impl.SoftCache { void <init>(); }
-keepclassmembers class sun.security.jca.GetInstance { sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { java.lang.String getCleanText(); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { int getSelectionStart(); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { com.xlythe.math.Solver getSolver(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$RotationWatcher { void addWindow(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void insert(java.lang.String); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class android.content.ClipData { android.content.ClipDescription getDescription(); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class sun.security.jca.GetInstance { sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.security.Provider); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$RotationWatcher { void removeWindow(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(boolean); }
-keepclassmembers class java.util.ArrayDeque { void <clinit>(); }
-keepclassmembers class sun.security.jca.GetInstance { sun.security.jca.GetInstance$Instance getInstance(java.security.Provider$Service,java.lang.Class); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence[] getResourceTextArray(int); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String[] getResourceStringArray(int); }
-keepclassmembers class sun.security.jca.GetInstance { void checkSuperClass(java.security.Provider$Service,java.lang.Class,java.lang.Class); }
-keepclassmembers class android.icu.text.UnicodeSet$NumericValueFilter { void <init>(double); }
-keepclassmembers class android.icu.text.UnicodeSet$NumericValueFilter { boolean contains(int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class com.android.internal.view.IInputConnectionWrapper { android.os.Message obtainMessage(int); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class java.nio.Bits { float getFloatL(java.nio.ByteBuffer,int); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class android.content.res.AssetManager { boolean getThemeValue(long,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { boolean isColorType(int); }
-keepclassmembers class android.widget.Editor$HandleView { float getIdealVerticalOffset(); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$2 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class java.nio.Bits { float getFloat(java.nio.ByteBuffer,int,boolean); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.StringBlock[] ensureStringBlocks(); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void <init>(android.content.Context,int); }
-keepclassmembers class java.nio.Bits { float getFloatB(java.nio.ByteBuffer,int); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class android.icu.text.UnescapeTransliterator$2 { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.content.ClipData { void toShortStringShortItems(java.lang.StringBuilder,boolean); }
-keepclassmembers class android.icu.impl.LocaleUtility { java.util.Locale getLocaleFromName(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.icu.text.RemoveTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.RemoveTransliterator$1 { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void <init>(int,int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$3 { void <init>(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.widget.Editor$HandleView { void invalidate(); }
-keepclassmembers class com.android.internal.view.menu.MenuDialogHelper { void <init>(com.android.internal.view.menu.MenuBuilder); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuDialogHelper { void show(android.os.IBinder); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getPooledStringForCookie(int,int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$3 { java.lang.Object run(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class android.icu.impl.LocaleUtility { boolean isFallbackOf(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$3 { java.net.InetAddress run(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isVisible(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void setCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class java.nio.Bits { java.nio.ByteOrder byteOrder(); }
-keepclassmembers class com.android.internal.view.menu.MenuDialogHelper { void dismiss(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isAtRtlRun(android.text.Layout,int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void setItemIndexOffset(int); }
-keepclassmembers class android.widget.Editor$HandleView { float getHorizontal(android.text.Layout,int); }
-keepclassmembers class android.icu.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.locale.AsciiUtil { boolean caseIgnoreMatch(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefaultRef(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { int getOffsetAtCoordinate(android.text.Layout,int,float); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getEras(); }
-keepclassmembers class android.content.res.AssetManager { java.io.InputStream openNonAsset(int,java.lang.String,int); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getNarrowEras(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getEraNames(); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class android.icu.text.NumberFormat { android.icu.text.NumberFormat getInstance(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$1 { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { void setId(int); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void updatePosition(int,int,boolean,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorHorizontalPosition(android.text.Layout,int); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getMonths(int,int); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class com.android.internal.view.menu.ListMenuPresenter { int access$000(com.android.internal.view.menu.ListMenuPresenter); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class java.nio.Bits { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object firstKey(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class java.util.Collections$SynchronizedMap { int size(); }
-keepclassmembers class com.android.internal.view.menu.MenuDialogHelper { void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.View$DeclaredOnClickListener { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class java.util.TreeMap { java.util.Comparator comparator(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.InputStream { void mark(int); }
-keepclassmembers class android.view.View$DeclaredOnClickListener { void onClick(android.view.View); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry getEntry(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry getEntryUsingComparator(java.lang.Object); }
-keepclassmembers class java.io.InputStream { void reset(); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class java.io.InputStream { boolean markSupported(); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow$2 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void setSelection(int); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void setSolver(com.xlythe.math.Solver); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class android.view.View$DeclaredOnClickListener { void resolveMethod(android.content.Context,java.lang.String); }
-keepclassmembers class android.icu.text.NumberFormat { android.icu.text.NumberFormat$NumberFormatShim getShim(); }
-keepclassmembers class com.xlythe.calculator.material.view.FormattedNumberEditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class android.content.res.AssetManager { long createTheme(); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.util.Set keySet(); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getWeekdays(int,int); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.util.Set entrySet(); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(android.transition.Slide$1); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.security.x509.KeyUsageExtension { void encodeThis(); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.util.Collection values(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.String toString(); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String[] getNonSystemLocales(); }
-keepclassmembers class android.icu.text.NumberFormat { boolean isGroupingUsed(); }
-keepclassmembers class android.icu.text.NumberFormat { java.lang.Object clone(); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class sun.security.x509.KeyUsageExtension { boolean isSet(int); }
-keepclassmembers class sun.security.x509.KeyUsageExtension { void <init>(boolean[]); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class android.icu.text.NumberFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class android.icu.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.icu.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.content.res.AssetManager { long openNonAssetNative(int,java.lang.String,int); }
-keepclassmembers class android.icu.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String[] getLocales(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { int hashCode(); }
-keepclassmembers class java.util.logging.Logger$LoggerBundle { java.util.logging.Logger$LoggerBundle get(java.lang.String,java.util.ResourceBundle); }
-keepclassmembers class android.icu.text.NumberFormat { int getMaximumFractionDigits(); }
-keepclassmembers class java.util.logging.Logger$LoggerBundle { void <init>(java.lang.String,java.util.ResourceBundle); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] getAmPmStrings(); }
-keepclassmembers class android.content.res.AssetManager { void destroyAsset(long); }
-keepclassmembers class java.util.logging.Logger$LoggerBundle { boolean isSystemBundle(); }
-keepclassmembers class java.util.logging.Logger$LoggerBundle { void <init>(java.lang.String,java.util.ResourceBundle,java.util.logging.Logger$1); }
-keepclassmembers class java.util.TreeMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context); }
-keepclassmembers class java.util.TreeMap { void clear(); }
-keepclassmembers class android.icu.text.NumberFormat { int getMinimumFractionDigits(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void setTimeSeparatorString(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,android.widget.Editor$1); }
-keepclassmembers class android.content.res.AssetManager { long getAssetLength(long); }
-keepclassmembers class android.widget.Editor$HandleView { void onHandleMoved(); }
-keepclassmembers class android.content.res.AssetManager { boolean resolveAttrs(long,int,int,int[],int[],int[],int[]); }
-keepclassmembers class android.icu.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.icu.text.NumberFormat { android.icu.util.Currency getCurrency(); }
-keepclassmembers class android.icu.text.NumberFormat { void setCurrency(android.icu.util.Currency); }
-keepclassmembers class android.icu.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class android.icu.impl.CacheValue$Strength { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { boolean retrieveAttributes(long,int[],int[],int[]); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isDragging(); }
-keepclassmembers class android.content.res.AssetManager { boolean applyStyle(long,int,int,long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class android.transition.Scene { void <init>(android.view.ViewGroup,int,android.content.Context); }
-keepclassmembers class android.content.res.AssetManager { void applyThemeStyle(long,int,boolean); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$4 { void <init>(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class sun.security.x509.KeyUsageExtension { java.lang.Boolean get(java.lang.String); }
-keepclassmembers class android.transition.Scene { android.view.ViewGroup getSceneRoot(); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLu { void <init>(org.ejml.alg.dense.decomposition.lu.LUDecompositionBase); }
-keepclassmembers class android.icu.impl.CacheValue$Strength { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.res.AssetManager { long newTheme(); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class android.content.res.AssetManager { void copyTheme(long,long); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$4 { java.net.Socket run(); }
-keepclassmembers class android.icu.text.NumberFormat { android.icu.text.NumberFormat getInstance(android.icu.util.ULocale,int); }
-keepclassmembers class android.content.res.AssetManager { int loadThemeAttributeValue(long,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.transition.Scene { void enter(); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLu { void solve(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$4 { java.lang.Object run(); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String[] getArrayStringResource(int); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper$1 { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class android.content.res.AssetManager { int[] getArrayStringInfo(int); }
-keepclassmembers class java.util.TreeMap { java.util.NavigableSet navigableKeySet(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper$1 { java.lang.String run(); }
-keepclassmembers class java.text.CharacterIteratorFieldDelegate { void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper$1 { java.lang.Object run(); }
-keepclassmembers class android.content.res.AssetManager { long access$100(android.content.res.AssetManager,long); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void access$400(android.content.res.AssetManager,long); }
-keepclassmembers class java.util.TreeMap { java.util.Collection values(); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class org.ejml.alg.dense.linsol.lu.LinearSolverLu { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class android.content.res.AssetManager { void access$500(android.content.res.AssetManager,long); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class java.util.Hashtable { void <init>(int,float); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class android.view.animation.CycleInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { android.view.View inflate(); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class java.text.CharacterIteratorFieldDelegate { void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class java.text.CharacterIteratorFieldDelegate { java.text.AttributedCharacterIterator getIterator(java.lang.String); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.text.BoringLayout { float getLineWidth(int); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void onMeasure(int,int); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator { void handleTransliterate(android.icu.text.Replaceable,android.icu.text.Transliterator$Position,boolean); }
-keepclassmembers class android.text.BoringLayout { int getEllipsisCount(int); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class java.util.Base64$Decoder { void <init>(boolean,boolean); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator { void <init>(java.lang.String,android.icu.text.RuleBasedTransliterator$Data,android.icu.text.UnicodeFilter); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void setVisibility(int); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class java.util.Base64$Decoder { byte[] decode(java.lang.String); }
-keepclassmembers class java.util.Base64$Decoder { byte[] decode(byte[]); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class android.icu.text.NumberFormat { java.lang.String getPattern(android.icu.util.ULocale,int); }
-keepclassmembers class java.text.CharacterIteratorFieldDelegate { void <init>(); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void <init>(java.io.Writer,int); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void <init>(java.io.Writer,int,int); }
-keepclassmembers class java.util.Hashtable { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.DropDownListView$ResolveHoverRunnable { void <init>(android.widget.DropDownListView); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class android.widget.DropDownListView$ResolveHoverRunnable { void cancel(); }
-keepclassmembers class java.util.TreeMap { java.util.Iterator keyIterator(); }
-keepclassmembers class java.util.Hashtable { boolean containsValue(java.lang.Object); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void flush(); }
-keepclassmembers class android.widget.DropDownListView$ResolveHoverRunnable { void post(); }
-keepclassmembers class android.icu.impl.ZoneMeta$CustomTimeZoneCache { void <init>(); }
-keepclassmembers class android.icu.text.NumberFormat { void <init>(); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.icu.text.RuleBasedTransliterator { android.icu.text.Transliterator safeClone(); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void println(); }
-keepclassmembers class android.icu.text.NumberFormat { void <clinit>(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void initializeData(android.icu.text.DateFormatSymbols); }
-keepclassmembers class java.util.TreeMap { boolean valEquals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.impl.ZoneMeta$CustomTimeZoneCache { void <clinit>(); }
-keepclassmembers class java.text.AttributeEntry { void <init>(java.text.AttributedCharacterIterator$Attribute,java.lang.Object); }
-keepclassmembers class android.icu.impl.ZoneMeta$CustomTimeZoneCache { void <init>(android.icu.impl.ZoneMeta$1); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class java.util.TreeMap { java.lang.Object key(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Base64$Decoder { int outLength(byte[],int,int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry getFirstEntry(); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class java.text.AttributeEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry successor(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.text.AttributeEntry { java.text.AttributedCharacterIterator$Attribute getKey(); }
-keepclassmembers class java.text.AttributeEntry { int hashCode(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void initializeData(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.text.AttributeEntry { java.lang.String toString(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class java.text.AttributeEntry { java.lang.Object getKey(); }
-keepclassmembers class android.widget.DropDownListView$ResolveHoverRunnable { void <init>(android.widget.DropDownListView,android.widget.DropDownListView$1); }
-keepclassmembers class java.net.ServerSocket$1 { java.lang.Void run(); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class java.net.ServerSocket$1 { void <init>(java.net.ServerSocket); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass2(); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void write(java.lang.String,int,int); }
-keepclassmembers class java.util.Hashtable { void addEntry(int,java.lang.Object,java.lang.Object,int); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass1(); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry parentOf(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class java.util.TreeMap { void setColor(java.util.TreeMap$TreeMapEntry,boolean); }
-keepclassmembers class java.util.TreeMap { boolean colorOf(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.net.ServerSocket$1 { java.lang.Object run(); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry leftOf(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.Base64$Decoder { int decode0(byte[],int,int,byte[]); }
-keepclassmembers class java.text.AttributeEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void <init>(android.icu.util.ULocale,android.icu.impl.ICUResourceBundle,java.lang.String); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry rightOf(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.Hashtable { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void appendToBuffer(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void ensureCapacity(int); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.TreeMap { void fixAfterInsertion(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class com.nineoldandroids.animation.ValueAnimator$1 { void <init>(); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void initializeData(android.icu.util.ULocale,android.icu.impl.ICUResourceBundle,java.lang.String); }
-keepclassmembers class org.javia.arity.ArityException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void removeFromBuffer(int); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$MLSxParser { void <init>(sun.net.ftp.impl.FtpClient); }
-keepclassmembers class org.javia.arity.ArityException { void <init>(int); }
-keepclassmembers class sun.misc.SharedSecrets { void setJavaIOFileDescriptorAccess(sun.misc.JavaIOFileDescriptorAccess); }
-keepclassmembers class com.android.internal.util.LineBreakBufferedWriter { void writeBuffer(int); }
-keepclassmembers class android.view.View$12 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$12 { void setValue(android.view.View,float); }
-keepclassmembers class java.util.TreeMap { void deleteEntry(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.Hashtable { java.lang.String toString(); }
-keepclassmembers class java.util.TreeMap { void fixAfterDeletion(java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.util.Hashtable { java.util.Iterator getIterator(int); }
-keepclassmembers class android.view.View$12 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration getEnumeration(int); }
-keepclassmembers class java.util.Base64$Decoder { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.support.design.widget.ViewUtils$1 { android.support.design.widget.ValueAnimatorCompat createAnimator(); }
-keepclassmembers class android.view.View$12 { java.lang.Float get(android.view.View); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class java.util.Hashtable { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ViewUtils$1 { void <init>(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class java.util.Hashtable { int hashCode(); }
-keepclassmembers class android.app.FragmentController { android.app.FragmentController createController(android.app.FragmentHostCallback); }
-keepclassmembers class sun.net.ftp.impl.FtpClient$MLSxParser { void <init>(sun.net.ftp.impl.FtpClient,sun.net.ftp.impl.FtpClient$1); }
-keepclassmembers class android.widget.CompoundButton { void onResolveDrawables(int); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.app.FragmentController { void <init>(android.app.FragmentHostCallback); }
-keepclassmembers class java.util.TreeMap { void buildFromSorted(int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$TreeMapEntry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class java.util.Hashtable { java.util.Set keySet(); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class java.util.Hashtable { boolean remove(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.util.TreeMap { void addAllForTreeSet(java.util.SortedSet,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class android.app.FragmentController { void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Properties$LineReader { void <init>(java.util.Properties,java.io.InputStream); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap { int computeRedLevel(int); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class javax.crypto.Cipher$InitType { javax.crypto.Cipher$InitType[] values(); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.Properties$LineReader { void <init>(java.util.Properties,java.io.Reader); }
-keepclassmembers class java.math.BigInteger { void <init>(int,byte[]); }
-keepclassmembers class java.util.Properties$LineReader { int readLine(); }
-keepclassmembers class javax.crypto.Cipher$InitType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.TreeMap { void access$000(java.util.TreeMap,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class javax.crypto.Cipher$InitType { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.TreeMap { int access$100(java.util.TreeMap); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.app.FragmentController { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.app.FragmentController { void dispatchLowMemory(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class android.app.FragmentController { void dispatchCreate(); }
-keepclassmembers class android.app.FragmentController { void dispatchTrimMemory(int); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { boolean isStacked(); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { void <init>(java.util.zip.ZipFile,long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.Hashtable { int access$200(java.util.Hashtable); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void setStacked(boolean); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$400(java.util.Hashtable); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void onMeasure(int,int); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { java.nio.CharBuffer duplicate(); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { int read(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { void <init>(java.nio.ByteBuffer,int,int,int,int,int,java.nio.ByteOrder); }
-keepclassmembers class java.util.Hashtable { java.util.Iterator access$100(java.util.Hashtable,int); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { int hashCode(); }
-keepclassmembers class android.widget.CompoundButton { boolean verifyDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String toString(); }
-keepclassmembers class android.app.FragmentController { void restoreLoaderNonConfig(android.util.ArrayMap); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$4 { void <init>(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { int getMaxActionButtons(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String getName(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { int available(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { int ix(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger subtract(java.math.BigInteger); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean showsOverflowMenuButton(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { char get(int); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { long size(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { java.nio.CharBuffer get(char[],int,int); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { void close(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { int getEmbeddedMenuWidthLimit(); }
-keepclassmembers class java.util.zip.ZipFile$ZipFileInputStream { long skip(long); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { boolean isDirect(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { java.nio.CharBuffer subSequence(int,int); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] duplicate(java.lang.String[]); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { void <clinit>(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { java.lang.String toString(int,int); }
-keepclassmembers class android.icu.text.DateFormatSymbols { java.lang.String[] loadDayPeriodStrings(java.util.Map); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { char get(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class libcore.net.NetworkSecurityPolicy$DefaultNetworkSecurityPolicy { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class java.nio.ByteBufferAsCharBuffer { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.file.FileSystems { java.nio.file.FileSystem getDefault(); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(int); }
-keepclassmembers class sun.security.util.ByteArrayTagOrder { void <init>(); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class libcore.net.NetworkSecurityPolicy$DefaultNetworkSecurityPolicy { boolean isCleartextTrafficPermitted(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class java.lang.Class { java.lang.Object newInstance(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class java.security.AccessControlContext { void <init>(java.security.ProtectionDomain[]); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void setupPivotInfo(); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void <init>(); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.transition.TransitionManager { void setTransition(android.transition.Scene,android.transition.Transition); }
-keepclassmembers class java.io.ObjectStreamClass$5 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature); }
-keepclassmembers class android.transition.TransitionManager { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class android.transition.TransitionManager { void setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class android.transition.TransitionManager { android.transition.Transition getTransition(android.transition.Scene); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void swapColumns(int); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class java.lang.Math { double asin(double); }
-keepclassmembers class java.lang.Math { double atan(double); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void <init>(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class java.lang.Math { double acos(double); }
-keepclassmembers class java.lang.Math { double toDegrees(double); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class java.lang.Math { double cbrt(double); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class android.transition.TransitionManager { void changeScene(android.transition.Scene,android.transition.Transition); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class java.lang.Math { double rint(double); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class java.lang.Class { java.lang.Package getPackage(); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class java.lang.Math { double random(); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean isEmptyElementTag(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.transition.TransitionManager { void transitionTo(android.transition.Scene); }
-keepclassmembers class java.lang.Math { long addExact(long,long); }
-keepclassmembers class android.transition.TransitionManager { void endTransitions(android.view.ViewGroup); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.util.MapCollections$EntrySet { void <init>(android.util.MapCollections); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap access$100(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void setLocale(android.icu.util.ULocale,android.icu.util.ULocale); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$2 { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void updateNorms(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void <init>(); }
-keepclassmembers class android.transition.TransitionManager { java.util.ArrayList access$000(); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void <init>(android.icu.util.ULocale,android.icu.impl.ICUResourceBundle,java.lang.String,android.icu.text.DateFormatSymbols$1); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class android.util.MapCollections$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.util.MapCollections$EntrySet { int size(); }
-keepclassmembers class java.lang.Math { int toIntExact(long); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getEnclosingMethod(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getEnclosingConstructor(); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class java.util.StringTokenizer { void setMaxDelimCodePoint(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getEnclosingMethodNative(); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class java.lang.Math { long floorMod(long,long); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { org.ejml.data.DenseMatrix64F getPivotMatrix(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getEnclosingConstructorNative(); }
-keepclassmembers class java.lang.Class { java.lang.Class getEnclosingClass(); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { int[] getPivots(); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class java.lang.Math { double max(double,double); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { org.ejml.data.DenseMatrix64F getQ(org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.content.res.ComplexColor { void <init>(); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.ComplexColor { boolean isStateful(); }
-keepclassmembers class java.util.StringTokenizer { int skipDelimiters(int); }
-keepclassmembers class android.content.res.ComplexColor { void setBaseChangingConfigurations(int); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class android.content.res.ComplexColor { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class java.util.StringTokenizer { int scanToken(int); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class android.icu.text.DateFormatSymbols { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.String getCanonicalName(); }
-keepclassmembers class java.io.ObjectInputStream$1 { java.lang.Boolean run(); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class java.io.ObjectInputStream$1 { java.lang.Object run(); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumHeight(android.view.View); }
-keepclassmembers class java.lang.Math { double min(double,double); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.inputmethod.InputMethodManager,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream$1 { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumWidth(android.view.View); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { float getElevation(); }
-keepclassmembers class java.lang.Math { double ulp(double); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class java.lang.Class { boolean isLocalOrAnonymousClass(); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.util.StringTokenizer { boolean isDelimiter(int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class java.lang.Math { long floorDiv(long,long); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void onDrawableStateChanged(int[]); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void removeComposingSpans(android.text.Spannable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void setComposingSpans(android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void setComposingSpans(android.text.Spannable,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v4.view.MotionEventCompatHoneycombMr1 { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { boolean householderPivot(int); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { int getRank(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class java.lang.Math { double sinh(double); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { org.ejml.data.Matrix64F getQ(org.ejml.data.Matrix64F,boolean); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class java.lang.Math { double signum(double); }
-keepclassmembers class java.util.StringTokenizer { int countTokens(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class java.lang.Math { double cosh(double); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void jumpDrawableToCurrentState(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class java.lang.Math { double tanh(double); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class java.lang.Math { double copySign(double,double); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getElevation(android.view.View); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionMasked(android.view.MotionEvent); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void closeConnection(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean endBatchEdit(); }
-keepclassmembers class java.lang.Math { float copySign(float,float); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionIndex(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean commitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean clearMetaKeyStates(int); }
-keepclassmembers class java.net.InetSocketAddress { int checkPort(int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.lang.Math { double hypot(double,double); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void setExpectedMaxSize(int,int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean commitText(java.lang.CharSequence,int); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String checkHost(java.lang.String); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean deleteSurroundingText(int,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean beginBatchEdit(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Math { int getExponent(double); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QRColPivDecompositionHouseholderColumn { void setSingularThreshold(double); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void onPaddingUpdated(android.graphics.Rect); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int findIndexBackward(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean commitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getDeclaredClasses(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(int,java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethodsUnchecked(boolean); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructorsInternal(boolean); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int findIndexForward(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { boolean requirePreDrawListener(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getZ(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationZ(android.view.View); }
-keepclassmembers class java.lang.Math { double scalb(double,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class libcore.io.IoTracker { void trackIo(int); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ActionMode$Callback2 { void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ActionMode$Callback2 { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 { void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean deleteSurroundingTextInCodePoints(int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class java.lang.Math { double powerOfTwoD(int); }
-keepclassmembers class libcore.io.IoTracker { void <init>(); }
-keepclassmembers class java.lang.Math { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class java.net.InetSocketAddress { boolean isUnresolved(); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean finishComposingText(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method findInterfaceMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.util.ServiceLoader$1 { void <init>(java.util.ServiceLoader); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class java.util.ServiceLoader$1 { boolean hasNext(); }
-keepclassmembers class java.net.InetSocketAddress { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.String resolveName(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { java.lang.CharSequence getTextBeforeCursor(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int); }
-keepclassmembers class android.content.pm.PackageInfo$1 { void <init>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { java.lang.CharSequence getSelectedText(int); }
-keepclassmembers class android.content.pm.PackageInfo$1 { android.content.pm.PackageInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.ServiceLoader$1 { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class sun.net.ProgressMonitor { sun.net.ProgressMonitor getDefault(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { java.lang.Float get(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void cancelExitingRipples(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { java.lang.CharSequence getTextAfterCursor(int,int); }
-keepclassmembers class android.content.pm.PackageInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void setValue(android.graphics.drawable.RippleBackground,float); }
-keepclassmembers class sun.net.ProgressMonitor { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void setValue(java.lang.Object,float); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class java.lang.Class { int getInnerClassFlags(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class org.ejml.EjmlParameters$MemoryUsage { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean performEditorAction(int); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class org.ejml.EjmlParameters$MemoryUsage { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Class { java.lang.Object[] getEnumConstantsShared(); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean performPrivateCommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.transition.TransitionSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class sun.net.ProgressMonitor { void registerSource(sun.net.ProgressSource); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean requestCursorUpdates(int); }
-keepclassmembers class sun.net.ProgressMonitor { boolean shouldMeterInput(java.net.URL,java.lang.String); }
-keepclassmembers class sun.net.ProgressMonitor { int getProgressUpdateThreshold(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.lang.Class { java.lang.String cannotCastMsg(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean setComposingText(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { android.os.Handler getHandler(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean setComposingRegion(int,int); }
-keepclassmembers class android.view.ViewPropertyAnimator$NameValuesHolder { void <init>(int,float,float); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean performContextMenuAction(int); }
-keepclassmembers class java.util.TimeZone$NoImagePreloadHolder { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class android.view.Choreographer { long getFrameDelay(); }
-keepclassmembers class android.transition.TransitionSet { int getTransitionCount(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isBounded(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class sun.net.ProgressMonitor { void unregisterSource(sun.net.ProgressSource); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean setSelection(int,int); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void sendCurrentText(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setStartDelay(long); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean sendKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void ensureDefaultComposingSpans(); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean reportFullscreenMode(boolean); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(java.util.Locale); }
-keepclassmembers class android.os.PatternMatcher { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class sun.net.ProgressMonitor { void updateProgress(sun.net.ProgressSource); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class java.util.logging.Logger$1 { java.util.ResourceBundle run(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(int); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.VMClassLoader { libcore.io.ClassPathURLStreamHandler[] createBootClassPathUrlHandlers(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationX(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void replaceText(java.lang.CharSequence,int,boolean); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.Class); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class java.util.logging.Logger$1 { java.lang.Object run(); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class sun.net.ProgressMonitor { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String[] getBootClassPathEntries(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class java.lang.VMClassLoader { void <clinit>(); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class sun.security.x509.EDIPartyName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class sun.security.x509.EDIPartyName { int getType(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class sun.security.x509.EDIPartyName { java.lang.String toString(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(boolean); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidPadLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.security.x509.EDIPartyName { int hashCode(); }
-keepclassmembers class sun.security.x509.EDIPartyName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void pruneRipples(); }
-keepclassmembers class android.transition.TransitionSet { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidPadLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidPadLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class com.xlythe.calculator.material.view.SolidPadLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class sun.security.x509.X500Name { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class com.xlythe.calculator.material.view.MatrixComponent { java.lang.String getPattern(); }
-keepclassmembers class sun.security.x509.X500Name { boolean isEmpty(); }
-keepclassmembers class sun.security.x509.X500Name { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.icu.text.UnicodeSet$ComparisonStyle { void <init>(java.lang.String,int); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.icu.text.UnicodeSet$ComparisonStyle { void <clinit>(); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe { com.nineoldandroids.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe { com.nineoldandroids.animation.Keyframe ofFloat(float); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class com.xlythe.calculator.material.BasicCalculator$1 { void <init>(com.xlythe.calculator.material.BasicCalculator); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setSceneRoot(android.view.ViewGroup); }
-keepclassmembers class com.nineoldandroids.animation.Keyframe { android.view.animation.Interpolator getInterpolator(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.transition.TransitionSet { void forceToEnd(android.view.ViewGroup); }
-keepclassmembers class sun.security.x509.X500Name { boolean equals(java.lang.Object); }
-keepclassmembers class sun.security.x509.X500Name { int getType(); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class sun.security.x509.X500Name { int hashCode(); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.transition.TransitionSet { void setCanRemoveViews(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class android.transition.TransitionSet { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateLocalState(); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void gc(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void <init>(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class android.widget.Editor$SuggestionInfo { void <init>(); }
-keepclassmembers class sun.security.x509.X500Name { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor$SuggestionInfo { void setSpanInfo(android.text.style.SuggestionSpan,int,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setSceneRoot(android.view.ViewGroup); }
-keepclassmembers class android.widget.Editor$SuggestionInfo { void <init>(android.widget.Editor$1); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$000(com.xlythe.calculator.material.floating.FloatingCalculator,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { android.support.v4.view.ViewPager access$1100(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$600(com.xlythe.calculator.material.floating.FloatingCalculator,int); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$14 { void <init>(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { android.widget.ViewSwitcher access$200(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$400(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { com.xlythe.calculator.material.view.BackspaceImageButton access$100(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$300(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class sun.misc.CharacterEncoder { void <init>(); }
-keepclassmembers class sun.security.x509.X500Name { java.lang.String getRFC2253CanonicalName(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$900(com.xlythe.calculator.material.floating.FloatingCalculator,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { com.xlythe.calculator.material.CalculatorExpressionEvaluator access$800(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void access$700(com.xlythe.calculator.material.floating.FloatingCalculator,java.lang.String); }
-keepclassmembers class sun.misc.CharacterEncoder { void encodeBufferSuffix(java.io.OutputStream); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { com.xlythe.calculator.material.view.CalculatorEditText access$500(com.xlythe.calculator.material.floating.FloatingCalculator); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { float getElevation(android.view.View); }
-keepclassmembers class sun.misc.CharacterEncoder { void encodeBufferPrefix(java.io.OutputStream); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.Rect getEmptyTempRect(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void copyContent(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onClear(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onDelete(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setStartDelay(long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSource(android.view.View,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { com.xlythe.calculator.material.view.CalculatorEditText getActiveEditText(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class android.icu.impl.CacheValue$NullValue { void <init>(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class java.security.Provider$UString { void <init>(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class sun.misc.CharacterEncoder { int readFully(java.io.InputStream,byte[]); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSource(android.view.View); }
-keepclassmembers class android.icu.impl.CacheValue$NullValue { java.lang.Object get(); }
-keepclassmembers class android.icu.impl.CacheValue$NullValue { boolean isNull(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { float getZ(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onInsert(java.lang.String); }
-keepclassmembers class android.icu.impl.CacheValue$NullValue { java.lang.Object resetIfCleared(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class java.security.Provider$UString { int hashCode(); }
-keepclassmembers class android.icu.impl.CacheValue$NullValue { void <init>(android.icu.impl.CacheValue$1); }
-keepclassmembers class sun.misc.CharacterEncoder { void encode(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class java.security.Provider$UString { boolean equals(java.lang.Object); }
-keepclassmembers class java.security.Provider$UString { java.lang.String toString(); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void setState(com.xlythe.calculator.material.floating.FloatingCalculator$State); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void <init>(android.view.View); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void setText(java.lang.String); }
-keepclassmembers class android.os.PatternMatcher { void <clinit>(); }
-keepclassmembers class sun.misc.CharacterEncoder { java.lang.String encode(byte[]); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.support.v4.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class sun.security.x509.X500Name { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long getChildId(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getChildCount(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { android.view.View inflateButton(android.view.ViewGroup); }
-keepclassmembers class android.graphics.Canvas$NoImagePreloadHolder { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { android.view.View inflateView(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addChildUnchecked(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void requestApplyInsets(android.view.View); }
-keepclassmembers class sun.security.x509.X500Name { void parseDER(sun.security.util.DerInputStream); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addChildInternal(android.view.View,int,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setElevation(android.view.View,float); }
-keepclassmembers class sun.misc.CharacterEncoder { void encodeBuffer(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class sun.misc.Version { void initSystemProperties(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class sun.misc.CharacterEncoder { java.lang.String encodeBuffer(byte[]); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$2 { void <init>(android.view.inputmethod.InputMethodManager,int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { int size(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onHide(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onShow(); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { void onError(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addAction(int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void stopNestedScroll(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addActionUnchecked(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator { boolean saveHistory(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.Utility { boolean sameObjects(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleForeground$3 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleForeground$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleForeground$3 { java.lang.Float get(android.graphics.drawable.RippleForeground); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean removeAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class android.graphics.drawable.RippleForeground$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.provider.Settings$System$6 { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleForeground$3 { void setValue(android.graphics.drawable.RippleForeground,float); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setMaxTextLength(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalAfter(android.view.View,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalBefore(android.view.View,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalBefore(android.view.View); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class sun.misc.Version { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setMovementGranularities(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTraversalAfter(android.view.View); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$TranslateState { void <clinit>(); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.x509.X500Name { sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setParent(android.view.View,int); }
-keepclassmembers class sun.security.x509.X500Name { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class com.xlythe.calculator.material.view.DisplayOverlay$TranslateState { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setParent(android.view.View); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { void <init>(java.util.SortedSet,java.util.SortedMap); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void getBoundsInParent(android.graphics.Rect); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class sun.security.x509.X500Name { boolean isWithinSubtree(sun.security.x509.X500Name); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBoundsInParent(android.graphics.Rect); }
-keepclassmembers class android.icu.impl.UCharacterProperty$6 { boolean contains(int); }
-keepclassmembers class sun.security.x509.X500Name { void generateDN(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$6 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { boolean isSingletonChar(char); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { boolean isAttribute(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isCheckable(); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { boolean isKey(java.lang.String); }
-keepclassmembers class java.net.InetAddressContainer { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setZeroDigit(char); }
-keepclassmembers class android.icu.util.TimeZone { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isChecked(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setCheckable(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.text.DecimalFormatSymbols getInstance(java.util.Locale); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBoundsInScreen(android.graphics.Rect); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setGroupingSeparator(char); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { java.lang.Object getValue(); }
-keepclassmembers class sun.security.x509.X500Name { javax.security.auth.x500.X500Principal asX500Principal(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setFocused(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class java.util.AbstractMap$SimpleImmutableEntry { java.lang.Object getKey(); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isFocusable(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setChecked(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setFocusable(boolean); }
-keepclassmembers class com.xlythe.calculator.material.view.BackspaceImageButton$1 { void <clinit>(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { java.lang.String getID(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setDecimalSeparator(char); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ResetElevationAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setAccessibilityFocused(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isFocused(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ResetElevationAnimation { float getTargetShadowSize(); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { java.lang.String getValue(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setDigit(char); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPerMill(char); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isAccessibilityFocused(); }
-keepclassmembers class sun.security.x509.X500Name { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPercent(char); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { void <init>(); }
-keepclassmembers class android.icu.impl.UResource$Sink { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setVisibleToUser(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setPatternSeparator(char); }
-keepclassmembers class sun.util.locale.UnicodeLocaleExtension { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isClickable(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setNaN(java.lang.String); }
-keepclassmembers class android.icu.text.PluralRules$PluralType { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { com.android.internal.view.InputBindResult createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isEnabled(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLongClickable(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setClickable(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setInfinity(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isLongClickable(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setPassword(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isSelected(); }
-keepclassmembers class com.android.internal.view.InputBindResult$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setMinusSign(char); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setEnabled(boolean); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.text.PluralRules$PluralType { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext$1 { void <init>(java.util.logging.LogManager$LoggerContext,java.util.logging.Logger,java.util.logging.LogManager,java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setCurrencySymbol(java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setInternationalCurrencySymbol(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setScrollable(boolean); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext$1 { java.lang.Void run(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setDrawingOrder(int); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setCurrency(java.util.Currency); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class java.util.logging.LogManager$LoggerContext$1 { java.lang.Object run(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.util.Currency getCurrency(); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setEditable(boolean); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void <init>(boolean); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setMonetaryDecimalSeparator(char); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setContentInvalid(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setContextClickable(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setSelected(boolean); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isContextClickable(); }
-keepclassmembers class java.util.ServiceLoader { void fail(java.lang.Class,java.lang.String); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void <init>(); }
-keepclassmembers class java.util.ServiceLoader { void fail(java.lang.Class,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLiveRegion(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class java.util.ServiceLoader { void fail(java.lang.Class,java.net.URL,int,java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void setExponentSeparator(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { int truncate(java.io.FileDescriptor,long); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setMultiLine(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setImportantForAccessibility(boolean); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Array16 { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.icu.impl.CaseMap { void appendResult(int,java.lang.StringBuilder); }
-keepclassmembers class com.xlythe.math.Constants { void <clinit>(); }
-keepclassmembers class com.android.internal.app.AlertController { com.android.internal.app.AlertController create(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class sun.net.util.IPAddressUtil { byte[] textToNumericFormatV4(java.lang.String); }
-keepclassmembers class android.icu.impl.CaseMap { java.lang.String toUpper(android.icu.util.ULocale,java.lang.String); }
-keepclassmembers class java.util.ServiceLoader { int parseLine(java.lang.Class,java.net.URL,java.io.BufferedReader,int,java.util.List); }
-keepclassmembers class sun.misc.VM { long maxDirectMemory(); }
-keepclassmembers class sun.misc.VM { void booted(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Array16 { void <init>(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class sun.misc.VM { boolean isBooted(); }
-keepclassmembers class com.xlythe.math.Constants { void rebuildConstants(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setCanOpenPopup(boolean); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void release(java.io.FileDescriptor,long,long); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getClassName(); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { long size(java.io.FileDescriptor); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getText(); }
-keepclassmembers class sun.misc.VM { java.lang.String getSavedProperty(java.lang.String); }
-keepclassmembers class android.icu.impl.CaseMap { void access$100(int,java.lang.StringBuilder); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { java.io.FileDescriptor duplicateForMapping(java.io.FileDescriptor); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setText(java.lang.CharSequence); }
-keepclassmembers class sun.net.util.IPAddressUtil { byte[] textToNumericFormatV6(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getError(); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void close(java.io.FileDescriptor); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabelFor(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setError(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setClassName(java.lang.CharSequence); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det3(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void release0(java.io.FileDescriptor,long,long); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det2(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabeledBy(android.view.View); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { int truncate0(java.io.FileDescriptor,long); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setViewIdResourceName(java.lang.String); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { long size0(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class sun.misc.VM { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class sun.nio.ch.FileDispatcherImpl { void close0(java.io.FileDescriptor); }
-keepclassmembers class sun.misc.VM { void initializeOSEnvironment(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabelFor(android.view.View,int); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det4(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator parse(java.lang.Class,java.net.URL); }
-keepclassmembers class java.text.DecimalFormatSymbols { void initialize(java.util.Locale); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setLabeledBy(android.view.View,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setTextSelection(int,int); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { void <init>(sun.security.jca.ProviderList,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setInputType(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getTextSelectionEnd(); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { void addService(java.security.Provider$Service); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getTextSelectionStart(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { void <init>(sun.security.jca.ProviderList,java.util.List); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean getBooleanProperty(int); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int[] access$000(android.graphics.drawable.ScaleDrawable$ScaleState); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcelInternal(android.os.Parcel,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int[] access$002(android.graphics.drawable.ScaleDrawable$ScaleState,int[]); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det5(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class java.text.DecimalFormatSymbols { char maybeStripMarkers(java.lang.String,char); }
-keepclassmembers class java.text.DecimalFormatSymbols { android.icu.text.DecimalFormatSymbols getIcuDecimalFormatSymbols(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long getSourceNodeId(); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { java.security.Provider$Service tryGet(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo obtain(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void enforceNotSealed(); }
-keepclassmembers class android.icu.util.TimeZone { java.lang.String getCanonicalID(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isSealed(); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator access$200(java.util.ServiceLoader,java.lang.Class,java.net.URL); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View); }
-keepclassmembers class sun.net.util.IPAddressUtil { byte[] convertFromIPv4MappedAddress(byte[]); }
-keepclassmembers class java.util.ServiceLoader { void access$100(java.lang.Class,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.ServiceLoader { java.util.LinkedHashMap access$300(java.util.ServiceLoader); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.text.DecimalFormatSymbols fromIcuInstance(android.icu.text.DecimalFormatSymbols); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean,int,int); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader$LazyIterator access$400(java.util.ServiceLoader); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { java.util.Iterator iterator(); }
-keepclassmembers class sun.net.util.IPAddressUtil { boolean isIPv6LiteralAddress(java.lang.String); }
-keepclassmembers class android.icu.util.TimeZone { java.lang.String getCanonicalID(java.lang.String,boolean[]); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedEnd(android.view.View); }
-keepclassmembers class sun.security.jca.ProviderList$ServiceList { java.security.Provider$Service access$200(sun.security.jca.ProviderList$ServiceList,int); }
-keepclassmembers class sun.net.util.IPAddressUtil { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedMeasurementInOther(android.view.View); }
-keepclassmembers class android.icu.impl.locale.LocaleObjectCache { void <init>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { double computeTauAndDivide(int,int,double[],double); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { double computeTauAndDivide(int,int,double[],int,double); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEndPadding(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedStart(android.view.View); }
-keepclassmembers class android.icu.impl.locale.LocaleObjectCache { void <init>(int,float,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedMeasurement(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEnd(); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.LocaleObjectCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getMode(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class java.lang.StringFactory { java.lang.String newStringFromChars(char[],int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEndAfterPadding(); }
-keepclassmembers class com.android.internal.app.AlertController { android.view.ViewGroup resolvePanel(android.view.View,android.view.View); }
-keepclassmembers class android.icu.impl.Utility { java.lang.String escape(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTotalSpace(); }
-keepclassmembers class java.lang.StringFactory { java.lang.String newStringFromChars(char[]); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getStartAfterPadding(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void divideElements(int,int,double[],double); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class java.lang.StringFactory { java.lang.String newStringFromChars(int,int,char[]); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void divideElements(int,int,double[],int,double); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class java.security.Signature { boolean isSpi(java.security.Provider$Service); }
-keepclassmembers class android.icu.impl.locale.LocaleObjectCache { void cleanStaleEntries(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { void offsetChildren(int); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class android.icu.util.TimeZone { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTransformedEndWithDecoration(android.view.View); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void recycle(); }
-keepclassmembers class android.icu.impl.Trie2Writable { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTransformedStartWithDecoration(android.view.View); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupCustomContent(android.view.ViewGroup); }
-keepclassmembers class android.icu.impl.Trie2Writable { void init(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void init(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.icu.impl.Utility { int unescapeAt(java.lang.String,int[]); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { double findMax(double[],int,int); }
-keepclassmembers class android.icu.impl.Trie2Writable { void <init>(android.icu.impl.Trie2); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void divideElements_Brow(int,int,double[],double[],int,double); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void rank1UpdateMultL(org.ejml.data.DenseMatrix64F,double[],double,int,int,int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setupTitle(android.view.ViewGroup); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void divideElements_Bcol(int,int,int,double[],double[],int,double); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.PublicKey); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void append(char); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class org.ejml.alg.dense.misc.UnrolledDeterminantFromMinor { double det6(org.ejml.data.RowD1Matrix64F); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class java.lang.Runtime { void gc(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getString(int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void reset(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void set(int,java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void append(java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void addSeparator(); }
-keepclassmembers class android.icu.impl.Trie2Writable { boolean isInNullBlock(int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2Writable { int allocIndex2Block(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { void moveToNextSplit(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean atTerminator(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { char next(); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void skipUntilTerminatorOrIDSeparator(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean isTerminator(char); }
-keepclassmembers class android.icu.impl.Trie2Writable { int getIndex2Block(int,boolean); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean haveExperimentalLanguagePrefix(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean haveKeywordAssign(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean isTerminatorOrIDSeparator(char); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { org.ejml.data.Complex64F[] getEigenvalues(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.qr.QrHelperFunctions { void rank1UpdateMultR(org.ejml.data.DenseMatrix64F,double[],double,int,int,int,double[]); }
-keepclassmembers class com.android.internal.widget.ActionBarContextView$1 { void <init>(com.android.internal.widget.ActionBarContextView,android.view.ActionMode); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { void performIteration(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 { void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class android.icu.impl.LocaleIDParser { int parseLanguage(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.icu.impl.Trie2Writable { int allocDataBlock(int); }
-keepclassmembers class android.icu.impl.Utility { java.lang.String hex(long,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setupButtons(android.view.ViewGroup); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void skipLanguage(); }
-keepclassmembers class java.security.Signature { void update(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2Writable { void releaseDataBlock(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void addMenuPresenter(com.android.internal.view.menu.MenuPresenter); }
-keepclassmembers class android.icu.impl.Trie2Writable { void setIndex2Entry(int,int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { int parseScript(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { boolean process(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void skipScript(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigen getImplicitQR(); }
-keepclassmembers class android.icu.impl.Trie2Writable { int getDataBlock(int,boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context); }
-keepclassmembers class android.icu.impl.LocaleIDParser { int parseCountry(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuBuilder setDefaultShowAsAction(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void clear(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void dispatchPresenterUpdate(boolean); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2Writable set(int,boolean,int); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2Writable set(int,int); }
-keepclassmembers class android.icu.text.EscapeTransliterator$3 { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void skipCountry(); }
-keepclassmembers class java.security.Signature { java.util.List access$100(); }
-keepclassmembers class java.security.Signature { boolean access$200(java.security.Provider$Service); }
-keepclassmembers class java.security.Signature { java.lang.String access$000(java.security.Signature); }
-keepclassmembers class android.icu.text.EscapeTransliterator$3 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { int parseVariant(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean dispatchSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder,com.android.internal.view.menu.MenuPresenter); }
-keepclassmembers class android.icu.impl.Trie2Writable { boolean isWritableBlock(int); }
-keepclassmembers class android.icu.impl.Trie2Writable { void uncompact(); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void addLegacyStandardActions(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionSingleton(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { boolean isDefaultLegacyStandardAction(android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class android.icu.impl.Trie2Writable { void writeBlock(int,int); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.watched.WatchedDoubleStepQREigenvalue { void setup(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.MenuPopupWindow$MenuDropDownListView { void setHoverListener(android.widget.MenuItemHoverListener); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getLanguage(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class org.javia.arity.Symbols { void <clinit>(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getScript(); }
-keepclassmembers class android.icu.impl.Trie2Writable { void fillBlock(int,int,int,int,int,boolean); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getCountry(); }
-keepclassmembers class android.widget.MenuPopupWindow$MenuDropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.String getActionSymbolicName(int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void setBaseName(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void dispatchRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void parseBaseName(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String[] getLanguageScriptCountryVariant(); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2Writable setRange(int,int,int,boolean); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getVariant(); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean isDoneOrKeywordAssign(char); }
-keepclassmembers class android.widget.MenuPopupWindow$MenuDropDownListView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getName(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean isDoneOrItemSeparator(char); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void restoreActionViewStates(android.os.Bundle); }
-keepclassmembers class android.icu.impl.LocaleIDParser { boolean setToKeywordStart(); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void restorePresenterStates(android.os.Bundle); }
-keepclassmembers class org.javia.arity.Symbols { void <init>(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getValue(); }
-keepclassmembers class android.icu.impl.Utility { boolean parseChar(java.lang.String,int[],char); }
-keepclassmembers class android.icu.impl.UCharacterProperty$10 { boolean contains(int); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList$1 { void <init>(java.io.ObjectInputStream$ValidationList); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.util.Comparator getKeyComparator(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList$1 { java.lang.Void run(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getBaseName(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { int parseKeywords(); }
-keepclassmembers class android.icu.impl.Utility { int parsePattern(java.lang.String,int,int,java.lang.String,int[]); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.util.Map getKeywordMap(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getKeyword(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.Button access$000(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { android.os.Message access$100(com.android.internal.app.AlertController); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.Button access$200(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { android.os.Message access$300(com.android.internal.app.AlertController); }
-keepclassmembers class java.io.ObjectInputStream$ValidationList$1 { java.lang.Object run(); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2Writable setRange(android.icu.impl.Trie2$Range,boolean); }
-keepclassmembers class android.icu.impl.UCharacterProperty$10 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class com.android.internal.app.AlertController { android.os.Message access$500(com.android.internal.app.AlertController); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class com.android.internal.app.AlertController { android.content.DialogInterface access$600(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setCallback(com.android.internal.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.util.Iterator getKeywords(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.Button access$400(com.android.internal.app.AlertController); }
-keepclassmembers class org.javia.arity.Symbols { void addArguments(java.lang.String[]); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.content.pm.PathPermission$1 { android.content.pm.PathPermission createFromParcel(android.os.Parcel); }
-keepclassmembers class org.javia.arity.Symbols { void add(org.javia.arity.Symbol); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class com.android.internal.app.AlertController { android.os.Handler access$700(com.android.internal.app.AlertController); }
-keepclassmembers class android.icu.impl.LocaleIDParser { java.lang.String getKeywordValue(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { int access$800(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$900(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1100(com.android.internal.app.AlertController); }
-keepclassmembers class android.content.pm.PathPermission$1 { android.content.pm.PathPermission[] newArray(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.content.pm.PathPermission$1 { void <init>(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1202(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class org.javia.arity.Symbols { org.javia.arity.FunctionAndName compileWithName(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1000(com.android.internal.app.AlertController); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void defaultKeywordValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.pm.PathPermission$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { java.lang.String access$100(int); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void setKeywordValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.LocaleIDParser { void setKeywordValue(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.content.pm.PathPermission$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class android.icu.util.UResourceBundleIterator { void <init>(android.icu.util.UResourceBundle); }
-keepclassmembers class android.icu.impl.Trie2Writable { int get(int); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2Writable setForLeadSurrogateCodeUnit(char,int); }
-keepclassmembers class android.icu.util.UResourceBundleIterator { android.icu.util.UResourceBundle next(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.icu.impl.Utility { int parsePattern(java.lang.String,android.icu.text.Replaceable,int,int); }
-keepclassmembers class android.icu.impl.Trie2Writable { int get(int,boolean); }
-keepclassmembers class org.javia.arity.Symbols { void define(java.lang.String,double); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.view.ViewGroup$1 { void invalidate(); }
-keepclassmembers class org.javia.arity.Symbols { void define(org.javia.arity.FunctionAndName); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class org.javia.arity.Symbols { void define(java.lang.String,org.javia.arity.Function); }
-keepclassmembers class android.view.ViewGroup$1 { void finish(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1302(com.android.internal.app.AlertController,int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class android.icu.impl.Trie2Writable { int getFromU16SingleLead(char); }
-keepclassmembers class android.icu.impl.Trie2Writable { boolean equal_int(int[],int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem add(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.icu.util.UResourceBundleIterator { boolean hasNext(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class org.javia.arity.Symbols { double eval(java.lang.String); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem add(int,int,int,int); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class java.time.Duration { java.time.Duration ofSeconds(long,long); }
-keepclassmembers class java.time.Duration { java.time.Duration ofSeconds(long); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Trie2Writable { int findSameDataBlock(int,int,int); }
-keepclassmembers class android.icu.impl.Trie2Writable { int findHighStart(int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class android.icu.impl.Utility { int parseInteger(java.lang.String,int[],int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class org.javia.arity.Symbols { org.javia.arity.Complex evalComplex(java.lang.String); }
-keepclassmembers class sun.net.TelnetProtocolException { void <init>(java.lang.String); }
-keepclassmembers class android.icu.impl.Trie2Writable { int findSameIndex2Block(int,int); }
-keepclassmembers class java.time.Duration { java.time.Duration ofNanos(long); }
-keepclassmembers class android.icu.impl.Utility { java.lang.String parseUnicodeIdentifier(java.lang.String,int[]); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setFocusables(java.util.ArrayList); }
-keepclassmembers class org.javia.arity.Symbols { org.javia.arity.Symbol lookup(java.lang.String,int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.widget.ActionMenuPresenter$ActionMenuPopupCallback { void <init>(android.widget.ActionMenuPresenter); }
-keepclassmembers class org.javia.arity.Symbols { void pushFrame(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setHeadOfChain(android.view.View); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.SubMenu addSubMenu(int,int,int,int); }
-keepclassmembers class io.codetail.animation.RevealAnimator$RevealFinishedJellyBeanMr2 { void <init>(io.codetail.animation.RevealAnimator,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class org.javia.arity.Symbols { void popFrame(); }
-keepclassmembers class android.widget.ActionMenuPresenter$ActionMenuPopupCallback { void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter$1); }
-keepclassmembers class android.icu.impl.Trie2Writable { void compactData(); }
-keepclassmembers class android.icu.impl.Utility { void recursiveAppendNumber(java.lang.Appendable,int,int,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void removeItem(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void clear(); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void clearAll(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class android.icu.util.ULocale { void initCANONICALIZE_MAP(); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.icu.impl.Utility { boolean escapeUnprintable(java.lang.Appendable,int); }
-keepclassmembers class android.icu.impl.Utility { int parseNumber(java.lang.String,int[],int); }
-keepclassmembers class java.time.Duration { java.time.Duration create(long,int); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.icu.impl.Utility { boolean isUnprintable(int); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void removeItemAtInt(int,boolean); }
-keepclassmembers class java.time.Duration { void <init>(long,int); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem findItem(int); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(byte[]); }
-keepclassmembers class android.icu.impl.Trie2Writable { void compactIndex2(); }
-keepclassmembers class android.icu.impl.Utility { int quotedIndexOf(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.icu.impl.Utility { java.lang.Appendable appendNumber(java.lang.Appendable,int,int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int findItemIndex(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean hasVisibleItems(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.MenuItem getItem(int); }
-keepclassmembers class android.icu.text.UnicodeSet$IntPropertyFilter { void <init>(int,int); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int size(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.icu.text.UnicodeSet$IntPropertyFilter { boolean contains(int); }
-keepclassmembers class android.icu.impl.Utility { void appendToRule(java.lang.StringBuffer,int,boolean,boolean,java.lang.StringBuffer); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setQwertyMode(boolean); }
-keepclassmembers class android.icu.impl.Trie2Writable { void compactTrie(); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { boolean blockAligned(int,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.content.Context getContext(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setShortcutsVisibleInner(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int getOrdering(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class android.icu.impl.Trie2Writable { android.icu.impl.Trie2_32 toTrie2_32(); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { org.ejml.data.DenseMatrix64F convert(org.ejml.data.BlockMatrix64F,org.ejml.data.DenseMatrix64F); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { int findInsertIndex(java.util.ArrayList,int); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getContentChangeTypes(); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setAction(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class org.ejml.ops.SingularOps { void checkSvdMatrixSize(org.ejml.data.DenseMatrix64F,boolean,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale forLocale(java.util.Locale); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void convert(org.ejml.data.DenseMatrix64F,org.ejml.data.BlockMatrix64F); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,int); }
-keepclassmembers class android.icu.util.ULocale { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.Utility { void appendToRule(java.lang.StringBuffer,java.lang.String,boolean,boolean,java.lang.StringBuffer); }
-keepclassmembers class android.icu.impl.Utility { void appendToRule(java.lang.StringBuffer,android.icu.text.UnicodeMatcher,boolean,java.lang.StringBuffer); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String lscvToID(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.icu.impl.Trie2Writable { void freeze(android.icu.impl.Trie2,android.icu.impl.Trie2$ValueWidth); }
-keepclassmembers class android.icu.util.ULocale { void <init>(java.lang.String); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(java.lang.ref.WeakReference,android.os.MessageQueue); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,com.android.internal.view.menu.MenuPresenter,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.icu.util.ULocale { java.util.Locale toLocale(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void convertBlockToRow(int,int,int,double[],double[]); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.ejml.ops.SingularOps { void descendingOrder(org.ejml.data.DenseMatrix64F,boolean,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,boolean); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { void <init>(); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale getDefault(); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void convertRowToBlock(int,int,int,double[],double[]); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder addUnicodeLocaleAttribute(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void close(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class android.icu.impl.Utility { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale getDefault(android.icu.util.ULocale$Category); }
-keepclassmembers class android.icu.impl.Trie2Writable { void <clinit>(); }
-keepclassmembers class java.time.Duration { void <clinit>(); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void onItemsChanged(boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void stopDispatchingItemsChanged(); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void startDispatchingItemsChanged(); }
-keepclassmembers class java.io.CharArrayWriter { void <init>(int); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void close(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder setUnicodeLocaleKeyword(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.CharArrayWriter { void write(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void onItemActionRequestChanged(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class android.icu.util.ULocale { int hashCode(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.util.ArrayList getVisibleItems(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class java.text.MessageFormat { void <init>(java.lang.String); }
-keepclassmembers class android.icu.util.ULocale { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.CharArrayWriter { void <init>(); }
-keepclassmembers class android.view.FocusFinder { boolean isValidId(int); }
-keepclassmembers class java.text.MessageFormat { void applyPattern(java.lang.String); }
-keepclassmembers class android.icu.util.ULocale { int compareTo(android.icu.util.ULocale); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void flagActionItems(); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.util.ArrayList getNonActionItems(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.util.ArrayList getActionItems(); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class java.text.MessageFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void clearHeader(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.Object clone(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.ChangeBounds { void setResizeClip(boolean); }
-keepclassmembers class java.io.CharArrayWriter { void reset(); }
-keepclassmembers class java.io.CharArrayWriter { char[] toCharArray(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getScript(); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getLanguage(); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { boolean access$200(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getRegionForSupplementalData(android.icu.util.ULocale,boolean); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getCountry(); }
-keepclassmembers class java.io.CharArrayWriter { void flush(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { java.lang.CharSequence getHeaderTitle(); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder setExtension(char,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getVariant(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getName(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getBaseName(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.view.View getHeaderView(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean modifiesAlpha(android.animation.Animator); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { android.graphics.drawable.Drawable getHeaderIcon(); }
-keepclassmembers class com.xlythe.view.floating.LimitedQueue { void <init>(int); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class com.xlythe.view.floating.LimitedQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.icu.util.ULocale { int getShortestSubtagLength(java.lang.String); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getName(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver { void <init>(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getKeywordValue(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { boolean collapseItemActionView(com.android.internal.view.menu.MenuItemImpl); }
-keepclassmembers class android.app.FragmentManagerImpl { void setHWLayerAnimListenerIfAlpha(android.view.View,android.animation.Animator); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean shouldRunOnHWLayer(android.view.View,android.animation.Animator); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String getKeywordValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.util.ULocale { java.util.Iterator getKeywords(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onUnbufferedIO(); }
-keepclassmembers class java.text.MessageFormat { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.icu.util.ULocale { java.util.Iterator getKeywords(java.lang.String); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder setLanguageTag(android.icu.impl.locale.LanguageTag); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onResourceMismatch(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { void <clinit>(); }
-keepclassmembers class org.ejml.ops.SingularOps { void swapRowOrCol(org.ejml.data.DenseMatrix64F,boolean,int,int); }
-keepclassmembers class java.text.MessageFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class java.text.MessageFormat { java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object); }
-keepclassmembers class org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver { boolean setA(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class com.android.internal.view.menu.MenuBuilder { com.android.internal.view.menu.MenuItemImpl getExpandedItem(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder setLocale(android.icu.impl.locale.BaseLocale,android.icu.impl.locale.LocaleExtensions); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver { boolean setA(org.ejml.data.Matrix64F); }
-keepclassmembers class android.app.FragmentHostCallback { void <init>(android.app.Activity); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String canonicalize(java.lang.String); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver { void solve(org.ejml.data.BlockMatrix64F,org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class android.icu.util.ULocale { boolean isRightToLeft(); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class javax.crypto.Cipher$1 { void <clinit>(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.app.FragmentHostCallback { void <init>(android.app.Activity,android.content.Context,android.os.Handler,int); }
-keepclassmembers class android.icu.text.CaseFoldTransliterator$1 { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { void setLength(int); }
-keepclassmembers class java.lang.StringBuffer { char charAt(int); }
-keepclassmembers class org.ejml.alg.block.linsol.chol.BlockCholeskyOuterSolver { void solve(org.ejml.data.Matrix64F,org.ejml.data.Matrix64F); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class java.lang.Throwable$PrintStreamOrWriter { void <init>(java.lang.Throwable$1); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable$Builder { com.xlythe.calculator.material.drawable.AnimatingDrawable$Builder frames(int[]); }
-keepclassmembers class java.lang.StringBuffer { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Throwable$PrintStreamOrWriter { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable$Builder { com.xlythe.calculator.material.drawable.AnimatingDrawable build(); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class java.lang.StringBuffer { void setCharAt(int,char); }
-keepclassmembers class java.util.WeakHashMap$Entry { int hashCode(); }
-keepclassmembers class java.net.SocketImpl { java.io.FileDescriptor getFileDescriptor(); }
-keepclassmembers class java.util.WeakHashMap$Entry { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.SocketImpl { java.net.Socket getSocket(); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue,int,java.util.WeakHashMap$Entry); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder clear(); }
-keepclassmembers class java.net.SocketImpl { int getPort(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.InternalLocaleBuilder clearExtensions(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.Object); }
-keepclassmembers class java.net.SocketImpl { void setServerSocket(java.net.ServerSocket); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.BaseLocale getBaseLocale(); }
-keepclassmembers class com.xlythe.calculator.material.drawable.AnimatingDrawable$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.icu.impl.StandardPlural { android.icu.impl.StandardPlural[] values(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$NormQuickCheckIntProperty { int getValue(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.icu.impl.UCharacterProperty$NormQuickCheckIntProperty { void <init>(android.icu.impl.UCharacterProperty,int,int,int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionAlt { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class java.net.SocketImpl { void reset(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { android.support.design.widget.FloatingActionButton access$000(com.xlythe.calculator.material.PanelSwitchingCalculator); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.AbstractStringBuilder); }
-keepclassmembers class java.net.SocketImpl { void setSocket(java.net.Socket); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.StringBuffer); }
-keepclassmembers class android.icu.impl.UCharacterProperty$NormQuickCheckIntProperty { int getMaxValue(int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionAlt { void <init>(); }
-keepclassmembers class android.icu.impl.StandardPlural { android.icu.impl.StandardPlural orNullFromString(java.lang.CharSequence); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.icu.impl.StandardPlural { android.icu.impl.StandardPlural fromString(java.lang.CharSequence); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.CharSequence); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void revealTray(boolean); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { java.lang.String removePrivateuseVariant(java.lang.String); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class android.icu.impl.StandardPlural { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void access$200(com.xlythe.calculator.material.PanelSwitchingCalculator,android.view.View); }
-keepclassmembers class java.text.MessageFormat { java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class java.lang.Boolean { boolean parseBoolean(java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { android.view.View access$100(com.xlythe.calculator.material.PanelSwitchingCalculator); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(int); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { int checkVariants(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.StandardPlural { void <clinit>(); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void extractAligned(org.ejml.data.BlockMatrix64F,org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { void setUnicodeLocaleExtension(java.lang.String); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { android.icu.impl.locale.LocaleExtensions getLocaleExtensions(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(long); }
-keepclassmembers class java.lang.Boolean { int hashCode(boolean); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(boolean); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void <init>(com.android.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { android.content.pm.InstrumentationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer appendCodePoint(int); }
-keepclassmembers class java.lang.Boolean { boolean getBoolean(java.lang.String); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { android.content.pm.InstrumentationInfo[] newArray(int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer replace(int,int,java.lang.String); }
-keepclassmembers class android.app.FragmentHostCallback { void restoreLoaderNonConfig(android.util.ArrayMap); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void hideFab(); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer delete(int,int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { void <init>(android.icu.impl.Normalizer2Impl); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String substring(int); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String substring(int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isEnabled(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean invoke(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void hideTray(); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class org.ejml.alg.dense.decomposition.lu.LUDecompositionAlt { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer insert(int,char[],int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void onAnimationStart(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setEnabled(boolean); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$4 { void <init>(com.xlythe.calculator.material.PanelSwitchingCalculator); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { int getItemId(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { int getOrdering(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator$4 { void onAnimationFinished(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.content.Intent getIntent(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer insert(int,char[]); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence); }
-keepclassmembers class android.widget.Editor { void restoreInstanceState(android.os.ParcelableParcel); }
-keepclassmembers class android.widget.Editor { android.os.ParcelableParcel saveInstanceState(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.content.pm.InstrumentationInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setIntent(android.content.Intent); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setAlphabeticShortcut(char); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void showFab(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer insert(int,java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean canRedo(); }
-keepclassmembers class android.widget.Editor { boolean canUndo(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$Normalizer2WithImpl { int getCombiningClass(int); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class com.xlythe.calculator.material.PanelSwitchingCalculator { void showTray(); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class java.lang.Object { int identityHashCode(java.lang.Object); }
-keepclassmembers class android.icu.impl.locale.InternalLocaleBuilder { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void redo(); }
-keepclassmembers class java.lang.Object { int identityHashCodeNative(java.lang.Object); }
-keepclassmembers class java.lang.StringBuffer { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.AssertionError { void <init>(int); }
-keepclassmembers class android.widget.Editor { void forgetUndoRedo(); }
-keepclassmembers class java.lang.AssertionError { void <init>(long); }
-keepclassmembers class android.widget.Editor { void replace(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean hasSubMenu(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.SubMenu getSubMenu(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setSubMenu(com.android.internal.view.menu.SubMenuBuilder); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.CharSequence getTitle(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView); }
-keepclassmembers class java.security.NoSuchProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class android.widget.Editor { void undo(); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class java.text.MessageFormat { void append(java.lang.StringBuffer,java.text.CharacterIterator); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class java.text.MessageFormat { void makeFormat(int,int,java.lang.StringBuilder[]); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.graphics.drawable.Drawable getIcon(); }
-keepclassmembers class java.security.cert.X509CRLEntry { void <init>(); }
-keepclassmembers class java.security.cert.X509CRLEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void setIdentity(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class android.widget.Editor { void discardTextDisplayLists(); }
-keepclassmembers class java.security.cert.X509CRLEntry { int hashCode(); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { void <init>(); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { android.content.pm.ApplicationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.content.pm.ApplicationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class sun.util.locale.BaseLocale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(java.lang.String); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property getProperty(java.lang.String); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class sun.util.locale.BaseLocale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { void <init>(int,boolean,double); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isVisible(); }
-keepclassmembers class java.lang.Double { boolean isFinite(double); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean onStateChange(int[]); }
-keepclassmembers class java.io.BufferedInputStream { java.io.InputStream getInIfOpen(); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { boolean decompose(org.ejml.data.DenseMatrix64F); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.AbstractStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class java.io.BufferedInputStream { byte[] getBufIfOpen(); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class sun.util.locale.BaseLocale { sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.lang.StringBuffer { java.lang.AbstractStringBuilder append(java.lang.AbstractStringBuilder); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { org.ejml.data.DenseMatrix64F getEigenVector(int); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class java.lang.StringBuffer { java.lang.AbstractStringBuilder append(java.lang.String); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { java.lang.String toString(); }
-keepclassmembers class org.ejml.alg.block.BlockMatrixOps { void zeroTriangle(boolean,org.ejml.data.BlockMatrix64F); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean isStateful(); }
-keepclassmembers class java.io.BufferedInputStream { void fill(); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(android.graphics.Bitmap,int,int); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { org.ejml.data.Matrix64F getEigenVector(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { int getNativeSize(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.Appendable append(char); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setMenuInfo(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class sun.util.locale.BaseLocale { sun.util.locale.BaseLocale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ejml.alg.dense.decomposition.eig.SwitchingEigenDecomposition { org.ejml.data.Complex64F getEigenvalue(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { long getNativePtr(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class java.text.MessageFormat { int findKeyword(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isActionButton(); }
-keepclassmembers class java.lang.Double { int hashCode(double); }
-keepclassmembers class sun.security.util.ManifestDigester$Position { void <init>(); }
-keepclassmembers class android.transition.VisibilityPropagation { void <init>(); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class android.transition.VisibilityPropagation { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class sun.util.locale.BaseLocale { java.lang.String getLanguage(); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class sun.util.locale.BaseLocale { java.lang.String getScript(); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class sun.util.locale.BaseLocale { java.lang.String getRegion(); }
-keepclassmembers class java.io.BufferedInputStream { int read1(byte[],int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { void setShowAsAction(int); }
-keepclassmembers class sun.util.locale.BaseLocale { java.lang.String getVariant(); }
-keepclassmembers class java.util.Arrays { void rangeCheck(int,int,int); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class sun.util.locale.BaseLocale { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class android.transition.VisibilityPropagation { java.lang.String[] getPropagationProperties(); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.View getActionView(); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class android.transition.VisibilityPropagation { void <clinit>(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { android.view.ActionProvider getActionProvider(); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class java.text.MessageFormat { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ComplexColor getComplexColor(int); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton { void <init>(android.widget.ActionMenuPresenter,android.content.Context); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean expandActionView(); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton { boolean performClick(); }
-keepclassmembers class sun.util.locale.BaseLocale { int hashCode(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean hasCollapsibleActionView(); }
-keepclassmembers class android.widget.ActionMenuPresenter$OverflowMenuButton { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class java.io.BufferedInputStream { void <clinit>(); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class sun.util.locale.BaseLocale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.BaseLocale$1); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class com.android.internal.view.menu.MenuItemImpl { boolean isActionViewExpanded(); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class sun.util.locale.BaseLocale { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void hideCursorAndSpanControllers(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CapitalizationContextUsage { android.icu.text.DateFormatSymbols$CapitalizationContextUsage[] values(); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CapitalizationContextUsage { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class android.icu.text.DateFormatSymbols$CapitalizationContextUsage { void <clinit>(); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canComplexColorApplyTheme(android.content.res.ComplexColor); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { int getStrokeColor(); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale addLikelySubtags(android.icu.util.ULocale); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl { void <init>(); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class org.javia.arity.DoubleStack { void <init>(); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class org.javia.arity.DoubleStack { void clear(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class org.javia.arity.DoubleStack { double[] getIm(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$1 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutChunkResult { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutChunkResult { void resetInternal(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$1 { boolean contains(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { int getFillColor(); }
-keepclassmembers class android.content.res.ColorStateList$ColorStateListFactory { void <init>(android.content.res.ColorStateList); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class org.javia.arity.DoubleStack { double[] getRe(); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class org.javia.arity.DoubleStack { void pop(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class android.widget.Editor { int getWordStart(int); }
-keepclassmembers class org.javia.arity.DoubleStack { void push(double,double); }
-keepclassmembers class com.android.internal.policy.PhoneWindow$3 { void <init>(com.android.internal.policy.PhoneWindow); }
-keepclassmembers class sun.misc.HexDumpEncoder { void <init>(); }
-keepclassmembers class android.widget.Editor { int getWordEnd(int); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class sun.misc.HexDumpEncoder { void hexDigit(java.io.PrintStream,byte); }
-keepclassmembers class android.widget.Editor { boolean needsToSelectAllToSelectWordOrParagraph(); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class sun.misc.HexDumpEncoder { int bytesPerAtom(); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class sun.misc.HexDumpEncoder { int bytesPerLine(); }
-keepclassmembers class sun.misc.HexDumpEncoder { void encodeBufferPrefix(java.io.OutputStream); }
-keepclassmembers class sun.misc.HexDumpEncoder { void encodeLinePrefix(java.io.OutputStream,int); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4000(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4100(); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4200(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4300(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4400(); }
-keepclassmembers class android.content.res.TypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4500(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4600(); }
-keepclassmembers class sun.misc.HexDumpEncoder { void encodeAtom(java.io.OutputStream,byte[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.util.Property access$4700(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { float getFraction(int,int,int,float); }
-keepclassmembers class sun.misc.HexDumpEncoder { void encodeLineSuffix(java.io.OutputStream); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentParagraph(); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder$1 { void <init>(); }
-keepclassmembers class android.icu.util.ULocale { boolean isEmptyString(java.lang.String); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder$1 { java.nio.file.spi.FileSystemProvider run(); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class java.nio.file.FileSystems$DefaultFileSystemHolder$1 { java.lang.Object run(); }
-keepclassmembers class android.icu.util.ULocale { void appendTag(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.widget.Editor { long getParagraphsRange(int,int); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String createTagString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void <init>(android.content.Context); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class android.text.StaticLayout { void <init>(android.text.StaticLayout$Builder); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class android.widget.Editor { void onLocaleChanged(); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIteratorWithText(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$Loader { void <init>(); }
-keepclassmembers class android.icu.impl.ICUResourceBundle$Loader { void <init>(android.icu.impl.ICUResourceBundle$1); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Editor { int getNextCursorOffset(int,boolean); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class android.widget.Editor { long getCharClusterRange(int); }
-keepclassmembers class android.text.StaticLayout { void generate(android.text.StaticLayout$Builder,boolean,boolean); }
-keepclassmembers class android.content.res.TypedArray { boolean getValue(int,android.util.TypedValue); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.content.res.TypedArray { int getType(int); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class java.io.PrintWriter { void ensureOpen(); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValueOrEmpty(int); }
-keepclassmembers class java.io.PrintWriter { void close(); }
-keepclassmembers class android.widget.Editor { boolean isPositionVisible(float,float); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String createTagString(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class android.icu.util.ULocale { int parseTagString(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { void <init>(java.lang.Object,java.lang.Object,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(int[]); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { java.lang.Object setValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String lookupLikelySubtags(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String createLikelySubtagsString(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { int hashCode(); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstVisibleChildClosestToStart(boolean,boolean); }
-keepclassmembers class java.util.TreeMap$TreeMapEntry { java.lang.String toString(); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$Form { sun.misc.FormattedFloatingDecimal$Form[] values(); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void <init>(); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$Form { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor { void startDragAndDrop(); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void <init>(int,int,int); }
-keepclassmembers class sun.misc.FormattedFloatingDecimal$Form { void <clinit>(); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class android.util.MapCollections { java.util.Set getEntrySet(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.io.PrintWriter { void newLine(); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { double get(int,int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { int getIndex(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { void <init>(); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { int getNumElements(); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { int modulateColorAlpha(int,float); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void reshape(int,int,int,boolean); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toLanguageTag(); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void reshape(int,int,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class org.ejml.data.BlockMatrix64F { void set(int,int,double); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { void setEras(sun.util.calendar.Era[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View getChildClosestToEnd(); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View getChildClosestToStart(); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale forLanguageTag(java.lang.String); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toUnicodeLocaleKey(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toUnicodeLocaleType(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getTime(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toLegacyKey(java.lang.String); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class android.icu.util.ULocale { java.lang.String toLegacyType(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.icu.util.ULocale { android.icu.util.ULocale getInstance(android.icu.impl.locale.BaseLocale,android.icu.impl.locale.LocaleExtensions); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getTimeOfDay(sun.util.calendar.CalendarDate); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getTimeOfDayValue(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class java.util.Arrays { int binarySearch0(long[],int,int,long); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { sun.util.calendar.CalendarDate setTimeOfDay(sun.util.calendar.CalendarDate,int); }
-keepclassmembers class android.widget.Editor { void updateTapState(android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate); }
-keepclassmembers class java.util.Arrays { int binarySearch0(int[],int,int,int); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { boolean shouldFilterOutTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.security.x509.UnparseableExtension { void <init>(sun.security.x509.Extension,java.lang.Throwable); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getDayOfWeekDateBefore(long,int); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getDayOfWeekDateAfter(long,int); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { long getDayOfWeekDateOnOrBefore(long,int); }
-keepclassmembers class sun.security.x509.UnparseableExtension { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class sun.util.calendar.AbstractCalendar { int normalizeTime(sun.util.calendar.CalendarDate); }
-keepclassmembers class android.widget.Editor { void updateFloatingToolbarVisibility(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState); }
-keepclassmembers class android.widget.Editor { void hideFloatingToolbar(); }
-keepclassmembers class android.widget.Editor { void showFloatingToolbar(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void setDensity(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void onDensityChanged(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void applyDensityScaling(int,int); }
-keepclassmembers class android.icu.util.ULocale { android.icu.impl.locale.BaseLocale base(); }
-keepclassmembers class java.nio.file.attribute.PosixFilePermission { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int); }
-keepclassmembers class java.nio.file.attribute.PosixFilePermission { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class sun.security.x509.IPAddressName { void <init>(sun.security.util.DerValue); }
-keepclassmembers class android.icu.util.ULocale { android.icu.impl.locale.LocaleExtensions extensions(); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class sun.security.x509.IPAddressName { void <init>(byte[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class sun.security.x509.IPAddressName { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class android.widget.Editor { boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class sun.security.x509.IPAddressName { void parseIPv4(java.lang.String); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.icu.util.ULocale { int compareTo(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class java.util.Arrays { int binarySearch0(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class android.icu.util.ULocale { void <init>(java.lang.String,java.util.Locale,android.icu.util.ULocale$1); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,int,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class sun.security.x509.IPAddressName { void parseIPv6(java.lang.String); }
-keepclassmembers class android.icu.util.ULocale { void <clinit>(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void resolveShouldLayoutReverse(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int[] access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int[] access$002(android.graphics.drawable.LayerDrawable$LayerState,int[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$102(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class java.util.Arrays { int binarySearch0(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$202(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$200(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class java.util.Arrays { boolean equals(long[],long[]); }
-keepclassmembers class sun.security.x509.IPAddressName { int getType(); }
-keepclassmembers class sun.security.x509.IPAddressName { java.lang.String toString(); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class android.icu.impl.UCharacterProperty$15 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPreparationErrorReason(int); }
-keepclassmembers class sun.security.x509.IPAddressName { java.lang.String getName(); }
-keepclassmembers class android.icu.impl.UCharacterProperty$15 { int getValue(int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$15 { int getMaxValue(int); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewLibrary(android.content.pm.ApplicationInfo); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$1 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class java.util.Arrays { boolean equals(boolean[],boolean[]); }
-keepclassmembers class android.util.StateSet { int[] get(int); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class android.icu.impl.Trie2_16 { void <init>(); }
-keepclassmembers class android.icu.impl.Trie2_16 { android.icu.impl.Trie2_16 createFromSerialized(java.nio.ByteBuffer); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$2 { void <init>(com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class android.icu.impl.Trie2_16 { int get(int); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { boolean validate(java.nio.ByteBuffer); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class sun.security.x509.IPAddressName { byte[] getBytes(); }
-keepclassmembers class android.content.pm.PackageInfo { void <init>(android.os.Parcel); }
-keepclassmembers class sun.security.x509.IPAddressName { boolean equals(java.lang.Object); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class android.icu.impl.Trie2_16 { int getFromU16SingleLead(char); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { boolean startsWithPackageName(java.nio.ByteBuffer,int); }
-keepclassmembers class java.util.Arrays { void fill(int[],int); }
-keepclassmembers class java.util.Arrays { void fill(int[],int,int,int); }
-keepclassmembers class android.webkit.WebViewFactory { boolean signaturesEquals(android.content.pm.Signature[],android.content.pm.Signature[]); }
-keepclassmembers class android.icu.impl.Trie2_16 { int getSerializedLength(); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class sun.security.x509.IPAddressName { int hashCode(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { java.nio.ByteBuffer getData(java.nio.ByteBuffer,java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.Trie2_16 { int rangeEnd(int,int,int); }
-keepclassmembers class sun.security.x509.IPAddressName { int constrains(sun.security.x509.GeneralNameInterface); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class android.webkit.WebViewFactory { void verifyPackageInfo(android.content.pm.PackageInfo,android.content.pm.PackageInfo); }
-keepclassmembers class android.content.pm.PackageInfo { void propagateApplicationInfo(android.content.pm.ApplicationInfo,android.content.pm.ComponentInfo[]); }
-keepclassmembers class java.util.Arrays { void fill(byte[],int,int,byte); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { int binarySearch(java.nio.ByteBuffer,java.lang.CharSequence); }
-keepclassmembers class android.content.pm.PackageInfo { void <init>(android.os.Parcel,android.content.pm.PackageInfo$1); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.content.pm.PackageInfo { void <clinit>(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { int getNameOffset(java.nio.ByteBuffer,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { int getDataOffset(java.nio.ByteBuffer,int); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.webkit.WebViewFactory { android.content.Context getWebViewContextAndSetProvider(); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class org.javia.arity.Function { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig); }
-keepclassmembers class org.javia.arity.Function { void checkArity(int); }
-keepclassmembers class java.util.Arrays { byte[] copyOf(byte[],int); }
-keepclassmembers class org.javia.arity.Function { double eval(); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class org.javia.arity.Function { double eval(double); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class org.javia.arity.Function { double eval(double,double); }
-keepclassmembers class java.util.Arrays { int[] copyOf(int[],int); }
-keepclassmembers class org.javia.arity.Function { double eval(double[]); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class java.util.Arrays { long[] copyOf(long[],int); }
-keepclassmembers class org.javia.arity.Function { org.javia.arity.Complex eval(org.javia.arity.Complex); }
-keepclassmembers class java.util.Arrays { char[] copyOf(char[],int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillEnd(int,int); }
-keepclassmembers class org.javia.arity.Function { org.javia.arity.Complex eval(org.javia.arity.Complex,org.javia.arity.Complex); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getProviderClass(); }
-keepclassmembers class android.icu.impl.ICUBinary$DatPackageReader { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class org.javia.arity.Function { org.javia.arity.Complex eval(org.javia.arity.Complex[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillStart(int,int); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$8 { void <init>(java.lang.String); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class org.javia.arity.Function { org.javia.arity.Complex evalComplex(); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class org.javia.arity.Function { org.javia.arity.Function getDerivative(); }
-keepclassmembers class org.javia.arity.Function { void setDerivative(org.javia.arity.Function); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.widget.Editor { void invalidateHandlesAndActionMode(); }
-keepclassmembers class android.transition.ChangeImageTransform { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean canScrollHorizontally(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean canScrollVertically(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { int tieBreakOrder(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.util.TreeMap$PrivateEntryIterator { void <init>(java.util.TreeMap,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.util.TreeMap$PrivateEntryIterator { boolean hasNext(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class java.util.TreeMap$PrivateEntryIterator { java.util.TreeMap$TreeMapEntry nextEntry(); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.util.TreeMap$PrivateEntryIterator { void remove(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int convertFocusDirectionToLayoutDirection(int); }
-keepclassmembers class android.widget.Editor { void refreshTextActionMode(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <init>(android.content.Context); }
-keepclassmembers class android.widget.Editor { void startInsertionActionMode(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean isFinished(); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState(); }
-keepclassmembers class java.util.Arrays { int hashCode(long[]); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void ensureLayoutState(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void lockRoot(); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onPull(float,float); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void unlockRoot(); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void contendedLock(); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWordAndStartDrag(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onRelease(); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void setSize(int,int); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection$1 { void <init>(sun.net.www.protocol.ftp.FtpURLConnection); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection$1 { java.net.ProxySelector run(); }
-keepclassmembers class sun.net.www.protocol.ftp.FtpURLConnection$1 { java.lang.Object run(); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class android.widget.Editor { boolean checkField(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionModeInternal(); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void <init>(); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class com.xlythe.view.floating.FloatingView$1 { void <init>(com.xlythe.view.floating.FloatingView,android.content.Context); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class android.text.StaticLayout { int getHyphen(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.text.StaticLayout { int getIndentAdjust(int,android.text.Layout$Alignment); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { void <init>(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { void <init>(boolean); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getLoadFromApkPath(java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean shouldOfferToShowSuggestions(); }
-keepclassmembers class java.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.util.ArraySet { void <init>(int,boolean); }
-keepclassmembers class android.text.StaticLayout { long nNewBuilder(); }
-keepclassmembers class android.text.StaticLayout { void nFinishBuilder(long); }
-keepclassmembers class android.text.StaticLayout { long nLoadHyphenator(java.nio.ByteBuffer,int); }
-keepclassmembers class android.text.StaticLayout { void nSetLocale(long,java.lang.String,long); }
-keepclassmembers class android.text.StaticLayout { void nSetIndents(long,int[]); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class android.text.StaticLayout { void nSetupParagraph(long,char[],int,float,int,float,int[],int,int,int); }
-keepclassmembers class android.text.StaticLayout { float nAddStyleRun(long,long,long,int,int,boolean); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int findLastCompletelyVisibleItemPosition(); }
-keepclassmembers class android.text.StaticLayout { void nAddMeasuredRun(long,int,int,float[]); }
-keepclassmembers class android.text.StaticLayout { void nAddReplacementRun(long,int,int,float); }
-keepclassmembers class android.text.StaticLayout { void nGetWidths(long,float[]); }
-keepclassmembers class android.text.StaticLayout { int nComputeLineBreaks(long,android.text.StaticLayout$LineBreaks,int[],float[],int[],int); }
-keepclassmembers class android.provider.Settings$GenerationTracker { void <init>(android.util.MemoryIntArray,int,int,java.lang.Runnable); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.StaticLayout { long access$000(); }
-keepclassmembers class android.text.StaticLayout { void access$100(long); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(android.content.pm.PackageInfo); }
-keepclassmembers class android.text.StaticLayout { void access$300(long,java.lang.String,long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findOneVisibleChild(int,int,boolean,boolean); }
-keepclassmembers class android.provider.Settings$GenerationTracker { boolean isGenerationChanged(); }
-keepclassmembers class android.text.StaticLayout { float access$400(long,long,long,int,int,boolean); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class android.text.StaticLayout { void access$500(long,int,int,float[]); }
-keepclassmembers class android.provider.Settings$GenerationTracker { int readCurrentGeneration(); }
-keepclassmembers class android.text.StaticLayout { void access$600(long,int,int,float); }
-keepclassmembers class android.text.StaticLayout { void <init>(android.text.StaticLayout$Builder,android.text.StaticLayout$1); }
-keepclassmembers class android.widget.Editor { void stopTextActionMode(); }
-keepclassmembers class android.util.ArraySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void stopTextActionModeWithPreservingSelection(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchLowMemory(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchTrimMemory(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean removeTreeNode(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class android.widget.Editor { int clampHorizontalPosition(android.graphics.drawable.Drawable,float); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class sun.net.ProgressSource$State { void <init>(java.lang.String,int); }
-keepclassmembers class sun.net.ProgressSource$State { void <clinit>(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findViewByPosition(int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class android.webkit.WebViewFactory { int loadNativeLibrary(java.lang.ClassLoader); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class android.widget.Editor { android.view.View$DragShadowBuilder getTextThumbnailBuilder(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean isLayoutRTL(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflectorKey { void <init>(java.lang.Class,java.io.ObjectStreamField[],java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateLeft(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class android.widget.ForwardingListener$TriggerLongPress { void <init>(android.widget.ForwardingListener); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class android.widget.ForwardingListener$TriggerLongPress { void <init>(android.widget.ForwardingListener,android.widget.ForwardingListener$1); }
-keepclassmembers class android.webkit.WebViewFactory { int nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflectorKey { int hashCode(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateRight(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class java.io.ObjectStreamClass$FieldReflectorKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceInsertion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.ScrollBarDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { void <clinit>(); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class android.widget.Editor { void setContextMenuAnchor(float,float); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.widget.Editor { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class android.util.ArraySet { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class sun.util.locale.Extension { void <init>(char); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealByteArraySize(int); }
-keepclassmembers class sun.util.locale.Extension { void <init>(char,java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class sun.util.locale.Extension { void setValue(java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.String { void <init>(byte[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.util.locale.Extension { java.lang.String getValue(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealLongArraySize(int); }
-keepclassmembers class sun.util.locale.Extension { java.lang.String getID(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class sun.util.locale.Extension { java.lang.String toString(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void propagateCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceDeletion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class sun.security.util.ByteArrayLexOrder { void <init>(); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class sun.security.util.ByteArrayLexOrder { int compare(byte[],byte[]); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class java.lang.String { int codePointCount(int,int); }
-keepclassmembers class java.lang.String { int offsetByCodePoints(int,int); }
-keepclassmembers class sun.security.util.ByteArrayLexOrder { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.String { void getChars(char[],int); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.widget.Editor { android.text.style.SuggestionSpan findEquivalentSuggestionSpan(android.widget.Editor$SuggestionSpanInfo); }
-keepclassmembers class java.io.ObjectStreamClass$ClassDataSlot { void <init>(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.icu.text.UnicodeNameTransliterator$1 { void <init>(); }
-keepclassmembers class android.icu.text.UnicodeNameTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.lang.String { void getCharsNoCheck(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void onDensityChanged(int,int); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table1632 { int getContainerResource(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void applyDensityScaling(int,int); }
-keepclassmembers class android.icu.impl.ICUResourceBundleReader$Table1632 { void <init>(android.icu.impl.ICUResourceBundleReader,int); }
-keepclassmembers class android.widget.Editor { void replaceWithSuggestion(android.widget.Editor$SuggestionInfo); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class com.xlythe.calculator.material.floating.FloatingCalculator$7 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { int getChangingConfigurations(); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.String { boolean nonSyncContentEquals(java.lang.AbstractStringBuilder); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.view.Surface$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.String { boolean contentEquals(java.lang.CharSequence); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void onDensityChanged(int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void applyDensityScaling(int,int); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class android.widget.Editor { int getCurrentLineAdjustedForSlop(android.text.Layout,int,float); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.widget.Editor { boolean isValidRange(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int[] access$000(android.graphics.drawable.InsetDrawable$InsetState); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean checkInvariants(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int[] access$002(android.graphics.drawable.InsetDrawable$InsetState,int[]); }
-keepclassmembers class android.widget.Editor { void access$1000(android.widget.Editor,android.widget.Editor$SuggestionInfo); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1600(android.widget.Editor); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <clinit>(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$3100(android.widget.Editor); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$3102(android.widget.Editor,android.graphics.Rect); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SuggestionHelper access$3200(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3600(android.widget.Editor); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$2 { void <init>(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3700(android.widget.Editor); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$2 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3900(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { boolean access$4000(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { boolean access$4100(android.widget.Editor); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class android.widget.Editor { int access$4200(android.widget.Editor,android.graphics.drawable.Drawable,float); }
-keepclassmembers class android.widget.Editor { boolean access$4300(android.widget.Editor,float,float); }
-keepclassmembers class android.widget.Editor { void access$4400(android.widget.Editor,android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor { java.lang.Runnable access$4600(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { int access$4700(android.widget.Editor); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class android.widget.Editor { boolean access$4800(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { java.lang.Runnable access$4602(android.widget.Editor,java.lang.Runnable); }
-keepclassmembers class android.widget.Editor { int access$4900(android.widget.Editor,android.text.Layout,int,float); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onLayoutCompleted(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class android.widget.Editor { int access$5000(android.widget.Editor,int); }
-keepclassmembers class android.widget.Editor { int access$5100(android.widget.Editor,int); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator access$5200(android.widget.Editor); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class android.widget.Editor { int access$5300(android.widget.Editor,int,boolean); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3902(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3602(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class sun.security.jca.ProviderConfig$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$3702(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class sun.security.jca.ProviderConfig$3 { java.lang.String run(); }
-keepclassmembers class sun.security.jca.ProviderConfig$3 { java.lang.Object run(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void prepareForDrop(android.view.View,android.view.View,int,int); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class android.widget.Editor { boolean access$5400(android.widget.Editor,float,float); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.Editor { boolean access$5500(android.widget.Editor); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class android.widget.Editor { void access$5600(android.widget.Editor); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class android.widget.Editor { boolean access$5700(android.widget.Editor); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.Editor { long access$5800(android.widget.Editor,int,int); }
-keepclassmembers class android.widget.Editor { android.content.UndoManager access$5900(android.widget.Editor); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.Editor { android.content.UndoOwner access$6000(android.widget.Editor); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean resolveIsInfinite(); }
-keepclassmembers class android.widget.Editor { boolean access$6200(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.String { int indexOf(char[],int,int,char[],int,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo { void <init>(); }
-keepclassmembers class android.widget.Editor { boolean access$4102(android.widget.Editor,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper$BackgroundTintInfo { void clear(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class java.net.Socket$2 { void <init>(java.net.Socket); }
-keepclassmembers class java.net.Socket$2 { java.io.InputStream run(); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class java.net.Socket$2 { java.lang.Object run(); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState$PendingAnimator { void <init>(int,float,java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState$PendingAnimator { android.animation.Animator newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void scrollToPosition(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void scrollToPositionWithOffset(int,int); }
-keepclassmembers class sun.util.locale.LocaleExtensions { void <init>(java.lang.String,java.lang.Character,sun.util.locale.Extension); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class sun.util.locale.LocaleExtensions { void <init>(java.util.Map,java.util.Set,java.util.Map); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void setOrientation(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void setReverseLayout(boolean); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { void <init>(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { android.content.pm.FeatureGroupInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void setStackFromEnd(boolean); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean shouldMeasureTwice(); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { android.content.pm.FeatureGroupInfo[] newArray(int); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class java.lang.String { java.lang.String fastSubstring(int,int); }
-keepclassmembers class android.content.pm.FeatureGroupInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class sun.net.ftp.FtpClient$TransferType { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.String { java.lang.String concat(java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean supportsPredictiveItemAnimations(); }
-keepclassmembers class sun.net.ftp.FtpClient$TransferType { void <clinit>(); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String doReplace(char,char); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterProperty$2 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.UCharacterProperty$2 { boolean contains(int); }
-keepclassmembers class java.lang.String { java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.content.res.ThemedResourceCache { void <init>(); }
-keepclassmembers class android.content.res.ThemedResourceCache { void put(long,android.content.res.Resources$Theme,java.lang.Object); }
-keepclassmembers class android.content.res.ThemedResourceCache { void put(long,android.content.res.Resources$Theme,java.lang.Object,boolean); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class sun.util.locale.LocaleExtensions { java.util.Set getKeys(); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class android.content.res.ThemedResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class sun.util.locale.LocaleExtensions { sun.util.locale.Extension getExtension(java.lang.Character); }
-keepclassmembers class android.content.res.ThemedResourceCache { void onConfigurationChange(int); }
-keepclassmembers class java.lang.Long$LongCache { void <clinit>(); }
-keepclassmembers class android.content.res.ThemedResourceCache { android.util.LongSparseArray getThemedLocked(android.content.res.Resources$Theme,boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class android.content.res.ThemedResourceCache { android.util.LongSparseArray getUnthemedLocked(boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Configuration getOverrideConfiguration(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class android.content.res.ThemedResourceCache { boolean prune(int); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createMultiArray(java.lang.Class,int[]); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResourcesInternal(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newArray(java.lang.Class,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.content.res.ThemedResourceCache { boolean pruneEntriesLocked(android.util.LongSparseArray,int); }
-keepclassmembers class sun.util.locale.LocaleExtensions { boolean isEmpty(); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class android.content.res.ThemedResourceCache { boolean pruneEntryLocked(java.lang.Object,int); }
-keepclassmembers class sun.util.locale.LocaleExtensions { java.lang.String toID(java.util.SortedMap); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(double); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void drawableStateChanged(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class sun.util.locale.LocaleExtensions { java.lang.String getID(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class sun.util.locale.LocaleExtensions { int hashCode(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class sun.util.locale.LocaleExtensions { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class sun.util.locale.LocaleExtensions { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setImageResource(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.icu.impl.UCharacterProperty$8 { void <init>(android.icu.impl.UCharacterProperty,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class android.icu.impl.UCharacterProperty$8 { boolean contains(int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class java.util.EnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet noneOf(java.lang.Class); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum[]); }
-keepclassmembers class android.icu.impl.Norm2AllModes$1 { void <init>(); }
-keepclassmembers class java.util.EnumSet { void typeCheck(java.lang.Enum); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class java.util.EnumSet { java.lang.Enum[] getUniverse(java.lang.Class); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class java.util.EnumSet { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void jumpToCurrentState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class java.util.Random { long initialScramble(long); }
-keepclassmembers class java.util.Random { long seedUniquifier(); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class java.util.Random { void <init>(long); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void allowCoreThreadTimeOut(boolean); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$ValueCollection { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class java.util.Hashtable$ValueCollection { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Hashtable$ValueCollection { int size(); }
-keepclassmembers class java.util.Random { long nextLong(); }
-keepclassmembers class java.util.Hashtable$ValueCollection { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Random { boolean nextBoolean(); }
-keepclassmembers class java.util.Random { double nextDouble(); }
-keepclassmembers class java.net.Inet6Address { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class java.util.Hashtable$ValueCollection { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.net.Inet6Address { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class sun.util.locale.LocaleObjectCache$CacheEntry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void initializeSyncQueue(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationUtils$1 { android.view.animation.AnimationUtils$AnimationState initialValue(); }
-keepclassmembers class android.view.animation.AnimationUtils$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.view.animation.AnimationUtils$1 { void <init>(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { android.icu.util.ULocale toULocale(java.util.Locale); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { boolean hasLocaleCategories(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { java.util.Locale toLocale(android.icu.util.ULocale); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { android.icu.util.ULocale toULocale7(java.util.Locale); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int[] access$002(android.graphics.drawable.ClipDrawable$ClipState,int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int[] access$000(android.graphics.drawable.ClipDrawable$ClipState); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { void <init>(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { boolean loadProviderFromProperty(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { boolean loadProviderAsService(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { sun.net.ftp.FtpClientProvider provider(); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { void <init>(libcore.io.ClassPathURLStreamHandler,java.net.URL); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { boolean access$000(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { sun.net.ftp.FtpClientProvider access$100(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { boolean access$200(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { void connect(); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { sun.net.ftp.FtpClientProvider access$102(sun.net.ftp.FtpClientProvider); }
-keepclassmembers class sun.net.ftp.FtpClientProvider { void <clinit>(); }
-keepclassmembers class java.security.Security { void initializeStatic(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { void <clinit>(); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { java.util.jar.JarFile access$100(libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection); }
-keepclassmembers class android.icu.impl.PatternProps { boolean isWhiteSpace(int); }
-keepclassmembers class android.icu.impl.PatternProps { int skipWhiteSpace(java.lang.CharSequence,int); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { boolean access$200(libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection { boolean access$302(libcore.io.ClassPathURLStreamHandler$ClassPathURLConnection,boolean); }
-keepclassmembers class java.net.Inet6Address { byte[] getAddress(); }
-keepclassmembers class android.icu.impl.PatternProps { java.lang.String trimWhiteSpace(java.lang.String); }
-keepclassmembers class java.net.Inet6Address { java.lang.String getHostAddress(); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class java.net.Inet6Address { boolean equals(java.lang.Object); }
-keepclassmembers class java.security.Security { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class android.icu.impl.PatternProps { void <clinit>(); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { float calculateHorizontalPadding(float,float,boolean); }
-keepclassmembers class java.security.Security { java.lang.Class getSpiClass(java.lang.String); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { float calculateVerticalPadding(float,float,boolean); }
-keepclassmembers class java.security.Security { java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.security.Security { java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.security.Provider); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void setup(float,int); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,boolean); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void onBoundsChange(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { float getTargetRadius(android.graphics.Rect); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { android.icu.util.ULocale toULocale6(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void enter(boolean); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void exit(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void end(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void cancel(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void startPendingAnimation(android.view.DisplayListCanvas,android.graphics.Paint); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { java.util.Locale toLocale7(android.icu.util.ULocale); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void cancelSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void endSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { boolean isHardwareAnimating(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void endHardwareAnimations(); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void onHotspotBoundsChanged(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { java.util.Locale toLocale6(android.icu.util.ULocale); }
-keepclassmembers class android.graphics.drawable.RippleComponent { void onTargetRadiusChanged(float); }
-keepclassmembers class android.content.pm.ComponentInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { java.util.Locale getDefault(android.icu.util.ULocale$Category); }
-keepclassmembers class com.xlythe.view.floating.AnimationFinishedListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.xlythe.view.floating.AnimationFinishedListener { void <init>(); }
-keepclassmembers class com.xlythe.view.floating.AnimationFinishedListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.xlythe.view.floating.AnimationFinishedListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.xlythe.view.floating.AnimationFinishedListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.security.Security { void increaseVersion(); }
-keepclassmembers class java.security.Security { int getVersion(); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { boolean isOriginalDefaultLocale(java.util.Locale); }
-keepclassmembers class android.widget.ActionMenuPresenter$PopupPresenterCallback { void <init>(android.widget.ActionMenuPresenter); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { java.lang.String getSystemProperty(java.lang.String); }
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback { void <init>(int,int); }
-keepclassmembers class android.icu.util.ULocale$JDKLocaleHelper { void <clinit>(); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.ActionMenuPresenter$PopupPresenterCallback { void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter$1); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void saveInstanceState(android.os.Parcel); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceBinary { int getType(); }
-keepclassmembers class java.util.Locale$NoImagePreloadHolder { void <clinit>(); }
-keepclassmembers class java.util.Locale$Category { java.util.Locale$Category[] values(); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void restoreInstanceState(android.os.Parcel); }
-keepclassmembers class android.icu.impl.ICUResourceBundleImpl$ResourceBinary { void <init>(android.icu.impl.ICUResourceBundleImpl,java.lang.String,int); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void setForceMerge(boolean); }
-keepclassmembers class java.util.Locale$Category { void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$KeyInfoType { android.icu.impl.locale.KeyTypeData$KeyInfoType[] values(); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void beginBatchEdit(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$KeyInfoType { android.icu.impl.locale.KeyTypeData$KeyInfoType valueOf(java.lang.String); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void endBatchEdit(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$KeyInfoType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Locale$Category { void <clinit>(); }
-keepclassmembers class android.icu.impl.locale.KeyTypeData$KeyInfoType { void <clinit>(); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathData evaluate(float,android.util.PathParser$PathData,android.util.PathParser$PathData); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { boolean handleCompositionEdit(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.animation.AnimatorInflater$1); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void recordEdit(android.widget.Editor$EditOperation,boolean); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { void handleKeyboardEdit(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { boolean canUndoEdit(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class sun.security.util.Debug { void <init>(java.lang.String); }
-keepclassmembers class sun.security.util.Debug { sun.security.util.Debug getInstance(java.lang.String); }
-keepclassmembers class sun.security.util.Debug { boolean isOn(java.lang.String); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class sun.security.util.Debug { sun.security.util.Debug getInstance(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { boolean isComposition(java.lang.CharSequence); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class sun.security.util.Debug { void println(java.lang.String); }
-keepclassmembers class sun.security.util.Debug { void println(); }
-keepclassmembers class sun.security.util.Debug { java.lang.String toHexString(java.math.BigInteger); }
-keepclassmembers class android.widget.Editor$UndoInputFilter { boolean isInTextWatcher(); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { void <init>(android.icu.text.Normalizer2,android.icu.text.UnicodeSet); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder); }
-keepclassmembers class sun.security.util.Debug { void <clinit>(); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class android.icu.impl.UPropertyAliases { void load(java.nio.ByteBuffer); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { int spanQuickCheckYes(java.lang.CharSequence); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { void <init>(); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { android.content.pm.ConfigurationInfo[] newArray(int); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { android.content.pm.ConfigurationInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.Resources { void <init>(java.lang.ClassLoader); }
-keepclassmembers class sun.security.x509.CertificateX509Key { void <init>(sun.security.util.DerInputStream); }
-keepclassmembers class android.icu.impl.UPropertyAliases { void <init>(); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int findProperty(int); }
-keepclassmembers class sun.security.x509.CertificateX509Key { java.lang.String toString(); }
-keepclassmembers class android.content.pm.ConfigurationInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class sun.security.x509.CertificateX509Key { void encode(java.io.OutputStream); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int findPropertyValueNameGroup(int,int); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable,android.icu.text.UnicodeSet$SpanCondition); }
-keepclassmembers class sun.security.x509.CertificateX509Key { java.security.PublicKey get(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void init(android.animation.AnimatorSet); }
-keepclassmembers class java.net.SocketOutputStream { void <init>(java.net.AbstractPlainSocketImpl); }
-keepclassmembers class android.icu.impl.UPropertyAliases { java.lang.String getName(int,int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.DrawableInflater getDrawableInflater(); }
-keepclassmembers class java.net.SocketOutputStream { void socketWrite0(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class java.net.SocketOutputStream { void socketWrite(byte[],int,int); }
-keepclassmembers class android.icu.text.FilteredNormalizer2 { java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence,boolean); }
-keepclassmembers class com.xlythe.calculator.material.view.NumberEditText$KeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { void <init>(); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int asciiToLowercase(int); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void parseAnimatorSet(android.animation.AnimatorSet,long); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { com.xlythe.calculator.material.view.FormattedNumberEditText access$000(com.xlythe.calculator.material.HexCalculator); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class android.icu.impl.UPropertyAliases { boolean containsName(android.icu.util.BytesTrie,java.lang.CharSequence); }
-keepclassmembers class java.net.SocketOutputStream { void write(int); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { void <init>(java.util.Collection,java.lang.Object); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { android.widget.TextView access$200(com.xlythe.calculator.material.HexCalculator); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { void access$300(com.xlythe.calculator.material.HexCalculator,com.xlythe.math.Base); }
-keepclassmembers class java.net.SocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.net.SocketOutputStream { void close(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { int size(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { boolean contains(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createRTAnimator(android.animation.ObjectAnimator,long); }
-keepclassmembers class android.icu.impl.UPropertyAliases { java.lang.String getPropertyValueName(int,int,int); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.content.res.Resources { java.lang.String[] getStringArray(int); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int getPropertyOrValueEnum(int,java.lang.CharSequence); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int getPropertyEnum(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int getPropertyValueEnum(int,java.lang.CharSequence); }
-keepclassmembers class sun.nio.ch.NativeDispatcher { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createRTAnimatorForGroup(android.animation.PropertyValuesHolder[],android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VGroup,long); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void drawableStateChanged(); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int getPropertyValueEnumNoThrow(int,java.lang.CharSequence); }
-keepclassmembers class sun.misc.Cleaner { sun.misc.Cleaner add(sun.misc.Cleaner); }
-keepclassmembers class sun.misc.Cleaner { boolean remove(sun.misc.Cleaner); }
-keepclassmembers class sun.misc.Cleaner { void <init>(java.lang.Object,java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class java.util.Collections$SynchronizedCollection { java.lang.String toString(); }
-keepclassmembers class android.icu.impl.UPropertyAliases { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class sun.misc.Cleaner { void clean(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createRTAnimatorForPath(android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VPath,long); }
-keepclassmembers class sun.misc.Cleaner { sun.misc.Cleaner create(java.lang.Object,java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class sun.misc.Cleaner { void <clinit>(); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createRTAnimatorForFullPath(android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VFullPath,long); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setImageResource(int); }
-keepclassmembers class android.content.res.Resources { int getDimensionPixelSize(int); }
-keepclassmembers class android.icu.impl.UPropertyAliases { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency getInstance(android.icu.util.ULocale); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency createCurrency(android.icu.util.ULocale); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { void onButtonClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createRTAnimatorForRootGroup(android.animation.PropertyValuesHolder[],android.animation.ObjectAnimator,android.graphics.drawable.VectorDrawable$VectorDrawableState,long); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { boolean onLongClick(android.view.View); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency loadCurrency(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.xlythe.calculator.material.HexCalculator { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.util.HashMap$Node { void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node); }
-keepclassmembers class java.util.HashMap$Node { java.lang.Object getKey(); }
-keepclassmembers class java.util.HashMap$Node { java.lang.Object getValue(); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class android.content.res.Resources { int getColor(int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.HashMap$Node { java.lang.String toString(); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency getInstance(java.lang.String); }
-keepclassmembers class android.icu.util.Currency { boolean isAlpha3Code(java.lang.String); }
-keepclassmembers class java.util.HashMap$Node { int hashCode(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.util.HashMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { int getFrameCount(long); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources { android.content.res.ComplexColor loadComplexColor(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { float[] createFloatDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.icu.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class android.content.res.Resources { boolean getBoolean(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { int[] createIntDataPoints(android.animation.PropertyValuesHolder$PropertyValues$DataSource,long); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class android.icu.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class android.icu.util.Currency { java.lang.String getSymbol(android.icu.util.ULocale); }
-keepclassmembers class android.icu.util.Currency { java.lang.String getName(android.icu.util.ULocale,int,boolean[]); }
-keepclassmembers class android.icu.util.Currency { java.lang.String getName(android.icu.util.ULocale,int,java.lang.String,boolean[]); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void createNativeChildAnimator(long,long,android.animation.ObjectAnimator); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { long getNativeAsset(); }
-keepclassmembers class android.content.res.Resources { android.util.TypedValue obtainTempTypedValue(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class android.content.res.Resources { void releaseTempTypedValue(android.util.TypedValue); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void close(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void recordLastSeenTarget(android.view.DisplayListCanvas); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class android.util.SparseArray { void delete(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void handlePendingAction(int); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources$Theme newTheme(); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.util.SparseArray { void remove(int); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long,android.content.res.AssetManager$1); }
-keepclassmembers class android.icu.util.Currency { int getDefaultFractionDigits(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean useLastSeenTarget(); }
-keepclassmembers class android.icu.util.Currency { int getDefaultFractionDigits(android.icu.util.Currency$CurrencyUsage); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean useTarget(android.view.RenderNode); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.icu.util.Currency { double getRoundingIncrement(android.icu.util.Currency$CurrencyUsage); }
-keepclassmembers class android.content.res.Resources { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void invalidateOwningView(); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void addPendingAction(int); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class android.icu.util.Currency { java.lang.String toString(); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.icu.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void start(); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void end(); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void reset(); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void reverse(); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class android.icu.util.Currency { void <clinit>(); }
-keepclassmembers class android.icu.util.Currency { android.icu.util.Currency access$100(java.lang.String); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void startAnimation(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void endAnimation(); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View nextViewFromScrapList(); }
-keepclassmembers class android.icu.text.NameUnicodeTransliterator$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void reverseAnimation(); }
-keepclassmembers class android.icu.text.NameUnicodeTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void assignPositionFromScrapList(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void resetAnimation(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void assignPositionFromScrapList(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean canReverse(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { boolean hasMore(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean isStarted(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean isRunning(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View nextViewInLimitedList(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void setListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View next(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { boolean isInfinite(); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void pause(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void resume(); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void transferPendingActions(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$8 { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$8 { void setValue(android.graphics.drawable.VectorDrawable$VGroup,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$8 { java.lang.Float get(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class com.android.internal.view.menu.ContextMenuBuilder { void <init>(android.content.Context); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$8 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class com.android.internal.view.menu.ContextMenuBuilder { com.android.internal.view.menu.MenuDialogHelper showDialog(android.view.View,android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup$8 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { android.util.IntArray access$000(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT); }
-keepclassmembers class com.android.internal.view.menu.ContextMenuBuilder { com.android.internal.view.menu.MenuPopupHelper showPopup(android.content.Context,android.view.View,float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { void access$300(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT,android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT { android.animation.Animator$AnimatorListener access$200(android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Canvas { int getDensity(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$FCDNormalizer2 { void <init>(android.icu.impl.Normalizer2Impl); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class android.icu.impl.Norm2AllModes$FCDNormalizer2 { void normalize(java.lang.CharSequence,android.icu.impl.Normalizer2Impl$ReorderingBuffer); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$FCDNormalizer2 { boolean hasBoundaryAfter(int); }
-keepclassmembers class android.icu.impl.Norm2AllModes$FCDNormalizer2 { boolean hasBoundaryBefore(int); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$6 { void <init>(com.xlythe.calculator.material.GraphingCalculator); }
-keepclassmembers class com.xlythe.calculator.material.GraphingCalculator$6 { void onGlobalLayout(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { int hashCode(); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.Intent { android.net.Uri getData(); }
-keepclassmembers class android.graphics.Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.FileSystem { void <init>(); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class java.io.FileSystem { void <clinit>(); }
-keepclassmembers class java.io.FileSystem { boolean getBooleanProperty(java.lang.String,boolean); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void <init>(android.widget.ImageView); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void <init>(java.util.ArrayList,sun.security.util.ManifestDigester,java.lang.String,byte[]); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.content.Intent { boolean getBooleanExtra(java.lang.String,boolean); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean needSignatureFileBytes(); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean needSignatureFile(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void setSignatureFile(byte[]); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean isBlockOrSF(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.content.Intent { int getIntExtra(java.lang.String,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void setImageResource(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { java.security.MessageDigest getDigest(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void process(java.util.Hashtable,java.util.List); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void processImpl(java.util.Hashtable,java.util.List); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class sun.net.ProgressSource { void <init>(java.net.URL,java.lang.String,long); }
-keepclassmembers class sun.net.ProgressSource { boolean connected(); }
-keepclassmembers class android.content.Intent { android.os.Bundle getExtras(); }
-keepclassmembers class sun.net.ProgressSource { void close(); }
-keepclassmembers class sun.net.ProgressSource { java.net.URL getURL(); }
-keepclassmembers class sun.net.ProgressSource { java.lang.String getContentType(); }
-keepclassmembers class sun.net.ProgressSource { java.lang.String getMethod(); }
-keepclassmembers class android.content.Intent { int getFlags(); }
-keepclassmembers class sun.net.ProgressSource { long getProgress(); }
-keepclassmembers class sun.net.ProgressSource { sun.net.ProgressSource$State getState(); }
-keepclassmembers class sun.net.ProgressSource { long getExpected(); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class sun.net.ProgressSource { void beginTracking(); }
-keepclassmembers class sun.net.ProgressSource { void finishTracking(); }
-keepclassmembers class sun.net.ProgressSource { void updateProgress(long,long); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class sun.net.ProgressSource { java.lang.String toString(); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$400(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.content.Intent { android.content.Intent setType(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class java.util.TreeMap$KeyIterator { void <init>(java.util.TreeMap,java.util.TreeMap$TreeMapEntry); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { java.lang.String toHex(byte[]); }
-keepclassmembers class java.util.TreeMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class android.widget.Editor$3 { void <init>(android.widget.Editor,android.widget.Editor$SuggestionInfo); }
-keepclassmembers class android.widget.Editor$3 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$3 { void setValue(android.graphics.drawable.VectorDrawable$VFullPath,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$3 { void <init>(java.lang.String); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean contains(java.security.CodeSigner[],java.security.CodeSigner); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$3 { java.lang.Integer get(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,boolean); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean isSubSet(java.security.CodeSigner[],java.security.CodeSigner[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { boolean matches(java.security.CodeSigner[],java.security.CodeSigner[],java.security.CodeSigner[]); }
-keepclassmembers class sun.security.util.SignatureFileVerifier { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Parcelable); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertPath generateCertPath(java.util.List); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CRL generateCRL(java.io.InputStream); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager$1 { void <init>(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.javia.arity.TokenConsumer { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class java.net.SocketPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.SocketPermission { java.lang.String getActions(); }
-keepclassmembers class android.content.Intent { void removeExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.Intent { android.content.Intent setClassName(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor,boolean); }
-keepclassmembers class java.io.FileInputStream { void open0(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class java.io.FileInputStream { void open(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class java.io.FileInputStream { long skip0(long); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class java.io.FileInputStream { int available0(); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class java.io.FileInputStream { java.nio.channels.FileChannel getChannel(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.icu.util.UResourceBundle { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,android.graphics.Bitmap); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { long initRaster(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int,boolean); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long,boolean); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class android.graphics.Canvas { void native_getCTM(long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle getBundleInstance(java.lang.String,android.icu.util.ULocale); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRegion(long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawNinePatch(long,long,long,float,float,float,float,long,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,android.graphics.Bitmap,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle$RootType getRootType(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.Canvas { long access$000(); }
-keepclassmembers class android.graphics.Canvas { void <clinit>(); }
-keepclassmembers class android.icu.util.UResourceBundle { void setRootType(java.lang.String,android.icu.util.UResourceBundle$RootType); }
-keepclassmembers class android.graphics.Canvas { long getNativeFinalizer(); }
-keepclassmembers class android.icu.util.UResourceBundle { java.lang.String getString(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean); }
-keepclassmembers class android.icu.util.UResourceBundle { int getInt(); }
-keepclassmembers class android.icu.util.UResourceBundle { int[] getIntVector(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle get(java.lang.String); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle findTopLevel(java.lang.String); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$1 { android.icu.text.Transliterator getInstance(java.lang.String); }
-keepclassmembers class android.icu.text.NormalizationTransliterator$1 { void <init>(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle get(int); }
-keepclassmembers class android.icu.util.UResourceBundle { int getSize(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundleIterator getIterator(); }
-keepclassmembers class java.lang.ExceptionInInitializerError { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ExceptionInInitializerError { java.lang.Throwable getCause(); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle handleGet(int,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.icu.util.UResourceBundle { android.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,android.icu.util.UResourceBundle); }
-keepclassmembers class android.icu.util.UResourceBundle { java.lang.String[] handleGetStringArray(); }
-keepclassmembers class android.icu.util.UResourceBundle { java.lang.Object handleGetObject(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class android.icu.util.UResourceBundle { java.lang.Object handleGetObjectImpl(java.lang.String,android.icu.util.UResourceBundle); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.icu.util.UResourceBundle { java.lang.Object resolveObject(java.lang.String,android.icu.util.UResourceBundle); }
-keepclassmembers class android.icu.util.UResourceBundle { void <clinit>(); }
-keepclassmembers class java.net.Socket$1 { void <init>(java.net.Socket); }
-keepclassmembers class java.net.Socket$1 { java.lang.Boolean run(); }
-keepclassmembers class java.net.Socket$1 { java.lang.Object run(); }
-keepclassmembers class com.xlythe.view.floating.OpenShortcutActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.xlythe.view.floating.OpenShortcutActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.nineoldandroids.animation.PreHoneycombCompat$11 { void <init>(java.lang.String); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(android.content.Context); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(boolean); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void <init>(boolean,android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { android.support.v4.widget.ScrollerCompat create(android.content.Context); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { int getFinalY(); }
-keepclassmembers class android.support.v4.widget.ScrollerCompat { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class sun.misc.Cleaner$1 { java.lang.Object run(); }
-keepclassmembers class sun.misc.Cleaner$1 { void <init>(sun.misc.Cleaner,java.lang.Throwable); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class sun.misc.Cleaner$1 { java.lang.Void run(); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class sun.security.x509.Extension { void <init>(); }
-keepclassmembers class sun.security.x509.Extension { void <init>(sun.security.util.DerValue); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class sun.security.x509.Extension { void <init>(sun.security.x509.Extension); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class android.os.LocaleList { java.util.Locale get(int); }
-keepclassmembers class sun.security.x509.Extension { void encode(sun.security.util.DerOutputStream); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class java.lang.Byte { int hashCode(byte); }
-keepclassmembers class android.os.LocaleList { boolean isEmpty(); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.LocaleList { int size(); }
-keepclassmembers class sun.security.x509.Extension { boolean isCritical(); }
-keepclassmembers class sun.security.x509.Extension { sun.security.util.ObjectIdentifier getExtensionId(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class sun.security.x509.Extension { byte[] getExtensionValue(); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class android.os.LocaleList { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Byte { int toUnsignedInt(byte); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class sun.security.x509.Extension { java.lang.String toString(); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class android.icu.text.DecimalFormatSymbols$CacheData { void <init>(android.icu.util.ULocale,java.lang.String[],java.lang.String[]); }
-keepclassmembers class sun.security.x509.Extension { int hashCode(); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class sun.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class android.widget.EditText { android.text.Editable getText(); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class android.os.LocaleList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.LocaleList { java.lang.String toLanguageTags(); }
-keepclassmembers class android.widget.EditText { void setSelection(int); }
-keepclassmembers class android.widget.EditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class java.lang.StringBuffer { int indexOf(java.lang.String); }
-keepclassmembers class android.widget.EditText { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.os.LocaleList { void <init>(java.util.Locale[]); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.Locale$LocaleKey { void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions); }
-keepclassmembers class java.util.Locale$LocaleKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Locale$LocaleKey { int hashCode(); }
-keepclassmembers class java.util.Locale$LocaleKey { void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1); }
-keepclassmembers class android.os.LocaleList { void <init>(java.util.Locale,android.os.LocaleList); }
-keepclassmembers class java.util.Locale$LocaleKey { sun.util.locale.BaseLocale access$200(java.util.Locale$LocaleKey); }
-keepclassmembers class java.util.Locale$LocaleKey { sun.util.locale.LocaleExtensions access$300(java.util.Locale$LocaleKey); }
-keepclassmembers class android.os.LocaleList { android.os.LocaleList getEmptyLocaleList(); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getAccessibilityClassName(); }
-keepclassmembers class android.os.LocaleList { android.os.LocaleList forLanguageTags(java.lang.String); }
-keepclassmembers class android.os.LocaleList { java.lang.String getLikelyScript(java.util.Locale); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.os.LocaleList { boolean isPseudoLocale(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getText(); }
-keepclassmembers class android.os.LocaleList { boolean isPseudoLocale(java.util.Locale); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { java.util.WeakHashMap$Entry nextEntry(); }
-keepclassmembers class android.os.LocaleList { int findFirstMatchIndex(java.util.Locale); }
-keepclassmembers class android.os.LocaleList { int computeFirstMatchIndex(java.util.Collection,boolean); }
-keepclassmembers class android.os.LocaleList { int matchScore(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$1 { void <init>(android.graphics.drawable.AnimatedRotateDrawable); }
-keepclassmembers class android.os.LocaleList { java.util.Locale getFirstMatchWithEnglishSupported(java.lang.String[]); }
-keepclassmembers class android.os.LocaleList { boolean isPseudoLocalesOnly(java.lang.String[]); }
-keepclassmembers class android.os.LocaleList { java.util.Locale computeFirstMatch(java.util.Collection,boolean); }
-keepclassmembers class android.os.LocaleList { android.os.LocaleList getDefault(); }
-keepclassmembers class android.os.LocaleList { void <clinit>(); }
-keepclassmembers class android.os.LocaleList { android.os.LocaleList getAdjustedDefault(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class java.util.Arrays$ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.provider.Settings$System$5 { void <init>(); }
-keepclassmembers class java.util.Arrays$ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class java.util.Arrays$ArrayList { void sort(java.util.Comparator); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void <init>(); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void copyZeros(org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class java.math.BigInt { void putBigEndian(byte[],boolean); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void init(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void multPlusTransA(int,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F,org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt subtraction(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void replaceZeros(org.ejml.data.D1Submatrix64F); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { void <clinit>(); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { boolean decompose(org.ejml.data.BlockMatrix64F); }
-keepclassmembers class java.util.logging.LogManager$6 { void <init>(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { void getDiagonal(double[],double[]); }
-keepclassmembers class java.util.logging.LogManager$6 { java.lang.Object run(); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { org.ejml.data.BlockMatrix64F getQ(org.ejml.data.BlockMatrix64F,boolean); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { boolean decompose(org.ejml.data.Matrix64F); }
-keepclassmembers class dalvik.system.DexPathList$NativeLibraryElement { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class com.xlythe.calculator.material.HistoryAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class dalvik.system.DexPathList$NativeLibraryElement { void <init>(java.io.File); }
-keepclassmembers class android.content.pm.ProviderInfo { void <init>(android.os.Parcel); }
-keepclassmembers class dalvik.system.DexPathList$NativeLibraryElement { java.lang.String toString(); }
-keepclassmembers class android.content.pm.ProviderInfo { void <init>(android.os.Parcel,android.content.pm.ProviderInfo$1); }
-keepclassmembers class android.content.pm.ProviderInfo { void <clinit>(); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { void <init>(); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { android.content.pm.ServiceInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.ejml.alg.block.decomposition.hessenberg.TridiagonalDecompositionBlockHouseholder { boolean inputModified(); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { android.content.pm.ServiceInfo[] newArray(int); }
-keepclassmembers class android.content.pm.ServiceInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream$Caches { void <clinit>(); }
-keepclassmembers class java.util.ArrayList$SubList$1 { void <init>(java.util.ArrayList$SubList,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.ArrayList$SubList$1 { java.lang.Object next(); }
-keepclassmembers class java.util.ArrayList$SubList$1 { boolean hasNext(); }
-keepclassmembers class java.util.ArrayList$SubList$1 { void set(java.lang.Object); }
-keepclassmembers class sun.security.jca.ProviderConfig { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class sun.security.jca.ProviderConfig { void checkSunPKCS11Solaris(); }
-keepclassmembers class sun.security.jca.ProviderConfig { boolean hasArgument(); }
-keepclassmembers class sun.security.jca.ProviderConfig { boolean shouldLoad(); }
-keepclassmembers class sun.security.jca.ProviderConfig { void <init>(java.lang.String); }
-keepclassmembers class sun.security.jca.ProviderConfig { boolean isLoaded(); }
-keepclassmembers class sun.security.jca.ProviderConfig { int hashCode(); }
-keepclassmembers class sun.security.jca.ProviderConfig { void disableLoad(); }
-keepclassmembers class sun.security.jca.ProviderConfig { boolean equals(java.lang.Object); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.lang.String toString(); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.security.Provider getProvider(); }
-keepclassmembers class sun.security.jca.ProviderConfig { sun.security.util.Debug access$000(); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.security.Provider initProvider(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.lang.String access$100(sun.security.jca.ProviderConfig); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.security.Provider doLoadProvider(); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.security.Provider access$200(sun.security.jca.ProviderConfig,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class sun.security.jca.ProviderConfig { void <clinit>(); }
-keepclassmembers class sun.security.jca.ProviderConfig { java.lang.String expand(java.lang.String); }
-keepclassmembers class sun.security.jca.ProviderConfig { void access$300(sun.security.jca.ProviderConfig); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
